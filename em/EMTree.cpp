/* Generated by Cython 0.28.3 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_28_3"
#define CYTHON_FUTURE_DIVISION 0
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (0 && PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0; // PyThread_create_key reports success always
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif // TSS (Thread Specific Storage) API
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
  #define PyObject_Unicode             PyObject_Str
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : (Py_INCREF(func), func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__EMTree
#define __PYX_HAVE_API__EMTree
/* Early includes */
#include "TObject.h"
#include "TBranch.h"
#include "TTree.h"
#include "TFile.h"
#include "TTreeFormula.h"
#include <string.h>
#include <stdio.h>
#include "pythread.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "EMTree.pyx",
  "stringsource",
  "type.pxd",
  "bool.pxd",
  "complex.pxd",
};

/*--- Type declarations ---*/
struct __pyx_obj_6EMTree_EMTree;
struct __pyx_obj_6EMTree___pyx_scope_struct____iter__;
struct __pyx_obj_6EMTree___pyx_scope_struct_1_where;

/* "EMTree.pyx":42
 * warnings.formatwarning = my_warning_format
 * 
 * cdef class EMTree:             # <<<<<<<<<<<<<<
 *     # Pointers to tree (may be a chain), current active tree, and current entry
 *     # localentry is the entry in the current tree of the chain
 */
struct __pyx_obj_6EMTree_EMTree {
  PyObject_HEAD
  struct __pyx_vtabstruct_6EMTree_EMTree *__pyx_vtab;
  TTree *tree;
  TTree *currentTree;
  int currentTreeNumber;
  long ientry;
  long localentry;
  PyObject *complained;
  TBranch *Ele24LooseHPSTau30Pass_branch;
  float Ele24LooseHPSTau30Pass_value;
  TBranch *Ele24LooseHPSTau30TightIDPass_branch;
  float Ele24LooseHPSTau30TightIDPass_value;
  TBranch *Ele24LooseTau30Pass_branch;
  float Ele24LooseTau30Pass_value;
  TBranch *Ele24LooseTau30TightIDPass_branch;
  float Ele24LooseTau30TightIDPass_value;
  TBranch *Ele27WPTightPass_branch;
  float Ele27WPTightPass_value;
  TBranch *Ele32WPTightPass_branch;
  float Ele32WPTightPass_value;
  TBranch *Ele35WPTightPass_branch;
  float Ele35WPTightPass_value;
  TBranch *EmbPtWeight_branch;
  float EmbPtWeight_value;
  TBranch *Eta_branch;
  float Eta_value;
  TBranch *Flag_BadChargedCandidateFilter_branch;
  float Flag_BadChargedCandidateFilter_value;
  TBranch *Flag_BadPFMuonFilter_branch;
  float Flag_BadPFMuonFilter_value;
  TBranch *Flag_EcalDeadCellTriggerPrimitiveFilter_branch;
  float Flag_EcalDeadCellTriggerPrimitiveFilter_value;
  TBranch *Flag_HBHENoiseFilter_branch;
  float Flag_HBHENoiseFilter_value;
  TBranch *Flag_HBHENoiseIsoFilter_branch;
  float Flag_HBHENoiseIsoFilter_value;
  TBranch *Flag_ecalBadCalibReducedMINIAODFilter_branch;
  float Flag_ecalBadCalibReducedMINIAODFilter_value;
  TBranch *Flag_eeBadScFilter_branch;
  float Flag_eeBadScFilter_value;
  TBranch *Flag_globalSuperTightHalo2016Filter_branch;
  float Flag_globalSuperTightHalo2016Filter_value;
  TBranch *Flag_goodVertices_branch;
  float Flag_goodVertices_value;
  TBranch *GenWeight_branch;
  float GenWeight_value;
  TBranch *Ht_branch;
  float Ht_value;
  TBranch *IsoMu24Pass_branch;
  float IsoMu24Pass_value;
  TBranch *IsoMu27Pass_branch;
  float IsoMu27Pass_value;
  TBranch *LT_branch;
  float LT_value;
  TBranch *Mass_branch;
  float Mass_value;
  TBranch *MassError_branch;
  float MassError_value;
  TBranch *MassErrord1_branch;
  float MassErrord1_value;
  TBranch *MassErrord2_branch;
  float MassErrord2_value;
  TBranch *MassErrord3_branch;
  float MassErrord3_value;
  TBranch *MassErrord4_branch;
  float MassErrord4_value;
  TBranch *Mt_branch;
  float Mt_value;
  TBranch *Mu50Pass_branch;
  float Mu50Pass_value;
  TBranch *NUP_branch;
  float NUP_value;
  TBranch *Phi_branch;
  float Phi_value;
  TBranch *Pt_branch;
  float Pt_value;
  TBranch *bjetDeepCSVVeto20Medium_2016_DR0p5_branch;
  float bjetDeepCSVVeto20Medium_2016_DR0p5_value;
  TBranch *bjetDeepCSVVeto20Medium_2017_DR0p5_branch;
  float bjetDeepCSVVeto20Medium_2017_DR0p5_value;
  TBranch *bjetDeepCSVVeto20Medium_2018_DR0p5_branch;
  float bjetDeepCSVVeto20Medium_2018_DR0p5_value;
  TBranch *bjetDeepCSVVeto30Medium_2016_DR0p5_branch;
  float bjetDeepCSVVeto30Medium_2016_DR0p5_value;
  TBranch *bjetDeepCSVVeto30Medium_2017_DR0p5_branch;
  float bjetDeepCSVVeto30Medium_2017_DR0p5_value;
  TBranch *bjetDeepCSVVeto30Medium_2018_DR0p5_branch;
  float bjetDeepCSVVeto30Medium_2018_DR0p5_value;
  TBranch *bweight_2016_branch;
  float bweight_2016_value;
  TBranch *bweight_2017_branch;
  float bweight_2017_value;
  TBranch *bweight_2018_branch;
  float bweight_2018_value;
  TBranch *charge_branch;
  float charge_value;
  TBranch *deepcsvb1_btagscore_branch;
  float deepcsvb1_btagscore_value;
  TBranch *deepcsvb1_eta_branch;
  float deepcsvb1_eta_value;
  TBranch *deepcsvb1_hadronflavour_branch;
  float deepcsvb1_hadronflavour_value;
  TBranch *deepcsvb1_m_branch;
  float deepcsvb1_m_value;
  TBranch *deepcsvb1_phi_branch;
  float deepcsvb1_phi_value;
  TBranch *deepcsvb1_pt_branch;
  float deepcsvb1_pt_value;
  TBranch *deepcsvb2_btagscore_branch;
  float deepcsvb2_btagscore_value;
  TBranch *deepcsvb2_eta_branch;
  float deepcsvb2_eta_value;
  TBranch *deepcsvb2_hadronflavour_branch;
  float deepcsvb2_hadronflavour_value;
  TBranch *deepcsvb2_m_branch;
  float deepcsvb2_m_value;
  TBranch *deepcsvb2_phi_branch;
  float deepcsvb2_phi_value;
  TBranch *deepcsvb2_pt_branch;
  float deepcsvb2_pt_value;
  TBranch *dielectronVeto_branch;
  float dielectronVeto_value;
  TBranch *dimuonVeto_branch;
  float dimuonVeto_value;
  TBranch *eCharge_branch;
  float eCharge_value;
  TBranch *eComesFromHiggs_branch;
  float eComesFromHiggs_value;
  TBranch *eCorrectedEt_branch;
  float eCorrectedEt_value;
  TBranch *eEnergyError_branch;
  float eEnergyError_value;
  TBranch *eEnergyScaleDown_branch;
  float eEnergyScaleDown_value;
  TBranch *eEnergyScaleGainDown_branch;
  float eEnergyScaleGainDown_value;
  TBranch *eEnergyScaleGainUp_branch;
  float eEnergyScaleGainUp_value;
  TBranch *eEnergyScaleStatDown_branch;
  float eEnergyScaleStatDown_value;
  TBranch *eEnergyScaleStatUp_branch;
  float eEnergyScaleStatUp_value;
  TBranch *eEnergyScaleSystDown_branch;
  float eEnergyScaleSystDown_value;
  TBranch *eEnergyScaleSystUp_branch;
  float eEnergyScaleSystUp_value;
  TBranch *eEnergyScaleUp_branch;
  float eEnergyScaleUp_value;
  TBranch *eEnergySigmaDown_branch;
  float eEnergySigmaDown_value;
  TBranch *eEnergySigmaPhiDown_branch;
  float eEnergySigmaPhiDown_value;
  TBranch *eEnergySigmaPhiUp_branch;
  float eEnergySigmaPhiUp_value;
  TBranch *eEnergySigmaRhoDown_branch;
  float eEnergySigmaRhoDown_value;
  TBranch *eEnergySigmaRhoUp_branch;
  float eEnergySigmaRhoUp_value;
  TBranch *eEnergySigmaUp_branch;
  float eEnergySigmaUp_value;
  TBranch *eEta_branch;
  float eEta_value;
  TBranch *eGenCharge_branch;
  float eGenCharge_value;
  TBranch *eGenDirectPromptTauDecay_branch;
  float eGenDirectPromptTauDecay_value;
  TBranch *eGenEnergy_branch;
  float eGenEnergy_value;
  TBranch *eGenEta_branch;
  float eGenEta_value;
  TBranch *eGenIsPrompt_branch;
  float eGenIsPrompt_value;
  TBranch *eGenMotherPdgId_branch;
  float eGenMotherPdgId_value;
  TBranch *eGenParticle_branch;
  float eGenParticle_value;
  TBranch *eGenPdgId_branch;
  float eGenPdgId_value;
  TBranch *eGenPhi_branch;
  float eGenPhi_value;
  TBranch *eGenPrompt_branch;
  float eGenPrompt_value;
  TBranch *eGenPromptTauDecay_branch;
  float eGenPromptTauDecay_value;
  TBranch *eGenPt_branch;
  float eGenPt_value;
  TBranch *eGenTauDecay_branch;
  float eGenTauDecay_value;
  TBranch *eGenVZ_branch;
  float eGenVZ_value;
  TBranch *eGenVtxPVMatch_branch;
  float eGenVtxPVMatch_value;
  TBranch *eIP3D_branch;
  float eIP3D_value;
  TBranch *eIP3DErr_branch;
  float eIP3DErr_value;
  TBranch *eIsoDB03_branch;
  float eIsoDB03_value;
  TBranch *eJetArea_branch;
  float eJetArea_value;
  TBranch *eJetBtag_branch;
  float eJetBtag_value;
  TBranch *eJetDR_branch;
  float eJetDR_value;
  TBranch *eJetEtaEtaMoment_branch;
  float eJetEtaEtaMoment_value;
  TBranch *eJetEtaPhiMoment_branch;
  float eJetEtaPhiMoment_value;
  TBranch *eJetEtaPhiSpread_branch;
  float eJetEtaPhiSpread_value;
  TBranch *eJetHadronFlavour_branch;
  float eJetHadronFlavour_value;
  TBranch *eJetPFCISVBtag_branch;
  float eJetPFCISVBtag_value;
  TBranch *eJetPartonFlavour_branch;
  float eJetPartonFlavour_value;
  TBranch *eJetPhiPhiMoment_branch;
  float eJetPhiPhiMoment_value;
  TBranch *eJetPt_branch;
  float eJetPt_value;
  TBranch *eMVAIsoWP80_branch;
  float eMVAIsoWP80_value;
  TBranch *eMVAIsoWP90_branch;
  float eMVAIsoWP90_value;
  TBranch *eMVANoisoWP80_branch;
  float eMVANoisoWP80_value;
  TBranch *eMVANoisoWP90_branch;
  float eMVANoisoWP90_value;
  TBranch *eMass_branch;
  float eMass_value;
  TBranch *eMatchEmbeddedFilterEle24Tau30_branch;
  float eMatchEmbeddedFilterEle24Tau30_value;
  TBranch *eMatchEmbeddedFilterEle27_branch;
  float eMatchEmbeddedFilterEle27_value;
  TBranch *eMatchEmbeddedFilterEle32_branch;
  float eMatchEmbeddedFilterEle32_value;
  TBranch *eMatchEmbeddedFilterEle32DoubleL1_v1_branch;
  float eMatchEmbeddedFilterEle32DoubleL1_v1_value;
  TBranch *eMatchEmbeddedFilterEle32DoubleL1_v2_branch;
  float eMatchEmbeddedFilterEle32DoubleL1_v2_value;
  TBranch *eMatchEmbeddedFilterEle35_branch;
  float eMatchEmbeddedFilterEle35_value;
  TBranch *eMatchesEle24HPSTau30Filter_branch;
  float eMatchesEle24HPSTau30Filter_value;
  TBranch *eMatchesEle24HPSTau30Path_branch;
  float eMatchesEle24HPSTau30Path_value;
  TBranch *eMatchesEle24Tau30Filter_branch;
  float eMatchesEle24Tau30Filter_value;
  TBranch *eMatchesEle24Tau30Path_branch;
  float eMatchesEle24Tau30Path_value;
  TBranch *eMatchesEle25Filter_branch;
  float eMatchesEle25Filter_value;
  TBranch *eMatchesEle25Path_branch;
  float eMatchesEle25Path_value;
  TBranch *eMatchesEle27Filter_branch;
  float eMatchesEle27Filter_value;
  TBranch *eMatchesEle27Path_branch;
  float eMatchesEle27Path_value;
  TBranch *eMatchesEle32Filter_branch;
  float eMatchesEle32Filter_value;
  TBranch *eMatchesEle32Path_branch;
  float eMatchesEle32Path_value;
  TBranch *eMatchesEle35Filter_branch;
  float eMatchesEle35Filter_value;
  TBranch *eMatchesEle35Path_branch;
  float eMatchesEle35Path_value;
  TBranch *eMatchesMu23e12DZFilter_branch;
  float eMatchesMu23e12DZFilter_value;
  TBranch *eMatchesMu23e12DZPath_branch;
  float eMatchesMu23e12DZPath_value;
  TBranch *eMatchesMu23e12Filter_branch;
  float eMatchesMu23e12Filter_value;
  TBranch *eMatchesMu23e12Path_branch;
  float eMatchesMu23e12Path_value;
  TBranch *eMatchesMu8e23DZFilter_branch;
  float eMatchesMu8e23DZFilter_value;
  TBranch *eMatchesMu8e23DZPath_branch;
  float eMatchesMu8e23DZPath_value;
  TBranch *eMatchesMu8e23Filter_branch;
  float eMatchesMu8e23Filter_value;
  TBranch *eMatchesMu8e23Path_branch;
  float eMatchesMu8e23Path_value;
  TBranch *eMissingHits_branch;
  float eMissingHits_value;
  TBranch *ePVDXY_branch;
  float ePVDXY_value;
  TBranch *ePVDZ_branch;
  float ePVDZ_value;
  TBranch *ePassesConversionVeto_branch;
  float ePassesConversionVeto_value;
  TBranch *ePhi_branch;
  float ePhi_value;
  TBranch *ePt_branch;
  float ePt_value;
  TBranch *eRelPFIsoRho_branch;
  float eRelPFIsoRho_value;
  TBranch *eSIP2D_branch;
  float eSIP2D_value;
  TBranch *eSIP3D_branch;
  float eSIP3D_value;
  TBranch *eVZ_branch;
  float eVZ_value;
  TBranch *eVetoMVAIsoVtx_branch;
  float eVetoMVAIsoVtx_value;
  TBranch *eVetoZTTp001dxyz_branch;
  float eVetoZTTp001dxyz_value;
  TBranch *eZTTGenMatching_branch;
  float eZTTGenMatching_value;
  TBranch *e_m_PZeta_branch;
  float e_m_PZeta_value;
  TBranch *e_m_PZetaVis_branch;
  float e_m_PZetaVis_value;
  TBranch *e_m_doubleL1IsoTauMatch_branch;
  float e_m_doubleL1IsoTauMatch_value;
  TBranch *eecalEnergy_branch;
  float eecalEnergy_value;
  TBranch *evt_branch;
  unsigned long evt_value;
  TBranch *genEta_branch;
  float genEta_value;
  TBranch *genHTT_branch;
  float genHTT_value;
  TBranch *genM_branch;
  float genM_value;
  TBranch *genMass_branch;
  float genMass_value;
  TBranch *genPhi_branch;
  float genPhi_value;
  TBranch *genpT_branch;
  float genpT_value;
  TBranch *genpX_branch;
  float genpX_value;
  TBranch *genpY_branch;
  float genpY_value;
  TBranch *isGtautau_branch;
  float isGtautau_value;
  TBranch *isWenu_branch;
  float isWenu_value;
  TBranch *isWmunu_branch;
  float isWmunu_value;
  TBranch *isWtaunu_branch;
  float isWtaunu_value;
  TBranch *isZee_branch;
  float isZee_value;
  TBranch *isZmumu_branch;
  float isZmumu_value;
  TBranch *isZtautau_branch;
  float isZtautau_value;
  TBranch *isdata_branch;
  int isdata_value;
  TBranch *isembed_branch;
  int isembed_value;
  TBranch *j1csv_branch;
  float j1csv_value;
  TBranch *j1csvWoNoisyJets_branch;
  float j1csvWoNoisyJets_value;
  TBranch *j1eta_branch;
  float j1eta_value;
  TBranch *j1etaWoNoisyJets_branch;
  float j1etaWoNoisyJets_value;
  TBranch *j1hadronflavor_branch;
  float j1hadronflavor_value;
  TBranch *j1hadronflavorWoNoisyJets_branch;
  float j1hadronflavorWoNoisyJets_value;
  TBranch *j1phi_branch;
  float j1phi_value;
  TBranch *j1phiWoNoisyJets_branch;
  float j1phiWoNoisyJets_value;
  TBranch *j1pt_branch;
  float j1pt_value;
  TBranch *j1ptWoNoisyJets_branch;
  float j1ptWoNoisyJets_value;
  TBranch *j1ptWoNoisyJets_JERDown_branch;
  float j1ptWoNoisyJets_JERDown_value;
  TBranch *j1ptWoNoisyJets_JERUp_branch;
  float j1ptWoNoisyJets_JERUp_value;
  TBranch *j1ptWoNoisyJets_JetAbsoluteDown_branch;
  float j1ptWoNoisyJets_JetAbsoluteDown_value;
  TBranch *j1ptWoNoisyJets_JetAbsoluteUp_branch;
  float j1ptWoNoisyJets_JetAbsoluteUp_value;
  TBranch *j1ptWoNoisyJets_JetAbsoluteyearDown_branch;
  float j1ptWoNoisyJets_JetAbsoluteyearDown_value;
  TBranch *j1ptWoNoisyJets_JetAbsoluteyearUp_branch;
  float j1ptWoNoisyJets_JetAbsoluteyearUp_value;
  TBranch *j1ptWoNoisyJets_JetBBEC1Down_branch;
  float j1ptWoNoisyJets_JetBBEC1Down_value;
  TBranch *j1ptWoNoisyJets_JetBBEC1Up_branch;
  float j1ptWoNoisyJets_JetBBEC1Up_value;
  TBranch *j1ptWoNoisyJets_JetBBEC1yearDown_branch;
  float j1ptWoNoisyJets_JetBBEC1yearDown_value;
  TBranch *j1ptWoNoisyJets_JetBBEC1yearUp_branch;
  float j1ptWoNoisyJets_JetBBEC1yearUp_value;
  TBranch *j1ptWoNoisyJets_JetEC2Down_branch;
  float j1ptWoNoisyJets_JetEC2Down_value;
  TBranch *j1ptWoNoisyJets_JetEC2Up_branch;
  float j1ptWoNoisyJets_JetEC2Up_value;
  TBranch *j1ptWoNoisyJets_JetEC2yearDown_branch;
  float j1ptWoNoisyJets_JetEC2yearDown_value;
  TBranch *j1ptWoNoisyJets_JetEC2yearUp_branch;
  float j1ptWoNoisyJets_JetEC2yearUp_value;
  TBranch *j1ptWoNoisyJets_JetFlavorQCDDown_branch;
  float j1ptWoNoisyJets_JetFlavorQCDDown_value;
  TBranch *j1ptWoNoisyJets_JetFlavorQCDUp_branch;
  float j1ptWoNoisyJets_JetFlavorQCDUp_value;
  TBranch *j1ptWoNoisyJets_JetHFDown_branch;
  float j1ptWoNoisyJets_JetHFDown_value;
  TBranch *j1ptWoNoisyJets_JetHFUp_branch;
  float j1ptWoNoisyJets_JetHFUp_value;
  TBranch *j1ptWoNoisyJets_JetHFyearDown_branch;
  float j1ptWoNoisyJets_JetHFyearDown_value;
  TBranch *j1ptWoNoisyJets_JetHFyearUp_branch;
  float j1ptWoNoisyJets_JetHFyearUp_value;
  TBranch *j1ptWoNoisyJets_JetRelativeBalDown_branch;
  float j1ptWoNoisyJets_JetRelativeBalDown_value;
  TBranch *j1ptWoNoisyJets_JetRelativeBalUp_branch;
  float j1ptWoNoisyJets_JetRelativeBalUp_value;
  TBranch *j1ptWoNoisyJets_JetRelativeSampleDown_branch;
  float j1ptWoNoisyJets_JetRelativeSampleDown_value;
  TBranch *j1ptWoNoisyJets_JetRelativeSampleUp_branch;
  float j1ptWoNoisyJets_JetRelativeSampleUp_value;
  TBranch *j2csv_branch;
  float j2csv_value;
  TBranch *j2csvWoNoisyJets_branch;
  float j2csvWoNoisyJets_value;
  TBranch *j2eta_branch;
  float j2eta_value;
  TBranch *j2etaWoNoisyJets_branch;
  float j2etaWoNoisyJets_value;
  TBranch *j2hadronflavor_branch;
  float j2hadronflavor_value;
  TBranch *j2hadronflavorWoNoisyJets_branch;
  float j2hadronflavorWoNoisyJets_value;
  TBranch *j2phi_branch;
  float j2phi_value;
  TBranch *j2phiWoNoisyJets_branch;
  float j2phiWoNoisyJets_value;
  TBranch *j2pt_branch;
  float j2pt_value;
  TBranch *j2ptWoNoisyJets_branch;
  float j2ptWoNoisyJets_value;
  TBranch *j2ptWoNoisyJets_JERDown_branch;
  float j2ptWoNoisyJets_JERDown_value;
  TBranch *j2ptWoNoisyJets_JERUp_branch;
  float j2ptWoNoisyJets_JERUp_value;
  TBranch *j2ptWoNoisyJets_JetAbsoluteDown_branch;
  float j2ptWoNoisyJets_JetAbsoluteDown_value;
  TBranch *j2ptWoNoisyJets_JetAbsoluteUp_branch;
  float j2ptWoNoisyJets_JetAbsoluteUp_value;
  TBranch *j2ptWoNoisyJets_JetAbsoluteyearDown_branch;
  float j2ptWoNoisyJets_JetAbsoluteyearDown_value;
  TBranch *j2ptWoNoisyJets_JetAbsoluteyearUp_branch;
  float j2ptWoNoisyJets_JetAbsoluteyearUp_value;
  TBranch *j2ptWoNoisyJets_JetBBEC1Down_branch;
  float j2ptWoNoisyJets_JetBBEC1Down_value;
  TBranch *j2ptWoNoisyJets_JetBBEC1Up_branch;
  float j2ptWoNoisyJets_JetBBEC1Up_value;
  TBranch *j2ptWoNoisyJets_JetBBEC1yearDown_branch;
  float j2ptWoNoisyJets_JetBBEC1yearDown_value;
  TBranch *j2ptWoNoisyJets_JetBBEC1yearUp_branch;
  float j2ptWoNoisyJets_JetBBEC1yearUp_value;
  TBranch *j2ptWoNoisyJets_JetEC2Down_branch;
  float j2ptWoNoisyJets_JetEC2Down_value;
  TBranch *j2ptWoNoisyJets_JetEC2Up_branch;
  float j2ptWoNoisyJets_JetEC2Up_value;
  TBranch *j2ptWoNoisyJets_JetEC2yearDown_branch;
  float j2ptWoNoisyJets_JetEC2yearDown_value;
  TBranch *j2ptWoNoisyJets_JetEC2yearUp_branch;
  float j2ptWoNoisyJets_JetEC2yearUp_value;
  TBranch *j2ptWoNoisyJets_JetFlavorQCDDown_branch;
  float j2ptWoNoisyJets_JetFlavorQCDDown_value;
  TBranch *j2ptWoNoisyJets_JetFlavorQCDUp_branch;
  float j2ptWoNoisyJets_JetFlavorQCDUp_value;
  TBranch *j2ptWoNoisyJets_JetHFDown_branch;
  float j2ptWoNoisyJets_JetHFDown_value;
  TBranch *j2ptWoNoisyJets_JetHFUp_branch;
  float j2ptWoNoisyJets_JetHFUp_value;
  TBranch *j2ptWoNoisyJets_JetHFyearDown_branch;
  float j2ptWoNoisyJets_JetHFyearDown_value;
  TBranch *j2ptWoNoisyJets_JetHFyearUp_branch;
  float j2ptWoNoisyJets_JetHFyearUp_value;
  TBranch *j2ptWoNoisyJets_JetRelativeBalDown_branch;
  float j2ptWoNoisyJets_JetRelativeBalDown_value;
  TBranch *j2ptWoNoisyJets_JetRelativeBalUp_branch;
  float j2ptWoNoisyJets_JetRelativeBalUp_value;
  TBranch *j2ptWoNoisyJets_JetRelativeSampleDown_branch;
  float j2ptWoNoisyJets_JetRelativeSampleDown_value;
  TBranch *j2ptWoNoisyJets_JetRelativeSampleUp_branch;
  float j2ptWoNoisyJets_JetRelativeSampleUp_value;
  TBranch *jb1eta_2016_branch;
  float jb1eta_2016_value;
  TBranch *jb1eta_2017_branch;
  float jb1eta_2017_value;
  TBranch *jb1eta_2018_branch;
  float jb1eta_2018_value;
  TBranch *jb1hadronflavor_2016_branch;
  float jb1hadronflavor_2016_value;
  TBranch *jb1hadronflavor_2017_branch;
  float jb1hadronflavor_2017_value;
  TBranch *jb1hadronflavor_2018_branch;
  float jb1hadronflavor_2018_value;
  TBranch *jb1phi_2016_branch;
  float jb1phi_2016_value;
  TBranch *jb1phi_2017_branch;
  float jb1phi_2017_value;
  TBranch *jb1phi_2018_branch;
  float jb1phi_2018_value;
  TBranch *jb1pt_2016_branch;
  float jb1pt_2016_value;
  TBranch *jb1pt_2017_branch;
  float jb1pt_2017_value;
  TBranch *jb1pt_2018_branch;
  float jb1pt_2018_value;
  TBranch *jb2eta_2016_branch;
  float jb2eta_2016_value;
  TBranch *jb2eta_2017_branch;
  float jb2eta_2017_value;
  TBranch *jb2eta_2018_branch;
  float jb2eta_2018_value;
  TBranch *jb2hadronflavor_2016_branch;
  float jb2hadronflavor_2016_value;
  TBranch *jb2hadronflavor_2017_branch;
  float jb2hadronflavor_2017_value;
  TBranch *jb2hadronflavor_2018_branch;
  float jb2hadronflavor_2018_value;
  TBranch *jb2phi_2016_branch;
  float jb2phi_2016_value;
  TBranch *jb2phi_2017_branch;
  float jb2phi_2017_value;
  TBranch *jb2phi_2018_branch;
  float jb2phi_2018_value;
  TBranch *jb2pt_2016_branch;
  float jb2pt_2016_value;
  TBranch *jb2pt_2017_branch;
  float jb2pt_2017_value;
  TBranch *jb2pt_2018_branch;
  float jb2pt_2018_value;
  TBranch *jetVeto20_branch;
  float jetVeto20_value;
  TBranch *jetVeto20WoNoisyJets_branch;
  float jetVeto20WoNoisyJets_value;
  TBranch *jetVeto30_branch;
  float jetVeto30_value;
  TBranch *jetVeto30WoNoisyJets_branch;
  float jetVeto30WoNoisyJets_value;
  TBranch *jetVeto30WoNoisyJets_JERDown_branch;
  float jetVeto30WoNoisyJets_JERDown_value;
  TBranch *jetVeto30WoNoisyJets_JERUp_branch;
  float jetVeto30WoNoisyJets_JERUp_value;
  TBranch *jetVeto30WoNoisyJets_JetAbsoluteDown_branch;
  float jetVeto30WoNoisyJets_JetAbsoluteDown_value;
  TBranch *jetVeto30WoNoisyJets_JetAbsoluteUp_branch;
  float jetVeto30WoNoisyJets_JetAbsoluteUp_value;
  TBranch *jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch;
  float jetVeto30WoNoisyJets_JetAbsoluteyearDown_value;
  TBranch *jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch;
  float jetVeto30WoNoisyJets_JetAbsoluteyearUp_value;
  TBranch *jetVeto30WoNoisyJets_JetBBEC1Down_branch;
  float jetVeto30WoNoisyJets_JetBBEC1Down_value;
  TBranch *jetVeto30WoNoisyJets_JetBBEC1Up_branch;
  float jetVeto30WoNoisyJets_JetBBEC1Up_value;
  TBranch *jetVeto30WoNoisyJets_JetBBEC1yearDown_branch;
  float jetVeto30WoNoisyJets_JetBBEC1yearDown_value;
  TBranch *jetVeto30WoNoisyJets_JetBBEC1yearUp_branch;
  float jetVeto30WoNoisyJets_JetBBEC1yearUp_value;
  TBranch *jetVeto30WoNoisyJets_JetEC2Down_branch;
  float jetVeto30WoNoisyJets_JetEC2Down_value;
  TBranch *jetVeto30WoNoisyJets_JetEC2Up_branch;
  float jetVeto30WoNoisyJets_JetEC2Up_value;
  TBranch *jetVeto30WoNoisyJets_JetEC2yearDown_branch;
  float jetVeto30WoNoisyJets_JetEC2yearDown_value;
  TBranch *jetVeto30WoNoisyJets_JetEC2yearUp_branch;
  float jetVeto30WoNoisyJets_JetEC2yearUp_value;
  TBranch *jetVeto30WoNoisyJets_JetFlavorQCDDown_branch;
  float jetVeto30WoNoisyJets_JetFlavorQCDDown_value;
  TBranch *jetVeto30WoNoisyJets_JetFlavorQCDUp_branch;
  float jetVeto30WoNoisyJets_JetFlavorQCDUp_value;
  TBranch *jetVeto30WoNoisyJets_JetHFDown_branch;
  float jetVeto30WoNoisyJets_JetHFDown_value;
  TBranch *jetVeto30WoNoisyJets_JetHFUp_branch;
  float jetVeto30WoNoisyJets_JetHFUp_value;
  TBranch *jetVeto30WoNoisyJets_JetHFyearDown_branch;
  float jetVeto30WoNoisyJets_JetHFyearDown_value;
  TBranch *jetVeto30WoNoisyJets_JetHFyearUp_branch;
  float jetVeto30WoNoisyJets_JetHFyearUp_value;
  TBranch *jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch;
  float jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_value;
  TBranch *jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch;
  float jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_value;
  TBranch *jetVeto30WoNoisyJets_JetRelativeSampleDown_branch;
  float jetVeto30WoNoisyJets_JetRelativeSampleDown_value;
  TBranch *jetVeto30WoNoisyJets_JetRelativeSampleUp_branch;
  float jetVeto30WoNoisyJets_JetRelativeSampleUp_value;
  TBranch *jetVeto30WoNoisyJets_JetTotalDown_branch;
  float jetVeto30WoNoisyJets_JetTotalDown_value;
  TBranch *jetVeto30WoNoisyJets_JetTotalUp_branch;
  float jetVeto30WoNoisyJets_JetTotalUp_value;
  TBranch *lumi_branch;
  int lumi_value;
  TBranch *mCharge_branch;
  float mCharge_value;
  TBranch *mComesFromHiggs_branch;
  float mComesFromHiggs_value;
  TBranch *mEta_branch;
  float mEta_value;
  TBranch *mGenCharge_branch;
  float mGenCharge_value;
  TBranch *mGenDirectPromptTauDecayFinalState_branch;
  float mGenDirectPromptTauDecayFinalState_value;
  TBranch *mGenEnergy_branch;
  float mGenEnergy_value;
  TBranch *mGenEta_branch;
  float mGenEta_value;
  TBranch *mGenIsPrompt_branch;
  float mGenIsPrompt_value;
  TBranch *mGenMotherPdgId_branch;
  float mGenMotherPdgId_value;
  TBranch *mGenParticle_branch;
  float mGenParticle_value;
  TBranch *mGenPdgId_branch;
  float mGenPdgId_value;
  TBranch *mGenPhi_branch;
  float mGenPhi_value;
  TBranch *mGenPrompt_branch;
  float mGenPrompt_value;
  TBranch *mGenPromptFinalState_branch;
  float mGenPromptFinalState_value;
  TBranch *mGenPromptTauDecay_branch;
  float mGenPromptTauDecay_value;
  TBranch *mGenPt_branch;
  float mGenPt_value;
  TBranch *mGenTauDecay_branch;
  float mGenTauDecay_value;
  TBranch *mGenVZ_branch;
  float mGenVZ_value;
  TBranch *mGenVtxPVMatch_branch;
  float mGenVtxPVMatch_value;
  TBranch *mIP3D_branch;
  float mIP3D_value;
  TBranch *mIP3DErr_branch;
  float mIP3DErr_value;
  TBranch *mIsGlobal_branch;
  float mIsGlobal_value;
  TBranch *mIsPFMuon_branch;
  float mIsPFMuon_value;
  TBranch *mIsTracker_branch;
  float mIsTracker_value;
  TBranch *mJetArea_branch;
  float mJetArea_value;
  TBranch *mJetBtag_branch;
  float mJetBtag_value;
  TBranch *mJetDR_branch;
  float mJetDR_value;
  TBranch *mJetEtaEtaMoment_branch;
  float mJetEtaEtaMoment_value;
  TBranch *mJetEtaPhiMoment_branch;
  float mJetEtaPhiMoment_value;
  TBranch *mJetEtaPhiSpread_branch;
  float mJetEtaPhiSpread_value;
  TBranch *mJetHadronFlavour_branch;
  float mJetHadronFlavour_value;
  TBranch *mJetPFCISVBtag_branch;
  float mJetPFCISVBtag_value;
  TBranch *mJetPartonFlavour_branch;
  float mJetPartonFlavour_value;
  TBranch *mJetPhiPhiMoment_branch;
  float mJetPhiPhiMoment_value;
  TBranch *mJetPt_branch;
  float mJetPt_value;
  TBranch *mMass_branch;
  float mMass_value;
  TBranch *mMatchEmbeddedFilterMu24_branch;
  float mMatchEmbeddedFilterMu24_value;
  TBranch *mMatchEmbeddedFilterMu27_branch;
  float mMatchEmbeddedFilterMu27_value;
  TBranch *mMatchesIsoMu24Filter_branch;
  float mMatchesIsoMu24Filter_value;
  TBranch *mMatchesIsoMu24Path_branch;
  float mMatchesIsoMu24Path_value;
  TBranch *mMatchesIsoMu27Filter_branch;
  float mMatchesIsoMu27Filter_value;
  TBranch *mMatchesIsoMu27Path_branch;
  float mMatchesIsoMu27Path_value;
  TBranch *mMatchesMu23e12DZFilter_branch;
  float mMatchesMu23e12DZFilter_value;
  TBranch *mMatchesMu23e12DZPath_branch;
  float mMatchesMu23e12DZPath_value;
  TBranch *mMatchesMu23e12Filter_branch;
  float mMatchesMu23e12Filter_value;
  TBranch *mMatchesMu23e12Path_branch;
  float mMatchesMu23e12Path_value;
  TBranch *mMatchesMu8e23DZFilter_branch;
  float mMatchesMu8e23DZFilter_value;
  TBranch *mMatchesMu8e23DZPath_branch;
  float mMatchesMu8e23DZPath_value;
  TBranch *mMatchesMu8e23Filter_branch;
  float mMatchesMu8e23Filter_value;
  TBranch *mMatchesMu8e23Path_branch;
  float mMatchesMu8e23Path_value;
  TBranch *mPFIDLoose_branch;
  float mPFIDLoose_value;
  TBranch *mPFIDMedium_branch;
  float mPFIDMedium_value;
  TBranch *mPFIDTight_branch;
  float mPFIDTight_value;
  TBranch *mPVDXY_branch;
  float mPVDXY_value;
  TBranch *mPVDZ_branch;
  float mPVDZ_value;
  TBranch *mPhi_branch;
  float mPhi_value;
  TBranch *mPt_branch;
  float mPt_value;
  TBranch *mRelPFIsoDBDefaultR04_branch;
  float mRelPFIsoDBDefaultR04_value;
  TBranch *mSIP2D_branch;
  float mSIP2D_value;
  TBranch *mSIP3D_branch;
  float mSIP3D_value;
  TBranch *mVZ_branch;
  float mVZ_value;
  TBranch *mZTTGenMatching_branch;
  float mZTTGenMatching_value;
  TBranch *mu12e23DZPass_branch;
  float mu12e23DZPass_value;
  TBranch *mu12e23Pass_branch;
  float mu12e23Pass_value;
  TBranch *mu23e12DZPass_branch;
  float mu23e12DZPass_value;
  TBranch *mu23e12Pass_branch;
  float mu23e12Pass_value;
  TBranch *mu8e23DZPass_branch;
  float mu8e23DZPass_value;
  TBranch *mu8e23Pass_branch;
  float mu8e23Pass_value;
  TBranch *muGlbIsoVetoPt10_branch;
  float muGlbIsoVetoPt10_value;
  TBranch *muVetoZTTp001dxyz_branch;
  float muVetoZTTp001dxyz_value;
  TBranch *nTruePU_branch;
  float nTruePU_value;
  TBranch *npNLO_branch;
  float npNLO_value;
  TBranch *numGenJets_branch;
  float numGenJets_value;
  TBranch *nvtx_branch;
  float nvtx_value;
  TBranch *prefiring_weight_branch;
  float prefiring_weight_value;
  TBranch *prefiring_weight_down_branch;
  float prefiring_weight_down_value;
  TBranch *prefiring_weight_up_branch;
  float prefiring_weight_up_value;
  TBranch *processID_branch;
  float processID_value;
  TBranch *puppiMetEt_branch;
  float puppiMetEt_value;
  TBranch *puppiMetPhi_branch;
  float puppiMetPhi_value;
  TBranch *pvChi2_branch;
  float pvChi2_value;
  TBranch *pvDX_branch;
  float pvDX_value;
  TBranch *pvDY_branch;
  float pvDY_value;
  TBranch *pvDZ_branch;
  float pvDZ_value;
  TBranch *pvIsFake_branch;
  int pvIsFake_value;
  TBranch *pvIsValid_branch;
  int pvIsValid_value;
  TBranch *pvNormChi2_branch;
  float pvNormChi2_value;
  TBranch *pvRho_branch;
  float pvRho_value;
  TBranch *pvX_branch;
  float pvX_value;
  TBranch *pvY_branch;
  float pvY_value;
  TBranch *pvZ_branch;
  float pvZ_value;
  TBranch *pvndof_branch;
  float pvndof_value;
  TBranch *recoilDaught_branch;
  float recoilDaught_value;
  TBranch *recoilWithMet_branch;
  float recoilWithMet_value;
  TBranch *rho_branch;
  float rho_value;
  TBranch *run_branch;
  int run_value;
  TBranch *singleE25eta2p1TightPass_branch;
  float singleE25eta2p1TightPass_value;
  TBranch *tauVetoPt20LooseMVALTVtx_branch;
  float tauVetoPt20LooseMVALTVtx_value;
  TBranch *tauVetoPtDeepVtx_branch;
  float tauVetoPtDeepVtx_value;
  TBranch *topQuarkPt1_branch;
  float topQuarkPt1_value;
  TBranch *topQuarkPt2_branch;
  float topQuarkPt2_value;
  TBranch *type1_pfMetEt_branch;
  float type1_pfMetEt_value;
  TBranch *type1_pfMetPhi_branch;
  float type1_pfMetPhi_value;
  TBranch *type1_pfMet_shiftedPhi_JERDown_branch;
  float type1_pfMet_shiftedPhi_JERDown_value;
  TBranch *type1_pfMet_shiftedPhi_JERUp_branch;
  float type1_pfMet_shiftedPhi_JERUp_value;
  TBranch *type1_pfMet_shiftedPhi_JetAbsoluteDown_branch;
  float type1_pfMet_shiftedPhi_JetAbsoluteDown_value;
  TBranch *type1_pfMet_shiftedPhi_JetAbsoluteUp_branch;
  float type1_pfMet_shiftedPhi_JetAbsoluteUp_value;
  TBranch *type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch;
  float type1_pfMet_shiftedPhi_JetAbsoluteyearDown_value;
  TBranch *type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch;
  float type1_pfMet_shiftedPhi_JetAbsoluteyearUp_value;
  TBranch *type1_pfMet_shiftedPhi_JetBBEC1Down_branch;
  float type1_pfMet_shiftedPhi_JetBBEC1Down_value;
  TBranch *type1_pfMet_shiftedPhi_JetBBEC1Up_branch;
  float type1_pfMet_shiftedPhi_JetBBEC1Up_value;
  TBranch *type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch;
  float type1_pfMet_shiftedPhi_JetBBEC1yearDown_value;
  TBranch *type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch;
  float type1_pfMet_shiftedPhi_JetBBEC1yearUp_value;
  TBranch *type1_pfMet_shiftedPhi_JetEC2Down_branch;
  float type1_pfMet_shiftedPhi_JetEC2Down_value;
  TBranch *type1_pfMet_shiftedPhi_JetEC2Up_branch;
  float type1_pfMet_shiftedPhi_JetEC2Up_value;
  TBranch *type1_pfMet_shiftedPhi_JetEC2yearDown_branch;
  float type1_pfMet_shiftedPhi_JetEC2yearDown_value;
  TBranch *type1_pfMet_shiftedPhi_JetEC2yearUp_branch;
  float type1_pfMet_shiftedPhi_JetEC2yearUp_value;
  TBranch *type1_pfMet_shiftedPhi_JetEnDown_branch;
  float type1_pfMet_shiftedPhi_JetEnDown_value;
  TBranch *type1_pfMet_shiftedPhi_JetEnUp_branch;
  float type1_pfMet_shiftedPhi_JetEnUp_value;
  TBranch *type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch;
  float type1_pfMet_shiftedPhi_JetFlavorQCDDown_value;
  TBranch *type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch;
  float type1_pfMet_shiftedPhi_JetFlavorQCDUp_value;
  TBranch *type1_pfMet_shiftedPhi_JetHFDown_branch;
  float type1_pfMet_shiftedPhi_JetHFDown_value;
  TBranch *type1_pfMet_shiftedPhi_JetHFUp_branch;
  float type1_pfMet_shiftedPhi_JetHFUp_value;
  TBranch *type1_pfMet_shiftedPhi_JetHFyearDown_branch;
  float type1_pfMet_shiftedPhi_JetHFyearDown_value;
  TBranch *type1_pfMet_shiftedPhi_JetHFyearUp_branch;
  float type1_pfMet_shiftedPhi_JetHFyearUp_value;
  TBranch *type1_pfMet_shiftedPhi_JetRelativeBalDown_branch;
  float type1_pfMet_shiftedPhi_JetRelativeBalDown_value;
  TBranch *type1_pfMet_shiftedPhi_JetRelativeBalUp_branch;
  float type1_pfMet_shiftedPhi_JetRelativeBalUp_value;
  TBranch *type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch;
  float type1_pfMet_shiftedPhi_JetRelativeSampleDown_value;
  TBranch *type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch;
  float type1_pfMet_shiftedPhi_JetRelativeSampleUp_value;
  TBranch *type1_pfMet_shiftedPhi_JetResDown_branch;
  float type1_pfMet_shiftedPhi_JetResDown_value;
  TBranch *type1_pfMet_shiftedPhi_JetResUp_branch;
  float type1_pfMet_shiftedPhi_JetResUp_value;
  TBranch *type1_pfMet_shiftedPhi_JetTotalDown_branch;
  float type1_pfMet_shiftedPhi_JetTotalDown_value;
  TBranch *type1_pfMet_shiftedPhi_JetTotalUp_branch;
  float type1_pfMet_shiftedPhi_JetTotalUp_value;
  TBranch *type1_pfMet_shiftedPhi_UesCHARGEDDown_branch;
  float type1_pfMet_shiftedPhi_UesCHARGEDDown_value;
  TBranch *type1_pfMet_shiftedPhi_UesCHARGEDUp_branch;
  float type1_pfMet_shiftedPhi_UesCHARGEDUp_value;
  TBranch *type1_pfMet_shiftedPhi_UesECALDown_branch;
  float type1_pfMet_shiftedPhi_UesECALDown_value;
  TBranch *type1_pfMet_shiftedPhi_UesECALUp_branch;
  float type1_pfMet_shiftedPhi_UesECALUp_value;
  TBranch *type1_pfMet_shiftedPhi_UesHCALDown_branch;
  float type1_pfMet_shiftedPhi_UesHCALDown_value;
  TBranch *type1_pfMet_shiftedPhi_UesHCALUp_branch;
  float type1_pfMet_shiftedPhi_UesHCALUp_value;
  TBranch *type1_pfMet_shiftedPhi_UesHFDown_branch;
  float type1_pfMet_shiftedPhi_UesHFDown_value;
  TBranch *type1_pfMet_shiftedPhi_UesHFUp_branch;
  float type1_pfMet_shiftedPhi_UesHFUp_value;
  TBranch *type1_pfMet_shiftedPhi_UnclusteredEnDown_branch;
  float type1_pfMet_shiftedPhi_UnclusteredEnDown_value;
  TBranch *type1_pfMet_shiftedPhi_UnclusteredEnUp_branch;
  float type1_pfMet_shiftedPhi_UnclusteredEnUp_value;
  TBranch *type1_pfMet_shiftedPt_JERDown_branch;
  float type1_pfMet_shiftedPt_JERDown_value;
  TBranch *type1_pfMet_shiftedPt_JERUp_branch;
  float type1_pfMet_shiftedPt_JERUp_value;
  TBranch *type1_pfMet_shiftedPt_JetAbsoluteDown_branch;
  float type1_pfMet_shiftedPt_JetAbsoluteDown_value;
  TBranch *type1_pfMet_shiftedPt_JetAbsoluteUp_branch;
  float type1_pfMet_shiftedPt_JetAbsoluteUp_value;
  TBranch *type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch;
  float type1_pfMet_shiftedPt_JetAbsoluteyearDown_value;
  TBranch *type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch;
  float type1_pfMet_shiftedPt_JetAbsoluteyearUp_value;
  TBranch *type1_pfMet_shiftedPt_JetBBEC1Down_branch;
  float type1_pfMet_shiftedPt_JetBBEC1Down_value;
  TBranch *type1_pfMet_shiftedPt_JetBBEC1Up_branch;
  float type1_pfMet_shiftedPt_JetBBEC1Up_value;
  TBranch *type1_pfMet_shiftedPt_JetBBEC1yearDown_branch;
  float type1_pfMet_shiftedPt_JetBBEC1yearDown_value;
  TBranch *type1_pfMet_shiftedPt_JetBBEC1yearUp_branch;
  float type1_pfMet_shiftedPt_JetBBEC1yearUp_value;
  TBranch *type1_pfMet_shiftedPt_JetEC2Down_branch;
  float type1_pfMet_shiftedPt_JetEC2Down_value;
  TBranch *type1_pfMet_shiftedPt_JetEC2Up_branch;
  float type1_pfMet_shiftedPt_JetEC2Up_value;
  TBranch *type1_pfMet_shiftedPt_JetEC2yearDown_branch;
  float type1_pfMet_shiftedPt_JetEC2yearDown_value;
  TBranch *type1_pfMet_shiftedPt_JetEC2yearUp_branch;
  float type1_pfMet_shiftedPt_JetEC2yearUp_value;
  TBranch *type1_pfMet_shiftedPt_JetEnDown_branch;
  float type1_pfMet_shiftedPt_JetEnDown_value;
  TBranch *type1_pfMet_shiftedPt_JetEnUp_branch;
  float type1_pfMet_shiftedPt_JetEnUp_value;
  TBranch *type1_pfMet_shiftedPt_JetFlavorQCDDown_branch;
  float type1_pfMet_shiftedPt_JetFlavorQCDDown_value;
  TBranch *type1_pfMet_shiftedPt_JetFlavorQCDUp_branch;
  float type1_pfMet_shiftedPt_JetFlavorQCDUp_value;
  TBranch *type1_pfMet_shiftedPt_JetHFDown_branch;
  float type1_pfMet_shiftedPt_JetHFDown_value;
  TBranch *type1_pfMet_shiftedPt_JetHFUp_branch;
  float type1_pfMet_shiftedPt_JetHFUp_value;
  TBranch *type1_pfMet_shiftedPt_JetHFyearDown_branch;
  float type1_pfMet_shiftedPt_JetHFyearDown_value;
  TBranch *type1_pfMet_shiftedPt_JetHFyearUp_branch;
  float type1_pfMet_shiftedPt_JetHFyearUp_value;
  TBranch *type1_pfMet_shiftedPt_JetRelativeBalDown_branch;
  float type1_pfMet_shiftedPt_JetRelativeBalDown_value;
  TBranch *type1_pfMet_shiftedPt_JetRelativeBalUp_branch;
  float type1_pfMet_shiftedPt_JetRelativeBalUp_value;
  TBranch *type1_pfMet_shiftedPt_JetRelativeSampleDown_branch;
  float type1_pfMet_shiftedPt_JetRelativeSampleDown_value;
  TBranch *type1_pfMet_shiftedPt_JetRelativeSampleUp_branch;
  float type1_pfMet_shiftedPt_JetRelativeSampleUp_value;
  TBranch *type1_pfMet_shiftedPt_JetResDown_branch;
  float type1_pfMet_shiftedPt_JetResDown_value;
  TBranch *type1_pfMet_shiftedPt_JetResUp_branch;
  float type1_pfMet_shiftedPt_JetResUp_value;
  TBranch *type1_pfMet_shiftedPt_JetTotalDown_branch;
  float type1_pfMet_shiftedPt_JetTotalDown_value;
  TBranch *type1_pfMet_shiftedPt_JetTotalUp_branch;
  float type1_pfMet_shiftedPt_JetTotalUp_value;
  TBranch *type1_pfMet_shiftedPt_UesCHARGEDDown_branch;
  float type1_pfMet_shiftedPt_UesCHARGEDDown_value;
  TBranch *type1_pfMet_shiftedPt_UesCHARGEDUp_branch;
  float type1_pfMet_shiftedPt_UesCHARGEDUp_value;
  TBranch *type1_pfMet_shiftedPt_UesECALDown_branch;
  float type1_pfMet_shiftedPt_UesECALDown_value;
  TBranch *type1_pfMet_shiftedPt_UesECALUp_branch;
  float type1_pfMet_shiftedPt_UesECALUp_value;
  TBranch *type1_pfMet_shiftedPt_UesHCALDown_branch;
  float type1_pfMet_shiftedPt_UesHCALDown_value;
  TBranch *type1_pfMet_shiftedPt_UesHCALUp_branch;
  float type1_pfMet_shiftedPt_UesHCALUp_value;
  TBranch *type1_pfMet_shiftedPt_UesHFDown_branch;
  float type1_pfMet_shiftedPt_UesHFDown_value;
  TBranch *type1_pfMet_shiftedPt_UesHFUp_branch;
  float type1_pfMet_shiftedPt_UesHFUp_value;
  TBranch *type1_pfMet_shiftedPt_UnclusteredEnDown_branch;
  float type1_pfMet_shiftedPt_UnclusteredEnDown_value;
  TBranch *type1_pfMet_shiftedPt_UnclusteredEnUp_branch;
  float type1_pfMet_shiftedPt_UnclusteredEnUp_value;
  TBranch *vbfDeta_branch;
  float vbfDeta_value;
  TBranch *vbfJetVeto20_branch;
  float vbfJetVeto20_value;
  TBranch *vbfJetVeto30_branch;
  float vbfJetVeto30_value;
  TBranch *vbfMass_branch;
  float vbfMass_value;
  TBranch *vbfMassWoNoisyJets_branch;
  float vbfMassWoNoisyJets_value;
  TBranch *vbfMassWoNoisyJets_JERDown_branch;
  float vbfMassWoNoisyJets_JERDown_value;
  TBranch *vbfMassWoNoisyJets_JERUp_branch;
  float vbfMassWoNoisyJets_JERUp_value;
  TBranch *vbfMassWoNoisyJets_JetAbsoluteDown_branch;
  float vbfMassWoNoisyJets_JetAbsoluteDown_value;
  TBranch *vbfMassWoNoisyJets_JetAbsoluteUp_branch;
  float vbfMassWoNoisyJets_JetAbsoluteUp_value;
  TBranch *vbfMassWoNoisyJets_JetAbsoluteyearDown_branch;
  float vbfMassWoNoisyJets_JetAbsoluteyearDown_value;
  TBranch *vbfMassWoNoisyJets_JetAbsoluteyearUp_branch;
  float vbfMassWoNoisyJets_JetAbsoluteyearUp_value;
  TBranch *vbfMassWoNoisyJets_JetBBEC1Down_branch;
  float vbfMassWoNoisyJets_JetBBEC1Down_value;
  TBranch *vbfMassWoNoisyJets_JetBBEC1Up_branch;
  float vbfMassWoNoisyJets_JetBBEC1Up_value;
  TBranch *vbfMassWoNoisyJets_JetBBEC1yearDown_branch;
  float vbfMassWoNoisyJets_JetBBEC1yearDown_value;
  TBranch *vbfMassWoNoisyJets_JetBBEC1yearUp_branch;
  float vbfMassWoNoisyJets_JetBBEC1yearUp_value;
  TBranch *vbfMassWoNoisyJets_JetEC2Down_branch;
  float vbfMassWoNoisyJets_JetEC2Down_value;
  TBranch *vbfMassWoNoisyJets_JetEC2Up_branch;
  float vbfMassWoNoisyJets_JetEC2Up_value;
  TBranch *vbfMassWoNoisyJets_JetEC2yearDown_branch;
  float vbfMassWoNoisyJets_JetEC2yearDown_value;
  TBranch *vbfMassWoNoisyJets_JetEC2yearUp_branch;
  float vbfMassWoNoisyJets_JetEC2yearUp_value;
  TBranch *vbfMassWoNoisyJets_JetFlavorQCDDown_branch;
  float vbfMassWoNoisyJets_JetFlavorQCDDown_value;
  TBranch *vbfMassWoNoisyJets_JetFlavorQCDUp_branch;
  float vbfMassWoNoisyJets_JetFlavorQCDUp_value;
  TBranch *vbfMassWoNoisyJets_JetHFDown_branch;
  float vbfMassWoNoisyJets_JetHFDown_value;
  TBranch *vbfMassWoNoisyJets_JetHFUp_branch;
  float vbfMassWoNoisyJets_JetHFUp_value;
  TBranch *vbfMassWoNoisyJets_JetHFyearDown_branch;
  float vbfMassWoNoisyJets_JetHFyearDown_value;
  TBranch *vbfMassWoNoisyJets_JetHFyearUp_branch;
  float vbfMassWoNoisyJets_JetHFyearUp_value;
  TBranch *vbfMassWoNoisyJets_JetRelativeBalDown_branch;
  float vbfMassWoNoisyJets_JetRelativeBalDown_value;
  TBranch *vbfMassWoNoisyJets_JetRelativeBalUp_branch;
  float vbfMassWoNoisyJets_JetRelativeBalUp_value;
  TBranch *vbfMassWoNoisyJets_JetRelativeSampleDown_branch;
  float vbfMassWoNoisyJets_JetRelativeSampleDown_value;
  TBranch *vbfMassWoNoisyJets_JetRelativeSampleUp_branch;
  float vbfMassWoNoisyJets_JetRelativeSampleUp_value;
  TBranch *vbfMassWoNoisyJets_JetTotalDown_branch;
  float vbfMassWoNoisyJets_JetTotalDown_value;
  TBranch *vbfMassWoNoisyJets_JetTotalUp_branch;
  float vbfMassWoNoisyJets_JetTotalUp_value;
  TBranch *vbfNJets20_branch;
  float vbfNJets20_value;
  TBranch *vbfNJets30_branch;
  float vbfNJets30_value;
  TBranch *vbfj1eta_branch;
  float vbfj1eta_value;
  TBranch *vbfj1pt_branch;
  float vbfj1pt_value;
  TBranch *vbfj2eta_branch;
  float vbfj2eta_value;
  TBranch *vbfj2pt_branch;
  float vbfj2pt_value;
  TBranch *vispX_branch;
  float vispX_value;
  TBranch *vispY_branch;
  float vispY_value;
  TBranch *idx_branch;
  int idx_value;
};


/* "EMTree.pyx":6303
 * 
 *     # Iterating over the tree
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         self.ientry = 0
 *         while self.ientry < self.tree.GetEntries():
 */
struct __pyx_obj_6EMTree___pyx_scope_struct____iter__ {
  PyObject_HEAD
  struct __pyx_obj_6EMTree_EMTree *__pyx_v_self;
};


/* "EMTree.pyx":6311
 * 
 *     # Iterate over rows which pass the filter
 *     def where(self, filter):             # <<<<<<<<<<<<<<
 *         print "where"
 *         cdef TTreeFormula* formula = new TTreeFormula(
 */
struct __pyx_obj_6EMTree___pyx_scope_struct_1_where {
  PyObject_HEAD
  TTree *__pyx_v_currentTree;
  PyObject *__pyx_v_filter;
  TTreeFormula *__pyx_v_formula;
  struct __pyx_obj_6EMTree_EMTree *__pyx_v_self;
};



/* "EMTree.pyx":42
 * warnings.formatwarning = my_warning_format
 * 
 * cdef class EMTree:             # <<<<<<<<<<<<<<
 *     # Pointers to tree (may be a chain), current active tree, and current entry
 *     # localentry is the entry in the current tree of the chain
 */

struct __pyx_vtabstruct_6EMTree_EMTree {
  PyObject *(*load_entry)(struct __pyx_obj_6EMTree_EMTree *, long);
  PyObject *(*setup_branches)(struct __pyx_obj_6EMTree_EMTree *, TTree *);
};
static struct __pyx_vtabstruct_6EMTree_EMTree *__pyx_vtabptr_6EMTree_EMTree;

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, int nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* GetModuleGlobalName.proto */
static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* IncludeStringH.proto */
#include <string.h>

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* SetVTable.proto */
static int __Pyx_SetVtable(PyObject *dict, void *vtable);

/* SetupReduce.proto */
static int __Pyx_setup_reduce(PyObject* type_obj);

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* Print.proto */
static int __Pyx_Print(PyObject*, PyObject *, int);
#if CYTHON_COMPILING_IN_PYPY || PY_MAJOR_VERSION >= 3
static PyObject* __pyx_print = 0;
static PyObject* __pyx_print_kwargs = 0;
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_long(unsigned long value);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* PrintOne.proto */
static int __Pyx_PrintOne(PyObject* stream, PyObject *o);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* FetchCommonType.proto */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* SwapException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSwap(type, value, tb)  __Pyx__ExceptionSwap(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);
static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg);

/* CoroutineBase.proto */
typedef PyObject *(*__pyx_coroutine_body_t)(PyObject *, PyThreadState *, PyObject *);
typedef struct {
    PyObject_HEAD
    __pyx_coroutine_body_t body;
    PyObject *closure;
    PyObject *exc_type;
    PyObject *exc_value;
    PyObject *exc_traceback;
    PyObject *gi_weakreflist;
    PyObject *classobj;
    PyObject *yieldfrom;
    PyObject *gi_name;
    PyObject *gi_qualname;
    PyObject *gi_modulename;
    PyObject *gi_code;
    int resume_label;
    char is_running;
} __pyx_CoroutineObject;
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
    PyTypeObject *type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
    PyObject *name, PyObject *qualname, PyObject *module_name);
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name);
static int __Pyx_Coroutine_clear(PyObject *self);
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value);
static PyObject *__Pyx_Coroutine_Close(PyObject *self);
static PyObject *__Pyx_Coroutine_Throw(PyObject *gen, PyObject *args);
#define __Pyx_Coroutine_SwapException(self) {\
    __Pyx_ExceptionSwap(&(self)->exc_type, &(self)->exc_value, &(self)->exc_traceback);\
    __Pyx_Coroutine_ResetFrameBackpointer(self);\
    }
#define __Pyx_Coroutine_ResetAndClearException(self) {\
    __Pyx_ExceptionReset((self)->exc_type, (self)->exc_value, (self)->exc_traceback);\
    (self)->exc_type = (self)->exc_value = (self)->exc_traceback = NULL;\
    }
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__pyx_tstate, pvalue)
#else
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, pvalue)
#endif
static int __Pyx_PyGen__FetchStopIterationValue(PyThreadState *tstate, PyObject **pvalue);
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__pyx_CoroutineObject *self);

/* PatchModuleWithCoroutine.proto */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code);

/* PatchGeneratorABC.proto */
static int __Pyx_patch_abc(void);

/* Generator.proto */
#define __Pyx_Generator_USED
static PyTypeObject *__pyx_GeneratorType = 0;
#define __Pyx_Generator_CheckExact(obj) (Py_TYPE(obj) == __pyx_GeneratorType)
#define __Pyx_Generator_New(body, code, closure, name, qualname, module_name)\
    __Pyx__Coroutine_New(__pyx_GeneratorType, body, code, closure, name, qualname, module_name)
static PyObject *__Pyx_Generator_Next(PyObject *self);
static int __pyx_Generator_init(void);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* PyIdentifierFromString.proto */
#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

/* ModuleImport.proto */
static PyObject *__Pyx_ImportModule(const char *name);

/* TypeImport.proto */
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static PyObject *__pyx_f_6EMTree_6EMTree_load_entry(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self, long __pyx_v_i); /* proto*/
static PyObject *__pyx_f_6EMTree_6EMTree_setup_branches(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self, TTree *__pyx_v_the_tree); /* proto*/

/* Module declarations from 'cpython.version' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'cpython.exc' */

/* Module declarations from 'cpython.module' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'cpython.tuple' */

/* Module declarations from 'cpython.list' */

/* Module declarations from 'cpython.sequence' */

/* Module declarations from 'cpython.mapping' */

/* Module declarations from 'cpython.iterator' */

/* Module declarations from 'cpython.number' */

/* Module declarations from 'cpython.int' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.bool' */
static PyTypeObject *__pyx_ptype_7cpython_4bool_bool = 0;

/* Module declarations from 'cpython.long' */

/* Module declarations from 'cpython.float' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.complex' */
static PyTypeObject *__pyx_ptype_7cpython_7complex_complex = 0;

/* Module declarations from 'cpython.string' */

/* Module declarations from 'cpython.unicode' */

/* Module declarations from 'cpython.dict' */

/* Module declarations from 'cpython.instance' */

/* Module declarations from 'cpython.function' */

/* Module declarations from 'cpython.method' */

/* Module declarations from 'cpython.weakref' */

/* Module declarations from 'cpython.getargs' */

/* Module declarations from 'cpython.pythread' */

/* Module declarations from 'cpython.pystate' */

/* Module declarations from 'cpython.cobject' */

/* Module declarations from 'cpython.oldbuffer' */

/* Module declarations from 'cpython.set' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'cpython.bytes' */

/* Module declarations from 'cpython.pycapsule' */

/* Module declarations from 'cpython' */

/* Module declarations from 'EMTree' */
static PyTypeObject *__pyx_ptype_6EMTree_EMTree = 0;
static PyTypeObject *__pyx_ptype_6EMTree___pyx_scope_struct____iter__ = 0;
static PyTypeObject *__pyx_ptype_6EMTree___pyx_scope_struct_1_where = 0;
#define __Pyx_MODULE_NAME "EMTree"
extern int __pyx_module_is_main_EMTree;
int __pyx_module_is_main_EMTree = 0;

/* Implementation of 'EMTree' */
static PyObject *__pyx_builtin_Warning;
static PyObject *__pyx_builtin_TypeError;
static const char __pyx_k_[] = "";
static const char __pyx_k_end[] = "end";
static const char __pyx_k_s_s[] = "%s:%s\n";
static const char __pyx_k_ROOT[] = "ROOT";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_file[] = "file";
static const char __pyx_k_iter[] = "__iter__";
static const char __pyx_k_line[] = "line";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_send[] = "send";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_warn[] = "warn";
static const char __pyx_k_close[] = "close";
static const char __pyx_k_print[] = "print";
static const char __pyx_k_throw[] = "throw";
static const char __pyx_k_ttree[] = "ttree";
static const char __pyx_k_where[] = "where";
static const char __pyx_k_EMTree[] = "EMTree";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_lineno[] = "lineno";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_Warning[] = "Warning";
static const char __pyx_k_message[] = "message";
static const char __pyx_k_category[] = "category";
static const char __pyx_k_filename[] = "filename";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_warnings[] = "warnings";
static const char __pyx_k_AsCObject[] = "AsCObject";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_EMTree_pyx[] = "EMTree.pyx";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_EMTree_where[] = "EMTree.where";
static const char __pyx_k_EMTree___iter[] = "EMTree.__iter__";
static const char __pyx_k_formatwarning[] = "formatwarning";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_my_warning_format[] = "my_warning_format";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_EMTree_Expected_branch_Eta_does[] = "EMTree: Expected branch Eta does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Mu50Pass[] = "EMTree: Expected branch Mu50Pass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_NUP_does[] = "EMTree: Expected branch NUP does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Phi_does[] = "EMTree: Expected branch Phi does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eIP3DErr[] = "EMTree: Expected branch eIP3DErr does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eIsoDB03[] = "EMTree: Expected branch eIsoDB03 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eJetArea[] = "EMTree: Expected branch eJetArea does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eJetBtag[] = "EMTree: Expected branch eJetBtag does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_ePt_does[] = "EMTree: Expected branch ePt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eVZ_does[] = "EMTree: Expected branch eVZ does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_evt_does[] = "EMTree: Expected branch evt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_idx_does[] = "EMTree: Expected branch idx does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_isWtaunu[] = "EMTree: Expected branch isWtaunu does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mIP3DErr[] = "EMTree: Expected branch mIP3DErr does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mJetArea[] = "EMTree: Expected branch mJetArea does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mJetBtag[] = "EMTree: Expected branch mJetBtag does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mPt_does[] = "EMTree: Expected branch mPt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mVZ_does[] = "EMTree: Expected branch mVZ does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_pvIsFake[] = "EMTree: Expected branch pvIsFake does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_pvX_does[] = "EMTree: Expected branch pvX does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_pvY_does[] = "EMTree: Expected branch pvY does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_pvZ_does[] = "EMTree: Expected branch pvZ does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_rho_does[] = "EMTree: Expected branch rho does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_run_does[] = "EMTree: Expected branch run does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfj1eta[] = "EMTree: Expected branch vbfj1eta does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfj2eta[] = "EMTree: Expected branch vbfj2eta does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Ele24Loos[] = "EMTree: Expected branch Ele24LooseHPSTau30Pass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Ele27WPTi[] = "EMTree: Expected branch Ele27WPTightPass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Ele32WPTi[] = "EMTree: Expected branch Ele32WPTightPass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Ele35WPTi[] = "EMTree: Expected branch Ele35WPTightPass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_EmbPtWeig[] = "EMTree: Expected branch EmbPtWeight does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Flag_BadC[] = "EMTree: Expected branch Flag_BadChargedCandidateFilter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Flag_BadP[] = "EMTree: Expected branch Flag_BadPFMuonFilter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Flag_Ecal[] = "EMTree: Expected branch Flag_EcalDeadCellTriggerPrimitiveFilter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Flag_HBHE[] = "EMTree: Expected branch Flag_HBHENoiseFilter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Flag_ecal[] = "EMTree: Expected branch Flag_ecalBadCalibReducedMINIAODFilter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Flag_eeBa[] = "EMTree: Expected branch Flag_eeBadScFilter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Flag_glob[] = "EMTree: Expected branch Flag_globalSuperTightHalo2016Filter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Flag_good[] = "EMTree: Expected branch Flag_goodVertices does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_GenWeight[] = "EMTree: Expected branch GenWeight does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Ht_does_n[] = "EMTree: Expected branch Ht does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_IsoMu24Pa[] = "EMTree: Expected branch IsoMu24Pass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_IsoMu27Pa[] = "EMTree: Expected branch IsoMu27Pass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_LT_does_n[] = "EMTree: Expected branch LT does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_MassError[] = "EMTree: Expected branch MassError does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Mass_does[] = "EMTree: Expected branch Mass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Mt_does_n[] = "EMTree: Expected branch Mt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Pt_does_n[] = "EMTree: Expected branch Pt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_bjetDeepC[] = "EMTree: Expected branch bjetDeepCSVVeto20Medium_2016_DR0p5 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_bweight_2[] = "EMTree: Expected branch bweight_2016 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_charge_do[] = "EMTree: Expected branch charge does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_deepcsvb1[] = "EMTree: Expected branch deepcsvb1_btagscore does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_deepcsvb2[] = "EMTree: Expected branch deepcsvb2_btagscore does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_dielectro[] = "EMTree: Expected branch dielectronVeto does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_dimuonVet[] = "EMTree: Expected branch dimuonVeto does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eCharge_d[] = "EMTree: Expected branch eCharge does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eComesFro[] = "EMTree: Expected branch eComesFromHiggs does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eCorrecte[] = "EMTree: Expected branch eCorrectedEt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eEnergyEr[] = "EMTree: Expected branch eEnergyError does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eEnergySc[] = "EMTree: Expected branch eEnergyScaleDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eEnergySi[] = "EMTree: Expected branch eEnergySigmaDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eEta_does[] = "EMTree: Expected branch eEta does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eGenCharg[] = "EMTree: Expected branch eGenCharge does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eGenDirec[] = "EMTree: Expected branch eGenDirectPromptTauDecay does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eGenEnerg[] = "EMTree: Expected branch eGenEnergy does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eGenEta_d[] = "EMTree: Expected branch eGenEta does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eGenIsPro[] = "EMTree: Expected branch eGenIsPrompt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eGenMothe[] = "EMTree: Expected branch eGenMotherPdgId does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eGenParti[] = "EMTree: Expected branch eGenParticle does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eGenPdgId[] = "EMTree: Expected branch eGenPdgId does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eGenPhi_d[] = "EMTree: Expected branch eGenPhi does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eGenPromp[] = "EMTree: Expected branch eGenPrompt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eGenPt_do[] = "EMTree: Expected branch eGenPt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eGenTauDe[] = "EMTree: Expected branch eGenTauDecay does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eGenVZ_do[] = "EMTree: Expected branch eGenVZ does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eGenVtxPV[] = "EMTree: Expected branch eGenVtxPVMatch does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eIP3D_doe[] = "EMTree: Expected branch eIP3D does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eJetDR_do[] = "EMTree: Expected branch eJetDR does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eJetEtaEt[] = "EMTree: Expected branch eJetEtaEtaMoment does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eJetEtaPh[] = "EMTree: Expected branch eJetEtaPhiMoment does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eJetHadro[] = "EMTree: Expected branch eJetHadronFlavour does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eJetPFCIS[] = "EMTree: Expected branch eJetPFCISVBtag does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eJetParto[] = "EMTree: Expected branch eJetPartonFlavour does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eJetPhiPh[] = "EMTree: Expected branch eJetPhiPhiMoment does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eJetPt_do[] = "EMTree: Expected branch eJetPt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMVAIsoWP[] = "EMTree: Expected branch eMVAIsoWP80 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMVANoiso[] = "EMTree: Expected branch eMVANoisoWP80 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMass_doe[] = "EMTree: Expected branch eMass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchEmb[] = "EMTree: Expected branch eMatchEmbeddedFilterEle24Tau30 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesE[] = "EMTree: Expected branch eMatchesEle24HPSTau30Filter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesM[] = "EMTree: Expected branch eMatchesMu23e12DZFilter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMissingH[] = "EMTree: Expected branch eMissingHits does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_ePVDXY_do[] = "EMTree: Expected branch ePVDXY does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_ePVDZ_doe[] = "EMTree: Expected branch ePVDZ does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_ePassesCo[] = "EMTree: Expected branch ePassesConversionVeto does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_ePhi_does[] = "EMTree: Expected branch ePhi does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eRelPFIso[] = "EMTree: Expected branch eRelPFIsoRho does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eSIP2D_do[] = "EMTree: Expected branch eSIP2D does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eSIP3D_do[] = "EMTree: Expected branch eSIP3D does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eVetoMVAI[] = "EMTree: Expected branch eVetoMVAIsoVtx does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eVetoZTTp[] = "EMTree: Expected branch eVetoZTTp001dxyz does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eZTTGenMa[] = "EMTree: Expected branch eZTTGenMatching does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_e_m_PZeta[] = "EMTree: Expected branch e_m_PZeta does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_e_m_doubl[] = "EMTree: Expected branch e_m_doubleL1IsoTauMatch does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eecalEner[] = "EMTree: Expected branch eecalEnergy does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_genEta_do[] = "EMTree: Expected branch genEta does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_genHTT_do[] = "EMTree: Expected branch genHTT does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_genM_does[] = "EMTree: Expected branch genM does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_genMass_d[] = "EMTree: Expected branch genMass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_genPhi_do[] = "EMTree: Expected branch genPhi does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_genpT_doe[] = "EMTree: Expected branch genpT does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_genpX_doe[] = "EMTree: Expected branch genpX does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_genpY_doe[] = "EMTree: Expected branch genpY does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_isGtautau[] = "EMTree: Expected branch isGtautau does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_isWenu_do[] = "EMTree: Expected branch isWenu does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_isWmunu_d[] = "EMTree: Expected branch isWmunu does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_isZee_doe[] = "EMTree: Expected branch isZee does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_isZmumu_d[] = "EMTree: Expected branch isZmumu does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_isZtautau[] = "EMTree: Expected branch isZtautau does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_isdata_do[] = "EMTree: Expected branch isdata does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_isembed_d[] = "EMTree: Expected branch isembed does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1csvWoNo[] = "EMTree: Expected branch j1csvWoNoisyJets does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1csv_doe[] = "EMTree: Expected branch j1csv does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1etaWoNo[] = "EMTree: Expected branch j1etaWoNoisyJets does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1eta_doe[] = "EMTree: Expected branch j1eta does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1hadronf[] = "EMTree: Expected branch j1hadronflavor does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1phiWoNo[] = "EMTree: Expected branch j1phiWoNoisyJets does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1phi_doe[] = "EMTree: Expected branch j1phi does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi[] = "EMTree: Expected branch j1ptWoNoisyJets does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1pt_does[] = "EMTree: Expected branch j1pt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2csvWoNo[] = "EMTree: Expected branch j2csvWoNoisyJets does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2csv_doe[] = "EMTree: Expected branch j2csv does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2etaWoNo[] = "EMTree: Expected branch j2etaWoNoisyJets does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2eta_doe[] = "EMTree: Expected branch j2eta does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2hadronf[] = "EMTree: Expected branch j2hadronflavor does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2phiWoNo[] = "EMTree: Expected branch j2phiWoNoisyJets does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2phi_doe[] = "EMTree: Expected branch j2phi does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi[] = "EMTree: Expected branch j2ptWoNoisyJets does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2pt_does[] = "EMTree: Expected branch j2pt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb1eta_20[] = "EMTree: Expected branch jb1eta_2016 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb1hadron[] = "EMTree: Expected branch jb1hadronflavor_2016 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb1phi_20[] = "EMTree: Expected branch jb1phi_2016 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb1pt_201[] = "EMTree: Expected branch jb1pt_2016 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb2eta_20[] = "EMTree: Expected branch jb2eta_2016 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb2hadron[] = "EMTree: Expected branch jb2hadronflavor_2016 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb2phi_20[] = "EMTree: Expected branch jb2phi_2016 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb2pt_201[] = "EMTree: Expected branch jb2pt_2016 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto20[] = "EMTree: Expected branch jetVeto20 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30[] = "EMTree: Expected branch jetVeto30 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_lumi_does[] = "EMTree: Expected branch lumi does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mCharge_d[] = "EMTree: Expected branch mCharge does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mComesFro[] = "EMTree: Expected branch mComesFromHiggs does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mEta_does[] = "EMTree: Expected branch mEta does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mGenCharg[] = "EMTree: Expected branch mGenCharge does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mGenDirec[] = "EMTree: Expected branch mGenDirectPromptTauDecayFinalState does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mGenEnerg[] = "EMTree: Expected branch mGenEnergy does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mGenEta_d[] = "EMTree: Expected branch mGenEta does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mGenIsPro[] = "EMTree: Expected branch mGenIsPrompt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mGenMothe[] = "EMTree: Expected branch mGenMotherPdgId does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mGenParti[] = "EMTree: Expected branch mGenParticle does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mGenPdgId[] = "EMTree: Expected branch mGenPdgId does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mGenPhi_d[] = "EMTree: Expected branch mGenPhi does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mGenPromp[] = "EMTree: Expected branch mGenPrompt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mGenPt_do[] = "EMTree: Expected branch mGenPt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mGenTauDe[] = "EMTree: Expected branch mGenTauDecay does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mGenVZ_do[] = "EMTree: Expected branch mGenVZ does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mGenVtxPV[] = "EMTree: Expected branch mGenVtxPVMatch does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mIP3D_doe[] = "EMTree: Expected branch mIP3D does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mIsGlobal[] = "EMTree: Expected branch mIsGlobal does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mIsPFMuon[] = "EMTree: Expected branch mIsPFMuon does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mIsTracke[] = "EMTree: Expected branch mIsTracker does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mJetDR_do[] = "EMTree: Expected branch mJetDR does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mJetEtaEt[] = "EMTree: Expected branch mJetEtaEtaMoment does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mJetEtaPh[] = "EMTree: Expected branch mJetEtaPhiMoment does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mJetHadro[] = "EMTree: Expected branch mJetHadronFlavour does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mJetPFCIS[] = "EMTree: Expected branch mJetPFCISVBtag does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mJetParto[] = "EMTree: Expected branch mJetPartonFlavour does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mJetPhiPh[] = "EMTree: Expected branch mJetPhiPhiMoment does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mJetPt_do[] = "EMTree: Expected branch mJetPt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mMass_doe[] = "EMTree: Expected branch mMass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mMatchEmb[] = "EMTree: Expected branch mMatchEmbeddedFilterMu24 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mMatchesI[] = "EMTree: Expected branch mMatchesIsoMu24Filter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mMatchesM[] = "EMTree: Expected branch mMatchesMu23e12DZFilter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mPFIDLoos[] = "EMTree: Expected branch mPFIDLoose does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mPFIDMedi[] = "EMTree: Expected branch mPFIDMedium does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mPFIDTigh[] = "EMTree: Expected branch mPFIDTight does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mPVDXY_do[] = "EMTree: Expected branch mPVDXY does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mPVDZ_doe[] = "EMTree: Expected branch mPVDZ does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mPhi_does[] = "EMTree: Expected branch mPhi does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mRelPFIso[] = "EMTree: Expected branch mRelPFIsoDBDefaultR04 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mSIP2D_do[] = "EMTree: Expected branch mSIP2D does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mSIP3D_do[] = "EMTree: Expected branch mSIP3D does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mZTTGenMa[] = "EMTree: Expected branch mZTTGenMatching does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mu12e23DZ[] = "EMTree: Expected branch mu12e23DZPass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mu12e23Pa[] = "EMTree: Expected branch mu12e23Pass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mu23e12DZ[] = "EMTree: Expected branch mu23e12DZPass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mu23e12Pa[] = "EMTree: Expected branch mu23e12Pass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mu8e23DZP[] = "EMTree: Expected branch mu8e23DZPass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mu8e23Pas[] = "EMTree: Expected branch mu8e23Pass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_muGlbIsoV[] = "EMTree: Expected branch muGlbIsoVetoPt10 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_muVetoZTT[] = "EMTree: Expected branch muVetoZTTp001dxyz does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_nTruePU_d[] = "EMTree: Expected branch nTruePU does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_npNLO_doe[] = "EMTree: Expected branch npNLO does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_numGenJet[] = "EMTree: Expected branch numGenJets does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_nvtx_does[] = "EMTree: Expected branch nvtx does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_prefiring[] = "EMTree: Expected branch prefiring_weight does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_processID[] = "EMTree: Expected branch processID does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_puppiMetE[] = "EMTree: Expected branch puppiMetEt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_puppiMetP[] = "EMTree: Expected branch puppiMetPhi does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_pvChi2_do[] = "EMTree: Expected branch pvChi2 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_pvDX_does[] = "EMTree: Expected branch pvDX does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_pvDY_does[] = "EMTree: Expected branch pvDY does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_pvDZ_does[] = "EMTree: Expected branch pvDZ does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_pvIsValid[] = "EMTree: Expected branch pvIsValid does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_pvNormChi[] = "EMTree: Expected branch pvNormChi2 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_pvRho_doe[] = "EMTree: Expected branch pvRho does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_pvndof_do[] = "EMTree: Expected branch pvndof does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_recoilDau[] = "EMTree: Expected branch recoilDaught does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_recoilWit[] = "EMTree: Expected branch recoilWithMet does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_singleE25[] = "EMTree: Expected branch singleE25eta2p1TightPass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_tauVetoPt[] = "EMTree: Expected branch tauVetoPt20LooseMVALTVtx does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_topQuarkP[] = "EMTree: Expected branch topQuarkPt1 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM[] = "EMTree: Expected branch type1_pfMetEt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfDeta_d[] = "EMTree: Expected branch vbfDeta does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfJetVet[] = "EMTree: Expected branch vbfJetVeto20 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo[] = "EMTree: Expected branch vbfMassWoNoisyJets does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMass_d[] = "EMTree: Expected branch vbfMass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfNJets2[] = "EMTree: Expected branch vbfNJets20 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfNJets3[] = "EMTree: Expected branch vbfNJets30 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfj1pt_d[] = "EMTree: Expected branch vbfj1pt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfj2pt_d[] = "EMTree: Expected branch vbfj2pt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vispX_doe[] = "EMTree: Expected branch vispX does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vispY_doe[] = "EMTree: Expected branch vispY does not exist! It will crash if you try and use it!";
static const char __pyx_k_no_default___reduce___due_to_non[] = "no default __reduce__ due to non-trivial __cinit__";
static const char __pyx_k_EMTree_Expected_branch_Ele24Loos_2[] = "EMTree: Expected branch Ele24LooseHPSTau30TightIDPass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Ele24Loos_3[] = "EMTree: Expected branch Ele24LooseTau30Pass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Ele24Loos_4[] = "EMTree: Expected branch Ele24LooseTau30TightIDPass does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_Flag_HBHE_2[] = "EMTree: Expected branch Flag_HBHENoiseIsoFilter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_MassError_2[] = "EMTree: Expected branch MassErrord1 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_MassError_3[] = "EMTree: Expected branch MassErrord2 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_MassError_4[] = "EMTree: Expected branch MassErrord3 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_MassError_5[] = "EMTree: Expected branch MassErrord4 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_bjetDeepC_2[] = "EMTree: Expected branch bjetDeepCSVVeto20Medium_2017_DR0p5 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_bjetDeepC_3[] = "EMTree: Expected branch bjetDeepCSVVeto20Medium_2018_DR0p5 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_bjetDeepC_4[] = "EMTree: Expected branch bjetDeepCSVVeto30Medium_2016_DR0p5 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_bjetDeepC_5[] = "EMTree: Expected branch bjetDeepCSVVeto30Medium_2017_DR0p5 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_bjetDeepC_6[] = "EMTree: Expected branch bjetDeepCSVVeto30Medium_2018_DR0p5 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_bweight_2_2[] = "EMTree: Expected branch bweight_2017 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_bweight_2_3[] = "EMTree: Expected branch bweight_2018 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_deepcsvb1_2[] = "EMTree: Expected branch deepcsvb1_eta does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_deepcsvb1_3[] = "EMTree: Expected branch deepcsvb1_hadronflavour does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_deepcsvb1_4[] = "EMTree: Expected branch deepcsvb1_m does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_deepcsvb1_5[] = "EMTree: Expected branch deepcsvb1_phi does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_deepcsvb1_6[] = "EMTree: Expected branch deepcsvb1_pt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_deepcsvb2_2[] = "EMTree: Expected branch deepcsvb2_eta does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_deepcsvb2_3[] = "EMTree: Expected branch deepcsvb2_hadronflavour does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_deepcsvb2_4[] = "EMTree: Expected branch deepcsvb2_m does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_deepcsvb2_5[] = "EMTree: Expected branch deepcsvb2_phi does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_deepcsvb2_6[] = "EMTree: Expected branch deepcsvb2_pt does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eEnergySc_2[] = "EMTree: Expected branch eEnergyScaleGainDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eEnergySc_3[] = "EMTree: Expected branch eEnergyScaleGainUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eEnergySc_4[] = "EMTree: Expected branch eEnergyScaleStatDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eEnergySc_5[] = "EMTree: Expected branch eEnergyScaleStatUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eEnergySc_6[] = "EMTree: Expected branch eEnergyScaleSystDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eEnergySc_7[] = "EMTree: Expected branch eEnergyScaleSystUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eEnergySc_8[] = "EMTree: Expected branch eEnergyScaleUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eEnergySi_2[] = "EMTree: Expected branch eEnergySigmaPhiDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eEnergySi_3[] = "EMTree: Expected branch eEnergySigmaPhiUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eEnergySi_4[] = "EMTree: Expected branch eEnergySigmaRhoDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eEnergySi_5[] = "EMTree: Expected branch eEnergySigmaRhoUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eEnergySi_6[] = "EMTree: Expected branch eEnergySigmaUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eGenPromp_2[] = "EMTree: Expected branch eGenPromptTauDecay does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eJetEtaPh_2[] = "EMTree: Expected branch eJetEtaPhiSpread does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMVAIsoWP_2[] = "EMTree: Expected branch eMVAIsoWP90 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMVANoiso_2[] = "EMTree: Expected branch eMVANoisoWP90 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchEmb_2[] = "EMTree: Expected branch eMatchEmbeddedFilterEle27 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchEmb_3[] = "EMTree: Expected branch eMatchEmbeddedFilterEle32 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchEmb_4[] = "EMTree: Expected branch eMatchEmbeddedFilterEle32DoubleL1_v1 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchEmb_5[] = "EMTree: Expected branch eMatchEmbeddedFilterEle32DoubleL1_v2 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchEmb_6[] = "EMTree: Expected branch eMatchEmbeddedFilterEle35 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesE_2[] = "EMTree: Expected branch eMatchesEle24HPSTau30Path does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesE_3[] = "EMTree: Expected branch eMatchesEle24Tau30Filter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesE_4[] = "EMTree: Expected branch eMatchesEle24Tau30Path does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesE_5[] = "EMTree: Expected branch eMatchesEle25Filter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesE_6[] = "EMTree: Expected branch eMatchesEle25Path does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesE_7[] = "EMTree: Expected branch eMatchesEle27Filter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesE_8[] = "EMTree: Expected branch eMatchesEle27Path does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesE_9[] = "EMTree: Expected branch eMatchesEle32Filter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesM_2[] = "EMTree: Expected branch eMatchesMu23e12DZPath does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesM_3[] = "EMTree: Expected branch eMatchesMu23e12Filter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesM_4[] = "EMTree: Expected branch eMatchesMu23e12Path does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesM_5[] = "EMTree: Expected branch eMatchesMu8e23DZFilter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesM_6[] = "EMTree: Expected branch eMatchesMu8e23DZPath does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesM_7[] = "EMTree: Expected branch eMatchesMu8e23Filter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesM_8[] = "EMTree: Expected branch eMatchesMu8e23Path does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_e_m_PZeta_2[] = "EMTree: Expected branch e_m_PZetaVis does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1hadronf_2[] = "EMTree: Expected branch j1hadronflavorWoNoisyJets does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_2[] = "EMTree: Expected branch j1ptWoNoisyJets_JERDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_3[] = "EMTree: Expected branch j1ptWoNoisyJets_JERUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_4[] = "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_5[] = "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_6[] = "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteyearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_7[] = "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteyearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_8[] = "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1Down does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_9[] = "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1Up does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2hadronf_2[] = "EMTree: Expected branch j2hadronflavorWoNoisyJets does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_2[] = "EMTree: Expected branch j2ptWoNoisyJets_JERDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_3[] = "EMTree: Expected branch j2ptWoNoisyJets_JERUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_4[] = "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_5[] = "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_6[] = "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteyearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_7[] = "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteyearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_8[] = "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1Down does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_9[] = "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1Up does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb1eta_20_2[] = "EMTree: Expected branch jb1eta_2017 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb1eta_20_3[] = "EMTree: Expected branch jb1eta_2018 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb1hadron_2[] = "EMTree: Expected branch jb1hadronflavor_2017 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb1hadron_3[] = "EMTree: Expected branch jb1hadronflavor_2018 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb1phi_20_2[] = "EMTree: Expected branch jb1phi_2017 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb1phi_20_3[] = "EMTree: Expected branch jb1phi_2018 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb1pt_201_2[] = "EMTree: Expected branch jb1pt_2017 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb1pt_201_3[] = "EMTree: Expected branch jb1pt_2018 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb2eta_20_2[] = "EMTree: Expected branch jb2eta_2017 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb2eta_20_3[] = "EMTree: Expected branch jb2eta_2018 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb2hadron_2[] = "EMTree: Expected branch jb2hadronflavor_2017 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb2hadron_3[] = "EMTree: Expected branch jb2hadronflavor_2018 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb2phi_20_2[] = "EMTree: Expected branch jb2phi_2017 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb2phi_20_3[] = "EMTree: Expected branch jb2phi_2018 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb2pt_201_2[] = "EMTree: Expected branch jb2pt_2017 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jb2pt_201_3[] = "EMTree: Expected branch jb2pt_2018 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto20_2[] = "EMTree: Expected branch jetVeto20WoNoisyJets does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_2[] = "EMTree: Expected branch jetVeto30WoNoisyJets does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_3[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JERDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_4[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JERUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_5[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_6[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_7[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteyearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_8[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteyearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_9[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1Down does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mGenPromp_2[] = "EMTree: Expected branch mGenPromptFinalState does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mGenPromp_3[] = "EMTree: Expected branch mGenPromptTauDecay does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mJetEtaPh_2[] = "EMTree: Expected branch mJetEtaPhiSpread does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mMatchEmb_2[] = "EMTree: Expected branch mMatchEmbeddedFilterMu27 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mMatchesI_2[] = "EMTree: Expected branch mMatchesIsoMu24Path does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mMatchesI_3[] = "EMTree: Expected branch mMatchesIsoMu27Filter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mMatchesI_4[] = "EMTree: Expected branch mMatchesIsoMu27Path does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mMatchesM_2[] = "EMTree: Expected branch mMatchesMu23e12DZPath does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mMatchesM_3[] = "EMTree: Expected branch mMatchesMu23e12Filter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mMatchesM_4[] = "EMTree: Expected branch mMatchesMu23e12Path does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mMatchesM_5[] = "EMTree: Expected branch mMatchesMu8e23DZFilter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mMatchesM_6[] = "EMTree: Expected branch mMatchesMu8e23DZPath does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mMatchesM_7[] = "EMTree: Expected branch mMatchesMu8e23Filter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_mMatchesM_8[] = "EMTree: Expected branch mMatchesMu8e23Path does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_prefiring_2[] = "EMTree: Expected branch prefiring_weight_down does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_prefiring_3[] = "EMTree: Expected branch prefiring_weight_up does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_tauVetoPt_2[] = "EMTree: Expected branch tauVetoPtDeepVtx does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_topQuarkP_2[] = "EMTree: Expected branch topQuarkPt2 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_2[] = "EMTree: Expected branch type1_pfMetPhi does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_3[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JERDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_4[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JERUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_5[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_6[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_7[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteyearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_8[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteyearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_9[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1Down does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfJetVet_2[] = "EMTree: Expected branch vbfJetVeto30 does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_2[] = "EMTree: Expected branch vbfMassWoNoisyJets_JERDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_3[] = "EMTree: Expected branch vbfMassWoNoisyJets_JERUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_4[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_5[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_6[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteyearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_7[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteyearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_8[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1Down does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_9[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1Up does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesE_10[] = "EMTree: Expected branch eMatchesEle32Path does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesE_11[] = "EMTree: Expected branch eMatchesEle35Filter does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_eMatchesE_12[] = "EMTree: Expected branch eMatchesEle35Path does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_10[] = "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1yearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_11[] = "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1yearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_12[] = "EMTree: Expected branch j1ptWoNoisyJets_JetEC2Down does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_13[] = "EMTree: Expected branch j1ptWoNoisyJets_JetEC2Up does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_14[] = "EMTree: Expected branch j1ptWoNoisyJets_JetEC2yearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_15[] = "EMTree: Expected branch j1ptWoNoisyJets_JetEC2yearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_16[] = "EMTree: Expected branch j1ptWoNoisyJets_JetFlavorQCDDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_17[] = "EMTree: Expected branch j1ptWoNoisyJets_JetFlavorQCDUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_18[] = "EMTree: Expected branch j1ptWoNoisyJets_JetHFDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_19[] = "EMTree: Expected branch j1ptWoNoisyJets_JetHFUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_20[] = "EMTree: Expected branch j1ptWoNoisyJets_JetHFyearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_21[] = "EMTree: Expected branch j1ptWoNoisyJets_JetHFyearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_22[] = "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeBalDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_23[] = "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeBalUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_24[] = "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeSampleDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j1ptWoNoi_25[] = "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeSampleUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_10[] = "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1yearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_11[] = "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1yearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_12[] = "EMTree: Expected branch j2ptWoNoisyJets_JetEC2Down does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_13[] = "EMTree: Expected branch j2ptWoNoisyJets_JetEC2Up does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_14[] = "EMTree: Expected branch j2ptWoNoisyJets_JetEC2yearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_15[] = "EMTree: Expected branch j2ptWoNoisyJets_JetEC2yearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_16[] = "EMTree: Expected branch j2ptWoNoisyJets_JetFlavorQCDDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_17[] = "EMTree: Expected branch j2ptWoNoisyJets_JetFlavorQCDUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_18[] = "EMTree: Expected branch j2ptWoNoisyJets_JetHFDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_19[] = "EMTree: Expected branch j2ptWoNoisyJets_JetHFUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_20[] = "EMTree: Expected branch j2ptWoNoisyJets_JetHFyearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_21[] = "EMTree: Expected branch j2ptWoNoisyJets_JetHFyearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_22[] = "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeBalDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_23[] = "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeBalUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_24[] = "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeSampleDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_j2ptWoNoi_25[] = "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeSampleUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_10[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1Up does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_11[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1yearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_12[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1yearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_13[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2Down does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_14[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2Up does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_15[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2yearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_16[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2yearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_17[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetFlavorQCDDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_18[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetFlavorQCDUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_19[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_20[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_21[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFyearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_22[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFyearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_23[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_24[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_25[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeSampleDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_26[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeSampleUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_27[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetTotalDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_jetVeto30_28[] = "EMTree: Expected branch jetVeto30WoNoisyJets_JetTotalUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_10[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1Up does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_11[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1yearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_12[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1yearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_13[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2Down does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_14[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2Up does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_15[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2yearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_16[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2yearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_17[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEnDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_18[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEnUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_19[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetFlavorQCDDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_20[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetFlavorQCDUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_21[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_22[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_23[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFyearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_24[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFyearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_25[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeBalDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_26[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeBalUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_27[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeSampleDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_28[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeSampleUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_29[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetResDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_30[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetResUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_31[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetTotalDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_32[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_JetTotalUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_33[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_UesCHARGEDDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_34[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_UesCHARGEDUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_35[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_UesECALDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_36[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_UesECALUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_37[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHCALDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_38[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHCALUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_39[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHFDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_40[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHFUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_41[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_UnclusteredEnDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_42[] = "EMTree: Expected branch type1_pfMet_shiftedPhi_UnclusteredEnUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_43[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JERDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_44[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JERUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_45[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_46[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_47[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteyearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_48[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteyearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_49[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1Down does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_50[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1Up does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_51[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1yearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_52[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1yearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_53[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2Down does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_54[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2Up does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_55[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2yearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_56[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2yearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_57[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetEnDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_58[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetEnUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_59[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetFlavorQCDDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_60[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetFlavorQCDUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_61[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_62[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_63[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFyearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_64[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFyearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_65[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeBalDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_66[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeBalUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_67[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeSampleDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_68[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeSampleUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_69[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetResDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_70[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetResUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_71[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetTotalDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_72[] = "EMTree: Expected branch type1_pfMet_shiftedPt_JetTotalUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_73[] = "EMTree: Expected branch type1_pfMet_shiftedPt_UesCHARGEDDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_74[] = "EMTree: Expected branch type1_pfMet_shiftedPt_UesCHARGEDUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_75[] = "EMTree: Expected branch type1_pfMet_shiftedPt_UesECALDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_76[] = "EMTree: Expected branch type1_pfMet_shiftedPt_UesECALUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_77[] = "EMTree: Expected branch type1_pfMet_shiftedPt_UesHCALDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_78[] = "EMTree: Expected branch type1_pfMet_shiftedPt_UesHCALUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_79[] = "EMTree: Expected branch type1_pfMet_shiftedPt_UesHFDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_80[] = "EMTree: Expected branch type1_pfMet_shiftedPt_UesHFUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_81[] = "EMTree: Expected branch type1_pfMet_shiftedPt_UnclusteredEnDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_type1_pfM_82[] = "EMTree: Expected branch type1_pfMet_shiftedPt_UnclusteredEnUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_10[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1yearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_11[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1yearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_12[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2Down does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_13[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2Up does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_14[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2yearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_15[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2yearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_16[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetFlavorQCDDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_17[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetFlavorQCDUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_18[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetHFDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_19[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetHFUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_20[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetHFyearDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_21[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetHFyearUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_22[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeBalDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_23[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeBalUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_24[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeSampleDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_25[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeSampleUp does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_26[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetTotalDown does not exist! It will crash if you try and use it!";
static const char __pyx_k_EMTree_Expected_branch_vbfMassWo_27[] = "EMTree: Expected branch vbfMassWoNoisyJets_JetTotalUp does not exist! It will crash if you try and use it!";
static PyObject *__pyx_kp_s_;
static PyObject *__pyx_n_s_AsCObject;
static PyObject *__pyx_n_s_EMTree;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Ele24Loos;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Ele24Loos_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Ele24Loos_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Ele24Loos_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Ele27WPTi;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Ele32WPTi;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Ele35WPTi;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_EmbPtWeig;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Eta_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Flag_BadC;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Flag_BadP;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Flag_Ecal;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Flag_HBHE;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Flag_HBHE_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Flag_ecal;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Flag_eeBa;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Flag_glob;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Flag_good;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_GenWeight;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Ht_does_n;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_IsoMu24Pa;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_IsoMu27Pa;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_LT_does_n;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_MassError;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_MassError_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_MassError_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_MassError_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_MassError_5;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Mass_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Mt_does_n;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Mu50Pass;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_NUP_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Phi_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_Pt_does_n;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_bjetDeepC;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_bjetDeepC_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_bjetDeepC_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_bjetDeepC_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_bjetDeepC_5;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_bjetDeepC_6;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_bweight_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_bweight_2_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_bweight_2_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_charge_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_deepcsvb1;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_deepcsvb1_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_deepcsvb1_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_deepcsvb1_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_deepcsvb1_5;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_deepcsvb1_6;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_deepcsvb2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_deepcsvb2_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_deepcsvb2_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_deepcsvb2_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_deepcsvb2_5;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_deepcsvb2_6;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_dielectro;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_dimuonVet;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eCharge_d;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eComesFro;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eCorrecte;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eEnergyEr;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eEnergySc;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eEnergySc_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eEnergySc_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eEnergySc_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eEnergySc_5;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eEnergySc_6;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eEnergySc_7;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eEnergySc_8;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eEnergySi;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eEnergySi_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eEnergySi_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eEnergySi_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eEnergySi_5;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eEnergySi_6;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eEta_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eGenCharg;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eGenDirec;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eGenEnerg;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eGenEta_d;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eGenIsPro;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eGenMothe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eGenParti;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eGenPdgId;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eGenPhi_d;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eGenPromp;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eGenPromp_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eGenPt_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eGenTauDe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eGenVZ_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eGenVtxPV;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eIP3DErr;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eIP3D_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eIsoDB03;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eJetArea;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eJetBtag;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eJetDR_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eJetEtaEt;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eJetEtaPh;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eJetEtaPh_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eJetHadro;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eJetPFCIS;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eJetParto;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eJetPhiPh;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eJetPt_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMVAIsoWP;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMVAIsoWP_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMVANoiso;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMVANoiso_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMass_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchEmb;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchEmb_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchEmb_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchEmb_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchEmb_5;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchEmb_6;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesE;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesE_10;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesE_11;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesE_12;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesE_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesE_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesE_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesE_5;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesE_6;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesE_7;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesE_8;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesE_9;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesM;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesM_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesM_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesM_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesM_5;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesM_6;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesM_7;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMatchesM_8;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eMissingH;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_ePVDXY_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_ePVDZ_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_ePassesCo;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_ePhi_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_ePt_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eRelPFIso;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eSIP2D_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eSIP3D_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eVZ_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eVetoMVAI;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eVetoZTTp;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eZTTGenMa;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_e_m_PZeta;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_e_m_PZeta_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_e_m_doubl;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_eecalEner;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_evt_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_genEta_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_genHTT_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_genM_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_genMass_d;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_genPhi_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_genpT_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_genpX_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_genpY_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_idx_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_isGtautau;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_isWenu_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_isWmunu_d;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_isWtaunu;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_isZee_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_isZmumu_d;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_isZtautau;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_isdata_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_isembed_d;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1csvWoNo;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1csv_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1etaWoNo;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1eta_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1hadronf;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1hadronf_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1phiWoNo;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1phi_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_10;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_11;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_12;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_13;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_14;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_15;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_16;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_17;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_18;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_19;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_20;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_21;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_22;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_23;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_24;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_25;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_5;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_6;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_7;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_8;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_9;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j1pt_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2csvWoNo;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2csv_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2etaWoNo;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2eta_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2hadronf;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2hadronf_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2phiWoNo;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2phi_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_10;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_11;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_12;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_13;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_14;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_15;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_16;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_17;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_18;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_19;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_20;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_21;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_22;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_23;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_24;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_25;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_5;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_6;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_7;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_8;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_9;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_j2pt_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb1eta_20;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb1eta_20_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb1eta_20_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb1hadron;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb1hadron_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb1hadron_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb1phi_20;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb1phi_20_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb1phi_20_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb1pt_201;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb1pt_201_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb1pt_201_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb2eta_20;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb2eta_20_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb2eta_20_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb2hadron;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb2hadron_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb2hadron_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb2phi_20;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb2phi_20_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb2phi_20_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb2pt_201;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb2pt_201_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jb2pt_201_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto20;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto20_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_10;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_11;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_12;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_13;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_14;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_15;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_16;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_17;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_18;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_19;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_20;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_21;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_22;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_23;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_24;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_25;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_26;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_27;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_28;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_5;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_6;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_7;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_8;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_jetVeto30_9;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_lumi_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mCharge_d;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mComesFro;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mEta_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mGenCharg;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mGenDirec;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mGenEnerg;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mGenEta_d;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mGenIsPro;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mGenMothe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mGenParti;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mGenPdgId;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mGenPhi_d;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mGenPromp;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mGenPromp_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mGenPromp_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mGenPt_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mGenTauDe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mGenVZ_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mGenVtxPV;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mIP3DErr;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mIP3D_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mIsGlobal;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mIsPFMuon;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mIsTracke;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mJetArea;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mJetBtag;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mJetDR_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mJetEtaEt;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mJetEtaPh;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mJetEtaPh_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mJetHadro;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mJetPFCIS;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mJetParto;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mJetPhiPh;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mJetPt_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mMass_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mMatchEmb;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mMatchEmb_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mMatchesI;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mMatchesI_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mMatchesI_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mMatchesI_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mMatchesM;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mMatchesM_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mMatchesM_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mMatchesM_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mMatchesM_5;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mMatchesM_6;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mMatchesM_7;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mMatchesM_8;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mPFIDLoos;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mPFIDMedi;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mPFIDTigh;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mPVDXY_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mPVDZ_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mPhi_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mPt_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mRelPFIso;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mSIP2D_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mSIP3D_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mVZ_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mZTTGenMa;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mu12e23DZ;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mu12e23Pa;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mu23e12DZ;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mu23e12Pa;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mu8e23DZP;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_mu8e23Pas;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_muGlbIsoV;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_muVetoZTT;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_nTruePU_d;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_npNLO_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_numGenJet;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_nvtx_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_prefiring;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_prefiring_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_prefiring_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_processID;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_puppiMetE;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_puppiMetP;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_pvChi2_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_pvDX_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_pvDY_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_pvDZ_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_pvIsFake;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_pvIsValid;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_pvNormChi;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_pvRho_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_pvX_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_pvY_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_pvZ_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_pvndof_do;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_recoilDau;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_recoilWit;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_rho_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_run_does;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_singleE25;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_tauVetoPt;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_tauVetoPt_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_topQuarkP;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_topQuarkP_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_10;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_11;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_12;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_13;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_14;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_15;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_16;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_17;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_18;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_19;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_20;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_21;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_22;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_23;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_24;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_25;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_26;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_27;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_28;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_29;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_30;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_31;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_32;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_33;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_34;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_35;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_36;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_37;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_38;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_39;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_40;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_41;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_42;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_43;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_44;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_45;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_46;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_47;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_48;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_49;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_5;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_50;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_51;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_52;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_53;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_54;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_55;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_56;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_57;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_58;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_59;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_6;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_60;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_61;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_62;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_63;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_64;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_65;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_66;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_67;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_68;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_69;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_7;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_70;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_71;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_72;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_73;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_74;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_75;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_76;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_77;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_78;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_79;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_8;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_80;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_81;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_82;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_type1_pfM_9;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfDeta_d;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfJetVet;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfJetVet_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_10;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_11;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_12;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_13;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_14;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_15;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_16;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_17;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_18;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_19;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_20;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_21;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_22;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_23;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_24;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_25;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_26;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_27;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_4;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_5;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_6;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_7;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_8;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_9;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfMass_d;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfNJets2;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfNJets3;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfj1eta;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfj1pt_d;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfj2eta;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vbfj2pt_d;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vispX_doe;
static PyObject *__pyx_kp_s_EMTree_Expected_branch_vispY_doe;
static PyObject *__pyx_n_s_EMTree___iter;
static PyObject *__pyx_kp_s_EMTree_pyx;
static PyObject *__pyx_n_s_EMTree_where;
static PyObject *__pyx_n_s_ROOT;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_n_s_Warning;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_category;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_close;
static PyObject *__pyx_n_s_end;
static PyObject *__pyx_n_s_file;
static PyObject *__pyx_n_s_filename;
static PyObject *__pyx_n_s_formatwarning;
static PyObject *__pyx_n_s_getstate;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_iter;
static PyObject *__pyx_n_s_line;
static PyObject *__pyx_n_s_lineno;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_message;
static PyObject *__pyx_n_s_my_warning_format;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_kp_s_no_default___reduce___due_to_non;
static PyObject *__pyx_n_s_print;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_reduce;
static PyObject *__pyx_n_s_reduce_cython;
static PyObject *__pyx_n_s_reduce_ex;
static PyObject *__pyx_kp_s_s_s;
static PyObject *__pyx_n_s_send;
static PyObject *__pyx_n_s_setstate;
static PyObject *__pyx_n_s_setstate_cython;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_throw;
static PyObject *__pyx_n_s_ttree;
static PyObject *__pyx_n_s_warn;
static PyObject *__pyx_n_s_warnings;
static PyObject *__pyx_n_s_where;
static PyObject *__pyx_pf_6EMTree_my_warning_format(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_message, PyObject *__pyx_v_category, CYTHON_UNUSED PyObject *__pyx_v_filename, CYTHON_UNUSED PyObject *__pyx_v_lineno, CYTHON_UNUSED PyObject *__pyx_v_line); /* proto */
static int __pyx_pf_6EMTree_6EMTree___cinit__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self, PyObject *__pyx_v_ttree); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_2__iter__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5where(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self, PyObject *__pyx_v_filter); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5entry___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static int __pyx_pf_6EMTree_6EMTree_5entry_2__set__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_22Ele24LooseHPSTau30Pass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_29Ele24LooseHPSTau30TightIDPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_19Ele24LooseTau30Pass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_26Ele24LooseTau30TightIDPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16Ele27WPTightPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16Ele32WPTightPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16Ele35WPTightPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11EmbPtWeight___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_3Eta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_30Flag_BadChargedCandidateFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20Flag_BadPFMuonFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_39Flag_EcalDeadCellTriggerPrimitiveFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20Flag_HBHENoiseFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_23Flag_HBHENoiseIsoFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_37Flag_ecalBadCalibReducedMINIAODFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_18Flag_eeBadScFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35Flag_globalSuperTightHalo2016Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_17Flag_goodVertices___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_9GenWeight___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_2Ht___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11IsoMu24Pass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11IsoMu27Pass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_2LT___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_4Mass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_9MassError___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11MassErrord1___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11MassErrord2___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11MassErrord3___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11MassErrord4___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_2Mt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_8Mu50Pass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_3NUP___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_3Phi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_2Pt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2016_DR0p5___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2017_DR0p5___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2018_DR0p5___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2016_DR0p5___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2017_DR0p5___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2018_DR0p5___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12bweight_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12bweight_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12bweight_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6charge___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_19deepcsvb1_btagscore___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_13deepcsvb1_eta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_23deepcsvb1_hadronflavour___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11deepcsvb1_m___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_13deepcsvb1_phi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12deepcsvb1_pt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_19deepcsvb2_btagscore___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_13deepcsvb2_eta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_23deepcsvb2_hadronflavour___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11deepcsvb2_m___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_13deepcsvb2_phi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12deepcsvb2_pt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_14dielectronVeto___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10dimuonVeto___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_7eCharge___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_15eComesFromHiggs___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12eCorrectedEt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12eEnergyError___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16eEnergyScaleDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20eEnergyScaleGainDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_18eEnergyScaleGainUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20eEnergyScaleStatDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_18eEnergyScaleStatUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20eEnergyScaleSystDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_18eEnergyScaleSystUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_14eEnergyScaleUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16eEnergySigmaDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_19eEnergySigmaPhiDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_17eEnergySigmaPhiUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_19eEnergySigmaRhoDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_17eEnergySigmaRhoUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_14eEnergySigmaUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_4eEta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10eGenCharge___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_24eGenDirectPromptTauDecay___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10eGenEnergy___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_7eGenEta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12eGenIsPrompt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_15eGenMotherPdgId___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12eGenParticle___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_9eGenPdgId___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_7eGenPhi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10eGenPrompt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_18eGenPromptTauDecay___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6eGenPt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12eGenTauDecay___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6eGenVZ___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_14eGenVtxPVMatch___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5eIP3D___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_8eIP3DErr___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_8eIsoDB03___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_8eJetArea___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_8eJetBtag___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6eJetDR___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16eJetEtaEtaMoment___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16eJetEtaPhiMoment___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16eJetEtaPhiSpread___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_17eJetHadronFlavour___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_14eJetPFCISVBtag___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_17eJetPartonFlavour___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16eJetPhiPhiMoment___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6eJetPt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11eMVAIsoWP80___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11eMVAIsoWP90___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_13eMVANoisoWP80___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_13eMVANoisoWP90___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5eMass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_30eMatchEmbeddedFilterEle24Tau30___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_25eMatchEmbeddedFilterEle27___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_25eMatchEmbeddedFilterEle32___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_36eMatchEmbeddedFilterEle32DoubleL1_v1___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_36eMatchEmbeddedFilterEle32DoubleL1_v2___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_25eMatchEmbeddedFilterEle35___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_27eMatchesEle24HPSTau30Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_25eMatchesEle24HPSTau30Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_24eMatchesEle24Tau30Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_22eMatchesEle24Tau30Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_19eMatchesEle25Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_17eMatchesEle25Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_19eMatchesEle27Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_17eMatchesEle27Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_19eMatchesEle32Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_17eMatchesEle32Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_19eMatchesEle35Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_17eMatchesEle35Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_23eMatchesMu23e12DZFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_21eMatchesMu23e12DZPath___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_21eMatchesMu23e12Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_19eMatchesMu23e12Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_22eMatchesMu8e23DZFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20eMatchesMu8e23DZPath___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20eMatchesMu8e23Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_18eMatchesMu8e23Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12eMissingHits___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6ePVDXY___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5ePVDZ___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_21ePassesConversionVeto___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_4ePhi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_3ePt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12eRelPFIsoRho___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6eSIP2D___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6eSIP3D___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_3eVZ___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_14eVetoMVAIsoVtx___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16eVetoZTTp001dxyz___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_15eZTTGenMatching___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_9e_m_PZeta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12e_m_PZetaVis___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_23e_m_doubleL1IsoTauMatch___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11eecalEnergy___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_3evt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6genEta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6genHTT___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_4genM___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_7genMass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6genPhi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5genpT___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5genpX___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5genpY___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_9isGtautau___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6isWenu___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_7isWmunu___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_8isWtaunu___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5isZee___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_7isZmumu___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_9isZtautau___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6isdata___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_7isembed___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5j1csv___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16j1csvWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5j1eta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16j1etaWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_14j1hadronflavor___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_25j1hadronflavorWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5j1phi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16j1phiWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_4j1pt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_15j1ptWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_23j1ptWoNoisyJets_JERDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_21j1ptWoNoisyJets_JERUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_31j1ptWoNoisyJets_JetAbsoluteDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_29j1ptWoNoisyJets_JetAbsoluteUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35j1ptWoNoisyJets_JetAbsoluteyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_33j1ptWoNoisyJets_JetAbsoluteyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_28j1ptWoNoisyJets_JetBBEC1Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_26j1ptWoNoisyJets_JetBBEC1Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32j1ptWoNoisyJets_JetBBEC1yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_30j1ptWoNoisyJets_JetBBEC1yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_26j1ptWoNoisyJets_JetEC2Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_24j1ptWoNoisyJets_JetEC2Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_30j1ptWoNoisyJets_JetEC2yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_28j1ptWoNoisyJets_JetEC2yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32j1ptWoNoisyJets_JetFlavorQCDDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_30j1ptWoNoisyJets_JetFlavorQCDUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_25j1ptWoNoisyJets_JetHFDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_23j1ptWoNoisyJets_JetHFUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_29j1ptWoNoisyJets_JetHFyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_27j1ptWoNoisyJets_JetHFyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34j1ptWoNoisyJets_JetRelativeBalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32j1ptWoNoisyJets_JetRelativeBalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_37j1ptWoNoisyJets_JetRelativeSampleDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35j1ptWoNoisyJets_JetRelativeSampleUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5j2csv___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16j2csvWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5j2eta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16j2etaWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_14j2hadronflavor___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_25j2hadronflavorWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5j2phi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16j2phiWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_4j2pt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_15j2ptWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_23j2ptWoNoisyJets_JERDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_21j2ptWoNoisyJets_JERUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_31j2ptWoNoisyJets_JetAbsoluteDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_29j2ptWoNoisyJets_JetAbsoluteUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35j2ptWoNoisyJets_JetAbsoluteyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_33j2ptWoNoisyJets_JetAbsoluteyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_28j2ptWoNoisyJets_JetBBEC1Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_26j2ptWoNoisyJets_JetBBEC1Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32j2ptWoNoisyJets_JetBBEC1yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_30j2ptWoNoisyJets_JetBBEC1yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_26j2ptWoNoisyJets_JetEC2Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_24j2ptWoNoisyJets_JetEC2Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_30j2ptWoNoisyJets_JetEC2yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_28j2ptWoNoisyJets_JetEC2yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32j2ptWoNoisyJets_JetFlavorQCDDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_30j2ptWoNoisyJets_JetFlavorQCDUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_25j2ptWoNoisyJets_JetHFDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_23j2ptWoNoisyJets_JetHFUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_29j2ptWoNoisyJets_JetHFyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_27j2ptWoNoisyJets_JetHFyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34j2ptWoNoisyJets_JetRelativeBalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32j2ptWoNoisyJets_JetRelativeBalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_37j2ptWoNoisyJets_JetRelativeSampleDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35j2ptWoNoisyJets_JetRelativeSampleUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11jb1eta_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11jb1eta_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11jb1eta_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20jb1hadronflavor_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20jb1hadronflavor_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20jb1hadronflavor_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11jb1phi_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11jb1phi_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11jb1phi_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10jb1pt_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10jb1pt_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10jb1pt_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11jb2eta_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11jb2eta_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11jb2eta_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20jb2hadronflavor_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20jb2hadronflavor_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20jb2hadronflavor_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11jb2phi_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11jb2phi_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11jb2phi_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10jb2pt_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10jb2pt_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10jb2pt_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_9jetVeto20___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20jetVeto20WoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_9jetVeto30___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20jetVeto30WoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_28jetVeto30WoNoisyJets_JERDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_26jetVeto30WoNoisyJets_JERUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_36jetVeto30WoNoisyJets_JetAbsoluteDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34jetVeto30WoNoisyJets_JetAbsoluteUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_40jetVeto30WoNoisyJets_JetAbsoluteyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_38jetVeto30WoNoisyJets_JetAbsoluteyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetBBEC1Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetBBEC1Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_37jetVeto30WoNoisyJets_JetBBEC1yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetBBEC1yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetEC2Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_29jetVeto30WoNoisyJets_JetEC2Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetEC2yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetEC2yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_37jetVeto30WoNoisyJets_JetFlavorQCDDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetFlavorQCDUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_30jetVeto30WoNoisyJets_JetHFDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_28jetVeto30WoNoisyJets_JetHFUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34jetVeto30WoNoisyJets_JetHFyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32jetVeto30WoNoisyJets_JetHFyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_50jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_48jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_42jetVeto30WoNoisyJets_JetRelativeSampleDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_40jetVeto30WoNoisyJets_JetRelativeSampleUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetTotalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetTotalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_4lumi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_7mCharge___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_15mComesFromHiggs___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_4mEta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10mGenCharge___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34mGenDirectPromptTauDecayFinalState___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10mGenEnergy___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_7mGenEta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12mGenIsPrompt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_15mGenMotherPdgId___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12mGenParticle___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_9mGenPdgId___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_7mGenPhi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10mGenPrompt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20mGenPromptFinalState___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_18mGenPromptTauDecay___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6mGenPt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12mGenTauDecay___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6mGenVZ___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_14mGenVtxPVMatch___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5mIP3D___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_8mIP3DErr___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_9mIsGlobal___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_9mIsPFMuon___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10mIsTracker___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_8mJetArea___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_8mJetBtag___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6mJetDR___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16mJetEtaEtaMoment___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16mJetEtaPhiMoment___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16mJetEtaPhiSpread___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_17mJetHadronFlavour___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_14mJetPFCISVBtag___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_17mJetPartonFlavour___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16mJetPhiPhiMoment___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6mJetPt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5mMass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_24mMatchEmbeddedFilterMu24___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_24mMatchEmbeddedFilterMu27___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_21mMatchesIsoMu24Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_19mMatchesIsoMu24Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_21mMatchesIsoMu27Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_19mMatchesIsoMu27Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_23mMatchesMu23e12DZFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_21mMatchesMu23e12DZPath___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_21mMatchesMu23e12Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_19mMatchesMu23e12Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_22mMatchesMu8e23DZFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20mMatchesMu8e23DZPath___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_20mMatchesMu8e23Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_18mMatchesMu8e23Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10mPFIDLoose___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11mPFIDMedium___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10mPFIDTight___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6mPVDXY___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5mPVDZ___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_4mPhi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_3mPt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_21mRelPFIsoDBDefaultR04___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6mSIP2D___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6mSIP3D___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_3mVZ___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_15mZTTGenMatching___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_13mu12e23DZPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11mu12e23Pass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_13mu23e12DZPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11mu23e12Pass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12mu8e23DZPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10mu8e23Pass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16muGlbIsoVetoPt10___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_17muVetoZTTp001dxyz___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_7nTruePU___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5npNLO___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10numGenJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_4nvtx___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16prefiring_weight___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_21prefiring_weight_down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_19prefiring_weight_up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_9processID___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10puppiMetEt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11puppiMetPhi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6pvChi2___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_4pvDX___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_4pvDY___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_4pvDZ___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_8pvIsFake___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_9pvIsValid___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10pvNormChi2___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5pvRho___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_3pvX___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_3pvY___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_3pvZ___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_6pvndof___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12recoilDaught___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_13recoilWithMet___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_3rho___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_3run___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_24singleE25eta2p1TightPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_24tauVetoPt20LooseMVALTVtx___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_16tauVetoPtDeepVtx___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11topQuarkPt1___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_11topQuarkPt2___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_13type1_pfMetEt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_14type1_pfMetPhi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JERDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_28type1_pfMet_shiftedPhi_JERUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_38type1_pfMet_shiftedPhi_JetAbsoluteDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPhi_JetAbsoluteUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_42type1_pfMet_shiftedPhi_JetAbsoluteyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_40type1_pfMet_shiftedPhi_JetAbsoluteyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetBBEC1Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetBBEC1Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetBBEC1yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetBBEC1yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetEC2Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPhi_JetEC2Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetEC2yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetEC2yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_JetEnDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JetEnUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetFlavorQCDDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetFlavorQCDUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_JetHFDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JetHFUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPhi_JetHFyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_JetHFyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_41type1_pfMet_shiftedPhi_JetRelativeBalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetRelativeBalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_44type1_pfMet_shiftedPhi_JetRelativeSampleDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_42type1_pfMet_shiftedPhi_JetRelativeSampleUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetResDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPhi_JetResUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetTotalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetTotalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_UesCHARGEDDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_UesCHARGEDUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_UesECALDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesECALUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_UesHCALDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesHCALUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesHFDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_UesHFUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_40type1_pfMet_shiftedPhi_UnclusteredEnDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_38type1_pfMet_shiftedPhi_UnclusteredEnUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JERDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_27type1_pfMet_shiftedPt_JERUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPt_JetAbsoluteDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPt_JetAbsoluteUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_41type1_pfMet_shiftedPt_JetAbsoluteyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_39type1_pfMet_shiftedPt_JetAbsoluteyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetBBEC1Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetBBEC1Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetBBEC1yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetBBEC1yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetEC2Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPt_JetEC2Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetEC2yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetEC2yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPt_JetEnDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JetEnUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetFlavorQCDDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetFlavorQCDUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPt_JetHFDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JetHFUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPt_JetHFyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPt_JetHFyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_40type1_pfMet_shiftedPt_JetRelativeBalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetRelativeBalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_43type1_pfMet_shiftedPt_JetRelativeSampleDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_41type1_pfMet_shiftedPt_JetRelativeSampleUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetResDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPt_JetResUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetTotalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetTotalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPt_UesCHARGEDDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPt_UesCHARGEDUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPt_UesECALDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesECALUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPt_UesHCALDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesHCALUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesHFDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_29type1_pfMet_shiftedPt_UesHFUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_39type1_pfMet_shiftedPt_UnclusteredEnDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPt_UnclusteredEnUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_7vbfDeta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12vbfJetVeto20___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_12vbfJetVeto30___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_7vbfMass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_18vbfMassWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_26vbfMassWoNoisyJets_JERDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_24vbfMassWoNoisyJets_JERUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_34vbfMassWoNoisyJets_JetAbsoluteDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32vbfMassWoNoisyJets_JetAbsoluteUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_38vbfMassWoNoisyJets_JetAbsoluteyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_36vbfMassWoNoisyJets_JetAbsoluteyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetBBEC1Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetBBEC1Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetBBEC1yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetBBEC1yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetEC2Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_27vbfMassWoNoisyJets_JetEC2Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetEC2yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetEC2yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetFlavorQCDDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetFlavorQCDUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_28vbfMassWoNoisyJets_JetHFDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_26vbfMassWoNoisyJets_JetHFUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_32vbfMassWoNoisyJets_JetHFyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_30vbfMassWoNoisyJets_JetHFyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_37vbfMassWoNoisyJets_JetRelativeBalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetRelativeBalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_40vbfMassWoNoisyJets_JetRelativeSampleDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_38vbfMassWoNoisyJets_JetRelativeSampleUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetTotalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetTotalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10vbfNJets20___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10vbfNJets30___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_8vbfj1eta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_7vbfj1pt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_8vbfj2eta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_7vbfj2pt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5vispX___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_5vispY___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_3idx___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10complained___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static int __pyx_pf_6EMTree_6EMTree_10complained_2__set__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_6EMTree_6EMTree_10complained_4__del__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6EMTree_EMTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6EMTree_6EMTree_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6EMTree_EMTree *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_tp_new_6EMTree_EMTree(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6EMTree___pyx_scope_struct____iter__(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6EMTree___pyx_scope_struct_1_where(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__13;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__27;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__29;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__31;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__33;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__35;
static PyObject *__pyx_tuple__36;
static PyObject *__pyx_tuple__37;
static PyObject *__pyx_tuple__38;
static PyObject *__pyx_tuple__39;
static PyObject *__pyx_tuple__40;
static PyObject *__pyx_tuple__41;
static PyObject *__pyx_tuple__42;
static PyObject *__pyx_tuple__43;
static PyObject *__pyx_tuple__44;
static PyObject *__pyx_tuple__45;
static PyObject *__pyx_tuple__46;
static PyObject *__pyx_tuple__47;
static PyObject *__pyx_tuple__48;
static PyObject *__pyx_tuple__49;
static PyObject *__pyx_tuple__50;
static PyObject *__pyx_tuple__51;
static PyObject *__pyx_tuple__52;
static PyObject *__pyx_tuple__53;
static PyObject *__pyx_tuple__54;
static PyObject *__pyx_tuple__55;
static PyObject *__pyx_tuple__56;
static PyObject *__pyx_tuple__57;
static PyObject *__pyx_tuple__58;
static PyObject *__pyx_tuple__59;
static PyObject *__pyx_tuple__60;
static PyObject *__pyx_tuple__61;
static PyObject *__pyx_tuple__62;
static PyObject *__pyx_tuple__63;
static PyObject *__pyx_tuple__64;
static PyObject *__pyx_tuple__65;
static PyObject *__pyx_tuple__66;
static PyObject *__pyx_tuple__67;
static PyObject *__pyx_tuple__68;
static PyObject *__pyx_tuple__69;
static PyObject *__pyx_tuple__70;
static PyObject *__pyx_tuple__71;
static PyObject *__pyx_tuple__72;
static PyObject *__pyx_tuple__73;
static PyObject *__pyx_tuple__74;
static PyObject *__pyx_tuple__75;
static PyObject *__pyx_tuple__76;
static PyObject *__pyx_tuple__77;
static PyObject *__pyx_tuple__78;
static PyObject *__pyx_tuple__79;
static PyObject *__pyx_tuple__80;
static PyObject *__pyx_tuple__81;
static PyObject *__pyx_tuple__82;
static PyObject *__pyx_tuple__83;
static PyObject *__pyx_tuple__84;
static PyObject *__pyx_tuple__85;
static PyObject *__pyx_tuple__86;
static PyObject *__pyx_tuple__87;
static PyObject *__pyx_tuple__88;
static PyObject *__pyx_tuple__89;
static PyObject *__pyx_tuple__90;
static PyObject *__pyx_tuple__91;
static PyObject *__pyx_tuple__92;
static PyObject *__pyx_tuple__93;
static PyObject *__pyx_tuple__94;
static PyObject *__pyx_tuple__95;
static PyObject *__pyx_tuple__96;
static PyObject *__pyx_tuple__97;
static PyObject *__pyx_tuple__98;
static PyObject *__pyx_tuple__99;
static PyObject *__pyx_tuple__100;
static PyObject *__pyx_tuple__101;
static PyObject *__pyx_tuple__102;
static PyObject *__pyx_tuple__103;
static PyObject *__pyx_tuple__104;
static PyObject *__pyx_tuple__105;
static PyObject *__pyx_tuple__106;
static PyObject *__pyx_tuple__107;
static PyObject *__pyx_tuple__108;
static PyObject *__pyx_tuple__109;
static PyObject *__pyx_tuple__110;
static PyObject *__pyx_tuple__111;
static PyObject *__pyx_tuple__112;
static PyObject *__pyx_tuple__113;
static PyObject *__pyx_tuple__114;
static PyObject *__pyx_tuple__115;
static PyObject *__pyx_tuple__116;
static PyObject *__pyx_tuple__117;
static PyObject *__pyx_tuple__118;
static PyObject *__pyx_tuple__119;
static PyObject *__pyx_tuple__120;
static PyObject *__pyx_tuple__121;
static PyObject *__pyx_tuple__122;
static PyObject *__pyx_tuple__123;
static PyObject *__pyx_tuple__124;
static PyObject *__pyx_tuple__125;
static PyObject *__pyx_tuple__126;
static PyObject *__pyx_tuple__127;
static PyObject *__pyx_tuple__128;
static PyObject *__pyx_tuple__129;
static PyObject *__pyx_tuple__130;
static PyObject *__pyx_tuple__131;
static PyObject *__pyx_tuple__132;
static PyObject *__pyx_tuple__133;
static PyObject *__pyx_tuple__134;
static PyObject *__pyx_tuple__135;
static PyObject *__pyx_tuple__136;
static PyObject *__pyx_tuple__137;
static PyObject *__pyx_tuple__138;
static PyObject *__pyx_tuple__139;
static PyObject *__pyx_tuple__140;
static PyObject *__pyx_tuple__141;
static PyObject *__pyx_tuple__142;
static PyObject *__pyx_tuple__143;
static PyObject *__pyx_tuple__144;
static PyObject *__pyx_tuple__145;
static PyObject *__pyx_tuple__146;
static PyObject *__pyx_tuple__147;
static PyObject *__pyx_tuple__148;
static PyObject *__pyx_tuple__149;
static PyObject *__pyx_tuple__150;
static PyObject *__pyx_tuple__151;
static PyObject *__pyx_tuple__152;
static PyObject *__pyx_tuple__153;
static PyObject *__pyx_tuple__154;
static PyObject *__pyx_tuple__155;
static PyObject *__pyx_tuple__156;
static PyObject *__pyx_tuple__157;
static PyObject *__pyx_tuple__158;
static PyObject *__pyx_tuple__159;
static PyObject *__pyx_tuple__160;
static PyObject *__pyx_tuple__161;
static PyObject *__pyx_tuple__162;
static PyObject *__pyx_tuple__163;
static PyObject *__pyx_tuple__164;
static PyObject *__pyx_tuple__165;
static PyObject *__pyx_tuple__166;
static PyObject *__pyx_tuple__167;
static PyObject *__pyx_tuple__168;
static PyObject *__pyx_tuple__169;
static PyObject *__pyx_tuple__170;
static PyObject *__pyx_tuple__171;
static PyObject *__pyx_tuple__172;
static PyObject *__pyx_tuple__173;
static PyObject *__pyx_tuple__174;
static PyObject *__pyx_tuple__175;
static PyObject *__pyx_tuple__176;
static PyObject *__pyx_tuple__177;
static PyObject *__pyx_tuple__178;
static PyObject *__pyx_tuple__179;
static PyObject *__pyx_tuple__180;
static PyObject *__pyx_tuple__181;
static PyObject *__pyx_tuple__182;
static PyObject *__pyx_tuple__183;
static PyObject *__pyx_tuple__184;
static PyObject *__pyx_tuple__185;
static PyObject *__pyx_tuple__186;
static PyObject *__pyx_tuple__187;
static PyObject *__pyx_tuple__188;
static PyObject *__pyx_tuple__189;
static PyObject *__pyx_tuple__190;
static PyObject *__pyx_tuple__191;
static PyObject *__pyx_tuple__192;
static PyObject *__pyx_tuple__193;
static PyObject *__pyx_tuple__194;
static PyObject *__pyx_tuple__195;
static PyObject *__pyx_tuple__196;
static PyObject *__pyx_tuple__197;
static PyObject *__pyx_tuple__198;
static PyObject *__pyx_tuple__199;
static PyObject *__pyx_tuple__200;
static PyObject *__pyx_tuple__201;
static PyObject *__pyx_tuple__202;
static PyObject *__pyx_tuple__203;
static PyObject *__pyx_tuple__204;
static PyObject *__pyx_tuple__205;
static PyObject *__pyx_tuple__206;
static PyObject *__pyx_tuple__207;
static PyObject *__pyx_tuple__208;
static PyObject *__pyx_tuple__209;
static PyObject *__pyx_tuple__210;
static PyObject *__pyx_tuple__211;
static PyObject *__pyx_tuple__212;
static PyObject *__pyx_tuple__213;
static PyObject *__pyx_tuple__214;
static PyObject *__pyx_tuple__215;
static PyObject *__pyx_tuple__216;
static PyObject *__pyx_tuple__217;
static PyObject *__pyx_tuple__218;
static PyObject *__pyx_tuple__219;
static PyObject *__pyx_tuple__220;
static PyObject *__pyx_tuple__221;
static PyObject *__pyx_tuple__222;
static PyObject *__pyx_tuple__223;
static PyObject *__pyx_tuple__224;
static PyObject *__pyx_tuple__225;
static PyObject *__pyx_tuple__226;
static PyObject *__pyx_tuple__227;
static PyObject *__pyx_tuple__228;
static PyObject *__pyx_tuple__229;
static PyObject *__pyx_tuple__230;
static PyObject *__pyx_tuple__231;
static PyObject *__pyx_tuple__232;
static PyObject *__pyx_tuple__233;
static PyObject *__pyx_tuple__234;
static PyObject *__pyx_tuple__235;
static PyObject *__pyx_tuple__236;
static PyObject *__pyx_tuple__237;
static PyObject *__pyx_tuple__238;
static PyObject *__pyx_tuple__239;
static PyObject *__pyx_tuple__240;
static PyObject *__pyx_tuple__241;
static PyObject *__pyx_tuple__242;
static PyObject *__pyx_tuple__243;
static PyObject *__pyx_tuple__244;
static PyObject *__pyx_tuple__245;
static PyObject *__pyx_tuple__246;
static PyObject *__pyx_tuple__247;
static PyObject *__pyx_tuple__248;
static PyObject *__pyx_tuple__249;
static PyObject *__pyx_tuple__250;
static PyObject *__pyx_tuple__251;
static PyObject *__pyx_tuple__252;
static PyObject *__pyx_tuple__253;
static PyObject *__pyx_tuple__254;
static PyObject *__pyx_tuple__255;
static PyObject *__pyx_tuple__256;
static PyObject *__pyx_tuple__257;
static PyObject *__pyx_tuple__258;
static PyObject *__pyx_tuple__259;
static PyObject *__pyx_tuple__260;
static PyObject *__pyx_tuple__261;
static PyObject *__pyx_tuple__262;
static PyObject *__pyx_tuple__263;
static PyObject *__pyx_tuple__264;
static PyObject *__pyx_tuple__265;
static PyObject *__pyx_tuple__266;
static PyObject *__pyx_tuple__267;
static PyObject *__pyx_tuple__268;
static PyObject *__pyx_tuple__269;
static PyObject *__pyx_tuple__270;
static PyObject *__pyx_tuple__271;
static PyObject *__pyx_tuple__272;
static PyObject *__pyx_tuple__273;
static PyObject *__pyx_tuple__274;
static PyObject *__pyx_tuple__275;
static PyObject *__pyx_tuple__276;
static PyObject *__pyx_tuple__277;
static PyObject *__pyx_tuple__278;
static PyObject *__pyx_tuple__279;
static PyObject *__pyx_tuple__280;
static PyObject *__pyx_tuple__281;
static PyObject *__pyx_tuple__282;
static PyObject *__pyx_tuple__283;
static PyObject *__pyx_tuple__284;
static PyObject *__pyx_tuple__285;
static PyObject *__pyx_tuple__286;
static PyObject *__pyx_tuple__287;
static PyObject *__pyx_tuple__288;
static PyObject *__pyx_tuple__289;
static PyObject *__pyx_tuple__290;
static PyObject *__pyx_tuple__291;
static PyObject *__pyx_tuple__292;
static PyObject *__pyx_tuple__293;
static PyObject *__pyx_tuple__294;
static PyObject *__pyx_tuple__295;
static PyObject *__pyx_tuple__296;
static PyObject *__pyx_tuple__297;
static PyObject *__pyx_tuple__298;
static PyObject *__pyx_tuple__299;
static PyObject *__pyx_tuple__300;
static PyObject *__pyx_tuple__301;
static PyObject *__pyx_tuple__302;
static PyObject *__pyx_tuple__303;
static PyObject *__pyx_tuple__304;
static PyObject *__pyx_tuple__305;
static PyObject *__pyx_tuple__306;
static PyObject *__pyx_tuple__307;
static PyObject *__pyx_tuple__308;
static PyObject *__pyx_tuple__309;
static PyObject *__pyx_tuple__310;
static PyObject *__pyx_tuple__311;
static PyObject *__pyx_tuple__312;
static PyObject *__pyx_tuple__313;
static PyObject *__pyx_tuple__314;
static PyObject *__pyx_tuple__315;
static PyObject *__pyx_tuple__316;
static PyObject *__pyx_tuple__317;
static PyObject *__pyx_tuple__318;
static PyObject *__pyx_tuple__319;
static PyObject *__pyx_tuple__320;
static PyObject *__pyx_tuple__321;
static PyObject *__pyx_tuple__322;
static PyObject *__pyx_tuple__323;
static PyObject *__pyx_tuple__324;
static PyObject *__pyx_tuple__325;
static PyObject *__pyx_tuple__326;
static PyObject *__pyx_tuple__327;
static PyObject *__pyx_tuple__328;
static PyObject *__pyx_tuple__329;
static PyObject *__pyx_tuple__330;
static PyObject *__pyx_tuple__331;
static PyObject *__pyx_tuple__332;
static PyObject *__pyx_tuple__333;
static PyObject *__pyx_tuple__334;
static PyObject *__pyx_tuple__335;
static PyObject *__pyx_tuple__336;
static PyObject *__pyx_tuple__337;
static PyObject *__pyx_tuple__338;
static PyObject *__pyx_tuple__339;
static PyObject *__pyx_tuple__340;
static PyObject *__pyx_tuple__341;
static PyObject *__pyx_tuple__342;
static PyObject *__pyx_tuple__343;
static PyObject *__pyx_tuple__344;
static PyObject *__pyx_tuple__345;
static PyObject *__pyx_tuple__346;
static PyObject *__pyx_tuple__347;
static PyObject *__pyx_tuple__348;
static PyObject *__pyx_tuple__349;
static PyObject *__pyx_tuple__350;
static PyObject *__pyx_tuple__351;
static PyObject *__pyx_tuple__352;
static PyObject *__pyx_tuple__353;
static PyObject *__pyx_tuple__354;
static PyObject *__pyx_tuple__355;
static PyObject *__pyx_tuple__356;
static PyObject *__pyx_tuple__357;
static PyObject *__pyx_tuple__358;
static PyObject *__pyx_tuple__359;
static PyObject *__pyx_tuple__360;
static PyObject *__pyx_tuple__361;
static PyObject *__pyx_tuple__362;
static PyObject *__pyx_tuple__363;
static PyObject *__pyx_tuple__364;
static PyObject *__pyx_tuple__365;
static PyObject *__pyx_tuple__366;
static PyObject *__pyx_tuple__367;
static PyObject *__pyx_tuple__368;
static PyObject *__pyx_tuple__369;
static PyObject *__pyx_tuple__370;
static PyObject *__pyx_tuple__371;
static PyObject *__pyx_tuple__372;
static PyObject *__pyx_tuple__373;
static PyObject *__pyx_tuple__374;
static PyObject *__pyx_tuple__375;
static PyObject *__pyx_tuple__376;
static PyObject *__pyx_tuple__377;
static PyObject *__pyx_tuple__378;
static PyObject *__pyx_tuple__379;
static PyObject *__pyx_tuple__380;
static PyObject *__pyx_tuple__381;
static PyObject *__pyx_tuple__382;
static PyObject *__pyx_tuple__383;
static PyObject *__pyx_tuple__384;
static PyObject *__pyx_tuple__385;
static PyObject *__pyx_tuple__386;
static PyObject *__pyx_tuple__387;
static PyObject *__pyx_tuple__388;
static PyObject *__pyx_tuple__389;
static PyObject *__pyx_tuple__390;
static PyObject *__pyx_tuple__391;
static PyObject *__pyx_tuple__392;
static PyObject *__pyx_tuple__393;
static PyObject *__pyx_tuple__394;
static PyObject *__pyx_tuple__395;
static PyObject *__pyx_tuple__396;
static PyObject *__pyx_tuple__397;
static PyObject *__pyx_tuple__398;
static PyObject *__pyx_tuple__399;
static PyObject *__pyx_tuple__400;
static PyObject *__pyx_tuple__401;
static PyObject *__pyx_tuple__402;
static PyObject *__pyx_tuple__403;
static PyObject *__pyx_tuple__404;
static PyObject *__pyx_tuple__405;
static PyObject *__pyx_tuple__406;
static PyObject *__pyx_tuple__407;
static PyObject *__pyx_tuple__408;
static PyObject *__pyx_tuple__409;
static PyObject *__pyx_tuple__410;
static PyObject *__pyx_tuple__411;
static PyObject *__pyx_tuple__412;
static PyObject *__pyx_tuple__413;
static PyObject *__pyx_tuple__414;
static PyObject *__pyx_tuple__415;
static PyObject *__pyx_tuple__416;
static PyObject *__pyx_tuple__417;
static PyObject *__pyx_tuple__418;
static PyObject *__pyx_tuple__419;
static PyObject *__pyx_tuple__420;
static PyObject *__pyx_tuple__421;
static PyObject *__pyx_tuple__422;
static PyObject *__pyx_tuple__423;
static PyObject *__pyx_tuple__424;
static PyObject *__pyx_tuple__425;
static PyObject *__pyx_tuple__426;
static PyObject *__pyx_tuple__427;
static PyObject *__pyx_tuple__428;
static PyObject *__pyx_tuple__429;
static PyObject *__pyx_tuple__430;
static PyObject *__pyx_tuple__431;
static PyObject *__pyx_tuple__432;
static PyObject *__pyx_tuple__433;
static PyObject *__pyx_tuple__434;
static PyObject *__pyx_tuple__435;
static PyObject *__pyx_tuple__436;
static PyObject *__pyx_tuple__437;
static PyObject *__pyx_tuple__438;
static PyObject *__pyx_tuple__439;
static PyObject *__pyx_tuple__440;
static PyObject *__pyx_tuple__441;
static PyObject *__pyx_tuple__442;
static PyObject *__pyx_tuple__443;
static PyObject *__pyx_tuple__444;
static PyObject *__pyx_tuple__445;
static PyObject *__pyx_tuple__446;
static PyObject *__pyx_tuple__447;
static PyObject *__pyx_tuple__448;
static PyObject *__pyx_tuple__449;
static PyObject *__pyx_tuple__450;
static PyObject *__pyx_tuple__451;
static PyObject *__pyx_tuple__452;
static PyObject *__pyx_tuple__453;
static PyObject *__pyx_tuple__454;
static PyObject *__pyx_tuple__455;
static PyObject *__pyx_tuple__456;
static PyObject *__pyx_tuple__457;
static PyObject *__pyx_tuple__458;
static PyObject *__pyx_tuple__459;
static PyObject *__pyx_tuple__460;
static PyObject *__pyx_tuple__461;
static PyObject *__pyx_tuple__462;
static PyObject *__pyx_tuple__463;
static PyObject *__pyx_tuple__464;
static PyObject *__pyx_tuple__465;
static PyObject *__pyx_tuple__466;
static PyObject *__pyx_tuple__467;
static PyObject *__pyx_tuple__468;
static PyObject *__pyx_tuple__469;
static PyObject *__pyx_tuple__470;
static PyObject *__pyx_tuple__471;
static PyObject *__pyx_tuple__472;
static PyObject *__pyx_tuple__473;
static PyObject *__pyx_tuple__474;
static PyObject *__pyx_tuple__475;
static PyObject *__pyx_tuple__476;
static PyObject *__pyx_tuple__477;
static PyObject *__pyx_tuple__478;
static PyObject *__pyx_tuple__479;
static PyObject *__pyx_tuple__480;
static PyObject *__pyx_tuple__481;
static PyObject *__pyx_tuple__482;
static PyObject *__pyx_tuple__483;
static PyObject *__pyx_tuple__484;
static PyObject *__pyx_tuple__485;
static PyObject *__pyx_tuple__486;
static PyObject *__pyx_tuple__487;
static PyObject *__pyx_tuple__488;
static PyObject *__pyx_tuple__489;
static PyObject *__pyx_tuple__490;
static PyObject *__pyx_tuple__491;
static PyObject *__pyx_tuple__492;
static PyObject *__pyx_tuple__493;
static PyObject *__pyx_tuple__494;
static PyObject *__pyx_tuple__495;
static PyObject *__pyx_tuple__496;
static PyObject *__pyx_tuple__497;
static PyObject *__pyx_tuple__498;
static PyObject *__pyx_tuple__499;
static PyObject *__pyx_tuple__500;
static PyObject *__pyx_tuple__501;
static PyObject *__pyx_tuple__502;
static PyObject *__pyx_tuple__503;
static PyObject *__pyx_tuple__504;
static PyObject *__pyx_tuple__505;
static PyObject *__pyx_tuple__506;
static PyObject *__pyx_tuple__507;
static PyObject *__pyx_tuple__508;
static PyObject *__pyx_tuple__509;
static PyObject *__pyx_tuple__510;
static PyObject *__pyx_tuple__511;
static PyObject *__pyx_tuple__512;
static PyObject *__pyx_tuple__513;
static PyObject *__pyx_tuple__514;
static PyObject *__pyx_tuple__515;
static PyObject *__pyx_tuple__516;
static PyObject *__pyx_tuple__517;
static PyObject *__pyx_tuple__518;
static PyObject *__pyx_tuple__519;
static PyObject *__pyx_tuple__520;
static PyObject *__pyx_tuple__521;
static PyObject *__pyx_tuple__522;
static PyObject *__pyx_codeobj__523;
/* Late includes */

/* "EMTree.pyx":38
 * from cpython cimport PyCObject_AsVoidPtr
 * import warnings
 * def my_warning_format(message, category, filename, lineno, line=""):             # <<<<<<<<<<<<<<
 *     return "%s:%s\n" % (category.__name__, message)
 * warnings.formatwarning = my_warning_format
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_1my_warning_format(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6EMTree_1my_warning_format = {"my_warning_format", (PyCFunction)__pyx_pw_6EMTree_1my_warning_format, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_6EMTree_1my_warning_format(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_message = 0;
  PyObject *__pyx_v_category = 0;
  CYTHON_UNUSED PyObject *__pyx_v_filename = 0;
  CYTHON_UNUSED PyObject *__pyx_v_lineno = 0;
  CYTHON_UNUSED PyObject *__pyx_v_line = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("my_warning_format (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_message,&__pyx_n_s_category,&__pyx_n_s_filename,&__pyx_n_s_lineno,&__pyx_n_s_line,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[4] = ((PyObject *)__pyx_kp_s_);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_message)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_category)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("my_warning_format", 0, 4, 5, 1); __PYX_ERR(0, 38, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_filename)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("my_warning_format", 0, 4, 5, 2); __PYX_ERR(0, 38, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lineno)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("my_warning_format", 0, 4, 5, 3); __PYX_ERR(0, 38, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_line);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "my_warning_format") < 0)) __PYX_ERR(0, 38, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_message = values[0];
    __pyx_v_category = values[1];
    __pyx_v_filename = values[2];
    __pyx_v_lineno = values[3];
    __pyx_v_line = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("my_warning_format", 0, 4, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 38, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("EMTree.my_warning_format", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6EMTree_my_warning_format(__pyx_self, __pyx_v_message, __pyx_v_category, __pyx_v_filename, __pyx_v_lineno, __pyx_v_line);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_my_warning_format(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_message, PyObject *__pyx_v_category, CYTHON_UNUSED PyObject *__pyx_v_filename, CYTHON_UNUSED PyObject *__pyx_v_lineno, CYTHON_UNUSED PyObject *__pyx_v_line) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("my_warning_format", 0);

  /* "EMTree.pyx":39
 * import warnings
 * def my_warning_format(message, category, filename, lineno, line=""):
 *     return "%s:%s\n" % (category.__name__, message)             # <<<<<<<<<<<<<<
 * warnings.formatwarning = my_warning_format
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_category, __pyx_n_s_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_message);
  __Pyx_GIVEREF(__pyx_v_message);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_message);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_s_s, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":38
 * from cpython cimport PyCObject_AsVoidPtr
 * import warnings
 * def my_warning_format(message, category, filename, lineno, line=""):             # <<<<<<<<<<<<<<
 *     return "%s:%s\n" % (category.__name__, message)
 * warnings.formatwarning = my_warning_format
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("EMTree.my_warning_format", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":1610
 * 
 * 
 *     def __cinit__(self, ttree):             # <<<<<<<<<<<<<<
 *         #print "cinit"
 *         # Constructor from a ROOT.TTree
 */

/* Python wrapper */
static int __pyx_pw_6EMTree_6EMTree_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6EMTree_6EMTree_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ttree = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ttree,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ttree)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1610, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ttree = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1610, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("EMTree.EMTree.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6EMTree_6EMTree___cinit__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self), __pyx_v_ttree);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6EMTree_6EMTree___cinit__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self, PyObject *__pyx_v_ttree) {
  PyObject *__pyx_v_AsCObject = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  void *__pyx_t_5;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "EMTree.pyx":1613
 *         #print "cinit"
 *         # Constructor from a ROOT.TTree
 *         from ROOT import AsCObject             # <<<<<<<<<<<<<<
 *         self.tree = <TTree*>PyCObject_AsVoidPtr(AsCObject(ttree))
 *         self.ientry = 0
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1613, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_AsCObject);
  __Pyx_GIVEREF(__pyx_n_s_AsCObject);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_AsCObject);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_ROOT, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1613, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_AsCObject); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1613, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_AsCObject = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "EMTree.pyx":1614
 *         # Constructor from a ROOT.TTree
 *         from ROOT import AsCObject
 *         self.tree = <TTree*>PyCObject_AsVoidPtr(AsCObject(ttree))             # <<<<<<<<<<<<<<
 *         self.ientry = 0
 *         self.currentTreeNumber = -1
 */
  __Pyx_INCREF(__pyx_v_AsCObject);
  __pyx_t_1 = __pyx_v_AsCObject; __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_ttree); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1614, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_v_ttree};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1614, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[2] = {__pyx_t_3, __pyx_v_ttree};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1614, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1614, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(__pyx_v_ttree);
      __Pyx_GIVEREF(__pyx_v_ttree);
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_ttree);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1614, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_5 = PyCObject_AsVoidPtr(__pyx_t_2); if (unlikely(__pyx_t_5 == ((void *)NULL) && PyErr_Occurred())) __PYX_ERR(0, 1614, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_self->tree = ((TTree *)__pyx_t_5);

  /* "EMTree.pyx":1615
 *         from ROOT import AsCObject
 *         self.tree = <TTree*>PyCObject_AsVoidPtr(AsCObject(ttree))
 *         self.ientry = 0             # <<<<<<<<<<<<<<
 *         self.currentTreeNumber = -1
 *         #print self.tree.GetEntries()
 */
  __pyx_v_self->ientry = 0;

  /* "EMTree.pyx":1616
 *         self.tree = <TTree*>PyCObject_AsVoidPtr(AsCObject(ttree))
 *         self.ientry = 0
 *         self.currentTreeNumber = -1             # <<<<<<<<<<<<<<
 *         #print self.tree.GetEntries()
 *         #self.load_entry(0)
 */
  __pyx_v_self->currentTreeNumber = -1;

  /* "EMTree.pyx":1619
 *         #print self.tree.GetEntries()
 *         #self.load_entry(0)
 *         self.complained = set([])             # <<<<<<<<<<<<<<
 * 
 *     cdef load_entry(self, long i):
 */
  __pyx_t_2 = PySet_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1619, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->complained);
  __Pyx_DECREF(__pyx_v_self->complained);
  __pyx_v_self->complained = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "EMTree.pyx":1610
 * 
 * 
 *     def __cinit__(self, ttree):             # <<<<<<<<<<<<<<
 *         #print "cinit"
 *         # Constructor from a ROOT.TTree
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("EMTree.EMTree.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_AsCObject);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":1621
 *         self.complained = set([])
 * 
 *     cdef load_entry(self, long i):             # <<<<<<<<<<<<<<
 *         #print "load", i
 *         # Load the correct tree and setup the branches
 */

static PyObject *__pyx_f_6EMTree_6EMTree_load_entry(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self, long __pyx_v_i) {
  TTree *__pyx_v_new_tree;
  int __pyx_v_treenum;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("load_entry", 0);

  /* "EMTree.pyx":1624
 *         #print "load", i
 *         # Load the correct tree and setup the branches
 *         self.localentry = self.tree.LoadTree(i)             # <<<<<<<<<<<<<<
 *         #print "local", self.localentry
 *         new_tree = self.tree.GetTree()
 */
  __pyx_v_self->localentry = __pyx_v_self->tree->LoadTree(__pyx_v_i);

  /* "EMTree.pyx":1626
 *         self.localentry = self.tree.LoadTree(i)
 *         #print "local", self.localentry
 *         new_tree = self.tree.GetTree()             # <<<<<<<<<<<<<<
 *         #print "tree", <long>(new_tree)
 *         treenum = self.tree.GetTreeNumber()
 */
  __pyx_v_new_tree = __pyx_v_self->tree->GetTree();

  /* "EMTree.pyx":1628
 *         new_tree = self.tree.GetTree()
 *         #print "tree", <long>(new_tree)
 *         treenum = self.tree.GetTreeNumber()             # <<<<<<<<<<<<<<
 *         #print "num", treenum
 *         if treenum != self.currentTreeNumber or new_tree != self.currentTree:
 */
  __pyx_v_treenum = __pyx_v_self->tree->GetTreeNumber();

  /* "EMTree.pyx":1630
 *         treenum = self.tree.GetTreeNumber()
 *         #print "num", treenum
 *         if treenum != self.currentTreeNumber or new_tree != self.currentTree:             # <<<<<<<<<<<<<<
 *             #print "New tree!"
 *             self.currentTree = new_tree
 */
  __pyx_t_2 = ((__pyx_v_treenum != __pyx_v_self->currentTreeNumber) != 0);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = ((__pyx_v_new_tree != __pyx_v_self->currentTree) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1632
 *         if treenum != self.currentTreeNumber or new_tree != self.currentTree:
 *             #print "New tree!"
 *             self.currentTree = new_tree             # <<<<<<<<<<<<<<
 *             self.currentTreeNumber = treenum
 *             self.setup_branches(new_tree)
 */
    __pyx_v_self->currentTree = __pyx_v_new_tree;

    /* "EMTree.pyx":1633
 *             #print "New tree!"
 *             self.currentTree = new_tree
 *             self.currentTreeNumber = treenum             # <<<<<<<<<<<<<<
 *             self.setup_branches(new_tree)
 * 
 */
    __pyx_v_self->currentTreeNumber = __pyx_v_treenum;

    /* "EMTree.pyx":1634
 *             self.currentTree = new_tree
 *             self.currentTreeNumber = treenum
 *             self.setup_branches(new_tree)             # <<<<<<<<<<<<<<
 * 
 *     cdef setup_branches(self, TTree* the_tree):
 */
    __pyx_t_3 = ((struct __pyx_vtabstruct_6EMTree_EMTree *)__pyx_v_self->__pyx_vtab)->setup_branches(__pyx_v_self, __pyx_v_new_tree); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1634, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1630
 *         treenum = self.tree.GetTreeNumber()
 *         #print "num", treenum
 *         if treenum != self.currentTreeNumber or new_tree != self.currentTree:             # <<<<<<<<<<<<<<
 *             #print "New tree!"
 *             self.currentTree = new_tree
 */
  }

  /* "EMTree.pyx":1621
 *         self.complained = set([])
 * 
 *     cdef load_entry(self, long i):             # <<<<<<<<<<<<<<
 *         #print "load", i
 *         # Load the correct tree and setup the branches
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("EMTree.EMTree.load_entry", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":1636
 *             self.setup_branches(new_tree)
 * 
 *     cdef setup_branches(self, TTree* the_tree):             # <<<<<<<<<<<<<<
 *         #print "setup"
 * 
 */

static PyObject *__pyx_f_6EMTree_6EMTree_setup_branches(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self, TTree *__pyx_v_the_tree) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("setup_branches", 0);

  /* "EMTree.pyx":1640
 * 
 *         #print "making Ele24LooseHPSTau30Pass"
 *         self.Ele24LooseHPSTau30Pass_branch = the_tree.GetBranch("Ele24LooseHPSTau30Pass")             # <<<<<<<<<<<<<<
 *         #if not self.Ele24LooseHPSTau30Pass_branch and "Ele24LooseHPSTau30Pass" not in self.complained:
 *         if not self.Ele24LooseHPSTau30Pass_branch and "Ele24LooseHPSTau30Pass":
 */
  __pyx_v_self->Ele24LooseHPSTau30Pass_branch = __pyx_v_the_tree->GetBranch(((char *)"Ele24LooseHPSTau30Pass"));

  /* "EMTree.pyx":1642
 *         self.Ele24LooseHPSTau30Pass_branch = the_tree.GetBranch("Ele24LooseHPSTau30Pass")
 *         #if not self.Ele24LooseHPSTau30Pass_branch and "Ele24LooseHPSTau30Pass" not in self.complained:
 *         if not self.Ele24LooseHPSTau30Pass_branch and "Ele24LooseHPSTau30Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Ele24LooseHPSTau30Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ele24LooseHPSTau30Pass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Ele24LooseHPSTau30Pass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1643
 *         #if not self.Ele24LooseHPSTau30Pass_branch and "Ele24LooseHPSTau30Pass" not in self.complained:
 *         if not self.Ele24LooseHPSTau30Pass_branch and "Ele24LooseHPSTau30Pass":
 *             warnings.warn( "EMTree: Expected branch Ele24LooseHPSTau30Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ele24LooseHPSTau30Pass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1643, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1643, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1643, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1642
 *         self.Ele24LooseHPSTau30Pass_branch = the_tree.GetBranch("Ele24LooseHPSTau30Pass")
 *         #if not self.Ele24LooseHPSTau30Pass_branch and "Ele24LooseHPSTau30Pass" not in self.complained:
 *         if not self.Ele24LooseHPSTau30Pass_branch and "Ele24LooseHPSTau30Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Ele24LooseHPSTau30Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ele24LooseHPSTau30Pass")
 */
    goto __pyx_L3;
  }

  /* "EMTree.pyx":1646
 *             #self.complained.add("Ele24LooseHPSTau30Pass")
 *         else:
 *             self.Ele24LooseHPSTau30Pass_branch.SetAddress(<void*>&self.Ele24LooseHPSTau30Pass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Ele24LooseHPSTau30TightIDPass"
 */
  /*else*/ {
    __pyx_v_self->Ele24LooseHPSTau30Pass_branch->SetAddress(((void *)(&__pyx_v_self->Ele24LooseHPSTau30Pass_value)));
  }
  __pyx_L3:;

  /* "EMTree.pyx":1649
 * 
 *         #print "making Ele24LooseHPSTau30TightIDPass"
 *         self.Ele24LooseHPSTau30TightIDPass_branch = the_tree.GetBranch("Ele24LooseHPSTau30TightIDPass")             # <<<<<<<<<<<<<<
 *         #if not self.Ele24LooseHPSTau30TightIDPass_branch and "Ele24LooseHPSTau30TightIDPass" not in self.complained:
 *         if not self.Ele24LooseHPSTau30TightIDPass_branch and "Ele24LooseHPSTau30TightIDPass":
 */
  __pyx_v_self->Ele24LooseHPSTau30TightIDPass_branch = __pyx_v_the_tree->GetBranch(((char *)"Ele24LooseHPSTau30TightIDPass"));

  /* "EMTree.pyx":1651
 *         self.Ele24LooseHPSTau30TightIDPass_branch = the_tree.GetBranch("Ele24LooseHPSTau30TightIDPass")
 *         #if not self.Ele24LooseHPSTau30TightIDPass_branch and "Ele24LooseHPSTau30TightIDPass" not in self.complained:
 *         if not self.Ele24LooseHPSTau30TightIDPass_branch and "Ele24LooseHPSTau30TightIDPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Ele24LooseHPSTau30TightIDPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ele24LooseHPSTau30TightIDPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Ele24LooseHPSTau30TightIDPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L7_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L7_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1652
 *         #if not self.Ele24LooseHPSTau30TightIDPass_branch and "Ele24LooseHPSTau30TightIDPass" not in self.complained:
 *         if not self.Ele24LooseHPSTau30TightIDPass_branch and "Ele24LooseHPSTau30TightIDPass":
 *             warnings.warn( "EMTree: Expected branch Ele24LooseHPSTau30TightIDPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ele24LooseHPSTau30TightIDPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1652, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1652, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1652, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1651
 *         self.Ele24LooseHPSTau30TightIDPass_branch = the_tree.GetBranch("Ele24LooseHPSTau30TightIDPass")
 *         #if not self.Ele24LooseHPSTau30TightIDPass_branch and "Ele24LooseHPSTau30TightIDPass" not in self.complained:
 *         if not self.Ele24LooseHPSTau30TightIDPass_branch and "Ele24LooseHPSTau30TightIDPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Ele24LooseHPSTau30TightIDPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ele24LooseHPSTau30TightIDPass")
 */
    goto __pyx_L6;
  }

  /* "EMTree.pyx":1655
 *             #self.complained.add("Ele24LooseHPSTau30TightIDPass")
 *         else:
 *             self.Ele24LooseHPSTau30TightIDPass_branch.SetAddress(<void*>&self.Ele24LooseHPSTau30TightIDPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Ele24LooseTau30Pass"
 */
  /*else*/ {
    __pyx_v_self->Ele24LooseHPSTau30TightIDPass_branch->SetAddress(((void *)(&__pyx_v_self->Ele24LooseHPSTau30TightIDPass_value)));
  }
  __pyx_L6:;

  /* "EMTree.pyx":1658
 * 
 *         #print "making Ele24LooseTau30Pass"
 *         self.Ele24LooseTau30Pass_branch = the_tree.GetBranch("Ele24LooseTau30Pass")             # <<<<<<<<<<<<<<
 *         #if not self.Ele24LooseTau30Pass_branch and "Ele24LooseTau30Pass" not in self.complained:
 *         if not self.Ele24LooseTau30Pass_branch and "Ele24LooseTau30Pass":
 */
  __pyx_v_self->Ele24LooseTau30Pass_branch = __pyx_v_the_tree->GetBranch(((char *)"Ele24LooseTau30Pass"));

  /* "EMTree.pyx":1660
 *         self.Ele24LooseTau30Pass_branch = the_tree.GetBranch("Ele24LooseTau30Pass")
 *         #if not self.Ele24LooseTau30Pass_branch and "Ele24LooseTau30Pass" not in self.complained:
 *         if not self.Ele24LooseTau30Pass_branch and "Ele24LooseTau30Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Ele24LooseTau30Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ele24LooseTau30Pass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Ele24LooseTau30Pass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L10_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L10_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1661
 *         #if not self.Ele24LooseTau30Pass_branch and "Ele24LooseTau30Pass" not in self.complained:
 *         if not self.Ele24LooseTau30Pass_branch and "Ele24LooseTau30Pass":
 *             warnings.warn( "EMTree: Expected branch Ele24LooseTau30Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ele24LooseTau30Pass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1661, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1661, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1661, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1660
 *         self.Ele24LooseTau30Pass_branch = the_tree.GetBranch("Ele24LooseTau30Pass")
 *         #if not self.Ele24LooseTau30Pass_branch and "Ele24LooseTau30Pass" not in self.complained:
 *         if not self.Ele24LooseTau30Pass_branch and "Ele24LooseTau30Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Ele24LooseTau30Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ele24LooseTau30Pass")
 */
    goto __pyx_L9;
  }

  /* "EMTree.pyx":1664
 *             #self.complained.add("Ele24LooseTau30Pass")
 *         else:
 *             self.Ele24LooseTau30Pass_branch.SetAddress(<void*>&self.Ele24LooseTau30Pass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Ele24LooseTau30TightIDPass"
 */
  /*else*/ {
    __pyx_v_self->Ele24LooseTau30Pass_branch->SetAddress(((void *)(&__pyx_v_self->Ele24LooseTau30Pass_value)));
  }
  __pyx_L9:;

  /* "EMTree.pyx":1667
 * 
 *         #print "making Ele24LooseTau30TightIDPass"
 *         self.Ele24LooseTau30TightIDPass_branch = the_tree.GetBranch("Ele24LooseTau30TightIDPass")             # <<<<<<<<<<<<<<
 *         #if not self.Ele24LooseTau30TightIDPass_branch and "Ele24LooseTau30TightIDPass" not in self.complained:
 *         if not self.Ele24LooseTau30TightIDPass_branch and "Ele24LooseTau30TightIDPass":
 */
  __pyx_v_self->Ele24LooseTau30TightIDPass_branch = __pyx_v_the_tree->GetBranch(((char *)"Ele24LooseTau30TightIDPass"));

  /* "EMTree.pyx":1669
 *         self.Ele24LooseTau30TightIDPass_branch = the_tree.GetBranch("Ele24LooseTau30TightIDPass")
 *         #if not self.Ele24LooseTau30TightIDPass_branch and "Ele24LooseTau30TightIDPass" not in self.complained:
 *         if not self.Ele24LooseTau30TightIDPass_branch and "Ele24LooseTau30TightIDPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Ele24LooseTau30TightIDPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ele24LooseTau30TightIDPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Ele24LooseTau30TightIDPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L13_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L13_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1670
 *         #if not self.Ele24LooseTau30TightIDPass_branch and "Ele24LooseTau30TightIDPass" not in self.complained:
 *         if not self.Ele24LooseTau30TightIDPass_branch and "Ele24LooseTau30TightIDPass":
 *             warnings.warn( "EMTree: Expected branch Ele24LooseTau30TightIDPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ele24LooseTau30TightIDPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1670, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1670, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1670, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1669
 *         self.Ele24LooseTau30TightIDPass_branch = the_tree.GetBranch("Ele24LooseTau30TightIDPass")
 *         #if not self.Ele24LooseTau30TightIDPass_branch and "Ele24LooseTau30TightIDPass" not in self.complained:
 *         if not self.Ele24LooseTau30TightIDPass_branch and "Ele24LooseTau30TightIDPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Ele24LooseTau30TightIDPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ele24LooseTau30TightIDPass")
 */
    goto __pyx_L12;
  }

  /* "EMTree.pyx":1673
 *             #self.complained.add("Ele24LooseTau30TightIDPass")
 *         else:
 *             self.Ele24LooseTau30TightIDPass_branch.SetAddress(<void*>&self.Ele24LooseTau30TightIDPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Ele27WPTightPass"
 */
  /*else*/ {
    __pyx_v_self->Ele24LooseTau30TightIDPass_branch->SetAddress(((void *)(&__pyx_v_self->Ele24LooseTau30TightIDPass_value)));
  }
  __pyx_L12:;

  /* "EMTree.pyx":1676
 * 
 *         #print "making Ele27WPTightPass"
 *         self.Ele27WPTightPass_branch = the_tree.GetBranch("Ele27WPTightPass")             # <<<<<<<<<<<<<<
 *         #if not self.Ele27WPTightPass_branch and "Ele27WPTightPass" not in self.complained:
 *         if not self.Ele27WPTightPass_branch and "Ele27WPTightPass":
 */
  __pyx_v_self->Ele27WPTightPass_branch = __pyx_v_the_tree->GetBranch(((char *)"Ele27WPTightPass"));

  /* "EMTree.pyx":1678
 *         self.Ele27WPTightPass_branch = the_tree.GetBranch("Ele27WPTightPass")
 *         #if not self.Ele27WPTightPass_branch and "Ele27WPTightPass" not in self.complained:
 *         if not self.Ele27WPTightPass_branch and "Ele27WPTightPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Ele27WPTightPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ele27WPTightPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Ele27WPTightPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L16_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L16_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1679
 *         #if not self.Ele27WPTightPass_branch and "Ele27WPTightPass" not in self.complained:
 *         if not self.Ele27WPTightPass_branch and "Ele27WPTightPass":
 *             warnings.warn( "EMTree: Expected branch Ele27WPTightPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ele27WPTightPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1679, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1679, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1679, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1678
 *         self.Ele27WPTightPass_branch = the_tree.GetBranch("Ele27WPTightPass")
 *         #if not self.Ele27WPTightPass_branch and "Ele27WPTightPass" not in self.complained:
 *         if not self.Ele27WPTightPass_branch and "Ele27WPTightPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Ele27WPTightPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ele27WPTightPass")
 */
    goto __pyx_L15;
  }

  /* "EMTree.pyx":1682
 *             #self.complained.add("Ele27WPTightPass")
 *         else:
 *             self.Ele27WPTightPass_branch.SetAddress(<void*>&self.Ele27WPTightPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Ele32WPTightPass"
 */
  /*else*/ {
    __pyx_v_self->Ele27WPTightPass_branch->SetAddress(((void *)(&__pyx_v_self->Ele27WPTightPass_value)));
  }
  __pyx_L15:;

  /* "EMTree.pyx":1685
 * 
 *         #print "making Ele32WPTightPass"
 *         self.Ele32WPTightPass_branch = the_tree.GetBranch("Ele32WPTightPass")             # <<<<<<<<<<<<<<
 *         #if not self.Ele32WPTightPass_branch and "Ele32WPTightPass" not in self.complained:
 *         if not self.Ele32WPTightPass_branch and "Ele32WPTightPass":
 */
  __pyx_v_self->Ele32WPTightPass_branch = __pyx_v_the_tree->GetBranch(((char *)"Ele32WPTightPass"));

  /* "EMTree.pyx":1687
 *         self.Ele32WPTightPass_branch = the_tree.GetBranch("Ele32WPTightPass")
 *         #if not self.Ele32WPTightPass_branch and "Ele32WPTightPass" not in self.complained:
 *         if not self.Ele32WPTightPass_branch and "Ele32WPTightPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Ele32WPTightPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ele32WPTightPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Ele32WPTightPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L19_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L19_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1688
 *         #if not self.Ele32WPTightPass_branch and "Ele32WPTightPass" not in self.complained:
 *         if not self.Ele32WPTightPass_branch and "Ele32WPTightPass":
 *             warnings.warn( "EMTree: Expected branch Ele32WPTightPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ele32WPTightPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1688, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1688, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1688, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1687
 *         self.Ele32WPTightPass_branch = the_tree.GetBranch("Ele32WPTightPass")
 *         #if not self.Ele32WPTightPass_branch and "Ele32WPTightPass" not in self.complained:
 *         if not self.Ele32WPTightPass_branch and "Ele32WPTightPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Ele32WPTightPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ele32WPTightPass")
 */
    goto __pyx_L18;
  }

  /* "EMTree.pyx":1691
 *             #self.complained.add("Ele32WPTightPass")
 *         else:
 *             self.Ele32WPTightPass_branch.SetAddress(<void*>&self.Ele32WPTightPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Ele35WPTightPass"
 */
  /*else*/ {
    __pyx_v_self->Ele32WPTightPass_branch->SetAddress(((void *)(&__pyx_v_self->Ele32WPTightPass_value)));
  }
  __pyx_L18:;

  /* "EMTree.pyx":1694
 * 
 *         #print "making Ele35WPTightPass"
 *         self.Ele35WPTightPass_branch = the_tree.GetBranch("Ele35WPTightPass")             # <<<<<<<<<<<<<<
 *         #if not self.Ele35WPTightPass_branch and "Ele35WPTightPass" not in self.complained:
 *         if not self.Ele35WPTightPass_branch and "Ele35WPTightPass":
 */
  __pyx_v_self->Ele35WPTightPass_branch = __pyx_v_the_tree->GetBranch(((char *)"Ele35WPTightPass"));

  /* "EMTree.pyx":1696
 *         self.Ele35WPTightPass_branch = the_tree.GetBranch("Ele35WPTightPass")
 *         #if not self.Ele35WPTightPass_branch and "Ele35WPTightPass" not in self.complained:
 *         if not self.Ele35WPTightPass_branch and "Ele35WPTightPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Ele35WPTightPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ele35WPTightPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Ele35WPTightPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L22_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L22_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1697
 *         #if not self.Ele35WPTightPass_branch and "Ele35WPTightPass" not in self.complained:
 *         if not self.Ele35WPTightPass_branch and "Ele35WPTightPass":
 *             warnings.warn( "EMTree: Expected branch Ele35WPTightPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ele35WPTightPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1697, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1697, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1697, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1696
 *         self.Ele35WPTightPass_branch = the_tree.GetBranch("Ele35WPTightPass")
 *         #if not self.Ele35WPTightPass_branch and "Ele35WPTightPass" not in self.complained:
 *         if not self.Ele35WPTightPass_branch and "Ele35WPTightPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Ele35WPTightPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ele35WPTightPass")
 */
    goto __pyx_L21;
  }

  /* "EMTree.pyx":1700
 *             #self.complained.add("Ele35WPTightPass")
 *         else:
 *             self.Ele35WPTightPass_branch.SetAddress(<void*>&self.Ele35WPTightPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making EmbPtWeight"
 */
  /*else*/ {
    __pyx_v_self->Ele35WPTightPass_branch->SetAddress(((void *)(&__pyx_v_self->Ele35WPTightPass_value)));
  }
  __pyx_L21:;

  /* "EMTree.pyx":1703
 * 
 *         #print "making EmbPtWeight"
 *         self.EmbPtWeight_branch = the_tree.GetBranch("EmbPtWeight")             # <<<<<<<<<<<<<<
 *         #if not self.EmbPtWeight_branch and "EmbPtWeight" not in self.complained:
 *         if not self.EmbPtWeight_branch and "EmbPtWeight":
 */
  __pyx_v_self->EmbPtWeight_branch = __pyx_v_the_tree->GetBranch(((char *)"EmbPtWeight"));

  /* "EMTree.pyx":1705
 *         self.EmbPtWeight_branch = the_tree.GetBranch("EmbPtWeight")
 *         #if not self.EmbPtWeight_branch and "EmbPtWeight" not in self.complained:
 *         if not self.EmbPtWeight_branch and "EmbPtWeight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch EmbPtWeight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("EmbPtWeight")
 */
  __pyx_t_2 = ((!(__pyx_v_self->EmbPtWeight_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L25_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L25_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1706
 *         #if not self.EmbPtWeight_branch and "EmbPtWeight" not in self.complained:
 *         if not self.EmbPtWeight_branch and "EmbPtWeight":
 *             warnings.warn( "EMTree: Expected branch EmbPtWeight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("EmbPtWeight")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1706, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1706, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1706, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1705
 *         self.EmbPtWeight_branch = the_tree.GetBranch("EmbPtWeight")
 *         #if not self.EmbPtWeight_branch and "EmbPtWeight" not in self.complained:
 *         if not self.EmbPtWeight_branch and "EmbPtWeight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch EmbPtWeight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("EmbPtWeight")
 */
    goto __pyx_L24;
  }

  /* "EMTree.pyx":1709
 *             #self.complained.add("EmbPtWeight")
 *         else:
 *             self.EmbPtWeight_branch.SetAddress(<void*>&self.EmbPtWeight_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Eta"
 */
  /*else*/ {
    __pyx_v_self->EmbPtWeight_branch->SetAddress(((void *)(&__pyx_v_self->EmbPtWeight_value)));
  }
  __pyx_L24:;

  /* "EMTree.pyx":1712
 * 
 *         #print "making Eta"
 *         self.Eta_branch = the_tree.GetBranch("Eta")             # <<<<<<<<<<<<<<
 *         #if not self.Eta_branch and "Eta" not in self.complained:
 *         if not self.Eta_branch and "Eta":
 */
  __pyx_v_self->Eta_branch = __pyx_v_the_tree->GetBranch(((char *)"Eta"));

  /* "EMTree.pyx":1714
 *         self.Eta_branch = the_tree.GetBranch("Eta")
 *         #if not self.Eta_branch and "Eta" not in self.complained:
 *         if not self.Eta_branch and "Eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Eta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Eta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L28_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L28_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1715
 *         #if not self.Eta_branch and "Eta" not in self.complained:
 *         if not self.Eta_branch and "Eta":
 *             warnings.warn( "EMTree: Expected branch Eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Eta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1715, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1715, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1715, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1714
 *         self.Eta_branch = the_tree.GetBranch("Eta")
 *         #if not self.Eta_branch and "Eta" not in self.complained:
 *         if not self.Eta_branch and "Eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Eta")
 */
    goto __pyx_L27;
  }

  /* "EMTree.pyx":1718
 *             #self.complained.add("Eta")
 *         else:
 *             self.Eta_branch.SetAddress(<void*>&self.Eta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Flag_BadChargedCandidateFilter"
 */
  /*else*/ {
    __pyx_v_self->Eta_branch->SetAddress(((void *)(&__pyx_v_self->Eta_value)));
  }
  __pyx_L27:;

  /* "EMTree.pyx":1721
 * 
 *         #print "making Flag_BadChargedCandidateFilter"
 *         self.Flag_BadChargedCandidateFilter_branch = the_tree.GetBranch("Flag_BadChargedCandidateFilter")             # <<<<<<<<<<<<<<
 *         #if not self.Flag_BadChargedCandidateFilter_branch and "Flag_BadChargedCandidateFilter" not in self.complained:
 *         if not self.Flag_BadChargedCandidateFilter_branch and "Flag_BadChargedCandidateFilter":
 */
  __pyx_v_self->Flag_BadChargedCandidateFilter_branch = __pyx_v_the_tree->GetBranch(((char *)"Flag_BadChargedCandidateFilter"));

  /* "EMTree.pyx":1723
 *         self.Flag_BadChargedCandidateFilter_branch = the_tree.GetBranch("Flag_BadChargedCandidateFilter")
 *         #if not self.Flag_BadChargedCandidateFilter_branch and "Flag_BadChargedCandidateFilter" not in self.complained:
 *         if not self.Flag_BadChargedCandidateFilter_branch and "Flag_BadChargedCandidateFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_BadChargedCandidateFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_BadChargedCandidateFilter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Flag_BadChargedCandidateFilter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L31_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L31_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1724
 *         #if not self.Flag_BadChargedCandidateFilter_branch and "Flag_BadChargedCandidateFilter" not in self.complained:
 *         if not self.Flag_BadChargedCandidateFilter_branch and "Flag_BadChargedCandidateFilter":
 *             warnings.warn( "EMTree: Expected branch Flag_BadChargedCandidateFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_BadChargedCandidateFilter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1724, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1724, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1724, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1723
 *         self.Flag_BadChargedCandidateFilter_branch = the_tree.GetBranch("Flag_BadChargedCandidateFilter")
 *         #if not self.Flag_BadChargedCandidateFilter_branch and "Flag_BadChargedCandidateFilter" not in self.complained:
 *         if not self.Flag_BadChargedCandidateFilter_branch and "Flag_BadChargedCandidateFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_BadChargedCandidateFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_BadChargedCandidateFilter")
 */
    goto __pyx_L30;
  }

  /* "EMTree.pyx":1727
 *             #self.complained.add("Flag_BadChargedCandidateFilter")
 *         else:
 *             self.Flag_BadChargedCandidateFilter_branch.SetAddress(<void*>&self.Flag_BadChargedCandidateFilter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Flag_BadPFMuonFilter"
 */
  /*else*/ {
    __pyx_v_self->Flag_BadChargedCandidateFilter_branch->SetAddress(((void *)(&__pyx_v_self->Flag_BadChargedCandidateFilter_value)));
  }
  __pyx_L30:;

  /* "EMTree.pyx":1730
 * 
 *         #print "making Flag_BadPFMuonFilter"
 *         self.Flag_BadPFMuonFilter_branch = the_tree.GetBranch("Flag_BadPFMuonFilter")             # <<<<<<<<<<<<<<
 *         #if not self.Flag_BadPFMuonFilter_branch and "Flag_BadPFMuonFilter" not in self.complained:
 *         if not self.Flag_BadPFMuonFilter_branch and "Flag_BadPFMuonFilter":
 */
  __pyx_v_self->Flag_BadPFMuonFilter_branch = __pyx_v_the_tree->GetBranch(((char *)"Flag_BadPFMuonFilter"));

  /* "EMTree.pyx":1732
 *         self.Flag_BadPFMuonFilter_branch = the_tree.GetBranch("Flag_BadPFMuonFilter")
 *         #if not self.Flag_BadPFMuonFilter_branch and "Flag_BadPFMuonFilter" not in self.complained:
 *         if not self.Flag_BadPFMuonFilter_branch and "Flag_BadPFMuonFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_BadPFMuonFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_BadPFMuonFilter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Flag_BadPFMuonFilter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L34_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L34_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1733
 *         #if not self.Flag_BadPFMuonFilter_branch and "Flag_BadPFMuonFilter" not in self.complained:
 *         if not self.Flag_BadPFMuonFilter_branch and "Flag_BadPFMuonFilter":
 *             warnings.warn( "EMTree: Expected branch Flag_BadPFMuonFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_BadPFMuonFilter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1733, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1733, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1733, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1732
 *         self.Flag_BadPFMuonFilter_branch = the_tree.GetBranch("Flag_BadPFMuonFilter")
 *         #if not self.Flag_BadPFMuonFilter_branch and "Flag_BadPFMuonFilter" not in self.complained:
 *         if not self.Flag_BadPFMuonFilter_branch and "Flag_BadPFMuonFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_BadPFMuonFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_BadPFMuonFilter")
 */
    goto __pyx_L33;
  }

  /* "EMTree.pyx":1736
 *             #self.complained.add("Flag_BadPFMuonFilter")
 *         else:
 *             self.Flag_BadPFMuonFilter_branch.SetAddress(<void*>&self.Flag_BadPFMuonFilter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Flag_EcalDeadCellTriggerPrimitiveFilter"
 */
  /*else*/ {
    __pyx_v_self->Flag_BadPFMuonFilter_branch->SetAddress(((void *)(&__pyx_v_self->Flag_BadPFMuonFilter_value)));
  }
  __pyx_L33:;

  /* "EMTree.pyx":1739
 * 
 *         #print "making Flag_EcalDeadCellTriggerPrimitiveFilter"
 *         self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch = the_tree.GetBranch("Flag_EcalDeadCellTriggerPrimitiveFilter")             # <<<<<<<<<<<<<<
 *         #if not self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch and "Flag_EcalDeadCellTriggerPrimitiveFilter" not in self.complained:
 *         if not self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch and "Flag_EcalDeadCellTriggerPrimitiveFilter":
 */
  __pyx_v_self->Flag_EcalDeadCellTriggerPrimitiveFilter_branch = __pyx_v_the_tree->GetBranch(((char *)"Flag_EcalDeadCellTriggerPrimitiveFilter"));

  /* "EMTree.pyx":1741
 *         self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch = the_tree.GetBranch("Flag_EcalDeadCellTriggerPrimitiveFilter")
 *         #if not self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch and "Flag_EcalDeadCellTriggerPrimitiveFilter" not in self.complained:
 *         if not self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch and "Flag_EcalDeadCellTriggerPrimitiveFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_EcalDeadCellTriggerPrimitiveFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_EcalDeadCellTriggerPrimitiveFilter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Flag_EcalDeadCellTriggerPrimitiveFilter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L37_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L37_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1742
 *         #if not self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch and "Flag_EcalDeadCellTriggerPrimitiveFilter" not in self.complained:
 *         if not self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch and "Flag_EcalDeadCellTriggerPrimitiveFilter":
 *             warnings.warn( "EMTree: Expected branch Flag_EcalDeadCellTriggerPrimitiveFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_EcalDeadCellTriggerPrimitiveFilter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1742, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1742, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1742, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1741
 *         self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch = the_tree.GetBranch("Flag_EcalDeadCellTriggerPrimitiveFilter")
 *         #if not self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch and "Flag_EcalDeadCellTriggerPrimitiveFilter" not in self.complained:
 *         if not self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch and "Flag_EcalDeadCellTriggerPrimitiveFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_EcalDeadCellTriggerPrimitiveFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_EcalDeadCellTriggerPrimitiveFilter")
 */
    goto __pyx_L36;
  }

  /* "EMTree.pyx":1745
 *             #self.complained.add("Flag_EcalDeadCellTriggerPrimitiveFilter")
 *         else:
 *             self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch.SetAddress(<void*>&self.Flag_EcalDeadCellTriggerPrimitiveFilter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Flag_HBHENoiseFilter"
 */
  /*else*/ {
    __pyx_v_self->Flag_EcalDeadCellTriggerPrimitiveFilter_branch->SetAddress(((void *)(&__pyx_v_self->Flag_EcalDeadCellTriggerPrimitiveFilter_value)));
  }
  __pyx_L36:;

  /* "EMTree.pyx":1748
 * 
 *         #print "making Flag_HBHENoiseFilter"
 *         self.Flag_HBHENoiseFilter_branch = the_tree.GetBranch("Flag_HBHENoiseFilter")             # <<<<<<<<<<<<<<
 *         #if not self.Flag_HBHENoiseFilter_branch and "Flag_HBHENoiseFilter" not in self.complained:
 *         if not self.Flag_HBHENoiseFilter_branch and "Flag_HBHENoiseFilter":
 */
  __pyx_v_self->Flag_HBHENoiseFilter_branch = __pyx_v_the_tree->GetBranch(((char *)"Flag_HBHENoiseFilter"));

  /* "EMTree.pyx":1750
 *         self.Flag_HBHENoiseFilter_branch = the_tree.GetBranch("Flag_HBHENoiseFilter")
 *         #if not self.Flag_HBHENoiseFilter_branch and "Flag_HBHENoiseFilter" not in self.complained:
 *         if not self.Flag_HBHENoiseFilter_branch and "Flag_HBHENoiseFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_HBHENoiseFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_HBHENoiseFilter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Flag_HBHENoiseFilter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L40_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L40_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1751
 *         #if not self.Flag_HBHENoiseFilter_branch and "Flag_HBHENoiseFilter" not in self.complained:
 *         if not self.Flag_HBHENoiseFilter_branch and "Flag_HBHENoiseFilter":
 *             warnings.warn( "EMTree: Expected branch Flag_HBHENoiseFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_HBHENoiseFilter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1751, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1751, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1751, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1750
 *         self.Flag_HBHENoiseFilter_branch = the_tree.GetBranch("Flag_HBHENoiseFilter")
 *         #if not self.Flag_HBHENoiseFilter_branch and "Flag_HBHENoiseFilter" not in self.complained:
 *         if not self.Flag_HBHENoiseFilter_branch and "Flag_HBHENoiseFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_HBHENoiseFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_HBHENoiseFilter")
 */
    goto __pyx_L39;
  }

  /* "EMTree.pyx":1754
 *             #self.complained.add("Flag_HBHENoiseFilter")
 *         else:
 *             self.Flag_HBHENoiseFilter_branch.SetAddress(<void*>&self.Flag_HBHENoiseFilter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Flag_HBHENoiseIsoFilter"
 */
  /*else*/ {
    __pyx_v_self->Flag_HBHENoiseFilter_branch->SetAddress(((void *)(&__pyx_v_self->Flag_HBHENoiseFilter_value)));
  }
  __pyx_L39:;

  /* "EMTree.pyx":1757
 * 
 *         #print "making Flag_HBHENoiseIsoFilter"
 *         self.Flag_HBHENoiseIsoFilter_branch = the_tree.GetBranch("Flag_HBHENoiseIsoFilter")             # <<<<<<<<<<<<<<
 *         #if not self.Flag_HBHENoiseIsoFilter_branch and "Flag_HBHENoiseIsoFilter" not in self.complained:
 *         if not self.Flag_HBHENoiseIsoFilter_branch and "Flag_HBHENoiseIsoFilter":
 */
  __pyx_v_self->Flag_HBHENoiseIsoFilter_branch = __pyx_v_the_tree->GetBranch(((char *)"Flag_HBHENoiseIsoFilter"));

  /* "EMTree.pyx":1759
 *         self.Flag_HBHENoiseIsoFilter_branch = the_tree.GetBranch("Flag_HBHENoiseIsoFilter")
 *         #if not self.Flag_HBHENoiseIsoFilter_branch and "Flag_HBHENoiseIsoFilter" not in self.complained:
 *         if not self.Flag_HBHENoiseIsoFilter_branch and "Flag_HBHENoiseIsoFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_HBHENoiseIsoFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_HBHENoiseIsoFilter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Flag_HBHENoiseIsoFilter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L43_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L43_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1760
 *         #if not self.Flag_HBHENoiseIsoFilter_branch and "Flag_HBHENoiseIsoFilter" not in self.complained:
 *         if not self.Flag_HBHENoiseIsoFilter_branch and "Flag_HBHENoiseIsoFilter":
 *             warnings.warn( "EMTree: Expected branch Flag_HBHENoiseIsoFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_HBHENoiseIsoFilter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1760, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1760, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1760, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1759
 *         self.Flag_HBHENoiseIsoFilter_branch = the_tree.GetBranch("Flag_HBHENoiseIsoFilter")
 *         #if not self.Flag_HBHENoiseIsoFilter_branch and "Flag_HBHENoiseIsoFilter" not in self.complained:
 *         if not self.Flag_HBHENoiseIsoFilter_branch and "Flag_HBHENoiseIsoFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_HBHENoiseIsoFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_HBHENoiseIsoFilter")
 */
    goto __pyx_L42;
  }

  /* "EMTree.pyx":1763
 *             #self.complained.add("Flag_HBHENoiseIsoFilter")
 *         else:
 *             self.Flag_HBHENoiseIsoFilter_branch.SetAddress(<void*>&self.Flag_HBHENoiseIsoFilter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Flag_ecalBadCalibReducedMINIAODFilter"
 */
  /*else*/ {
    __pyx_v_self->Flag_HBHENoiseIsoFilter_branch->SetAddress(((void *)(&__pyx_v_self->Flag_HBHENoiseIsoFilter_value)));
  }
  __pyx_L42:;

  /* "EMTree.pyx":1766
 * 
 *         #print "making Flag_ecalBadCalibReducedMINIAODFilter"
 *         self.Flag_ecalBadCalibReducedMINIAODFilter_branch = the_tree.GetBranch("Flag_ecalBadCalibReducedMINIAODFilter")             # <<<<<<<<<<<<<<
 *         #if not self.Flag_ecalBadCalibReducedMINIAODFilter_branch and "Flag_ecalBadCalibReducedMINIAODFilter" not in self.complained:
 *         if not self.Flag_ecalBadCalibReducedMINIAODFilter_branch and "Flag_ecalBadCalibReducedMINIAODFilter":
 */
  __pyx_v_self->Flag_ecalBadCalibReducedMINIAODFilter_branch = __pyx_v_the_tree->GetBranch(((char *)"Flag_ecalBadCalibReducedMINIAODFilter"));

  /* "EMTree.pyx":1768
 *         self.Flag_ecalBadCalibReducedMINIAODFilter_branch = the_tree.GetBranch("Flag_ecalBadCalibReducedMINIAODFilter")
 *         #if not self.Flag_ecalBadCalibReducedMINIAODFilter_branch and "Flag_ecalBadCalibReducedMINIAODFilter" not in self.complained:
 *         if not self.Flag_ecalBadCalibReducedMINIAODFilter_branch and "Flag_ecalBadCalibReducedMINIAODFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_ecalBadCalibReducedMINIAODFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_ecalBadCalibReducedMINIAODFilter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Flag_ecalBadCalibReducedMINIAODFilter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L46_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L46_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1769
 *         #if not self.Flag_ecalBadCalibReducedMINIAODFilter_branch and "Flag_ecalBadCalibReducedMINIAODFilter" not in self.complained:
 *         if not self.Flag_ecalBadCalibReducedMINIAODFilter_branch and "Flag_ecalBadCalibReducedMINIAODFilter":
 *             warnings.warn( "EMTree: Expected branch Flag_ecalBadCalibReducedMINIAODFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_ecalBadCalibReducedMINIAODFilter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1769, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1769, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1769, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1768
 *         self.Flag_ecalBadCalibReducedMINIAODFilter_branch = the_tree.GetBranch("Flag_ecalBadCalibReducedMINIAODFilter")
 *         #if not self.Flag_ecalBadCalibReducedMINIAODFilter_branch and "Flag_ecalBadCalibReducedMINIAODFilter" not in self.complained:
 *         if not self.Flag_ecalBadCalibReducedMINIAODFilter_branch and "Flag_ecalBadCalibReducedMINIAODFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_ecalBadCalibReducedMINIAODFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_ecalBadCalibReducedMINIAODFilter")
 */
    goto __pyx_L45;
  }

  /* "EMTree.pyx":1772
 *             #self.complained.add("Flag_ecalBadCalibReducedMINIAODFilter")
 *         else:
 *             self.Flag_ecalBadCalibReducedMINIAODFilter_branch.SetAddress(<void*>&self.Flag_ecalBadCalibReducedMINIAODFilter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Flag_eeBadScFilter"
 */
  /*else*/ {
    __pyx_v_self->Flag_ecalBadCalibReducedMINIAODFilter_branch->SetAddress(((void *)(&__pyx_v_self->Flag_ecalBadCalibReducedMINIAODFilter_value)));
  }
  __pyx_L45:;

  /* "EMTree.pyx":1775
 * 
 *         #print "making Flag_eeBadScFilter"
 *         self.Flag_eeBadScFilter_branch = the_tree.GetBranch("Flag_eeBadScFilter")             # <<<<<<<<<<<<<<
 *         #if not self.Flag_eeBadScFilter_branch and "Flag_eeBadScFilter" not in self.complained:
 *         if not self.Flag_eeBadScFilter_branch and "Flag_eeBadScFilter":
 */
  __pyx_v_self->Flag_eeBadScFilter_branch = __pyx_v_the_tree->GetBranch(((char *)"Flag_eeBadScFilter"));

  /* "EMTree.pyx":1777
 *         self.Flag_eeBadScFilter_branch = the_tree.GetBranch("Flag_eeBadScFilter")
 *         #if not self.Flag_eeBadScFilter_branch and "Flag_eeBadScFilter" not in self.complained:
 *         if not self.Flag_eeBadScFilter_branch and "Flag_eeBadScFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_eeBadScFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_eeBadScFilter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Flag_eeBadScFilter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L49_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L49_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1778
 *         #if not self.Flag_eeBadScFilter_branch and "Flag_eeBadScFilter" not in self.complained:
 *         if not self.Flag_eeBadScFilter_branch and "Flag_eeBadScFilter":
 *             warnings.warn( "EMTree: Expected branch Flag_eeBadScFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_eeBadScFilter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1778, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1778, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1778, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1777
 *         self.Flag_eeBadScFilter_branch = the_tree.GetBranch("Flag_eeBadScFilter")
 *         #if not self.Flag_eeBadScFilter_branch and "Flag_eeBadScFilter" not in self.complained:
 *         if not self.Flag_eeBadScFilter_branch and "Flag_eeBadScFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_eeBadScFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_eeBadScFilter")
 */
    goto __pyx_L48;
  }

  /* "EMTree.pyx":1781
 *             #self.complained.add("Flag_eeBadScFilter")
 *         else:
 *             self.Flag_eeBadScFilter_branch.SetAddress(<void*>&self.Flag_eeBadScFilter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Flag_globalSuperTightHalo2016Filter"
 */
  /*else*/ {
    __pyx_v_self->Flag_eeBadScFilter_branch->SetAddress(((void *)(&__pyx_v_self->Flag_eeBadScFilter_value)));
  }
  __pyx_L48:;

  /* "EMTree.pyx":1784
 * 
 *         #print "making Flag_globalSuperTightHalo2016Filter"
 *         self.Flag_globalSuperTightHalo2016Filter_branch = the_tree.GetBranch("Flag_globalSuperTightHalo2016Filter")             # <<<<<<<<<<<<<<
 *         #if not self.Flag_globalSuperTightHalo2016Filter_branch and "Flag_globalSuperTightHalo2016Filter" not in self.complained:
 *         if not self.Flag_globalSuperTightHalo2016Filter_branch and "Flag_globalSuperTightHalo2016Filter":
 */
  __pyx_v_self->Flag_globalSuperTightHalo2016Filter_branch = __pyx_v_the_tree->GetBranch(((char *)"Flag_globalSuperTightHalo2016Filter"));

  /* "EMTree.pyx":1786
 *         self.Flag_globalSuperTightHalo2016Filter_branch = the_tree.GetBranch("Flag_globalSuperTightHalo2016Filter")
 *         #if not self.Flag_globalSuperTightHalo2016Filter_branch and "Flag_globalSuperTightHalo2016Filter" not in self.complained:
 *         if not self.Flag_globalSuperTightHalo2016Filter_branch and "Flag_globalSuperTightHalo2016Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_globalSuperTightHalo2016Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_globalSuperTightHalo2016Filter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Flag_globalSuperTightHalo2016Filter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L52_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L52_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1787
 *         #if not self.Flag_globalSuperTightHalo2016Filter_branch and "Flag_globalSuperTightHalo2016Filter" not in self.complained:
 *         if not self.Flag_globalSuperTightHalo2016Filter_branch and "Flag_globalSuperTightHalo2016Filter":
 *             warnings.warn( "EMTree: Expected branch Flag_globalSuperTightHalo2016Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_globalSuperTightHalo2016Filter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1787, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1787, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1787, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1786
 *         self.Flag_globalSuperTightHalo2016Filter_branch = the_tree.GetBranch("Flag_globalSuperTightHalo2016Filter")
 *         #if not self.Flag_globalSuperTightHalo2016Filter_branch and "Flag_globalSuperTightHalo2016Filter" not in self.complained:
 *         if not self.Flag_globalSuperTightHalo2016Filter_branch and "Flag_globalSuperTightHalo2016Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_globalSuperTightHalo2016Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_globalSuperTightHalo2016Filter")
 */
    goto __pyx_L51;
  }

  /* "EMTree.pyx":1790
 *             #self.complained.add("Flag_globalSuperTightHalo2016Filter")
 *         else:
 *             self.Flag_globalSuperTightHalo2016Filter_branch.SetAddress(<void*>&self.Flag_globalSuperTightHalo2016Filter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Flag_goodVertices"
 */
  /*else*/ {
    __pyx_v_self->Flag_globalSuperTightHalo2016Filter_branch->SetAddress(((void *)(&__pyx_v_self->Flag_globalSuperTightHalo2016Filter_value)));
  }
  __pyx_L51:;

  /* "EMTree.pyx":1793
 * 
 *         #print "making Flag_goodVertices"
 *         self.Flag_goodVertices_branch = the_tree.GetBranch("Flag_goodVertices")             # <<<<<<<<<<<<<<
 *         #if not self.Flag_goodVertices_branch and "Flag_goodVertices" not in self.complained:
 *         if not self.Flag_goodVertices_branch and "Flag_goodVertices":
 */
  __pyx_v_self->Flag_goodVertices_branch = __pyx_v_the_tree->GetBranch(((char *)"Flag_goodVertices"));

  /* "EMTree.pyx":1795
 *         self.Flag_goodVertices_branch = the_tree.GetBranch("Flag_goodVertices")
 *         #if not self.Flag_goodVertices_branch and "Flag_goodVertices" not in self.complained:
 *         if not self.Flag_goodVertices_branch and "Flag_goodVertices":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_goodVertices does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_goodVertices")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Flag_goodVertices_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L55_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L55_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1796
 *         #if not self.Flag_goodVertices_branch and "Flag_goodVertices" not in self.complained:
 *         if not self.Flag_goodVertices_branch and "Flag_goodVertices":
 *             warnings.warn( "EMTree: Expected branch Flag_goodVertices does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_goodVertices")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1796, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1795
 *         self.Flag_goodVertices_branch = the_tree.GetBranch("Flag_goodVertices")
 *         #if not self.Flag_goodVertices_branch and "Flag_goodVertices" not in self.complained:
 *         if not self.Flag_goodVertices_branch and "Flag_goodVertices":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Flag_goodVertices does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Flag_goodVertices")
 */
    goto __pyx_L54;
  }

  /* "EMTree.pyx":1799
 *             #self.complained.add("Flag_goodVertices")
 *         else:
 *             self.Flag_goodVertices_branch.SetAddress(<void*>&self.Flag_goodVertices_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making GenWeight"
 */
  /*else*/ {
    __pyx_v_self->Flag_goodVertices_branch->SetAddress(((void *)(&__pyx_v_self->Flag_goodVertices_value)));
  }
  __pyx_L54:;

  /* "EMTree.pyx":1802
 * 
 *         #print "making GenWeight"
 *         self.GenWeight_branch = the_tree.GetBranch("GenWeight")             # <<<<<<<<<<<<<<
 *         #if not self.GenWeight_branch and "GenWeight" not in self.complained:
 *         if not self.GenWeight_branch and "GenWeight":
 */
  __pyx_v_self->GenWeight_branch = __pyx_v_the_tree->GetBranch(((char *)"GenWeight"));

  /* "EMTree.pyx":1804
 *         self.GenWeight_branch = the_tree.GetBranch("GenWeight")
 *         #if not self.GenWeight_branch and "GenWeight" not in self.complained:
 *         if not self.GenWeight_branch and "GenWeight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch GenWeight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("GenWeight")
 */
  __pyx_t_2 = ((!(__pyx_v_self->GenWeight_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L58_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L58_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1805
 *         #if not self.GenWeight_branch and "GenWeight" not in self.complained:
 *         if not self.GenWeight_branch and "GenWeight":
 *             warnings.warn( "EMTree: Expected branch GenWeight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("GenWeight")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1805, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1805, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__20, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1805, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1804
 *         self.GenWeight_branch = the_tree.GetBranch("GenWeight")
 *         #if not self.GenWeight_branch and "GenWeight" not in self.complained:
 *         if not self.GenWeight_branch and "GenWeight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch GenWeight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("GenWeight")
 */
    goto __pyx_L57;
  }

  /* "EMTree.pyx":1808
 *             #self.complained.add("GenWeight")
 *         else:
 *             self.GenWeight_branch.SetAddress(<void*>&self.GenWeight_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Ht"
 */
  /*else*/ {
    __pyx_v_self->GenWeight_branch->SetAddress(((void *)(&__pyx_v_self->GenWeight_value)));
  }
  __pyx_L57:;

  /* "EMTree.pyx":1811
 * 
 *         #print "making Ht"
 *         self.Ht_branch = the_tree.GetBranch("Ht")             # <<<<<<<<<<<<<<
 *         #if not self.Ht_branch and "Ht" not in self.complained:
 *         if not self.Ht_branch and "Ht":
 */
  __pyx_v_self->Ht_branch = __pyx_v_the_tree->GetBranch(((char *)"Ht"));

  /* "EMTree.pyx":1813
 *         self.Ht_branch = the_tree.GetBranch("Ht")
 *         #if not self.Ht_branch and "Ht" not in self.complained:
 *         if not self.Ht_branch and "Ht":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Ht does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ht")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Ht_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L61_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L61_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1814
 *         #if not self.Ht_branch and "Ht" not in self.complained:
 *         if not self.Ht_branch and "Ht":
 *             warnings.warn( "EMTree: Expected branch Ht does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ht")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1814, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1814, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1814, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1813
 *         self.Ht_branch = the_tree.GetBranch("Ht")
 *         #if not self.Ht_branch and "Ht" not in self.complained:
 *         if not self.Ht_branch and "Ht":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Ht does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ht")
 */
    goto __pyx_L60;
  }

  /* "EMTree.pyx":1817
 *             #self.complained.add("Ht")
 *         else:
 *             self.Ht_branch.SetAddress(<void*>&self.Ht_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making IsoMu24Pass"
 */
  /*else*/ {
    __pyx_v_self->Ht_branch->SetAddress(((void *)(&__pyx_v_self->Ht_value)));
  }
  __pyx_L60:;

  /* "EMTree.pyx":1820
 * 
 *         #print "making IsoMu24Pass"
 *         self.IsoMu24Pass_branch = the_tree.GetBranch("IsoMu24Pass")             # <<<<<<<<<<<<<<
 *         #if not self.IsoMu24Pass_branch and "IsoMu24Pass" not in self.complained:
 *         if not self.IsoMu24Pass_branch and "IsoMu24Pass":
 */
  __pyx_v_self->IsoMu24Pass_branch = __pyx_v_the_tree->GetBranch(((char *)"IsoMu24Pass"));

  /* "EMTree.pyx":1822
 *         self.IsoMu24Pass_branch = the_tree.GetBranch("IsoMu24Pass")
 *         #if not self.IsoMu24Pass_branch and "IsoMu24Pass" not in self.complained:
 *         if not self.IsoMu24Pass_branch and "IsoMu24Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch IsoMu24Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("IsoMu24Pass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->IsoMu24Pass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L64_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L64_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1823
 *         #if not self.IsoMu24Pass_branch and "IsoMu24Pass" not in self.complained:
 *         if not self.IsoMu24Pass_branch and "IsoMu24Pass":
 *             warnings.warn( "EMTree: Expected branch IsoMu24Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("IsoMu24Pass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1823, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1823, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1823, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1822
 *         self.IsoMu24Pass_branch = the_tree.GetBranch("IsoMu24Pass")
 *         #if not self.IsoMu24Pass_branch and "IsoMu24Pass" not in self.complained:
 *         if not self.IsoMu24Pass_branch and "IsoMu24Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch IsoMu24Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("IsoMu24Pass")
 */
    goto __pyx_L63;
  }

  /* "EMTree.pyx":1826
 *             #self.complained.add("IsoMu24Pass")
 *         else:
 *             self.IsoMu24Pass_branch.SetAddress(<void*>&self.IsoMu24Pass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making IsoMu27Pass"
 */
  /*else*/ {
    __pyx_v_self->IsoMu24Pass_branch->SetAddress(((void *)(&__pyx_v_self->IsoMu24Pass_value)));
  }
  __pyx_L63:;

  /* "EMTree.pyx":1829
 * 
 *         #print "making IsoMu27Pass"
 *         self.IsoMu27Pass_branch = the_tree.GetBranch("IsoMu27Pass")             # <<<<<<<<<<<<<<
 *         #if not self.IsoMu27Pass_branch and "IsoMu27Pass" not in self.complained:
 *         if not self.IsoMu27Pass_branch and "IsoMu27Pass":
 */
  __pyx_v_self->IsoMu27Pass_branch = __pyx_v_the_tree->GetBranch(((char *)"IsoMu27Pass"));

  /* "EMTree.pyx":1831
 *         self.IsoMu27Pass_branch = the_tree.GetBranch("IsoMu27Pass")
 *         #if not self.IsoMu27Pass_branch and "IsoMu27Pass" not in self.complained:
 *         if not self.IsoMu27Pass_branch and "IsoMu27Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch IsoMu27Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("IsoMu27Pass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->IsoMu27Pass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L67_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L67_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1832
 *         #if not self.IsoMu27Pass_branch and "IsoMu27Pass" not in self.complained:
 *         if not self.IsoMu27Pass_branch and "IsoMu27Pass":
 *             warnings.warn( "EMTree: Expected branch IsoMu27Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("IsoMu27Pass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1832, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1832, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1832, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1831
 *         self.IsoMu27Pass_branch = the_tree.GetBranch("IsoMu27Pass")
 *         #if not self.IsoMu27Pass_branch and "IsoMu27Pass" not in self.complained:
 *         if not self.IsoMu27Pass_branch and "IsoMu27Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch IsoMu27Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("IsoMu27Pass")
 */
    goto __pyx_L66;
  }

  /* "EMTree.pyx":1835
 *             #self.complained.add("IsoMu27Pass")
 *         else:
 *             self.IsoMu27Pass_branch.SetAddress(<void*>&self.IsoMu27Pass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making LT"
 */
  /*else*/ {
    __pyx_v_self->IsoMu27Pass_branch->SetAddress(((void *)(&__pyx_v_self->IsoMu27Pass_value)));
  }
  __pyx_L66:;

  /* "EMTree.pyx":1838
 * 
 *         #print "making LT"
 *         self.LT_branch = the_tree.GetBranch("LT")             # <<<<<<<<<<<<<<
 *         #if not self.LT_branch and "LT" not in self.complained:
 *         if not self.LT_branch and "LT":
 */
  __pyx_v_self->LT_branch = __pyx_v_the_tree->GetBranch(((char *)"LT"));

  /* "EMTree.pyx":1840
 *         self.LT_branch = the_tree.GetBranch("LT")
 *         #if not self.LT_branch and "LT" not in self.complained:
 *         if not self.LT_branch and "LT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch LT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("LT")
 */
  __pyx_t_2 = ((!(__pyx_v_self->LT_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L70_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L70_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1841
 *         #if not self.LT_branch and "LT" not in self.complained:
 *         if not self.LT_branch and "LT":
 *             warnings.warn( "EMTree: Expected branch LT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("LT")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1841, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1841, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1841, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1840
 *         self.LT_branch = the_tree.GetBranch("LT")
 *         #if not self.LT_branch and "LT" not in self.complained:
 *         if not self.LT_branch and "LT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch LT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("LT")
 */
    goto __pyx_L69;
  }

  /* "EMTree.pyx":1844
 *             #self.complained.add("LT")
 *         else:
 *             self.LT_branch.SetAddress(<void*>&self.LT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Mass"
 */
  /*else*/ {
    __pyx_v_self->LT_branch->SetAddress(((void *)(&__pyx_v_self->LT_value)));
  }
  __pyx_L69:;

  /* "EMTree.pyx":1847
 * 
 *         #print "making Mass"
 *         self.Mass_branch = the_tree.GetBranch("Mass")             # <<<<<<<<<<<<<<
 *         #if not self.Mass_branch and "Mass" not in self.complained:
 *         if not self.Mass_branch and "Mass":
 */
  __pyx_v_self->Mass_branch = __pyx_v_the_tree->GetBranch(((char *)"Mass"));

  /* "EMTree.pyx":1849
 *         self.Mass_branch = the_tree.GetBranch("Mass")
 *         #if not self.Mass_branch and "Mass" not in self.complained:
 *         if not self.Mass_branch and "Mass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Mass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Mass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Mass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L73_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L73_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1850
 *         #if not self.Mass_branch and "Mass" not in self.complained:
 *         if not self.Mass_branch and "Mass":
 *             warnings.warn( "EMTree: Expected branch Mass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Mass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1850, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1850, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1850, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1849
 *         self.Mass_branch = the_tree.GetBranch("Mass")
 *         #if not self.Mass_branch and "Mass" not in self.complained:
 *         if not self.Mass_branch and "Mass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Mass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Mass")
 */
    goto __pyx_L72;
  }

  /* "EMTree.pyx":1853
 *             #self.complained.add("Mass")
 *         else:
 *             self.Mass_branch.SetAddress(<void*>&self.Mass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making MassError"
 */
  /*else*/ {
    __pyx_v_self->Mass_branch->SetAddress(((void *)(&__pyx_v_self->Mass_value)));
  }
  __pyx_L72:;

  /* "EMTree.pyx":1856
 * 
 *         #print "making MassError"
 *         self.MassError_branch = the_tree.GetBranch("MassError")             # <<<<<<<<<<<<<<
 *         #if not self.MassError_branch and "MassError" not in self.complained:
 *         if not self.MassError_branch and "MassError":
 */
  __pyx_v_self->MassError_branch = __pyx_v_the_tree->GetBranch(((char *)"MassError"));

  /* "EMTree.pyx":1858
 *         self.MassError_branch = the_tree.GetBranch("MassError")
 *         #if not self.MassError_branch and "MassError" not in self.complained:
 *         if not self.MassError_branch and "MassError":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch MassError does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassError")
 */
  __pyx_t_2 = ((!(__pyx_v_self->MassError_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L76_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L76_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1859
 *         #if not self.MassError_branch and "MassError" not in self.complained:
 *         if not self.MassError_branch and "MassError":
 *             warnings.warn( "EMTree: Expected branch MassError does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassError")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1859, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1859, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1859, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1858
 *         self.MassError_branch = the_tree.GetBranch("MassError")
 *         #if not self.MassError_branch and "MassError" not in self.complained:
 *         if not self.MassError_branch and "MassError":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch MassError does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassError")
 */
    goto __pyx_L75;
  }

  /* "EMTree.pyx":1862
 *             #self.complained.add("MassError")
 *         else:
 *             self.MassError_branch.SetAddress(<void*>&self.MassError_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making MassErrord1"
 */
  /*else*/ {
    __pyx_v_self->MassError_branch->SetAddress(((void *)(&__pyx_v_self->MassError_value)));
  }
  __pyx_L75:;

  /* "EMTree.pyx":1865
 * 
 *         #print "making MassErrord1"
 *         self.MassErrord1_branch = the_tree.GetBranch("MassErrord1")             # <<<<<<<<<<<<<<
 *         #if not self.MassErrord1_branch and "MassErrord1" not in self.complained:
 *         if not self.MassErrord1_branch and "MassErrord1":
 */
  __pyx_v_self->MassErrord1_branch = __pyx_v_the_tree->GetBranch(((char *)"MassErrord1"));

  /* "EMTree.pyx":1867
 *         self.MassErrord1_branch = the_tree.GetBranch("MassErrord1")
 *         #if not self.MassErrord1_branch and "MassErrord1" not in self.complained:
 *         if not self.MassErrord1_branch and "MassErrord1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch MassErrord1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord1")
 */
  __pyx_t_2 = ((!(__pyx_v_self->MassErrord1_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L79_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L79_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1868
 *         #if not self.MassErrord1_branch and "MassErrord1" not in self.complained:
 *         if not self.MassErrord1_branch and "MassErrord1":
 *             warnings.warn( "EMTree: Expected branch MassErrord1 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassErrord1")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1868, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1868, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1868, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1867
 *         self.MassErrord1_branch = the_tree.GetBranch("MassErrord1")
 *         #if not self.MassErrord1_branch and "MassErrord1" not in self.complained:
 *         if not self.MassErrord1_branch and "MassErrord1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch MassErrord1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord1")
 */
    goto __pyx_L78;
  }

  /* "EMTree.pyx":1871
 *             #self.complained.add("MassErrord1")
 *         else:
 *             self.MassErrord1_branch.SetAddress(<void*>&self.MassErrord1_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making MassErrord2"
 */
  /*else*/ {
    __pyx_v_self->MassErrord1_branch->SetAddress(((void *)(&__pyx_v_self->MassErrord1_value)));
  }
  __pyx_L78:;

  /* "EMTree.pyx":1874
 * 
 *         #print "making MassErrord2"
 *         self.MassErrord2_branch = the_tree.GetBranch("MassErrord2")             # <<<<<<<<<<<<<<
 *         #if not self.MassErrord2_branch and "MassErrord2" not in self.complained:
 *         if not self.MassErrord2_branch and "MassErrord2":
 */
  __pyx_v_self->MassErrord2_branch = __pyx_v_the_tree->GetBranch(((char *)"MassErrord2"));

  /* "EMTree.pyx":1876
 *         self.MassErrord2_branch = the_tree.GetBranch("MassErrord2")
 *         #if not self.MassErrord2_branch and "MassErrord2" not in self.complained:
 *         if not self.MassErrord2_branch and "MassErrord2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch MassErrord2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord2")
 */
  __pyx_t_2 = ((!(__pyx_v_self->MassErrord2_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L82_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L82_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1877
 *         #if not self.MassErrord2_branch and "MassErrord2" not in self.complained:
 *         if not self.MassErrord2_branch and "MassErrord2":
 *             warnings.warn( "EMTree: Expected branch MassErrord2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassErrord2")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1877, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1877, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1877, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1876
 *         self.MassErrord2_branch = the_tree.GetBranch("MassErrord2")
 *         #if not self.MassErrord2_branch and "MassErrord2" not in self.complained:
 *         if not self.MassErrord2_branch and "MassErrord2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch MassErrord2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord2")
 */
    goto __pyx_L81;
  }

  /* "EMTree.pyx":1880
 *             #self.complained.add("MassErrord2")
 *         else:
 *             self.MassErrord2_branch.SetAddress(<void*>&self.MassErrord2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making MassErrord3"
 */
  /*else*/ {
    __pyx_v_self->MassErrord2_branch->SetAddress(((void *)(&__pyx_v_self->MassErrord2_value)));
  }
  __pyx_L81:;

  /* "EMTree.pyx":1883
 * 
 *         #print "making MassErrord3"
 *         self.MassErrord3_branch = the_tree.GetBranch("MassErrord3")             # <<<<<<<<<<<<<<
 *         #if not self.MassErrord3_branch and "MassErrord3" not in self.complained:
 *         if not self.MassErrord3_branch and "MassErrord3":
 */
  __pyx_v_self->MassErrord3_branch = __pyx_v_the_tree->GetBranch(((char *)"MassErrord3"));

  /* "EMTree.pyx":1885
 *         self.MassErrord3_branch = the_tree.GetBranch("MassErrord3")
 *         #if not self.MassErrord3_branch and "MassErrord3" not in self.complained:
 *         if not self.MassErrord3_branch and "MassErrord3":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch MassErrord3 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord3")
 */
  __pyx_t_2 = ((!(__pyx_v_self->MassErrord3_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L85_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L85_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1886
 *         #if not self.MassErrord3_branch and "MassErrord3" not in self.complained:
 *         if not self.MassErrord3_branch and "MassErrord3":
 *             warnings.warn( "EMTree: Expected branch MassErrord3 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassErrord3")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1886, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1886, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1886, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1885
 *         self.MassErrord3_branch = the_tree.GetBranch("MassErrord3")
 *         #if not self.MassErrord3_branch and "MassErrord3" not in self.complained:
 *         if not self.MassErrord3_branch and "MassErrord3":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch MassErrord3 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord3")
 */
    goto __pyx_L84;
  }

  /* "EMTree.pyx":1889
 *             #self.complained.add("MassErrord3")
 *         else:
 *             self.MassErrord3_branch.SetAddress(<void*>&self.MassErrord3_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making MassErrord4"
 */
  /*else*/ {
    __pyx_v_self->MassErrord3_branch->SetAddress(((void *)(&__pyx_v_self->MassErrord3_value)));
  }
  __pyx_L84:;

  /* "EMTree.pyx":1892
 * 
 *         #print "making MassErrord4"
 *         self.MassErrord4_branch = the_tree.GetBranch("MassErrord4")             # <<<<<<<<<<<<<<
 *         #if not self.MassErrord4_branch and "MassErrord4" not in self.complained:
 *         if not self.MassErrord4_branch and "MassErrord4":
 */
  __pyx_v_self->MassErrord4_branch = __pyx_v_the_tree->GetBranch(((char *)"MassErrord4"));

  /* "EMTree.pyx":1894
 *         self.MassErrord4_branch = the_tree.GetBranch("MassErrord4")
 *         #if not self.MassErrord4_branch and "MassErrord4" not in self.complained:
 *         if not self.MassErrord4_branch and "MassErrord4":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch MassErrord4 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord4")
 */
  __pyx_t_2 = ((!(__pyx_v_self->MassErrord4_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L88_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L88_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1895
 *         #if not self.MassErrord4_branch and "MassErrord4" not in self.complained:
 *         if not self.MassErrord4_branch and "MassErrord4":
 *             warnings.warn( "EMTree: Expected branch MassErrord4 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassErrord4")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1894
 *         self.MassErrord4_branch = the_tree.GetBranch("MassErrord4")
 *         #if not self.MassErrord4_branch and "MassErrord4" not in self.complained:
 *         if not self.MassErrord4_branch and "MassErrord4":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch MassErrord4 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord4")
 */
    goto __pyx_L87;
  }

  /* "EMTree.pyx":1898
 *             #self.complained.add("MassErrord4")
 *         else:
 *             self.MassErrord4_branch.SetAddress(<void*>&self.MassErrord4_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Mt"
 */
  /*else*/ {
    __pyx_v_self->MassErrord4_branch->SetAddress(((void *)(&__pyx_v_self->MassErrord4_value)));
  }
  __pyx_L87:;

  /* "EMTree.pyx":1901
 * 
 *         #print "making Mt"
 *         self.Mt_branch = the_tree.GetBranch("Mt")             # <<<<<<<<<<<<<<
 *         #if not self.Mt_branch and "Mt" not in self.complained:
 *         if not self.Mt_branch and "Mt":
 */
  __pyx_v_self->Mt_branch = __pyx_v_the_tree->GetBranch(((char *)"Mt"));

  /* "EMTree.pyx":1903
 *         self.Mt_branch = the_tree.GetBranch("Mt")
 *         #if not self.Mt_branch and "Mt" not in self.complained:
 *         if not self.Mt_branch and "Mt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Mt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Mt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Mt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L91_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L91_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1904
 *         #if not self.Mt_branch and "Mt" not in self.complained:
 *         if not self.Mt_branch and "Mt":
 *             warnings.warn( "EMTree: Expected branch Mt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Mt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1904, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1904, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1904, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1903
 *         self.Mt_branch = the_tree.GetBranch("Mt")
 *         #if not self.Mt_branch and "Mt" not in self.complained:
 *         if not self.Mt_branch and "Mt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Mt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Mt")
 */
    goto __pyx_L90;
  }

  /* "EMTree.pyx":1907
 *             #self.complained.add("Mt")
 *         else:
 *             self.Mt_branch.SetAddress(<void*>&self.Mt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Mu50Pass"
 */
  /*else*/ {
    __pyx_v_self->Mt_branch->SetAddress(((void *)(&__pyx_v_self->Mt_value)));
  }
  __pyx_L90:;

  /* "EMTree.pyx":1910
 * 
 *         #print "making Mu50Pass"
 *         self.Mu50Pass_branch = the_tree.GetBranch("Mu50Pass")             # <<<<<<<<<<<<<<
 *         #if not self.Mu50Pass_branch and "Mu50Pass" not in self.complained:
 *         if not self.Mu50Pass_branch and "Mu50Pass":
 */
  __pyx_v_self->Mu50Pass_branch = __pyx_v_the_tree->GetBranch(((char *)"Mu50Pass"));

  /* "EMTree.pyx":1912
 *         self.Mu50Pass_branch = the_tree.GetBranch("Mu50Pass")
 *         #if not self.Mu50Pass_branch and "Mu50Pass" not in self.complained:
 *         if not self.Mu50Pass_branch and "Mu50Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Mu50Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Mu50Pass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Mu50Pass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L94_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L94_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1913
 *         #if not self.Mu50Pass_branch and "Mu50Pass" not in self.complained:
 *         if not self.Mu50Pass_branch and "Mu50Pass":
 *             warnings.warn( "EMTree: Expected branch Mu50Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Mu50Pass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1913, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1913, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__32, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1913, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1912
 *         self.Mu50Pass_branch = the_tree.GetBranch("Mu50Pass")
 *         #if not self.Mu50Pass_branch and "Mu50Pass" not in self.complained:
 *         if not self.Mu50Pass_branch and "Mu50Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Mu50Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Mu50Pass")
 */
    goto __pyx_L93;
  }

  /* "EMTree.pyx":1916
 *             #self.complained.add("Mu50Pass")
 *         else:
 *             self.Mu50Pass_branch.SetAddress(<void*>&self.Mu50Pass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making NUP"
 */
  /*else*/ {
    __pyx_v_self->Mu50Pass_branch->SetAddress(((void *)(&__pyx_v_self->Mu50Pass_value)));
  }
  __pyx_L93:;

  /* "EMTree.pyx":1919
 * 
 *         #print "making NUP"
 *         self.NUP_branch = the_tree.GetBranch("NUP")             # <<<<<<<<<<<<<<
 *         #if not self.NUP_branch and "NUP" not in self.complained:
 *         if not self.NUP_branch and "NUP":
 */
  __pyx_v_self->NUP_branch = __pyx_v_the_tree->GetBranch(((char *)"NUP"));

  /* "EMTree.pyx":1921
 *         self.NUP_branch = the_tree.GetBranch("NUP")
 *         #if not self.NUP_branch and "NUP" not in self.complained:
 *         if not self.NUP_branch and "NUP":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch NUP does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("NUP")
 */
  __pyx_t_2 = ((!(__pyx_v_self->NUP_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L97_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L97_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1922
 *         #if not self.NUP_branch and "NUP" not in self.complained:
 *         if not self.NUP_branch and "NUP":
 *             warnings.warn( "EMTree: Expected branch NUP does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("NUP")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1922, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1922, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__33, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1922, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1921
 *         self.NUP_branch = the_tree.GetBranch("NUP")
 *         #if not self.NUP_branch and "NUP" not in self.complained:
 *         if not self.NUP_branch and "NUP":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch NUP does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("NUP")
 */
    goto __pyx_L96;
  }

  /* "EMTree.pyx":1925
 *             #self.complained.add("NUP")
 *         else:
 *             self.NUP_branch.SetAddress(<void*>&self.NUP_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Phi"
 */
  /*else*/ {
    __pyx_v_self->NUP_branch->SetAddress(((void *)(&__pyx_v_self->NUP_value)));
  }
  __pyx_L96:;

  /* "EMTree.pyx":1928
 * 
 *         #print "making Phi"
 *         self.Phi_branch = the_tree.GetBranch("Phi")             # <<<<<<<<<<<<<<
 *         #if not self.Phi_branch and "Phi" not in self.complained:
 *         if not self.Phi_branch and "Phi":
 */
  __pyx_v_self->Phi_branch = __pyx_v_the_tree->GetBranch(((char *)"Phi"));

  /* "EMTree.pyx":1930
 *         self.Phi_branch = the_tree.GetBranch("Phi")
 *         #if not self.Phi_branch and "Phi" not in self.complained:
 *         if not self.Phi_branch and "Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Phi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Phi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L100_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L100_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1931
 *         #if not self.Phi_branch and "Phi" not in self.complained:
 *         if not self.Phi_branch and "Phi":
 *             warnings.warn( "EMTree: Expected branch Phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Phi")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1931, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1931, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__34, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1931, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1930
 *         self.Phi_branch = the_tree.GetBranch("Phi")
 *         #if not self.Phi_branch and "Phi" not in self.complained:
 *         if not self.Phi_branch and "Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Phi")
 */
    goto __pyx_L99;
  }

  /* "EMTree.pyx":1934
 *             #self.complained.add("Phi")
 *         else:
 *             self.Phi_branch.SetAddress(<void*>&self.Phi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Pt"
 */
  /*else*/ {
    __pyx_v_self->Phi_branch->SetAddress(((void *)(&__pyx_v_self->Phi_value)));
  }
  __pyx_L99:;

  /* "EMTree.pyx":1937
 * 
 *         #print "making Pt"
 *         self.Pt_branch = the_tree.GetBranch("Pt")             # <<<<<<<<<<<<<<
 *         #if not self.Pt_branch and "Pt" not in self.complained:
 *         if not self.Pt_branch and "Pt":
 */
  __pyx_v_self->Pt_branch = __pyx_v_the_tree->GetBranch(((char *)"Pt"));

  /* "EMTree.pyx":1939
 *         self.Pt_branch = the_tree.GetBranch("Pt")
 *         #if not self.Pt_branch and "Pt" not in self.complained:
 *         if not self.Pt_branch and "Pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Pt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Pt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L103_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L103_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1940
 *         #if not self.Pt_branch and "Pt" not in self.complained:
 *         if not self.Pt_branch and "Pt":
 *             warnings.warn( "EMTree: Expected branch Pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Pt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1940, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1940, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__35, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1940, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1939
 *         self.Pt_branch = the_tree.GetBranch("Pt")
 *         #if not self.Pt_branch and "Pt" not in self.complained:
 *         if not self.Pt_branch and "Pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch Pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Pt")
 */
    goto __pyx_L102;
  }

  /* "EMTree.pyx":1943
 *             #self.complained.add("Pt")
 *         else:
 *             self.Pt_branch.SetAddress(<void*>&self.Pt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetDeepCSVVeto20Medium_2016_DR0p5"
 */
  /*else*/ {
    __pyx_v_self->Pt_branch->SetAddress(((void *)(&__pyx_v_self->Pt_value)));
  }
  __pyx_L102:;

  /* "EMTree.pyx":1946
 * 
 *         #print "making bjetDeepCSVVeto20Medium_2016_DR0p5"
 *         self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto20Medium_2016_DR0p5")             # <<<<<<<<<<<<<<
 *         #if not self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch and "bjetDeepCSVVeto20Medium_2016_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch and "bjetDeepCSVVeto20Medium_2016_DR0p5":
 */
  __pyx_v_self->bjetDeepCSVVeto20Medium_2016_DR0p5_branch = __pyx_v_the_tree->GetBranch(((char *)"bjetDeepCSVVeto20Medium_2016_DR0p5"));

  /* "EMTree.pyx":1948
 *         self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto20Medium_2016_DR0p5")
 *         #if not self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch and "bjetDeepCSVVeto20Medium_2016_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch and "bjetDeepCSVVeto20Medium_2016_DR0p5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto20Medium_2016_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetDeepCSVVeto20Medium_2016_DR0p5")
 */
  __pyx_t_2 = ((!(__pyx_v_self->bjetDeepCSVVeto20Medium_2016_DR0p5_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L106_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L106_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1949
 *         #if not self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch and "bjetDeepCSVVeto20Medium_2016_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch and "bjetDeepCSVVeto20Medium_2016_DR0p5":
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto20Medium_2016_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetDeepCSVVeto20Medium_2016_DR0p5")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1949, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1949, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__36, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1949, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1948
 *         self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto20Medium_2016_DR0p5")
 *         #if not self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch and "bjetDeepCSVVeto20Medium_2016_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch and "bjetDeepCSVVeto20Medium_2016_DR0p5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto20Medium_2016_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetDeepCSVVeto20Medium_2016_DR0p5")
 */
    goto __pyx_L105;
  }

  /* "EMTree.pyx":1952
 *             #self.complained.add("bjetDeepCSVVeto20Medium_2016_DR0p5")
 *         else:
 *             self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch.SetAddress(<void*>&self.bjetDeepCSVVeto20Medium_2016_DR0p5_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetDeepCSVVeto20Medium_2017_DR0p5"
 */
  /*else*/ {
    __pyx_v_self->bjetDeepCSVVeto20Medium_2016_DR0p5_branch->SetAddress(((void *)(&__pyx_v_self->bjetDeepCSVVeto20Medium_2016_DR0p5_value)));
  }
  __pyx_L105:;

  /* "EMTree.pyx":1955
 * 
 *         #print "making bjetDeepCSVVeto20Medium_2017_DR0p5"
 *         self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto20Medium_2017_DR0p5")             # <<<<<<<<<<<<<<
 *         #if not self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch and "bjetDeepCSVVeto20Medium_2017_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch and "bjetDeepCSVVeto20Medium_2017_DR0p5":
 */
  __pyx_v_self->bjetDeepCSVVeto20Medium_2017_DR0p5_branch = __pyx_v_the_tree->GetBranch(((char *)"bjetDeepCSVVeto20Medium_2017_DR0p5"));

  /* "EMTree.pyx":1957
 *         self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto20Medium_2017_DR0p5")
 *         #if not self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch and "bjetDeepCSVVeto20Medium_2017_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch and "bjetDeepCSVVeto20Medium_2017_DR0p5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto20Medium_2017_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetDeepCSVVeto20Medium_2017_DR0p5")
 */
  __pyx_t_2 = ((!(__pyx_v_self->bjetDeepCSVVeto20Medium_2017_DR0p5_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L109_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L109_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1958
 *         #if not self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch and "bjetDeepCSVVeto20Medium_2017_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch and "bjetDeepCSVVeto20Medium_2017_DR0p5":
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto20Medium_2017_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetDeepCSVVeto20Medium_2017_DR0p5")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__37, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1957
 *         self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto20Medium_2017_DR0p5")
 *         #if not self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch and "bjetDeepCSVVeto20Medium_2017_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch and "bjetDeepCSVVeto20Medium_2017_DR0p5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto20Medium_2017_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetDeepCSVVeto20Medium_2017_DR0p5")
 */
    goto __pyx_L108;
  }

  /* "EMTree.pyx":1961
 *             #self.complained.add("bjetDeepCSVVeto20Medium_2017_DR0p5")
 *         else:
 *             self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch.SetAddress(<void*>&self.bjetDeepCSVVeto20Medium_2017_DR0p5_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetDeepCSVVeto20Medium_2018_DR0p5"
 */
  /*else*/ {
    __pyx_v_self->bjetDeepCSVVeto20Medium_2017_DR0p5_branch->SetAddress(((void *)(&__pyx_v_self->bjetDeepCSVVeto20Medium_2017_DR0p5_value)));
  }
  __pyx_L108:;

  /* "EMTree.pyx":1964
 * 
 *         #print "making bjetDeepCSVVeto20Medium_2018_DR0p5"
 *         self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto20Medium_2018_DR0p5")             # <<<<<<<<<<<<<<
 *         #if not self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch and "bjetDeepCSVVeto20Medium_2018_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch and "bjetDeepCSVVeto20Medium_2018_DR0p5":
 */
  __pyx_v_self->bjetDeepCSVVeto20Medium_2018_DR0p5_branch = __pyx_v_the_tree->GetBranch(((char *)"bjetDeepCSVVeto20Medium_2018_DR0p5"));

  /* "EMTree.pyx":1966
 *         self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto20Medium_2018_DR0p5")
 *         #if not self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch and "bjetDeepCSVVeto20Medium_2018_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch and "bjetDeepCSVVeto20Medium_2018_DR0p5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto20Medium_2018_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetDeepCSVVeto20Medium_2018_DR0p5")
 */
  __pyx_t_2 = ((!(__pyx_v_self->bjetDeepCSVVeto20Medium_2018_DR0p5_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L112_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L112_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1967
 *         #if not self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch and "bjetDeepCSVVeto20Medium_2018_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch and "bjetDeepCSVVeto20Medium_2018_DR0p5":
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto20Medium_2018_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetDeepCSVVeto20Medium_2018_DR0p5")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1967, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1967, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__38, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1967, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1966
 *         self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto20Medium_2018_DR0p5")
 *         #if not self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch and "bjetDeepCSVVeto20Medium_2018_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch and "bjetDeepCSVVeto20Medium_2018_DR0p5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto20Medium_2018_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetDeepCSVVeto20Medium_2018_DR0p5")
 */
    goto __pyx_L111;
  }

  /* "EMTree.pyx":1970
 *             #self.complained.add("bjetDeepCSVVeto20Medium_2018_DR0p5")
 *         else:
 *             self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch.SetAddress(<void*>&self.bjetDeepCSVVeto20Medium_2018_DR0p5_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetDeepCSVVeto30Medium_2016_DR0p5"
 */
  /*else*/ {
    __pyx_v_self->bjetDeepCSVVeto20Medium_2018_DR0p5_branch->SetAddress(((void *)(&__pyx_v_self->bjetDeepCSVVeto20Medium_2018_DR0p5_value)));
  }
  __pyx_L111:;

  /* "EMTree.pyx":1973
 * 
 *         #print "making bjetDeepCSVVeto30Medium_2016_DR0p5"
 *         self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto30Medium_2016_DR0p5")             # <<<<<<<<<<<<<<
 *         #if not self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch and "bjetDeepCSVVeto30Medium_2016_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch and "bjetDeepCSVVeto30Medium_2016_DR0p5":
 */
  __pyx_v_self->bjetDeepCSVVeto30Medium_2016_DR0p5_branch = __pyx_v_the_tree->GetBranch(((char *)"bjetDeepCSVVeto30Medium_2016_DR0p5"));

  /* "EMTree.pyx":1975
 *         self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto30Medium_2016_DR0p5")
 *         #if not self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch and "bjetDeepCSVVeto30Medium_2016_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch and "bjetDeepCSVVeto30Medium_2016_DR0p5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto30Medium_2016_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetDeepCSVVeto30Medium_2016_DR0p5")
 */
  __pyx_t_2 = ((!(__pyx_v_self->bjetDeepCSVVeto30Medium_2016_DR0p5_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L115_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L115_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1976
 *         #if not self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch and "bjetDeepCSVVeto30Medium_2016_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch and "bjetDeepCSVVeto30Medium_2016_DR0p5":
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto30Medium_2016_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetDeepCSVVeto30Medium_2016_DR0p5")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1976, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1976, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__39, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1976, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1975
 *         self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto30Medium_2016_DR0p5")
 *         #if not self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch and "bjetDeepCSVVeto30Medium_2016_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch and "bjetDeepCSVVeto30Medium_2016_DR0p5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto30Medium_2016_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetDeepCSVVeto30Medium_2016_DR0p5")
 */
    goto __pyx_L114;
  }

  /* "EMTree.pyx":1979
 *             #self.complained.add("bjetDeepCSVVeto30Medium_2016_DR0p5")
 *         else:
 *             self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch.SetAddress(<void*>&self.bjetDeepCSVVeto30Medium_2016_DR0p5_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetDeepCSVVeto30Medium_2017_DR0p5"
 */
  /*else*/ {
    __pyx_v_self->bjetDeepCSVVeto30Medium_2016_DR0p5_branch->SetAddress(((void *)(&__pyx_v_self->bjetDeepCSVVeto30Medium_2016_DR0p5_value)));
  }
  __pyx_L114:;

  /* "EMTree.pyx":1982
 * 
 *         #print "making bjetDeepCSVVeto30Medium_2017_DR0p5"
 *         self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto30Medium_2017_DR0p5")             # <<<<<<<<<<<<<<
 *         #if not self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch and "bjetDeepCSVVeto30Medium_2017_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch and "bjetDeepCSVVeto30Medium_2017_DR0p5":
 */
  __pyx_v_self->bjetDeepCSVVeto30Medium_2017_DR0p5_branch = __pyx_v_the_tree->GetBranch(((char *)"bjetDeepCSVVeto30Medium_2017_DR0p5"));

  /* "EMTree.pyx":1984
 *         self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto30Medium_2017_DR0p5")
 *         #if not self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch and "bjetDeepCSVVeto30Medium_2017_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch and "bjetDeepCSVVeto30Medium_2017_DR0p5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto30Medium_2017_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetDeepCSVVeto30Medium_2017_DR0p5")
 */
  __pyx_t_2 = ((!(__pyx_v_self->bjetDeepCSVVeto30Medium_2017_DR0p5_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L118_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L118_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1985
 *         #if not self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch and "bjetDeepCSVVeto30Medium_2017_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch and "bjetDeepCSVVeto30Medium_2017_DR0p5":
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto30Medium_2017_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetDeepCSVVeto30Medium_2017_DR0p5")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1985, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1985, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__40, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1985, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1984
 *         self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto30Medium_2017_DR0p5")
 *         #if not self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch and "bjetDeepCSVVeto30Medium_2017_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch and "bjetDeepCSVVeto30Medium_2017_DR0p5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto30Medium_2017_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetDeepCSVVeto30Medium_2017_DR0p5")
 */
    goto __pyx_L117;
  }

  /* "EMTree.pyx":1988
 *             #self.complained.add("bjetDeepCSVVeto30Medium_2017_DR0p5")
 *         else:
 *             self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch.SetAddress(<void*>&self.bjetDeepCSVVeto30Medium_2017_DR0p5_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetDeepCSVVeto30Medium_2018_DR0p5"
 */
  /*else*/ {
    __pyx_v_self->bjetDeepCSVVeto30Medium_2017_DR0p5_branch->SetAddress(((void *)(&__pyx_v_self->bjetDeepCSVVeto30Medium_2017_DR0p5_value)));
  }
  __pyx_L117:;

  /* "EMTree.pyx":1991
 * 
 *         #print "making bjetDeepCSVVeto30Medium_2018_DR0p5"
 *         self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto30Medium_2018_DR0p5")             # <<<<<<<<<<<<<<
 *         #if not self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch and "bjetDeepCSVVeto30Medium_2018_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch and "bjetDeepCSVVeto30Medium_2018_DR0p5":
 */
  __pyx_v_self->bjetDeepCSVVeto30Medium_2018_DR0p5_branch = __pyx_v_the_tree->GetBranch(((char *)"bjetDeepCSVVeto30Medium_2018_DR0p5"));

  /* "EMTree.pyx":1993
 *         self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto30Medium_2018_DR0p5")
 *         #if not self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch and "bjetDeepCSVVeto30Medium_2018_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch and "bjetDeepCSVVeto30Medium_2018_DR0p5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto30Medium_2018_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetDeepCSVVeto30Medium_2018_DR0p5")
 */
  __pyx_t_2 = ((!(__pyx_v_self->bjetDeepCSVVeto30Medium_2018_DR0p5_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L121_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L121_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":1994
 *         #if not self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch and "bjetDeepCSVVeto30Medium_2018_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch and "bjetDeepCSVVeto30Medium_2018_DR0p5":
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto30Medium_2018_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetDeepCSVVeto30Medium_2018_DR0p5")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1994, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1994, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__41, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1994, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":1993
 *         self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch = the_tree.GetBranch("bjetDeepCSVVeto30Medium_2018_DR0p5")
 *         #if not self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch and "bjetDeepCSVVeto30Medium_2018_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch and "bjetDeepCSVVeto30Medium_2018_DR0p5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto30Medium_2018_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetDeepCSVVeto30Medium_2018_DR0p5")
 */
    goto __pyx_L120;
  }

  /* "EMTree.pyx":1997
 *             #self.complained.add("bjetDeepCSVVeto30Medium_2018_DR0p5")
 *         else:
 *             self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch.SetAddress(<void*>&self.bjetDeepCSVVeto30Medium_2018_DR0p5_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bweight_2016"
 */
  /*else*/ {
    __pyx_v_self->bjetDeepCSVVeto30Medium_2018_DR0p5_branch->SetAddress(((void *)(&__pyx_v_self->bjetDeepCSVVeto30Medium_2018_DR0p5_value)));
  }
  __pyx_L120:;

  /* "EMTree.pyx":2000
 * 
 *         #print "making bweight_2016"
 *         self.bweight_2016_branch = the_tree.GetBranch("bweight_2016")             # <<<<<<<<<<<<<<
 *         #if not self.bweight_2016_branch and "bweight_2016" not in self.complained:
 *         if not self.bweight_2016_branch and "bweight_2016":
 */
  __pyx_v_self->bweight_2016_branch = __pyx_v_the_tree->GetBranch(((char *)"bweight_2016"));

  /* "EMTree.pyx":2002
 *         self.bweight_2016_branch = the_tree.GetBranch("bweight_2016")
 *         #if not self.bweight_2016_branch and "bweight_2016" not in self.complained:
 *         if not self.bweight_2016_branch and "bweight_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bweight_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bweight_2016")
 */
  __pyx_t_2 = ((!(__pyx_v_self->bweight_2016_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L124_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L124_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2003
 *         #if not self.bweight_2016_branch and "bweight_2016" not in self.complained:
 *         if not self.bweight_2016_branch and "bweight_2016":
 *             warnings.warn( "EMTree: Expected branch bweight_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bweight_2016")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2003, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2003, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__42, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2003, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2002
 *         self.bweight_2016_branch = the_tree.GetBranch("bweight_2016")
 *         #if not self.bweight_2016_branch and "bweight_2016" not in self.complained:
 *         if not self.bweight_2016_branch and "bweight_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bweight_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bweight_2016")
 */
    goto __pyx_L123;
  }

  /* "EMTree.pyx":2006
 *             #self.complained.add("bweight_2016")
 *         else:
 *             self.bweight_2016_branch.SetAddress(<void*>&self.bweight_2016_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bweight_2017"
 */
  /*else*/ {
    __pyx_v_self->bweight_2016_branch->SetAddress(((void *)(&__pyx_v_self->bweight_2016_value)));
  }
  __pyx_L123:;

  /* "EMTree.pyx":2009
 * 
 *         #print "making bweight_2017"
 *         self.bweight_2017_branch = the_tree.GetBranch("bweight_2017")             # <<<<<<<<<<<<<<
 *         #if not self.bweight_2017_branch and "bweight_2017" not in self.complained:
 *         if not self.bweight_2017_branch and "bweight_2017":
 */
  __pyx_v_self->bweight_2017_branch = __pyx_v_the_tree->GetBranch(((char *)"bweight_2017"));

  /* "EMTree.pyx":2011
 *         self.bweight_2017_branch = the_tree.GetBranch("bweight_2017")
 *         #if not self.bweight_2017_branch and "bweight_2017" not in self.complained:
 *         if not self.bweight_2017_branch and "bweight_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bweight_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bweight_2017")
 */
  __pyx_t_2 = ((!(__pyx_v_self->bweight_2017_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L127_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L127_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2012
 *         #if not self.bweight_2017_branch and "bweight_2017" not in self.complained:
 *         if not self.bweight_2017_branch and "bweight_2017":
 *             warnings.warn( "EMTree: Expected branch bweight_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bweight_2017")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2012, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2012, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__43, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2012, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2011
 *         self.bweight_2017_branch = the_tree.GetBranch("bweight_2017")
 *         #if not self.bweight_2017_branch and "bweight_2017" not in self.complained:
 *         if not self.bweight_2017_branch and "bweight_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bweight_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bweight_2017")
 */
    goto __pyx_L126;
  }

  /* "EMTree.pyx":2015
 *             #self.complained.add("bweight_2017")
 *         else:
 *             self.bweight_2017_branch.SetAddress(<void*>&self.bweight_2017_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bweight_2018"
 */
  /*else*/ {
    __pyx_v_self->bweight_2017_branch->SetAddress(((void *)(&__pyx_v_self->bweight_2017_value)));
  }
  __pyx_L126:;

  /* "EMTree.pyx":2018
 * 
 *         #print "making bweight_2018"
 *         self.bweight_2018_branch = the_tree.GetBranch("bweight_2018")             # <<<<<<<<<<<<<<
 *         #if not self.bweight_2018_branch and "bweight_2018" not in self.complained:
 *         if not self.bweight_2018_branch and "bweight_2018":
 */
  __pyx_v_self->bweight_2018_branch = __pyx_v_the_tree->GetBranch(((char *)"bweight_2018"));

  /* "EMTree.pyx":2020
 *         self.bweight_2018_branch = the_tree.GetBranch("bweight_2018")
 *         #if not self.bweight_2018_branch and "bweight_2018" not in self.complained:
 *         if not self.bweight_2018_branch and "bweight_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bweight_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bweight_2018")
 */
  __pyx_t_2 = ((!(__pyx_v_self->bweight_2018_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L130_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L130_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2021
 *         #if not self.bweight_2018_branch and "bweight_2018" not in self.complained:
 *         if not self.bweight_2018_branch and "bweight_2018":
 *             warnings.warn( "EMTree: Expected branch bweight_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bweight_2018")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2021, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2021, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__44, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2021, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2020
 *         self.bweight_2018_branch = the_tree.GetBranch("bweight_2018")
 *         #if not self.bweight_2018_branch and "bweight_2018" not in self.complained:
 *         if not self.bweight_2018_branch and "bweight_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch bweight_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bweight_2018")
 */
    goto __pyx_L129;
  }

  /* "EMTree.pyx":2024
 *             #self.complained.add("bweight_2018")
 *         else:
 *             self.bweight_2018_branch.SetAddress(<void*>&self.bweight_2018_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making charge"
 */
  /*else*/ {
    __pyx_v_self->bweight_2018_branch->SetAddress(((void *)(&__pyx_v_self->bweight_2018_value)));
  }
  __pyx_L129:;

  /* "EMTree.pyx":2027
 * 
 *         #print "making charge"
 *         self.charge_branch = the_tree.GetBranch("charge")             # <<<<<<<<<<<<<<
 *         #if not self.charge_branch and "charge" not in self.complained:
 *         if not self.charge_branch and "charge":
 */
  __pyx_v_self->charge_branch = __pyx_v_the_tree->GetBranch(((char *)"charge"));

  /* "EMTree.pyx":2029
 *         self.charge_branch = the_tree.GetBranch("charge")
 *         #if not self.charge_branch and "charge" not in self.complained:
 *         if not self.charge_branch and "charge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch charge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("charge")
 */
  __pyx_t_2 = ((!(__pyx_v_self->charge_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L133_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L133_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2030
 *         #if not self.charge_branch and "charge" not in self.complained:
 *         if not self.charge_branch and "charge":
 *             warnings.warn( "EMTree: Expected branch charge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("charge")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2030, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2030, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__45, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2030, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2029
 *         self.charge_branch = the_tree.GetBranch("charge")
 *         #if not self.charge_branch and "charge" not in self.complained:
 *         if not self.charge_branch and "charge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch charge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("charge")
 */
    goto __pyx_L132;
  }

  /* "EMTree.pyx":2033
 *             #self.complained.add("charge")
 *         else:
 *             self.charge_branch.SetAddress(<void*>&self.charge_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making deepcsvb1_btagscore"
 */
  /*else*/ {
    __pyx_v_self->charge_branch->SetAddress(((void *)(&__pyx_v_self->charge_value)));
  }
  __pyx_L132:;

  /* "EMTree.pyx":2036
 * 
 *         #print "making deepcsvb1_btagscore"
 *         self.deepcsvb1_btagscore_branch = the_tree.GetBranch("deepcsvb1_btagscore")             # <<<<<<<<<<<<<<
 *         #if not self.deepcsvb1_btagscore_branch and "deepcsvb1_btagscore" not in self.complained:
 *         if not self.deepcsvb1_btagscore_branch and "deepcsvb1_btagscore":
 */
  __pyx_v_self->deepcsvb1_btagscore_branch = __pyx_v_the_tree->GetBranch(((char *)"deepcsvb1_btagscore"));

  /* "EMTree.pyx":2038
 *         self.deepcsvb1_btagscore_branch = the_tree.GetBranch("deepcsvb1_btagscore")
 *         #if not self.deepcsvb1_btagscore_branch and "deepcsvb1_btagscore" not in self.complained:
 *         if not self.deepcsvb1_btagscore_branch and "deepcsvb1_btagscore":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_btagscore does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb1_btagscore")
 */
  __pyx_t_2 = ((!(__pyx_v_self->deepcsvb1_btagscore_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L136_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L136_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2039
 *         #if not self.deepcsvb1_btagscore_branch and "deepcsvb1_btagscore" not in self.complained:
 *         if not self.deepcsvb1_btagscore_branch and "deepcsvb1_btagscore":
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_btagscore does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb1_btagscore")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2039, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2039, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__46, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2039, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2038
 *         self.deepcsvb1_btagscore_branch = the_tree.GetBranch("deepcsvb1_btagscore")
 *         #if not self.deepcsvb1_btagscore_branch and "deepcsvb1_btagscore" not in self.complained:
 *         if not self.deepcsvb1_btagscore_branch and "deepcsvb1_btagscore":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_btagscore does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb1_btagscore")
 */
    goto __pyx_L135;
  }

  /* "EMTree.pyx":2042
 *             #self.complained.add("deepcsvb1_btagscore")
 *         else:
 *             self.deepcsvb1_btagscore_branch.SetAddress(<void*>&self.deepcsvb1_btagscore_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making deepcsvb1_eta"
 */
  /*else*/ {
    __pyx_v_self->deepcsvb1_btagscore_branch->SetAddress(((void *)(&__pyx_v_self->deepcsvb1_btagscore_value)));
  }
  __pyx_L135:;

  /* "EMTree.pyx":2045
 * 
 *         #print "making deepcsvb1_eta"
 *         self.deepcsvb1_eta_branch = the_tree.GetBranch("deepcsvb1_eta")             # <<<<<<<<<<<<<<
 *         #if not self.deepcsvb1_eta_branch and "deepcsvb1_eta" not in self.complained:
 *         if not self.deepcsvb1_eta_branch and "deepcsvb1_eta":
 */
  __pyx_v_self->deepcsvb1_eta_branch = __pyx_v_the_tree->GetBranch(((char *)"deepcsvb1_eta"));

  /* "EMTree.pyx":2047
 *         self.deepcsvb1_eta_branch = the_tree.GetBranch("deepcsvb1_eta")
 *         #if not self.deepcsvb1_eta_branch and "deepcsvb1_eta" not in self.complained:
 *         if not self.deepcsvb1_eta_branch and "deepcsvb1_eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb1_eta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->deepcsvb1_eta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L139_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L139_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2048
 *         #if not self.deepcsvb1_eta_branch and "deepcsvb1_eta" not in self.complained:
 *         if not self.deepcsvb1_eta_branch and "deepcsvb1_eta":
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb1_eta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2048, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2048, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__47, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2048, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2047
 *         self.deepcsvb1_eta_branch = the_tree.GetBranch("deepcsvb1_eta")
 *         #if not self.deepcsvb1_eta_branch and "deepcsvb1_eta" not in self.complained:
 *         if not self.deepcsvb1_eta_branch and "deepcsvb1_eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb1_eta")
 */
    goto __pyx_L138;
  }

  /* "EMTree.pyx":2051
 *             #self.complained.add("deepcsvb1_eta")
 *         else:
 *             self.deepcsvb1_eta_branch.SetAddress(<void*>&self.deepcsvb1_eta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making deepcsvb1_hadronflavour"
 */
  /*else*/ {
    __pyx_v_self->deepcsvb1_eta_branch->SetAddress(((void *)(&__pyx_v_self->deepcsvb1_eta_value)));
  }
  __pyx_L138:;

  /* "EMTree.pyx":2054
 * 
 *         #print "making deepcsvb1_hadronflavour"
 *         self.deepcsvb1_hadronflavour_branch = the_tree.GetBranch("deepcsvb1_hadronflavour")             # <<<<<<<<<<<<<<
 *         #if not self.deepcsvb1_hadronflavour_branch and "deepcsvb1_hadronflavour" not in self.complained:
 *         if not self.deepcsvb1_hadronflavour_branch and "deepcsvb1_hadronflavour":
 */
  __pyx_v_self->deepcsvb1_hadronflavour_branch = __pyx_v_the_tree->GetBranch(((char *)"deepcsvb1_hadronflavour"));

  /* "EMTree.pyx":2056
 *         self.deepcsvb1_hadronflavour_branch = the_tree.GetBranch("deepcsvb1_hadronflavour")
 *         #if not self.deepcsvb1_hadronflavour_branch and "deepcsvb1_hadronflavour" not in self.complained:
 *         if not self.deepcsvb1_hadronflavour_branch and "deepcsvb1_hadronflavour":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_hadronflavour does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb1_hadronflavour")
 */
  __pyx_t_2 = ((!(__pyx_v_self->deepcsvb1_hadronflavour_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L142_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L142_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2057
 *         #if not self.deepcsvb1_hadronflavour_branch and "deepcsvb1_hadronflavour" not in self.complained:
 *         if not self.deepcsvb1_hadronflavour_branch and "deepcsvb1_hadronflavour":
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_hadronflavour does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb1_hadronflavour")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2057, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2057, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__48, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2057, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2056
 *         self.deepcsvb1_hadronflavour_branch = the_tree.GetBranch("deepcsvb1_hadronflavour")
 *         #if not self.deepcsvb1_hadronflavour_branch and "deepcsvb1_hadronflavour" not in self.complained:
 *         if not self.deepcsvb1_hadronflavour_branch and "deepcsvb1_hadronflavour":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_hadronflavour does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb1_hadronflavour")
 */
    goto __pyx_L141;
  }

  /* "EMTree.pyx":2060
 *             #self.complained.add("deepcsvb1_hadronflavour")
 *         else:
 *             self.deepcsvb1_hadronflavour_branch.SetAddress(<void*>&self.deepcsvb1_hadronflavour_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making deepcsvb1_m"
 */
  /*else*/ {
    __pyx_v_self->deepcsvb1_hadronflavour_branch->SetAddress(((void *)(&__pyx_v_self->deepcsvb1_hadronflavour_value)));
  }
  __pyx_L141:;

  /* "EMTree.pyx":2063
 * 
 *         #print "making deepcsvb1_m"
 *         self.deepcsvb1_m_branch = the_tree.GetBranch("deepcsvb1_m")             # <<<<<<<<<<<<<<
 *         #if not self.deepcsvb1_m_branch and "deepcsvb1_m" not in self.complained:
 *         if not self.deepcsvb1_m_branch and "deepcsvb1_m":
 */
  __pyx_v_self->deepcsvb1_m_branch = __pyx_v_the_tree->GetBranch(((char *)"deepcsvb1_m"));

  /* "EMTree.pyx":2065
 *         self.deepcsvb1_m_branch = the_tree.GetBranch("deepcsvb1_m")
 *         #if not self.deepcsvb1_m_branch and "deepcsvb1_m" not in self.complained:
 *         if not self.deepcsvb1_m_branch and "deepcsvb1_m":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_m does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb1_m")
 */
  __pyx_t_2 = ((!(__pyx_v_self->deepcsvb1_m_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L145_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L145_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2066
 *         #if not self.deepcsvb1_m_branch and "deepcsvb1_m" not in self.complained:
 *         if not self.deepcsvb1_m_branch and "deepcsvb1_m":
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_m does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb1_m")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2066, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2066, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__49, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2066, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2065
 *         self.deepcsvb1_m_branch = the_tree.GetBranch("deepcsvb1_m")
 *         #if not self.deepcsvb1_m_branch and "deepcsvb1_m" not in self.complained:
 *         if not self.deepcsvb1_m_branch and "deepcsvb1_m":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_m does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb1_m")
 */
    goto __pyx_L144;
  }

  /* "EMTree.pyx":2069
 *             #self.complained.add("deepcsvb1_m")
 *         else:
 *             self.deepcsvb1_m_branch.SetAddress(<void*>&self.deepcsvb1_m_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making deepcsvb1_phi"
 */
  /*else*/ {
    __pyx_v_self->deepcsvb1_m_branch->SetAddress(((void *)(&__pyx_v_self->deepcsvb1_m_value)));
  }
  __pyx_L144:;

  /* "EMTree.pyx":2072
 * 
 *         #print "making deepcsvb1_phi"
 *         self.deepcsvb1_phi_branch = the_tree.GetBranch("deepcsvb1_phi")             # <<<<<<<<<<<<<<
 *         #if not self.deepcsvb1_phi_branch and "deepcsvb1_phi" not in self.complained:
 *         if not self.deepcsvb1_phi_branch and "deepcsvb1_phi":
 */
  __pyx_v_self->deepcsvb1_phi_branch = __pyx_v_the_tree->GetBranch(((char *)"deepcsvb1_phi"));

  /* "EMTree.pyx":2074
 *         self.deepcsvb1_phi_branch = the_tree.GetBranch("deepcsvb1_phi")
 *         #if not self.deepcsvb1_phi_branch and "deepcsvb1_phi" not in self.complained:
 *         if not self.deepcsvb1_phi_branch and "deepcsvb1_phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb1_phi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->deepcsvb1_phi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L148_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L148_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2075
 *         #if not self.deepcsvb1_phi_branch and "deepcsvb1_phi" not in self.complained:
 *         if not self.deepcsvb1_phi_branch and "deepcsvb1_phi":
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb1_phi")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2075, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2075, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__50, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2075, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2074
 *         self.deepcsvb1_phi_branch = the_tree.GetBranch("deepcsvb1_phi")
 *         #if not self.deepcsvb1_phi_branch and "deepcsvb1_phi" not in self.complained:
 *         if not self.deepcsvb1_phi_branch and "deepcsvb1_phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb1_phi")
 */
    goto __pyx_L147;
  }

  /* "EMTree.pyx":2078
 *             #self.complained.add("deepcsvb1_phi")
 *         else:
 *             self.deepcsvb1_phi_branch.SetAddress(<void*>&self.deepcsvb1_phi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making deepcsvb1_pt"
 */
  /*else*/ {
    __pyx_v_self->deepcsvb1_phi_branch->SetAddress(((void *)(&__pyx_v_self->deepcsvb1_phi_value)));
  }
  __pyx_L147:;

  /* "EMTree.pyx":2081
 * 
 *         #print "making deepcsvb1_pt"
 *         self.deepcsvb1_pt_branch = the_tree.GetBranch("deepcsvb1_pt")             # <<<<<<<<<<<<<<
 *         #if not self.deepcsvb1_pt_branch and "deepcsvb1_pt" not in self.complained:
 *         if not self.deepcsvb1_pt_branch and "deepcsvb1_pt":
 */
  __pyx_v_self->deepcsvb1_pt_branch = __pyx_v_the_tree->GetBranch(((char *)"deepcsvb1_pt"));

  /* "EMTree.pyx":2083
 *         self.deepcsvb1_pt_branch = the_tree.GetBranch("deepcsvb1_pt")
 *         #if not self.deepcsvb1_pt_branch and "deepcsvb1_pt" not in self.complained:
 *         if not self.deepcsvb1_pt_branch and "deepcsvb1_pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb1_pt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->deepcsvb1_pt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L151_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L151_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2084
 *         #if not self.deepcsvb1_pt_branch and "deepcsvb1_pt" not in self.complained:
 *         if not self.deepcsvb1_pt_branch and "deepcsvb1_pt":
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb1_pt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2084, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2084, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__51, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2084, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2083
 *         self.deepcsvb1_pt_branch = the_tree.GetBranch("deepcsvb1_pt")
 *         #if not self.deepcsvb1_pt_branch and "deepcsvb1_pt" not in self.complained:
 *         if not self.deepcsvb1_pt_branch and "deepcsvb1_pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb1_pt")
 */
    goto __pyx_L150;
  }

  /* "EMTree.pyx":2087
 *             #self.complained.add("deepcsvb1_pt")
 *         else:
 *             self.deepcsvb1_pt_branch.SetAddress(<void*>&self.deepcsvb1_pt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making deepcsvb2_btagscore"
 */
  /*else*/ {
    __pyx_v_self->deepcsvb1_pt_branch->SetAddress(((void *)(&__pyx_v_self->deepcsvb1_pt_value)));
  }
  __pyx_L150:;

  /* "EMTree.pyx":2090
 * 
 *         #print "making deepcsvb2_btagscore"
 *         self.deepcsvb2_btagscore_branch = the_tree.GetBranch("deepcsvb2_btagscore")             # <<<<<<<<<<<<<<
 *         #if not self.deepcsvb2_btagscore_branch and "deepcsvb2_btagscore" not in self.complained:
 *         if not self.deepcsvb2_btagscore_branch and "deepcsvb2_btagscore":
 */
  __pyx_v_self->deepcsvb2_btagscore_branch = __pyx_v_the_tree->GetBranch(((char *)"deepcsvb2_btagscore"));

  /* "EMTree.pyx":2092
 *         self.deepcsvb2_btagscore_branch = the_tree.GetBranch("deepcsvb2_btagscore")
 *         #if not self.deepcsvb2_btagscore_branch and "deepcsvb2_btagscore" not in self.complained:
 *         if not self.deepcsvb2_btagscore_branch and "deepcsvb2_btagscore":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_btagscore does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb2_btagscore")
 */
  __pyx_t_2 = ((!(__pyx_v_self->deepcsvb2_btagscore_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L154_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L154_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2093
 *         #if not self.deepcsvb2_btagscore_branch and "deepcsvb2_btagscore" not in self.complained:
 *         if not self.deepcsvb2_btagscore_branch and "deepcsvb2_btagscore":
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_btagscore does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb2_btagscore")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2093, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2093, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__52, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2093, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2092
 *         self.deepcsvb2_btagscore_branch = the_tree.GetBranch("deepcsvb2_btagscore")
 *         #if not self.deepcsvb2_btagscore_branch and "deepcsvb2_btagscore" not in self.complained:
 *         if not self.deepcsvb2_btagscore_branch and "deepcsvb2_btagscore":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_btagscore does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb2_btagscore")
 */
    goto __pyx_L153;
  }

  /* "EMTree.pyx":2096
 *             #self.complained.add("deepcsvb2_btagscore")
 *         else:
 *             self.deepcsvb2_btagscore_branch.SetAddress(<void*>&self.deepcsvb2_btagscore_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making deepcsvb2_eta"
 */
  /*else*/ {
    __pyx_v_self->deepcsvb2_btagscore_branch->SetAddress(((void *)(&__pyx_v_self->deepcsvb2_btagscore_value)));
  }
  __pyx_L153:;

  /* "EMTree.pyx":2099
 * 
 *         #print "making deepcsvb2_eta"
 *         self.deepcsvb2_eta_branch = the_tree.GetBranch("deepcsvb2_eta")             # <<<<<<<<<<<<<<
 *         #if not self.deepcsvb2_eta_branch and "deepcsvb2_eta" not in self.complained:
 *         if not self.deepcsvb2_eta_branch and "deepcsvb2_eta":
 */
  __pyx_v_self->deepcsvb2_eta_branch = __pyx_v_the_tree->GetBranch(((char *)"deepcsvb2_eta"));

  /* "EMTree.pyx":2101
 *         self.deepcsvb2_eta_branch = the_tree.GetBranch("deepcsvb2_eta")
 *         #if not self.deepcsvb2_eta_branch and "deepcsvb2_eta" not in self.complained:
 *         if not self.deepcsvb2_eta_branch and "deepcsvb2_eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb2_eta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->deepcsvb2_eta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L157_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L157_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2102
 *         #if not self.deepcsvb2_eta_branch and "deepcsvb2_eta" not in self.complained:
 *         if not self.deepcsvb2_eta_branch and "deepcsvb2_eta":
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb2_eta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2102, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2102, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__53, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2102, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2101
 *         self.deepcsvb2_eta_branch = the_tree.GetBranch("deepcsvb2_eta")
 *         #if not self.deepcsvb2_eta_branch and "deepcsvb2_eta" not in self.complained:
 *         if not self.deepcsvb2_eta_branch and "deepcsvb2_eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb2_eta")
 */
    goto __pyx_L156;
  }

  /* "EMTree.pyx":2105
 *             #self.complained.add("deepcsvb2_eta")
 *         else:
 *             self.deepcsvb2_eta_branch.SetAddress(<void*>&self.deepcsvb2_eta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making deepcsvb2_hadronflavour"
 */
  /*else*/ {
    __pyx_v_self->deepcsvb2_eta_branch->SetAddress(((void *)(&__pyx_v_self->deepcsvb2_eta_value)));
  }
  __pyx_L156:;

  /* "EMTree.pyx":2108
 * 
 *         #print "making deepcsvb2_hadronflavour"
 *         self.deepcsvb2_hadronflavour_branch = the_tree.GetBranch("deepcsvb2_hadronflavour")             # <<<<<<<<<<<<<<
 *         #if not self.deepcsvb2_hadronflavour_branch and "deepcsvb2_hadronflavour" not in self.complained:
 *         if not self.deepcsvb2_hadronflavour_branch and "deepcsvb2_hadronflavour":
 */
  __pyx_v_self->deepcsvb2_hadronflavour_branch = __pyx_v_the_tree->GetBranch(((char *)"deepcsvb2_hadronflavour"));

  /* "EMTree.pyx":2110
 *         self.deepcsvb2_hadronflavour_branch = the_tree.GetBranch("deepcsvb2_hadronflavour")
 *         #if not self.deepcsvb2_hadronflavour_branch and "deepcsvb2_hadronflavour" not in self.complained:
 *         if not self.deepcsvb2_hadronflavour_branch and "deepcsvb2_hadronflavour":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_hadronflavour does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb2_hadronflavour")
 */
  __pyx_t_2 = ((!(__pyx_v_self->deepcsvb2_hadronflavour_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L160_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L160_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2111
 *         #if not self.deepcsvb2_hadronflavour_branch and "deepcsvb2_hadronflavour" not in self.complained:
 *         if not self.deepcsvb2_hadronflavour_branch and "deepcsvb2_hadronflavour":
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_hadronflavour does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb2_hadronflavour")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2111, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2111, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__54, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2111, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2110
 *         self.deepcsvb2_hadronflavour_branch = the_tree.GetBranch("deepcsvb2_hadronflavour")
 *         #if not self.deepcsvb2_hadronflavour_branch and "deepcsvb2_hadronflavour" not in self.complained:
 *         if not self.deepcsvb2_hadronflavour_branch and "deepcsvb2_hadronflavour":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_hadronflavour does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb2_hadronflavour")
 */
    goto __pyx_L159;
  }

  /* "EMTree.pyx":2114
 *             #self.complained.add("deepcsvb2_hadronflavour")
 *         else:
 *             self.deepcsvb2_hadronflavour_branch.SetAddress(<void*>&self.deepcsvb2_hadronflavour_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making deepcsvb2_m"
 */
  /*else*/ {
    __pyx_v_self->deepcsvb2_hadronflavour_branch->SetAddress(((void *)(&__pyx_v_self->deepcsvb2_hadronflavour_value)));
  }
  __pyx_L159:;

  /* "EMTree.pyx":2117
 * 
 *         #print "making deepcsvb2_m"
 *         self.deepcsvb2_m_branch = the_tree.GetBranch("deepcsvb2_m")             # <<<<<<<<<<<<<<
 *         #if not self.deepcsvb2_m_branch and "deepcsvb2_m" not in self.complained:
 *         if not self.deepcsvb2_m_branch and "deepcsvb2_m":
 */
  __pyx_v_self->deepcsvb2_m_branch = __pyx_v_the_tree->GetBranch(((char *)"deepcsvb2_m"));

  /* "EMTree.pyx":2119
 *         self.deepcsvb2_m_branch = the_tree.GetBranch("deepcsvb2_m")
 *         #if not self.deepcsvb2_m_branch and "deepcsvb2_m" not in self.complained:
 *         if not self.deepcsvb2_m_branch and "deepcsvb2_m":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_m does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb2_m")
 */
  __pyx_t_2 = ((!(__pyx_v_self->deepcsvb2_m_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L163_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L163_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2120
 *         #if not self.deepcsvb2_m_branch and "deepcsvb2_m" not in self.complained:
 *         if not self.deepcsvb2_m_branch and "deepcsvb2_m":
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_m does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb2_m")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2120, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2120, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__55, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2120, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2119
 *         self.deepcsvb2_m_branch = the_tree.GetBranch("deepcsvb2_m")
 *         #if not self.deepcsvb2_m_branch and "deepcsvb2_m" not in self.complained:
 *         if not self.deepcsvb2_m_branch and "deepcsvb2_m":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_m does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb2_m")
 */
    goto __pyx_L162;
  }

  /* "EMTree.pyx":2123
 *             #self.complained.add("deepcsvb2_m")
 *         else:
 *             self.deepcsvb2_m_branch.SetAddress(<void*>&self.deepcsvb2_m_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making deepcsvb2_phi"
 */
  /*else*/ {
    __pyx_v_self->deepcsvb2_m_branch->SetAddress(((void *)(&__pyx_v_self->deepcsvb2_m_value)));
  }
  __pyx_L162:;

  /* "EMTree.pyx":2126
 * 
 *         #print "making deepcsvb2_phi"
 *         self.deepcsvb2_phi_branch = the_tree.GetBranch("deepcsvb2_phi")             # <<<<<<<<<<<<<<
 *         #if not self.deepcsvb2_phi_branch and "deepcsvb2_phi" not in self.complained:
 *         if not self.deepcsvb2_phi_branch and "deepcsvb2_phi":
 */
  __pyx_v_self->deepcsvb2_phi_branch = __pyx_v_the_tree->GetBranch(((char *)"deepcsvb2_phi"));

  /* "EMTree.pyx":2128
 *         self.deepcsvb2_phi_branch = the_tree.GetBranch("deepcsvb2_phi")
 *         #if not self.deepcsvb2_phi_branch and "deepcsvb2_phi" not in self.complained:
 *         if not self.deepcsvb2_phi_branch and "deepcsvb2_phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb2_phi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->deepcsvb2_phi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L166_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L166_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2129
 *         #if not self.deepcsvb2_phi_branch and "deepcsvb2_phi" not in self.complained:
 *         if not self.deepcsvb2_phi_branch and "deepcsvb2_phi":
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb2_phi")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__56, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2128
 *         self.deepcsvb2_phi_branch = the_tree.GetBranch("deepcsvb2_phi")
 *         #if not self.deepcsvb2_phi_branch and "deepcsvb2_phi" not in self.complained:
 *         if not self.deepcsvb2_phi_branch and "deepcsvb2_phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb2_phi")
 */
    goto __pyx_L165;
  }

  /* "EMTree.pyx":2132
 *             #self.complained.add("deepcsvb2_phi")
 *         else:
 *             self.deepcsvb2_phi_branch.SetAddress(<void*>&self.deepcsvb2_phi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making deepcsvb2_pt"
 */
  /*else*/ {
    __pyx_v_self->deepcsvb2_phi_branch->SetAddress(((void *)(&__pyx_v_self->deepcsvb2_phi_value)));
  }
  __pyx_L165:;

  /* "EMTree.pyx":2135
 * 
 *         #print "making deepcsvb2_pt"
 *         self.deepcsvb2_pt_branch = the_tree.GetBranch("deepcsvb2_pt")             # <<<<<<<<<<<<<<
 *         #if not self.deepcsvb2_pt_branch and "deepcsvb2_pt" not in self.complained:
 *         if not self.deepcsvb2_pt_branch and "deepcsvb2_pt":
 */
  __pyx_v_self->deepcsvb2_pt_branch = __pyx_v_the_tree->GetBranch(((char *)"deepcsvb2_pt"));

  /* "EMTree.pyx":2137
 *         self.deepcsvb2_pt_branch = the_tree.GetBranch("deepcsvb2_pt")
 *         #if not self.deepcsvb2_pt_branch and "deepcsvb2_pt" not in self.complained:
 *         if not self.deepcsvb2_pt_branch and "deepcsvb2_pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb2_pt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->deepcsvb2_pt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L169_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L169_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2138
 *         #if not self.deepcsvb2_pt_branch and "deepcsvb2_pt" not in self.complained:
 *         if not self.deepcsvb2_pt_branch and "deepcsvb2_pt":
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb2_pt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2138, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2138, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__57, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2138, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2137
 *         self.deepcsvb2_pt_branch = the_tree.GetBranch("deepcsvb2_pt")
 *         #if not self.deepcsvb2_pt_branch and "deepcsvb2_pt" not in self.complained:
 *         if not self.deepcsvb2_pt_branch and "deepcsvb2_pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("deepcsvb2_pt")
 */
    goto __pyx_L168;
  }

  /* "EMTree.pyx":2141
 *             #self.complained.add("deepcsvb2_pt")
 *         else:
 *             self.deepcsvb2_pt_branch.SetAddress(<void*>&self.deepcsvb2_pt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making dielectronVeto"
 */
  /*else*/ {
    __pyx_v_self->deepcsvb2_pt_branch->SetAddress(((void *)(&__pyx_v_self->deepcsvb2_pt_value)));
  }
  __pyx_L168:;

  /* "EMTree.pyx":2144
 * 
 *         #print "making dielectronVeto"
 *         self.dielectronVeto_branch = the_tree.GetBranch("dielectronVeto")             # <<<<<<<<<<<<<<
 *         #if not self.dielectronVeto_branch and "dielectronVeto" not in self.complained:
 *         if not self.dielectronVeto_branch and "dielectronVeto":
 */
  __pyx_v_self->dielectronVeto_branch = __pyx_v_the_tree->GetBranch(((char *)"dielectronVeto"));

  /* "EMTree.pyx":2146
 *         self.dielectronVeto_branch = the_tree.GetBranch("dielectronVeto")
 *         #if not self.dielectronVeto_branch and "dielectronVeto" not in self.complained:
 *         if not self.dielectronVeto_branch and "dielectronVeto":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch dielectronVeto does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("dielectronVeto")
 */
  __pyx_t_2 = ((!(__pyx_v_self->dielectronVeto_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L172_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L172_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2147
 *         #if not self.dielectronVeto_branch and "dielectronVeto" not in self.complained:
 *         if not self.dielectronVeto_branch and "dielectronVeto":
 *             warnings.warn( "EMTree: Expected branch dielectronVeto does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("dielectronVeto")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2147, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2147, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__58, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2147, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2146
 *         self.dielectronVeto_branch = the_tree.GetBranch("dielectronVeto")
 *         #if not self.dielectronVeto_branch and "dielectronVeto" not in self.complained:
 *         if not self.dielectronVeto_branch and "dielectronVeto":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch dielectronVeto does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("dielectronVeto")
 */
    goto __pyx_L171;
  }

  /* "EMTree.pyx":2150
 *             #self.complained.add("dielectronVeto")
 *         else:
 *             self.dielectronVeto_branch.SetAddress(<void*>&self.dielectronVeto_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making dimuonVeto"
 */
  /*else*/ {
    __pyx_v_self->dielectronVeto_branch->SetAddress(((void *)(&__pyx_v_self->dielectronVeto_value)));
  }
  __pyx_L171:;

  /* "EMTree.pyx":2153
 * 
 *         #print "making dimuonVeto"
 *         self.dimuonVeto_branch = the_tree.GetBranch("dimuonVeto")             # <<<<<<<<<<<<<<
 *         #if not self.dimuonVeto_branch and "dimuonVeto" not in self.complained:
 *         if not self.dimuonVeto_branch and "dimuonVeto":
 */
  __pyx_v_self->dimuonVeto_branch = __pyx_v_the_tree->GetBranch(((char *)"dimuonVeto"));

  /* "EMTree.pyx":2155
 *         self.dimuonVeto_branch = the_tree.GetBranch("dimuonVeto")
 *         #if not self.dimuonVeto_branch and "dimuonVeto" not in self.complained:
 *         if not self.dimuonVeto_branch and "dimuonVeto":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch dimuonVeto does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("dimuonVeto")
 */
  __pyx_t_2 = ((!(__pyx_v_self->dimuonVeto_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L175_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L175_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2156
 *         #if not self.dimuonVeto_branch and "dimuonVeto" not in self.complained:
 *         if not self.dimuonVeto_branch and "dimuonVeto":
 *             warnings.warn( "EMTree: Expected branch dimuonVeto does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("dimuonVeto")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__59, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2155
 *         self.dimuonVeto_branch = the_tree.GetBranch("dimuonVeto")
 *         #if not self.dimuonVeto_branch and "dimuonVeto" not in self.complained:
 *         if not self.dimuonVeto_branch and "dimuonVeto":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch dimuonVeto does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("dimuonVeto")
 */
    goto __pyx_L174;
  }

  /* "EMTree.pyx":2159
 *             #self.complained.add("dimuonVeto")
 *         else:
 *             self.dimuonVeto_branch.SetAddress(<void*>&self.dimuonVeto_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eCharge"
 */
  /*else*/ {
    __pyx_v_self->dimuonVeto_branch->SetAddress(((void *)(&__pyx_v_self->dimuonVeto_value)));
  }
  __pyx_L174:;

  /* "EMTree.pyx":2162
 * 
 *         #print "making eCharge"
 *         self.eCharge_branch = the_tree.GetBranch("eCharge")             # <<<<<<<<<<<<<<
 *         #if not self.eCharge_branch and "eCharge" not in self.complained:
 *         if not self.eCharge_branch and "eCharge":
 */
  __pyx_v_self->eCharge_branch = __pyx_v_the_tree->GetBranch(((char *)"eCharge"));

  /* "EMTree.pyx":2164
 *         self.eCharge_branch = the_tree.GetBranch("eCharge")
 *         #if not self.eCharge_branch and "eCharge" not in self.complained:
 *         if not self.eCharge_branch and "eCharge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eCharge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eCharge")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eCharge_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L178_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L178_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2165
 *         #if not self.eCharge_branch and "eCharge" not in self.complained:
 *         if not self.eCharge_branch and "eCharge":
 *             warnings.warn( "EMTree: Expected branch eCharge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eCharge")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2165, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2165, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__60, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2165, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2164
 *         self.eCharge_branch = the_tree.GetBranch("eCharge")
 *         #if not self.eCharge_branch and "eCharge" not in self.complained:
 *         if not self.eCharge_branch and "eCharge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eCharge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eCharge")
 */
    goto __pyx_L177;
  }

  /* "EMTree.pyx":2168
 *             #self.complained.add("eCharge")
 *         else:
 *             self.eCharge_branch.SetAddress(<void*>&self.eCharge_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eComesFromHiggs"
 */
  /*else*/ {
    __pyx_v_self->eCharge_branch->SetAddress(((void *)(&__pyx_v_self->eCharge_value)));
  }
  __pyx_L177:;

  /* "EMTree.pyx":2171
 * 
 *         #print "making eComesFromHiggs"
 *         self.eComesFromHiggs_branch = the_tree.GetBranch("eComesFromHiggs")             # <<<<<<<<<<<<<<
 *         #if not self.eComesFromHiggs_branch and "eComesFromHiggs" not in self.complained:
 *         if not self.eComesFromHiggs_branch and "eComesFromHiggs":
 */
  __pyx_v_self->eComesFromHiggs_branch = __pyx_v_the_tree->GetBranch(((char *)"eComesFromHiggs"));

  /* "EMTree.pyx":2173
 *         self.eComesFromHiggs_branch = the_tree.GetBranch("eComesFromHiggs")
 *         #if not self.eComesFromHiggs_branch and "eComesFromHiggs" not in self.complained:
 *         if not self.eComesFromHiggs_branch and "eComesFromHiggs":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eComesFromHiggs does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eComesFromHiggs")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eComesFromHiggs_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L181_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L181_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2174
 *         #if not self.eComesFromHiggs_branch and "eComesFromHiggs" not in self.complained:
 *         if not self.eComesFromHiggs_branch and "eComesFromHiggs":
 *             warnings.warn( "EMTree: Expected branch eComesFromHiggs does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eComesFromHiggs")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__61, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2173
 *         self.eComesFromHiggs_branch = the_tree.GetBranch("eComesFromHiggs")
 *         #if not self.eComesFromHiggs_branch and "eComesFromHiggs" not in self.complained:
 *         if not self.eComesFromHiggs_branch and "eComesFromHiggs":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eComesFromHiggs does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eComesFromHiggs")
 */
    goto __pyx_L180;
  }

  /* "EMTree.pyx":2177
 *             #self.complained.add("eComesFromHiggs")
 *         else:
 *             self.eComesFromHiggs_branch.SetAddress(<void*>&self.eComesFromHiggs_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eCorrectedEt"
 */
  /*else*/ {
    __pyx_v_self->eComesFromHiggs_branch->SetAddress(((void *)(&__pyx_v_self->eComesFromHiggs_value)));
  }
  __pyx_L180:;

  /* "EMTree.pyx":2180
 * 
 *         #print "making eCorrectedEt"
 *         self.eCorrectedEt_branch = the_tree.GetBranch("eCorrectedEt")             # <<<<<<<<<<<<<<
 *         #if not self.eCorrectedEt_branch and "eCorrectedEt" not in self.complained:
 *         if not self.eCorrectedEt_branch and "eCorrectedEt":
 */
  __pyx_v_self->eCorrectedEt_branch = __pyx_v_the_tree->GetBranch(((char *)"eCorrectedEt"));

  /* "EMTree.pyx":2182
 *         self.eCorrectedEt_branch = the_tree.GetBranch("eCorrectedEt")
 *         #if not self.eCorrectedEt_branch and "eCorrectedEt" not in self.complained:
 *         if not self.eCorrectedEt_branch and "eCorrectedEt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eCorrectedEt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eCorrectedEt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eCorrectedEt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L184_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L184_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2183
 *         #if not self.eCorrectedEt_branch and "eCorrectedEt" not in self.complained:
 *         if not self.eCorrectedEt_branch and "eCorrectedEt":
 *             warnings.warn( "EMTree: Expected branch eCorrectedEt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eCorrectedEt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__62, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2182
 *         self.eCorrectedEt_branch = the_tree.GetBranch("eCorrectedEt")
 *         #if not self.eCorrectedEt_branch and "eCorrectedEt" not in self.complained:
 *         if not self.eCorrectedEt_branch and "eCorrectedEt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eCorrectedEt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eCorrectedEt")
 */
    goto __pyx_L183;
  }

  /* "EMTree.pyx":2186
 *             #self.complained.add("eCorrectedEt")
 *         else:
 *             self.eCorrectedEt_branch.SetAddress(<void*>&self.eCorrectedEt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eEnergyError"
 */
  /*else*/ {
    __pyx_v_self->eCorrectedEt_branch->SetAddress(((void *)(&__pyx_v_self->eCorrectedEt_value)));
  }
  __pyx_L183:;

  /* "EMTree.pyx":2189
 * 
 *         #print "making eEnergyError"
 *         self.eEnergyError_branch = the_tree.GetBranch("eEnergyError")             # <<<<<<<<<<<<<<
 *         #if not self.eEnergyError_branch and "eEnergyError" not in self.complained:
 *         if not self.eEnergyError_branch and "eEnergyError":
 */
  __pyx_v_self->eEnergyError_branch = __pyx_v_the_tree->GetBranch(((char *)"eEnergyError"));

  /* "EMTree.pyx":2191
 *         self.eEnergyError_branch = the_tree.GetBranch("eEnergyError")
 *         #if not self.eEnergyError_branch and "eEnergyError" not in self.complained:
 *         if not self.eEnergyError_branch and "eEnergyError":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyError does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyError")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eEnergyError_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L187_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L187_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2192
 *         #if not self.eEnergyError_branch and "eEnergyError" not in self.complained:
 *         if not self.eEnergyError_branch and "eEnergyError":
 *             warnings.warn( "EMTree: Expected branch eEnergyError does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyError")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2192, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2192, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__63, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2192, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2191
 *         self.eEnergyError_branch = the_tree.GetBranch("eEnergyError")
 *         #if not self.eEnergyError_branch and "eEnergyError" not in self.complained:
 *         if not self.eEnergyError_branch and "eEnergyError":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyError does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyError")
 */
    goto __pyx_L186;
  }

  /* "EMTree.pyx":2195
 *             #self.complained.add("eEnergyError")
 *         else:
 *             self.eEnergyError_branch.SetAddress(<void*>&self.eEnergyError_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eEnergyScaleDown"
 */
  /*else*/ {
    __pyx_v_self->eEnergyError_branch->SetAddress(((void *)(&__pyx_v_self->eEnergyError_value)));
  }
  __pyx_L186:;

  /* "EMTree.pyx":2198
 * 
 *         #print "making eEnergyScaleDown"
 *         self.eEnergyScaleDown_branch = the_tree.GetBranch("eEnergyScaleDown")             # <<<<<<<<<<<<<<
 *         #if not self.eEnergyScaleDown_branch and "eEnergyScaleDown" not in self.complained:
 *         if not self.eEnergyScaleDown_branch and "eEnergyScaleDown":
 */
  __pyx_v_self->eEnergyScaleDown_branch = __pyx_v_the_tree->GetBranch(((char *)"eEnergyScaleDown"));

  /* "EMTree.pyx":2200
 *         self.eEnergyScaleDown_branch = the_tree.GetBranch("eEnergyScaleDown")
 *         #if not self.eEnergyScaleDown_branch and "eEnergyScaleDown" not in self.complained:
 *         if not self.eEnergyScaleDown_branch and "eEnergyScaleDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyScaleDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eEnergyScaleDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L190_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L190_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2201
 *         #if not self.eEnergyScaleDown_branch and "eEnergyScaleDown" not in self.complained:
 *         if not self.eEnergyScaleDown_branch and "eEnergyScaleDown":
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyScaleDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2201, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2201, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__64, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2201, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2200
 *         self.eEnergyScaleDown_branch = the_tree.GetBranch("eEnergyScaleDown")
 *         #if not self.eEnergyScaleDown_branch and "eEnergyScaleDown" not in self.complained:
 *         if not self.eEnergyScaleDown_branch and "eEnergyScaleDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyScaleDown")
 */
    goto __pyx_L189;
  }

  /* "EMTree.pyx":2204
 *             #self.complained.add("eEnergyScaleDown")
 *         else:
 *             self.eEnergyScaleDown_branch.SetAddress(<void*>&self.eEnergyScaleDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eEnergyScaleGainDown"
 */
  /*else*/ {
    __pyx_v_self->eEnergyScaleDown_branch->SetAddress(((void *)(&__pyx_v_self->eEnergyScaleDown_value)));
  }
  __pyx_L189:;

  /* "EMTree.pyx":2207
 * 
 *         #print "making eEnergyScaleGainDown"
 *         self.eEnergyScaleGainDown_branch = the_tree.GetBranch("eEnergyScaleGainDown")             # <<<<<<<<<<<<<<
 *         #if not self.eEnergyScaleGainDown_branch and "eEnergyScaleGainDown" not in self.complained:
 *         if not self.eEnergyScaleGainDown_branch and "eEnergyScaleGainDown":
 */
  __pyx_v_self->eEnergyScaleGainDown_branch = __pyx_v_the_tree->GetBranch(((char *)"eEnergyScaleGainDown"));

  /* "EMTree.pyx":2209
 *         self.eEnergyScaleGainDown_branch = the_tree.GetBranch("eEnergyScaleGainDown")
 *         #if not self.eEnergyScaleGainDown_branch and "eEnergyScaleGainDown" not in self.complained:
 *         if not self.eEnergyScaleGainDown_branch and "eEnergyScaleGainDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleGainDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyScaleGainDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eEnergyScaleGainDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L193_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L193_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2210
 *         #if not self.eEnergyScaleGainDown_branch and "eEnergyScaleGainDown" not in self.complained:
 *         if not self.eEnergyScaleGainDown_branch and "eEnergyScaleGainDown":
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleGainDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyScaleGainDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2210, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2210, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__65, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2210, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2209
 *         self.eEnergyScaleGainDown_branch = the_tree.GetBranch("eEnergyScaleGainDown")
 *         #if not self.eEnergyScaleGainDown_branch and "eEnergyScaleGainDown" not in self.complained:
 *         if not self.eEnergyScaleGainDown_branch and "eEnergyScaleGainDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleGainDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyScaleGainDown")
 */
    goto __pyx_L192;
  }

  /* "EMTree.pyx":2213
 *             #self.complained.add("eEnergyScaleGainDown")
 *         else:
 *             self.eEnergyScaleGainDown_branch.SetAddress(<void*>&self.eEnergyScaleGainDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eEnergyScaleGainUp"
 */
  /*else*/ {
    __pyx_v_self->eEnergyScaleGainDown_branch->SetAddress(((void *)(&__pyx_v_self->eEnergyScaleGainDown_value)));
  }
  __pyx_L192:;

  /* "EMTree.pyx":2216
 * 
 *         #print "making eEnergyScaleGainUp"
 *         self.eEnergyScaleGainUp_branch = the_tree.GetBranch("eEnergyScaleGainUp")             # <<<<<<<<<<<<<<
 *         #if not self.eEnergyScaleGainUp_branch and "eEnergyScaleGainUp" not in self.complained:
 *         if not self.eEnergyScaleGainUp_branch and "eEnergyScaleGainUp":
 */
  __pyx_v_self->eEnergyScaleGainUp_branch = __pyx_v_the_tree->GetBranch(((char *)"eEnergyScaleGainUp"));

  /* "EMTree.pyx":2218
 *         self.eEnergyScaleGainUp_branch = the_tree.GetBranch("eEnergyScaleGainUp")
 *         #if not self.eEnergyScaleGainUp_branch and "eEnergyScaleGainUp" not in self.complained:
 *         if not self.eEnergyScaleGainUp_branch and "eEnergyScaleGainUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleGainUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyScaleGainUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eEnergyScaleGainUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L196_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L196_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2219
 *         #if not self.eEnergyScaleGainUp_branch and "eEnergyScaleGainUp" not in self.complained:
 *         if not self.eEnergyScaleGainUp_branch and "eEnergyScaleGainUp":
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleGainUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyScaleGainUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2219, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2219, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__66, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2219, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2218
 *         self.eEnergyScaleGainUp_branch = the_tree.GetBranch("eEnergyScaleGainUp")
 *         #if not self.eEnergyScaleGainUp_branch and "eEnergyScaleGainUp" not in self.complained:
 *         if not self.eEnergyScaleGainUp_branch and "eEnergyScaleGainUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleGainUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyScaleGainUp")
 */
    goto __pyx_L195;
  }

  /* "EMTree.pyx":2222
 *             #self.complained.add("eEnergyScaleGainUp")
 *         else:
 *             self.eEnergyScaleGainUp_branch.SetAddress(<void*>&self.eEnergyScaleGainUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eEnergyScaleStatDown"
 */
  /*else*/ {
    __pyx_v_self->eEnergyScaleGainUp_branch->SetAddress(((void *)(&__pyx_v_self->eEnergyScaleGainUp_value)));
  }
  __pyx_L195:;

  /* "EMTree.pyx":2225
 * 
 *         #print "making eEnergyScaleStatDown"
 *         self.eEnergyScaleStatDown_branch = the_tree.GetBranch("eEnergyScaleStatDown")             # <<<<<<<<<<<<<<
 *         #if not self.eEnergyScaleStatDown_branch and "eEnergyScaleStatDown" not in self.complained:
 *         if not self.eEnergyScaleStatDown_branch and "eEnergyScaleStatDown":
 */
  __pyx_v_self->eEnergyScaleStatDown_branch = __pyx_v_the_tree->GetBranch(((char *)"eEnergyScaleStatDown"));

  /* "EMTree.pyx":2227
 *         self.eEnergyScaleStatDown_branch = the_tree.GetBranch("eEnergyScaleStatDown")
 *         #if not self.eEnergyScaleStatDown_branch and "eEnergyScaleStatDown" not in self.complained:
 *         if not self.eEnergyScaleStatDown_branch and "eEnergyScaleStatDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleStatDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyScaleStatDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eEnergyScaleStatDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L199_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L199_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2228
 *         #if not self.eEnergyScaleStatDown_branch and "eEnergyScaleStatDown" not in self.complained:
 *         if not self.eEnergyScaleStatDown_branch and "eEnergyScaleStatDown":
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleStatDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyScaleStatDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2228, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2228, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__67, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2228, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2227
 *         self.eEnergyScaleStatDown_branch = the_tree.GetBranch("eEnergyScaleStatDown")
 *         #if not self.eEnergyScaleStatDown_branch and "eEnergyScaleStatDown" not in self.complained:
 *         if not self.eEnergyScaleStatDown_branch and "eEnergyScaleStatDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleStatDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyScaleStatDown")
 */
    goto __pyx_L198;
  }

  /* "EMTree.pyx":2231
 *             #self.complained.add("eEnergyScaleStatDown")
 *         else:
 *             self.eEnergyScaleStatDown_branch.SetAddress(<void*>&self.eEnergyScaleStatDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eEnergyScaleStatUp"
 */
  /*else*/ {
    __pyx_v_self->eEnergyScaleStatDown_branch->SetAddress(((void *)(&__pyx_v_self->eEnergyScaleStatDown_value)));
  }
  __pyx_L198:;

  /* "EMTree.pyx":2234
 * 
 *         #print "making eEnergyScaleStatUp"
 *         self.eEnergyScaleStatUp_branch = the_tree.GetBranch("eEnergyScaleStatUp")             # <<<<<<<<<<<<<<
 *         #if not self.eEnergyScaleStatUp_branch and "eEnergyScaleStatUp" not in self.complained:
 *         if not self.eEnergyScaleStatUp_branch and "eEnergyScaleStatUp":
 */
  __pyx_v_self->eEnergyScaleStatUp_branch = __pyx_v_the_tree->GetBranch(((char *)"eEnergyScaleStatUp"));

  /* "EMTree.pyx":2236
 *         self.eEnergyScaleStatUp_branch = the_tree.GetBranch("eEnergyScaleStatUp")
 *         #if not self.eEnergyScaleStatUp_branch and "eEnergyScaleStatUp" not in self.complained:
 *         if not self.eEnergyScaleStatUp_branch and "eEnergyScaleStatUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleStatUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyScaleStatUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eEnergyScaleStatUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L202_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L202_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2237
 *         #if not self.eEnergyScaleStatUp_branch and "eEnergyScaleStatUp" not in self.complained:
 *         if not self.eEnergyScaleStatUp_branch and "eEnergyScaleStatUp":
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleStatUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyScaleStatUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2237, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2237, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__68, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2237, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2236
 *         self.eEnergyScaleStatUp_branch = the_tree.GetBranch("eEnergyScaleStatUp")
 *         #if not self.eEnergyScaleStatUp_branch and "eEnergyScaleStatUp" not in self.complained:
 *         if not self.eEnergyScaleStatUp_branch and "eEnergyScaleStatUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleStatUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyScaleStatUp")
 */
    goto __pyx_L201;
  }

  /* "EMTree.pyx":2240
 *             #self.complained.add("eEnergyScaleStatUp")
 *         else:
 *             self.eEnergyScaleStatUp_branch.SetAddress(<void*>&self.eEnergyScaleStatUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eEnergyScaleSystDown"
 */
  /*else*/ {
    __pyx_v_self->eEnergyScaleStatUp_branch->SetAddress(((void *)(&__pyx_v_self->eEnergyScaleStatUp_value)));
  }
  __pyx_L201:;

  /* "EMTree.pyx":2243
 * 
 *         #print "making eEnergyScaleSystDown"
 *         self.eEnergyScaleSystDown_branch = the_tree.GetBranch("eEnergyScaleSystDown")             # <<<<<<<<<<<<<<
 *         #if not self.eEnergyScaleSystDown_branch and "eEnergyScaleSystDown" not in self.complained:
 *         if not self.eEnergyScaleSystDown_branch and "eEnergyScaleSystDown":
 */
  __pyx_v_self->eEnergyScaleSystDown_branch = __pyx_v_the_tree->GetBranch(((char *)"eEnergyScaleSystDown"));

  /* "EMTree.pyx":2245
 *         self.eEnergyScaleSystDown_branch = the_tree.GetBranch("eEnergyScaleSystDown")
 *         #if not self.eEnergyScaleSystDown_branch and "eEnergyScaleSystDown" not in self.complained:
 *         if not self.eEnergyScaleSystDown_branch and "eEnergyScaleSystDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleSystDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyScaleSystDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eEnergyScaleSystDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L205_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L205_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2246
 *         #if not self.eEnergyScaleSystDown_branch and "eEnergyScaleSystDown" not in self.complained:
 *         if not self.eEnergyScaleSystDown_branch and "eEnergyScaleSystDown":
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleSystDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyScaleSystDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2246, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2246, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__69, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2246, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2245
 *         self.eEnergyScaleSystDown_branch = the_tree.GetBranch("eEnergyScaleSystDown")
 *         #if not self.eEnergyScaleSystDown_branch and "eEnergyScaleSystDown" not in self.complained:
 *         if not self.eEnergyScaleSystDown_branch and "eEnergyScaleSystDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleSystDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyScaleSystDown")
 */
    goto __pyx_L204;
  }

  /* "EMTree.pyx":2249
 *             #self.complained.add("eEnergyScaleSystDown")
 *         else:
 *             self.eEnergyScaleSystDown_branch.SetAddress(<void*>&self.eEnergyScaleSystDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eEnergyScaleSystUp"
 */
  /*else*/ {
    __pyx_v_self->eEnergyScaleSystDown_branch->SetAddress(((void *)(&__pyx_v_self->eEnergyScaleSystDown_value)));
  }
  __pyx_L204:;

  /* "EMTree.pyx":2252
 * 
 *         #print "making eEnergyScaleSystUp"
 *         self.eEnergyScaleSystUp_branch = the_tree.GetBranch("eEnergyScaleSystUp")             # <<<<<<<<<<<<<<
 *         #if not self.eEnergyScaleSystUp_branch and "eEnergyScaleSystUp" not in self.complained:
 *         if not self.eEnergyScaleSystUp_branch and "eEnergyScaleSystUp":
 */
  __pyx_v_self->eEnergyScaleSystUp_branch = __pyx_v_the_tree->GetBranch(((char *)"eEnergyScaleSystUp"));

  /* "EMTree.pyx":2254
 *         self.eEnergyScaleSystUp_branch = the_tree.GetBranch("eEnergyScaleSystUp")
 *         #if not self.eEnergyScaleSystUp_branch and "eEnergyScaleSystUp" not in self.complained:
 *         if not self.eEnergyScaleSystUp_branch and "eEnergyScaleSystUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleSystUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyScaleSystUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eEnergyScaleSystUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L208_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L208_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2255
 *         #if not self.eEnergyScaleSystUp_branch and "eEnergyScaleSystUp" not in self.complained:
 *         if not self.eEnergyScaleSystUp_branch and "eEnergyScaleSystUp":
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleSystUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyScaleSystUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2255, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2255, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__70, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2255, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2254
 *         self.eEnergyScaleSystUp_branch = the_tree.GetBranch("eEnergyScaleSystUp")
 *         #if not self.eEnergyScaleSystUp_branch and "eEnergyScaleSystUp" not in self.complained:
 *         if not self.eEnergyScaleSystUp_branch and "eEnergyScaleSystUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleSystUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyScaleSystUp")
 */
    goto __pyx_L207;
  }

  /* "EMTree.pyx":2258
 *             #self.complained.add("eEnergyScaleSystUp")
 *         else:
 *             self.eEnergyScaleSystUp_branch.SetAddress(<void*>&self.eEnergyScaleSystUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eEnergyScaleUp"
 */
  /*else*/ {
    __pyx_v_self->eEnergyScaleSystUp_branch->SetAddress(((void *)(&__pyx_v_self->eEnergyScaleSystUp_value)));
  }
  __pyx_L207:;

  /* "EMTree.pyx":2261
 * 
 *         #print "making eEnergyScaleUp"
 *         self.eEnergyScaleUp_branch = the_tree.GetBranch("eEnergyScaleUp")             # <<<<<<<<<<<<<<
 *         #if not self.eEnergyScaleUp_branch and "eEnergyScaleUp" not in self.complained:
 *         if not self.eEnergyScaleUp_branch and "eEnergyScaleUp":
 */
  __pyx_v_self->eEnergyScaleUp_branch = __pyx_v_the_tree->GetBranch(((char *)"eEnergyScaleUp"));

  /* "EMTree.pyx":2263
 *         self.eEnergyScaleUp_branch = the_tree.GetBranch("eEnergyScaleUp")
 *         #if not self.eEnergyScaleUp_branch and "eEnergyScaleUp" not in self.complained:
 *         if not self.eEnergyScaleUp_branch and "eEnergyScaleUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyScaleUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eEnergyScaleUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L211_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L211_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2264
 *         #if not self.eEnergyScaleUp_branch and "eEnergyScaleUp" not in self.complained:
 *         if not self.eEnergyScaleUp_branch and "eEnergyScaleUp":
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyScaleUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2264, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2264, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__71, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2264, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2263
 *         self.eEnergyScaleUp_branch = the_tree.GetBranch("eEnergyScaleUp")
 *         #if not self.eEnergyScaleUp_branch and "eEnergyScaleUp" not in self.complained:
 *         if not self.eEnergyScaleUp_branch and "eEnergyScaleUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergyScaleUp")
 */
    goto __pyx_L210;
  }

  /* "EMTree.pyx":2267
 *             #self.complained.add("eEnergyScaleUp")
 *         else:
 *             self.eEnergyScaleUp_branch.SetAddress(<void*>&self.eEnergyScaleUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eEnergySigmaDown"
 */
  /*else*/ {
    __pyx_v_self->eEnergyScaleUp_branch->SetAddress(((void *)(&__pyx_v_self->eEnergyScaleUp_value)));
  }
  __pyx_L210:;

  /* "EMTree.pyx":2270
 * 
 *         #print "making eEnergySigmaDown"
 *         self.eEnergySigmaDown_branch = the_tree.GetBranch("eEnergySigmaDown")             # <<<<<<<<<<<<<<
 *         #if not self.eEnergySigmaDown_branch and "eEnergySigmaDown" not in self.complained:
 *         if not self.eEnergySigmaDown_branch and "eEnergySigmaDown":
 */
  __pyx_v_self->eEnergySigmaDown_branch = __pyx_v_the_tree->GetBranch(((char *)"eEnergySigmaDown"));

  /* "EMTree.pyx":2272
 *         self.eEnergySigmaDown_branch = the_tree.GetBranch("eEnergySigmaDown")
 *         #if not self.eEnergySigmaDown_branch and "eEnergySigmaDown" not in self.complained:
 *         if not self.eEnergySigmaDown_branch and "eEnergySigmaDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergySigmaDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eEnergySigmaDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L214_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L214_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2273
 *         #if not self.eEnergySigmaDown_branch and "eEnergySigmaDown" not in self.complained:
 *         if not self.eEnergySigmaDown_branch and "eEnergySigmaDown":
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergySigmaDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2273, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2273, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__72, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2273, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2272
 *         self.eEnergySigmaDown_branch = the_tree.GetBranch("eEnergySigmaDown")
 *         #if not self.eEnergySigmaDown_branch and "eEnergySigmaDown" not in self.complained:
 *         if not self.eEnergySigmaDown_branch and "eEnergySigmaDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergySigmaDown")
 */
    goto __pyx_L213;
  }

  /* "EMTree.pyx":2276
 *             #self.complained.add("eEnergySigmaDown")
 *         else:
 *             self.eEnergySigmaDown_branch.SetAddress(<void*>&self.eEnergySigmaDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eEnergySigmaPhiDown"
 */
  /*else*/ {
    __pyx_v_self->eEnergySigmaDown_branch->SetAddress(((void *)(&__pyx_v_self->eEnergySigmaDown_value)));
  }
  __pyx_L213:;

  /* "EMTree.pyx":2279
 * 
 *         #print "making eEnergySigmaPhiDown"
 *         self.eEnergySigmaPhiDown_branch = the_tree.GetBranch("eEnergySigmaPhiDown")             # <<<<<<<<<<<<<<
 *         #if not self.eEnergySigmaPhiDown_branch and "eEnergySigmaPhiDown" not in self.complained:
 *         if not self.eEnergySigmaPhiDown_branch and "eEnergySigmaPhiDown":
 */
  __pyx_v_self->eEnergySigmaPhiDown_branch = __pyx_v_the_tree->GetBranch(((char *)"eEnergySigmaPhiDown"));

  /* "EMTree.pyx":2281
 *         self.eEnergySigmaPhiDown_branch = the_tree.GetBranch("eEnergySigmaPhiDown")
 *         #if not self.eEnergySigmaPhiDown_branch and "eEnergySigmaPhiDown" not in self.complained:
 *         if not self.eEnergySigmaPhiDown_branch and "eEnergySigmaPhiDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaPhiDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergySigmaPhiDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eEnergySigmaPhiDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L217_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L217_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2282
 *         #if not self.eEnergySigmaPhiDown_branch and "eEnergySigmaPhiDown" not in self.complained:
 *         if not self.eEnergySigmaPhiDown_branch and "eEnergySigmaPhiDown":
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaPhiDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergySigmaPhiDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2282, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2282, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__73, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2282, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2281
 *         self.eEnergySigmaPhiDown_branch = the_tree.GetBranch("eEnergySigmaPhiDown")
 *         #if not self.eEnergySigmaPhiDown_branch and "eEnergySigmaPhiDown" not in self.complained:
 *         if not self.eEnergySigmaPhiDown_branch and "eEnergySigmaPhiDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaPhiDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergySigmaPhiDown")
 */
    goto __pyx_L216;
  }

  /* "EMTree.pyx":2285
 *             #self.complained.add("eEnergySigmaPhiDown")
 *         else:
 *             self.eEnergySigmaPhiDown_branch.SetAddress(<void*>&self.eEnergySigmaPhiDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eEnergySigmaPhiUp"
 */
  /*else*/ {
    __pyx_v_self->eEnergySigmaPhiDown_branch->SetAddress(((void *)(&__pyx_v_self->eEnergySigmaPhiDown_value)));
  }
  __pyx_L216:;

  /* "EMTree.pyx":2288
 * 
 *         #print "making eEnergySigmaPhiUp"
 *         self.eEnergySigmaPhiUp_branch = the_tree.GetBranch("eEnergySigmaPhiUp")             # <<<<<<<<<<<<<<
 *         #if not self.eEnergySigmaPhiUp_branch and "eEnergySigmaPhiUp" not in self.complained:
 *         if not self.eEnergySigmaPhiUp_branch and "eEnergySigmaPhiUp":
 */
  __pyx_v_self->eEnergySigmaPhiUp_branch = __pyx_v_the_tree->GetBranch(((char *)"eEnergySigmaPhiUp"));

  /* "EMTree.pyx":2290
 *         self.eEnergySigmaPhiUp_branch = the_tree.GetBranch("eEnergySigmaPhiUp")
 *         #if not self.eEnergySigmaPhiUp_branch and "eEnergySigmaPhiUp" not in self.complained:
 *         if not self.eEnergySigmaPhiUp_branch and "eEnergySigmaPhiUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaPhiUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergySigmaPhiUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eEnergySigmaPhiUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L220_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L220_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2291
 *         #if not self.eEnergySigmaPhiUp_branch and "eEnergySigmaPhiUp" not in self.complained:
 *         if not self.eEnergySigmaPhiUp_branch and "eEnergySigmaPhiUp":
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaPhiUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergySigmaPhiUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2291, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2291, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__74, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2291, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2290
 *         self.eEnergySigmaPhiUp_branch = the_tree.GetBranch("eEnergySigmaPhiUp")
 *         #if not self.eEnergySigmaPhiUp_branch and "eEnergySigmaPhiUp" not in self.complained:
 *         if not self.eEnergySigmaPhiUp_branch and "eEnergySigmaPhiUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaPhiUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergySigmaPhiUp")
 */
    goto __pyx_L219;
  }

  /* "EMTree.pyx":2294
 *             #self.complained.add("eEnergySigmaPhiUp")
 *         else:
 *             self.eEnergySigmaPhiUp_branch.SetAddress(<void*>&self.eEnergySigmaPhiUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eEnergySigmaRhoDown"
 */
  /*else*/ {
    __pyx_v_self->eEnergySigmaPhiUp_branch->SetAddress(((void *)(&__pyx_v_self->eEnergySigmaPhiUp_value)));
  }
  __pyx_L219:;

  /* "EMTree.pyx":2297
 * 
 *         #print "making eEnergySigmaRhoDown"
 *         self.eEnergySigmaRhoDown_branch = the_tree.GetBranch("eEnergySigmaRhoDown")             # <<<<<<<<<<<<<<
 *         #if not self.eEnergySigmaRhoDown_branch and "eEnergySigmaRhoDown" not in self.complained:
 *         if not self.eEnergySigmaRhoDown_branch and "eEnergySigmaRhoDown":
 */
  __pyx_v_self->eEnergySigmaRhoDown_branch = __pyx_v_the_tree->GetBranch(((char *)"eEnergySigmaRhoDown"));

  /* "EMTree.pyx":2299
 *         self.eEnergySigmaRhoDown_branch = the_tree.GetBranch("eEnergySigmaRhoDown")
 *         #if not self.eEnergySigmaRhoDown_branch and "eEnergySigmaRhoDown" not in self.complained:
 *         if not self.eEnergySigmaRhoDown_branch and "eEnergySigmaRhoDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaRhoDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergySigmaRhoDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eEnergySigmaRhoDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L223_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L223_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2300
 *         #if not self.eEnergySigmaRhoDown_branch and "eEnergySigmaRhoDown" not in self.complained:
 *         if not self.eEnergySigmaRhoDown_branch and "eEnergySigmaRhoDown":
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaRhoDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergySigmaRhoDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__75, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2299
 *         self.eEnergySigmaRhoDown_branch = the_tree.GetBranch("eEnergySigmaRhoDown")
 *         #if not self.eEnergySigmaRhoDown_branch and "eEnergySigmaRhoDown" not in self.complained:
 *         if not self.eEnergySigmaRhoDown_branch and "eEnergySigmaRhoDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaRhoDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergySigmaRhoDown")
 */
    goto __pyx_L222;
  }

  /* "EMTree.pyx":2303
 *             #self.complained.add("eEnergySigmaRhoDown")
 *         else:
 *             self.eEnergySigmaRhoDown_branch.SetAddress(<void*>&self.eEnergySigmaRhoDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eEnergySigmaRhoUp"
 */
  /*else*/ {
    __pyx_v_self->eEnergySigmaRhoDown_branch->SetAddress(((void *)(&__pyx_v_self->eEnergySigmaRhoDown_value)));
  }
  __pyx_L222:;

  /* "EMTree.pyx":2306
 * 
 *         #print "making eEnergySigmaRhoUp"
 *         self.eEnergySigmaRhoUp_branch = the_tree.GetBranch("eEnergySigmaRhoUp")             # <<<<<<<<<<<<<<
 *         #if not self.eEnergySigmaRhoUp_branch and "eEnergySigmaRhoUp" not in self.complained:
 *         if not self.eEnergySigmaRhoUp_branch and "eEnergySigmaRhoUp":
 */
  __pyx_v_self->eEnergySigmaRhoUp_branch = __pyx_v_the_tree->GetBranch(((char *)"eEnergySigmaRhoUp"));

  /* "EMTree.pyx":2308
 *         self.eEnergySigmaRhoUp_branch = the_tree.GetBranch("eEnergySigmaRhoUp")
 *         #if not self.eEnergySigmaRhoUp_branch and "eEnergySigmaRhoUp" not in self.complained:
 *         if not self.eEnergySigmaRhoUp_branch and "eEnergySigmaRhoUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaRhoUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergySigmaRhoUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eEnergySigmaRhoUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L226_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L226_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2309
 *         #if not self.eEnergySigmaRhoUp_branch and "eEnergySigmaRhoUp" not in self.complained:
 *         if not self.eEnergySigmaRhoUp_branch and "eEnergySigmaRhoUp":
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaRhoUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergySigmaRhoUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__76, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2308
 *         self.eEnergySigmaRhoUp_branch = the_tree.GetBranch("eEnergySigmaRhoUp")
 *         #if not self.eEnergySigmaRhoUp_branch and "eEnergySigmaRhoUp" not in self.complained:
 *         if not self.eEnergySigmaRhoUp_branch and "eEnergySigmaRhoUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaRhoUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergySigmaRhoUp")
 */
    goto __pyx_L225;
  }

  /* "EMTree.pyx":2312
 *             #self.complained.add("eEnergySigmaRhoUp")
 *         else:
 *             self.eEnergySigmaRhoUp_branch.SetAddress(<void*>&self.eEnergySigmaRhoUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eEnergySigmaUp"
 */
  /*else*/ {
    __pyx_v_self->eEnergySigmaRhoUp_branch->SetAddress(((void *)(&__pyx_v_self->eEnergySigmaRhoUp_value)));
  }
  __pyx_L225:;

  /* "EMTree.pyx":2315
 * 
 *         #print "making eEnergySigmaUp"
 *         self.eEnergySigmaUp_branch = the_tree.GetBranch("eEnergySigmaUp")             # <<<<<<<<<<<<<<
 *         #if not self.eEnergySigmaUp_branch and "eEnergySigmaUp" not in self.complained:
 *         if not self.eEnergySigmaUp_branch and "eEnergySigmaUp":
 */
  __pyx_v_self->eEnergySigmaUp_branch = __pyx_v_the_tree->GetBranch(((char *)"eEnergySigmaUp"));

  /* "EMTree.pyx":2317
 *         self.eEnergySigmaUp_branch = the_tree.GetBranch("eEnergySigmaUp")
 *         #if not self.eEnergySigmaUp_branch and "eEnergySigmaUp" not in self.complained:
 *         if not self.eEnergySigmaUp_branch and "eEnergySigmaUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergySigmaUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eEnergySigmaUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L229_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L229_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2318
 *         #if not self.eEnergySigmaUp_branch and "eEnergySigmaUp" not in self.complained:
 *         if not self.eEnergySigmaUp_branch and "eEnergySigmaUp":
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergySigmaUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2318, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2318, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__77, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2318, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2317
 *         self.eEnergySigmaUp_branch = the_tree.GetBranch("eEnergySigmaUp")
 *         #if not self.eEnergySigmaUp_branch and "eEnergySigmaUp" not in self.complained:
 *         if not self.eEnergySigmaUp_branch and "eEnergySigmaUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEnergySigmaUp")
 */
    goto __pyx_L228;
  }

  /* "EMTree.pyx":2321
 *             #self.complained.add("eEnergySigmaUp")
 *         else:
 *             self.eEnergySigmaUp_branch.SetAddress(<void*>&self.eEnergySigmaUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eEta"
 */
  /*else*/ {
    __pyx_v_self->eEnergySigmaUp_branch->SetAddress(((void *)(&__pyx_v_self->eEnergySigmaUp_value)));
  }
  __pyx_L228:;

  /* "EMTree.pyx":2324
 * 
 *         #print "making eEta"
 *         self.eEta_branch = the_tree.GetBranch("eEta")             # <<<<<<<<<<<<<<
 *         #if not self.eEta_branch and "eEta" not in self.complained:
 *         if not self.eEta_branch and "eEta":
 */
  __pyx_v_self->eEta_branch = __pyx_v_the_tree->GetBranch(((char *)"eEta"));

  /* "EMTree.pyx":2326
 *         self.eEta_branch = the_tree.GetBranch("eEta")
 *         #if not self.eEta_branch and "eEta" not in self.complained:
 *         if not self.eEta_branch and "eEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eEta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L232_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L232_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2327
 *         #if not self.eEta_branch and "eEta" not in self.complained:
 *         if not self.eEta_branch and "eEta":
 *             warnings.warn( "EMTree: Expected branch eEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2327, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2327, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__78, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2327, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2326
 *         self.eEta_branch = the_tree.GetBranch("eEta")
 *         #if not self.eEta_branch and "eEta" not in self.complained:
 *         if not self.eEta_branch and "eEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eEta")
 */
    goto __pyx_L231;
  }

  /* "EMTree.pyx":2330
 *             #self.complained.add("eEta")
 *         else:
 *             self.eEta_branch.SetAddress(<void*>&self.eEta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eGenCharge"
 */
  /*else*/ {
    __pyx_v_self->eEta_branch->SetAddress(((void *)(&__pyx_v_self->eEta_value)));
  }
  __pyx_L231:;

  /* "EMTree.pyx":2333
 * 
 *         #print "making eGenCharge"
 *         self.eGenCharge_branch = the_tree.GetBranch("eGenCharge")             # <<<<<<<<<<<<<<
 *         #if not self.eGenCharge_branch and "eGenCharge" not in self.complained:
 *         if not self.eGenCharge_branch and "eGenCharge":
 */
  __pyx_v_self->eGenCharge_branch = __pyx_v_the_tree->GetBranch(((char *)"eGenCharge"));

  /* "EMTree.pyx":2335
 *         self.eGenCharge_branch = the_tree.GetBranch("eGenCharge")
 *         #if not self.eGenCharge_branch and "eGenCharge" not in self.complained:
 *         if not self.eGenCharge_branch and "eGenCharge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenCharge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenCharge")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eGenCharge_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L235_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L235_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2336
 *         #if not self.eGenCharge_branch and "eGenCharge" not in self.complained:
 *         if not self.eGenCharge_branch and "eGenCharge":
 *             warnings.warn( "EMTree: Expected branch eGenCharge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenCharge")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__79, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2335
 *         self.eGenCharge_branch = the_tree.GetBranch("eGenCharge")
 *         #if not self.eGenCharge_branch and "eGenCharge" not in self.complained:
 *         if not self.eGenCharge_branch and "eGenCharge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenCharge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenCharge")
 */
    goto __pyx_L234;
  }

  /* "EMTree.pyx":2339
 *             #self.complained.add("eGenCharge")
 *         else:
 *             self.eGenCharge_branch.SetAddress(<void*>&self.eGenCharge_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eGenDirectPromptTauDecay"
 */
  /*else*/ {
    __pyx_v_self->eGenCharge_branch->SetAddress(((void *)(&__pyx_v_self->eGenCharge_value)));
  }
  __pyx_L234:;

  /* "EMTree.pyx":2342
 * 
 *         #print "making eGenDirectPromptTauDecay"
 *         self.eGenDirectPromptTauDecay_branch = the_tree.GetBranch("eGenDirectPromptTauDecay")             # <<<<<<<<<<<<<<
 *         #if not self.eGenDirectPromptTauDecay_branch and "eGenDirectPromptTauDecay" not in self.complained:
 *         if not self.eGenDirectPromptTauDecay_branch and "eGenDirectPromptTauDecay":
 */
  __pyx_v_self->eGenDirectPromptTauDecay_branch = __pyx_v_the_tree->GetBranch(((char *)"eGenDirectPromptTauDecay"));

  /* "EMTree.pyx":2344
 *         self.eGenDirectPromptTauDecay_branch = the_tree.GetBranch("eGenDirectPromptTauDecay")
 *         #if not self.eGenDirectPromptTauDecay_branch and "eGenDirectPromptTauDecay" not in self.complained:
 *         if not self.eGenDirectPromptTauDecay_branch and "eGenDirectPromptTauDecay":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenDirectPromptTauDecay does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenDirectPromptTauDecay")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eGenDirectPromptTauDecay_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L238_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L238_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2345
 *         #if not self.eGenDirectPromptTauDecay_branch and "eGenDirectPromptTauDecay" not in self.complained:
 *         if not self.eGenDirectPromptTauDecay_branch and "eGenDirectPromptTauDecay":
 *             warnings.warn( "EMTree: Expected branch eGenDirectPromptTauDecay does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenDirectPromptTauDecay")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2345, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2345, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__80, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2345, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2344
 *         self.eGenDirectPromptTauDecay_branch = the_tree.GetBranch("eGenDirectPromptTauDecay")
 *         #if not self.eGenDirectPromptTauDecay_branch and "eGenDirectPromptTauDecay" not in self.complained:
 *         if not self.eGenDirectPromptTauDecay_branch and "eGenDirectPromptTauDecay":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenDirectPromptTauDecay does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenDirectPromptTauDecay")
 */
    goto __pyx_L237;
  }

  /* "EMTree.pyx":2348
 *             #self.complained.add("eGenDirectPromptTauDecay")
 *         else:
 *             self.eGenDirectPromptTauDecay_branch.SetAddress(<void*>&self.eGenDirectPromptTauDecay_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eGenEnergy"
 */
  /*else*/ {
    __pyx_v_self->eGenDirectPromptTauDecay_branch->SetAddress(((void *)(&__pyx_v_self->eGenDirectPromptTauDecay_value)));
  }
  __pyx_L237:;

  /* "EMTree.pyx":2351
 * 
 *         #print "making eGenEnergy"
 *         self.eGenEnergy_branch = the_tree.GetBranch("eGenEnergy")             # <<<<<<<<<<<<<<
 *         #if not self.eGenEnergy_branch and "eGenEnergy" not in self.complained:
 *         if not self.eGenEnergy_branch and "eGenEnergy":
 */
  __pyx_v_self->eGenEnergy_branch = __pyx_v_the_tree->GetBranch(((char *)"eGenEnergy"));

  /* "EMTree.pyx":2353
 *         self.eGenEnergy_branch = the_tree.GetBranch("eGenEnergy")
 *         #if not self.eGenEnergy_branch and "eGenEnergy" not in self.complained:
 *         if not self.eGenEnergy_branch and "eGenEnergy":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenEnergy does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenEnergy")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eGenEnergy_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L241_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L241_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2354
 *         #if not self.eGenEnergy_branch and "eGenEnergy" not in self.complained:
 *         if not self.eGenEnergy_branch and "eGenEnergy":
 *             warnings.warn( "EMTree: Expected branch eGenEnergy does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenEnergy")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__81, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2353
 *         self.eGenEnergy_branch = the_tree.GetBranch("eGenEnergy")
 *         #if not self.eGenEnergy_branch and "eGenEnergy" not in self.complained:
 *         if not self.eGenEnergy_branch and "eGenEnergy":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenEnergy does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenEnergy")
 */
    goto __pyx_L240;
  }

  /* "EMTree.pyx":2357
 *             #self.complained.add("eGenEnergy")
 *         else:
 *             self.eGenEnergy_branch.SetAddress(<void*>&self.eGenEnergy_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eGenEta"
 */
  /*else*/ {
    __pyx_v_self->eGenEnergy_branch->SetAddress(((void *)(&__pyx_v_self->eGenEnergy_value)));
  }
  __pyx_L240:;

  /* "EMTree.pyx":2360
 * 
 *         #print "making eGenEta"
 *         self.eGenEta_branch = the_tree.GetBranch("eGenEta")             # <<<<<<<<<<<<<<
 *         #if not self.eGenEta_branch and "eGenEta" not in self.complained:
 *         if not self.eGenEta_branch and "eGenEta":
 */
  __pyx_v_self->eGenEta_branch = __pyx_v_the_tree->GetBranch(((char *)"eGenEta"));

  /* "EMTree.pyx":2362
 *         self.eGenEta_branch = the_tree.GetBranch("eGenEta")
 *         #if not self.eGenEta_branch and "eGenEta" not in self.complained:
 *         if not self.eGenEta_branch and "eGenEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenEta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eGenEta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L244_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L244_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2363
 *         #if not self.eGenEta_branch and "eGenEta" not in self.complained:
 *         if not self.eGenEta_branch and "eGenEta":
 *             warnings.warn( "EMTree: Expected branch eGenEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenEta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2363, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2363, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__82, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2363, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2362
 *         self.eGenEta_branch = the_tree.GetBranch("eGenEta")
 *         #if not self.eGenEta_branch and "eGenEta" not in self.complained:
 *         if not self.eGenEta_branch and "eGenEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenEta")
 */
    goto __pyx_L243;
  }

  /* "EMTree.pyx":2366
 *             #self.complained.add("eGenEta")
 *         else:
 *             self.eGenEta_branch.SetAddress(<void*>&self.eGenEta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eGenIsPrompt"
 */
  /*else*/ {
    __pyx_v_self->eGenEta_branch->SetAddress(((void *)(&__pyx_v_self->eGenEta_value)));
  }
  __pyx_L243:;

  /* "EMTree.pyx":2369
 * 
 *         #print "making eGenIsPrompt"
 *         self.eGenIsPrompt_branch = the_tree.GetBranch("eGenIsPrompt")             # <<<<<<<<<<<<<<
 *         #if not self.eGenIsPrompt_branch and "eGenIsPrompt" not in self.complained:
 *         if not self.eGenIsPrompt_branch and "eGenIsPrompt":
 */
  __pyx_v_self->eGenIsPrompt_branch = __pyx_v_the_tree->GetBranch(((char *)"eGenIsPrompt"));

  /* "EMTree.pyx":2371
 *         self.eGenIsPrompt_branch = the_tree.GetBranch("eGenIsPrompt")
 *         #if not self.eGenIsPrompt_branch and "eGenIsPrompt" not in self.complained:
 *         if not self.eGenIsPrompt_branch and "eGenIsPrompt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenIsPrompt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenIsPrompt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eGenIsPrompt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L247_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L247_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2372
 *         #if not self.eGenIsPrompt_branch and "eGenIsPrompt" not in self.complained:
 *         if not self.eGenIsPrompt_branch and "eGenIsPrompt":
 *             warnings.warn( "EMTree: Expected branch eGenIsPrompt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenIsPrompt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2372, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2372, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__83, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2372, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2371
 *         self.eGenIsPrompt_branch = the_tree.GetBranch("eGenIsPrompt")
 *         #if not self.eGenIsPrompt_branch and "eGenIsPrompt" not in self.complained:
 *         if not self.eGenIsPrompt_branch and "eGenIsPrompt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenIsPrompt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenIsPrompt")
 */
    goto __pyx_L246;
  }

  /* "EMTree.pyx":2375
 *             #self.complained.add("eGenIsPrompt")
 *         else:
 *             self.eGenIsPrompt_branch.SetAddress(<void*>&self.eGenIsPrompt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eGenMotherPdgId"
 */
  /*else*/ {
    __pyx_v_self->eGenIsPrompt_branch->SetAddress(((void *)(&__pyx_v_self->eGenIsPrompt_value)));
  }
  __pyx_L246:;

  /* "EMTree.pyx":2378
 * 
 *         #print "making eGenMotherPdgId"
 *         self.eGenMotherPdgId_branch = the_tree.GetBranch("eGenMotherPdgId")             # <<<<<<<<<<<<<<
 *         #if not self.eGenMotherPdgId_branch and "eGenMotherPdgId" not in self.complained:
 *         if not self.eGenMotherPdgId_branch and "eGenMotherPdgId":
 */
  __pyx_v_self->eGenMotherPdgId_branch = __pyx_v_the_tree->GetBranch(((char *)"eGenMotherPdgId"));

  /* "EMTree.pyx":2380
 *         self.eGenMotherPdgId_branch = the_tree.GetBranch("eGenMotherPdgId")
 *         #if not self.eGenMotherPdgId_branch and "eGenMotherPdgId" not in self.complained:
 *         if not self.eGenMotherPdgId_branch and "eGenMotherPdgId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenMotherPdgId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenMotherPdgId")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eGenMotherPdgId_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L250_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L250_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2381
 *         #if not self.eGenMotherPdgId_branch and "eGenMotherPdgId" not in self.complained:
 *         if not self.eGenMotherPdgId_branch and "eGenMotherPdgId":
 *             warnings.warn( "EMTree: Expected branch eGenMotherPdgId does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenMotherPdgId")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2381, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2381, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__84, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2381, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2380
 *         self.eGenMotherPdgId_branch = the_tree.GetBranch("eGenMotherPdgId")
 *         #if not self.eGenMotherPdgId_branch and "eGenMotherPdgId" not in self.complained:
 *         if not self.eGenMotherPdgId_branch and "eGenMotherPdgId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenMotherPdgId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenMotherPdgId")
 */
    goto __pyx_L249;
  }

  /* "EMTree.pyx":2384
 *             #self.complained.add("eGenMotherPdgId")
 *         else:
 *             self.eGenMotherPdgId_branch.SetAddress(<void*>&self.eGenMotherPdgId_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eGenParticle"
 */
  /*else*/ {
    __pyx_v_self->eGenMotherPdgId_branch->SetAddress(((void *)(&__pyx_v_self->eGenMotherPdgId_value)));
  }
  __pyx_L249:;

  /* "EMTree.pyx":2387
 * 
 *         #print "making eGenParticle"
 *         self.eGenParticle_branch = the_tree.GetBranch("eGenParticle")             # <<<<<<<<<<<<<<
 *         #if not self.eGenParticle_branch and "eGenParticle" not in self.complained:
 *         if not self.eGenParticle_branch and "eGenParticle":
 */
  __pyx_v_self->eGenParticle_branch = __pyx_v_the_tree->GetBranch(((char *)"eGenParticle"));

  /* "EMTree.pyx":2389
 *         self.eGenParticle_branch = the_tree.GetBranch("eGenParticle")
 *         #if not self.eGenParticle_branch and "eGenParticle" not in self.complained:
 *         if not self.eGenParticle_branch and "eGenParticle":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenParticle does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenParticle")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eGenParticle_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L253_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L253_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2390
 *         #if not self.eGenParticle_branch and "eGenParticle" not in self.complained:
 *         if not self.eGenParticle_branch and "eGenParticle":
 *             warnings.warn( "EMTree: Expected branch eGenParticle does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenParticle")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2390, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2390, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__85, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2390, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2389
 *         self.eGenParticle_branch = the_tree.GetBranch("eGenParticle")
 *         #if not self.eGenParticle_branch and "eGenParticle" not in self.complained:
 *         if not self.eGenParticle_branch and "eGenParticle":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenParticle does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenParticle")
 */
    goto __pyx_L252;
  }

  /* "EMTree.pyx":2393
 *             #self.complained.add("eGenParticle")
 *         else:
 *             self.eGenParticle_branch.SetAddress(<void*>&self.eGenParticle_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eGenPdgId"
 */
  /*else*/ {
    __pyx_v_self->eGenParticle_branch->SetAddress(((void *)(&__pyx_v_self->eGenParticle_value)));
  }
  __pyx_L252:;

  /* "EMTree.pyx":2396
 * 
 *         #print "making eGenPdgId"
 *         self.eGenPdgId_branch = the_tree.GetBranch("eGenPdgId")             # <<<<<<<<<<<<<<
 *         #if not self.eGenPdgId_branch and "eGenPdgId" not in self.complained:
 *         if not self.eGenPdgId_branch and "eGenPdgId":
 */
  __pyx_v_self->eGenPdgId_branch = __pyx_v_the_tree->GetBranch(((char *)"eGenPdgId"));

  /* "EMTree.pyx":2398
 *         self.eGenPdgId_branch = the_tree.GetBranch("eGenPdgId")
 *         #if not self.eGenPdgId_branch and "eGenPdgId" not in self.complained:
 *         if not self.eGenPdgId_branch and "eGenPdgId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenPdgId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenPdgId")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eGenPdgId_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L256_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L256_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2399
 *         #if not self.eGenPdgId_branch and "eGenPdgId" not in self.complained:
 *         if not self.eGenPdgId_branch and "eGenPdgId":
 *             warnings.warn( "EMTree: Expected branch eGenPdgId does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenPdgId")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__86, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2398
 *         self.eGenPdgId_branch = the_tree.GetBranch("eGenPdgId")
 *         #if not self.eGenPdgId_branch and "eGenPdgId" not in self.complained:
 *         if not self.eGenPdgId_branch and "eGenPdgId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenPdgId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenPdgId")
 */
    goto __pyx_L255;
  }

  /* "EMTree.pyx":2402
 *             #self.complained.add("eGenPdgId")
 *         else:
 *             self.eGenPdgId_branch.SetAddress(<void*>&self.eGenPdgId_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eGenPhi"
 */
  /*else*/ {
    __pyx_v_self->eGenPdgId_branch->SetAddress(((void *)(&__pyx_v_self->eGenPdgId_value)));
  }
  __pyx_L255:;

  /* "EMTree.pyx":2405
 * 
 *         #print "making eGenPhi"
 *         self.eGenPhi_branch = the_tree.GetBranch("eGenPhi")             # <<<<<<<<<<<<<<
 *         #if not self.eGenPhi_branch and "eGenPhi" not in self.complained:
 *         if not self.eGenPhi_branch and "eGenPhi":
 */
  __pyx_v_self->eGenPhi_branch = __pyx_v_the_tree->GetBranch(((char *)"eGenPhi"));

  /* "EMTree.pyx":2407
 *         self.eGenPhi_branch = the_tree.GetBranch("eGenPhi")
 *         #if not self.eGenPhi_branch and "eGenPhi" not in self.complained:
 *         if not self.eGenPhi_branch and "eGenPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenPhi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eGenPhi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L259_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L259_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2408
 *         #if not self.eGenPhi_branch and "eGenPhi" not in self.complained:
 *         if not self.eGenPhi_branch and "eGenPhi":
 *             warnings.warn( "EMTree: Expected branch eGenPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenPhi")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2408, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2408, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__87, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2408, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2407
 *         self.eGenPhi_branch = the_tree.GetBranch("eGenPhi")
 *         #if not self.eGenPhi_branch and "eGenPhi" not in self.complained:
 *         if not self.eGenPhi_branch and "eGenPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenPhi")
 */
    goto __pyx_L258;
  }

  /* "EMTree.pyx":2411
 *             #self.complained.add("eGenPhi")
 *         else:
 *             self.eGenPhi_branch.SetAddress(<void*>&self.eGenPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eGenPrompt"
 */
  /*else*/ {
    __pyx_v_self->eGenPhi_branch->SetAddress(((void *)(&__pyx_v_self->eGenPhi_value)));
  }
  __pyx_L258:;

  /* "EMTree.pyx":2414
 * 
 *         #print "making eGenPrompt"
 *         self.eGenPrompt_branch = the_tree.GetBranch("eGenPrompt")             # <<<<<<<<<<<<<<
 *         #if not self.eGenPrompt_branch and "eGenPrompt" not in self.complained:
 *         if not self.eGenPrompt_branch and "eGenPrompt":
 */
  __pyx_v_self->eGenPrompt_branch = __pyx_v_the_tree->GetBranch(((char *)"eGenPrompt"));

  /* "EMTree.pyx":2416
 *         self.eGenPrompt_branch = the_tree.GetBranch("eGenPrompt")
 *         #if not self.eGenPrompt_branch and "eGenPrompt" not in self.complained:
 *         if not self.eGenPrompt_branch and "eGenPrompt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenPrompt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenPrompt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eGenPrompt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L262_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L262_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2417
 *         #if not self.eGenPrompt_branch and "eGenPrompt" not in self.complained:
 *         if not self.eGenPrompt_branch and "eGenPrompt":
 *             warnings.warn( "EMTree: Expected branch eGenPrompt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenPrompt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2417, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2417, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__88, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2417, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2416
 *         self.eGenPrompt_branch = the_tree.GetBranch("eGenPrompt")
 *         #if not self.eGenPrompt_branch and "eGenPrompt" not in self.complained:
 *         if not self.eGenPrompt_branch and "eGenPrompt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenPrompt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenPrompt")
 */
    goto __pyx_L261;
  }

  /* "EMTree.pyx":2420
 *             #self.complained.add("eGenPrompt")
 *         else:
 *             self.eGenPrompt_branch.SetAddress(<void*>&self.eGenPrompt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eGenPromptTauDecay"
 */
  /*else*/ {
    __pyx_v_self->eGenPrompt_branch->SetAddress(((void *)(&__pyx_v_self->eGenPrompt_value)));
  }
  __pyx_L261:;

  /* "EMTree.pyx":2423
 * 
 *         #print "making eGenPromptTauDecay"
 *         self.eGenPromptTauDecay_branch = the_tree.GetBranch("eGenPromptTauDecay")             # <<<<<<<<<<<<<<
 *         #if not self.eGenPromptTauDecay_branch and "eGenPromptTauDecay" not in self.complained:
 *         if not self.eGenPromptTauDecay_branch and "eGenPromptTauDecay":
 */
  __pyx_v_self->eGenPromptTauDecay_branch = __pyx_v_the_tree->GetBranch(((char *)"eGenPromptTauDecay"));

  /* "EMTree.pyx":2425
 *         self.eGenPromptTauDecay_branch = the_tree.GetBranch("eGenPromptTauDecay")
 *         #if not self.eGenPromptTauDecay_branch and "eGenPromptTauDecay" not in self.complained:
 *         if not self.eGenPromptTauDecay_branch and "eGenPromptTauDecay":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenPromptTauDecay does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenPromptTauDecay")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eGenPromptTauDecay_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L265_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L265_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2426
 *         #if not self.eGenPromptTauDecay_branch and "eGenPromptTauDecay" not in self.complained:
 *         if not self.eGenPromptTauDecay_branch and "eGenPromptTauDecay":
 *             warnings.warn( "EMTree: Expected branch eGenPromptTauDecay does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenPromptTauDecay")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2426, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2426, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__89, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2426, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2425
 *         self.eGenPromptTauDecay_branch = the_tree.GetBranch("eGenPromptTauDecay")
 *         #if not self.eGenPromptTauDecay_branch and "eGenPromptTauDecay" not in self.complained:
 *         if not self.eGenPromptTauDecay_branch and "eGenPromptTauDecay":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenPromptTauDecay does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenPromptTauDecay")
 */
    goto __pyx_L264;
  }

  /* "EMTree.pyx":2429
 *             #self.complained.add("eGenPromptTauDecay")
 *         else:
 *             self.eGenPromptTauDecay_branch.SetAddress(<void*>&self.eGenPromptTauDecay_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eGenPt"
 */
  /*else*/ {
    __pyx_v_self->eGenPromptTauDecay_branch->SetAddress(((void *)(&__pyx_v_self->eGenPromptTauDecay_value)));
  }
  __pyx_L264:;

  /* "EMTree.pyx":2432
 * 
 *         #print "making eGenPt"
 *         self.eGenPt_branch = the_tree.GetBranch("eGenPt")             # <<<<<<<<<<<<<<
 *         #if not self.eGenPt_branch and "eGenPt" not in self.complained:
 *         if not self.eGenPt_branch and "eGenPt":
 */
  __pyx_v_self->eGenPt_branch = __pyx_v_the_tree->GetBranch(((char *)"eGenPt"));

  /* "EMTree.pyx":2434
 *         self.eGenPt_branch = the_tree.GetBranch("eGenPt")
 *         #if not self.eGenPt_branch and "eGenPt" not in self.complained:
 *         if not self.eGenPt_branch and "eGenPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenPt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eGenPt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L268_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L268_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2435
 *         #if not self.eGenPt_branch and "eGenPt" not in self.complained:
 *         if not self.eGenPt_branch and "eGenPt":
 *             warnings.warn( "EMTree: Expected branch eGenPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenPt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2435, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2435, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__90, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2435, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2434
 *         self.eGenPt_branch = the_tree.GetBranch("eGenPt")
 *         #if not self.eGenPt_branch and "eGenPt" not in self.complained:
 *         if not self.eGenPt_branch and "eGenPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenPt")
 */
    goto __pyx_L267;
  }

  /* "EMTree.pyx":2438
 *             #self.complained.add("eGenPt")
 *         else:
 *             self.eGenPt_branch.SetAddress(<void*>&self.eGenPt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eGenTauDecay"
 */
  /*else*/ {
    __pyx_v_self->eGenPt_branch->SetAddress(((void *)(&__pyx_v_self->eGenPt_value)));
  }
  __pyx_L267:;

  /* "EMTree.pyx":2441
 * 
 *         #print "making eGenTauDecay"
 *         self.eGenTauDecay_branch = the_tree.GetBranch("eGenTauDecay")             # <<<<<<<<<<<<<<
 *         #if not self.eGenTauDecay_branch and "eGenTauDecay" not in self.complained:
 *         if not self.eGenTauDecay_branch and "eGenTauDecay":
 */
  __pyx_v_self->eGenTauDecay_branch = __pyx_v_the_tree->GetBranch(((char *)"eGenTauDecay"));

  /* "EMTree.pyx":2443
 *         self.eGenTauDecay_branch = the_tree.GetBranch("eGenTauDecay")
 *         #if not self.eGenTauDecay_branch and "eGenTauDecay" not in self.complained:
 *         if not self.eGenTauDecay_branch and "eGenTauDecay":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenTauDecay does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenTauDecay")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eGenTauDecay_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L271_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L271_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2444
 *         #if not self.eGenTauDecay_branch and "eGenTauDecay" not in self.complained:
 *         if not self.eGenTauDecay_branch and "eGenTauDecay":
 *             warnings.warn( "EMTree: Expected branch eGenTauDecay does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenTauDecay")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2444, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2444, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__91, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2444, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2443
 *         self.eGenTauDecay_branch = the_tree.GetBranch("eGenTauDecay")
 *         #if not self.eGenTauDecay_branch and "eGenTauDecay" not in self.complained:
 *         if not self.eGenTauDecay_branch and "eGenTauDecay":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenTauDecay does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenTauDecay")
 */
    goto __pyx_L270;
  }

  /* "EMTree.pyx":2447
 *             #self.complained.add("eGenTauDecay")
 *         else:
 *             self.eGenTauDecay_branch.SetAddress(<void*>&self.eGenTauDecay_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eGenVZ"
 */
  /*else*/ {
    __pyx_v_self->eGenTauDecay_branch->SetAddress(((void *)(&__pyx_v_self->eGenTauDecay_value)));
  }
  __pyx_L270:;

  /* "EMTree.pyx":2450
 * 
 *         #print "making eGenVZ"
 *         self.eGenVZ_branch = the_tree.GetBranch("eGenVZ")             # <<<<<<<<<<<<<<
 *         #if not self.eGenVZ_branch and "eGenVZ" not in self.complained:
 *         if not self.eGenVZ_branch and "eGenVZ":
 */
  __pyx_v_self->eGenVZ_branch = __pyx_v_the_tree->GetBranch(((char *)"eGenVZ"));

  /* "EMTree.pyx":2452
 *         self.eGenVZ_branch = the_tree.GetBranch("eGenVZ")
 *         #if not self.eGenVZ_branch and "eGenVZ" not in self.complained:
 *         if not self.eGenVZ_branch and "eGenVZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenVZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenVZ")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eGenVZ_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L274_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L274_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2453
 *         #if not self.eGenVZ_branch and "eGenVZ" not in self.complained:
 *         if not self.eGenVZ_branch and "eGenVZ":
 *             warnings.warn( "EMTree: Expected branch eGenVZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenVZ")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2453, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2453, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__92, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2453, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2452
 *         self.eGenVZ_branch = the_tree.GetBranch("eGenVZ")
 *         #if not self.eGenVZ_branch and "eGenVZ" not in self.complained:
 *         if not self.eGenVZ_branch and "eGenVZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenVZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenVZ")
 */
    goto __pyx_L273;
  }

  /* "EMTree.pyx":2456
 *             #self.complained.add("eGenVZ")
 *         else:
 *             self.eGenVZ_branch.SetAddress(<void*>&self.eGenVZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eGenVtxPVMatch"
 */
  /*else*/ {
    __pyx_v_self->eGenVZ_branch->SetAddress(((void *)(&__pyx_v_self->eGenVZ_value)));
  }
  __pyx_L273:;

  /* "EMTree.pyx":2459
 * 
 *         #print "making eGenVtxPVMatch"
 *         self.eGenVtxPVMatch_branch = the_tree.GetBranch("eGenVtxPVMatch")             # <<<<<<<<<<<<<<
 *         #if not self.eGenVtxPVMatch_branch and "eGenVtxPVMatch" not in self.complained:
 *         if not self.eGenVtxPVMatch_branch and "eGenVtxPVMatch":
 */
  __pyx_v_self->eGenVtxPVMatch_branch = __pyx_v_the_tree->GetBranch(((char *)"eGenVtxPVMatch"));

  /* "EMTree.pyx":2461
 *         self.eGenVtxPVMatch_branch = the_tree.GetBranch("eGenVtxPVMatch")
 *         #if not self.eGenVtxPVMatch_branch and "eGenVtxPVMatch" not in self.complained:
 *         if not self.eGenVtxPVMatch_branch and "eGenVtxPVMatch":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenVtxPVMatch does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenVtxPVMatch")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eGenVtxPVMatch_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L277_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L277_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2462
 *         #if not self.eGenVtxPVMatch_branch and "eGenVtxPVMatch" not in self.complained:
 *         if not self.eGenVtxPVMatch_branch and "eGenVtxPVMatch":
 *             warnings.warn( "EMTree: Expected branch eGenVtxPVMatch does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenVtxPVMatch")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2462, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2462, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__93, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2462, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2461
 *         self.eGenVtxPVMatch_branch = the_tree.GetBranch("eGenVtxPVMatch")
 *         #if not self.eGenVtxPVMatch_branch and "eGenVtxPVMatch" not in self.complained:
 *         if not self.eGenVtxPVMatch_branch and "eGenVtxPVMatch":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eGenVtxPVMatch does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eGenVtxPVMatch")
 */
    goto __pyx_L276;
  }

  /* "EMTree.pyx":2465
 *             #self.complained.add("eGenVtxPVMatch")
 *         else:
 *             self.eGenVtxPVMatch_branch.SetAddress(<void*>&self.eGenVtxPVMatch_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eIP3D"
 */
  /*else*/ {
    __pyx_v_self->eGenVtxPVMatch_branch->SetAddress(((void *)(&__pyx_v_self->eGenVtxPVMatch_value)));
  }
  __pyx_L276:;

  /* "EMTree.pyx":2468
 * 
 *         #print "making eIP3D"
 *         self.eIP3D_branch = the_tree.GetBranch("eIP3D")             # <<<<<<<<<<<<<<
 *         #if not self.eIP3D_branch and "eIP3D" not in self.complained:
 *         if not self.eIP3D_branch and "eIP3D":
 */
  __pyx_v_self->eIP3D_branch = __pyx_v_the_tree->GetBranch(((char *)"eIP3D"));

  /* "EMTree.pyx":2470
 *         self.eIP3D_branch = the_tree.GetBranch("eIP3D")
 *         #if not self.eIP3D_branch and "eIP3D" not in self.complained:
 *         if not self.eIP3D_branch and "eIP3D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eIP3D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eIP3D")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eIP3D_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L280_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L280_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2471
 *         #if not self.eIP3D_branch and "eIP3D" not in self.complained:
 *         if not self.eIP3D_branch and "eIP3D":
 *             warnings.warn( "EMTree: Expected branch eIP3D does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eIP3D")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2471, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2471, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__94, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2471, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2470
 *         self.eIP3D_branch = the_tree.GetBranch("eIP3D")
 *         #if not self.eIP3D_branch and "eIP3D" not in self.complained:
 *         if not self.eIP3D_branch and "eIP3D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eIP3D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eIP3D")
 */
    goto __pyx_L279;
  }

  /* "EMTree.pyx":2474
 *             #self.complained.add("eIP3D")
 *         else:
 *             self.eIP3D_branch.SetAddress(<void*>&self.eIP3D_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eIP3DErr"
 */
  /*else*/ {
    __pyx_v_self->eIP3D_branch->SetAddress(((void *)(&__pyx_v_self->eIP3D_value)));
  }
  __pyx_L279:;

  /* "EMTree.pyx":2477
 * 
 *         #print "making eIP3DErr"
 *         self.eIP3DErr_branch = the_tree.GetBranch("eIP3DErr")             # <<<<<<<<<<<<<<
 *         #if not self.eIP3DErr_branch and "eIP3DErr" not in self.complained:
 *         if not self.eIP3DErr_branch and "eIP3DErr":
 */
  __pyx_v_self->eIP3DErr_branch = __pyx_v_the_tree->GetBranch(((char *)"eIP3DErr"));

  /* "EMTree.pyx":2479
 *         self.eIP3DErr_branch = the_tree.GetBranch("eIP3DErr")
 *         #if not self.eIP3DErr_branch and "eIP3DErr" not in self.complained:
 *         if not self.eIP3DErr_branch and "eIP3DErr":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eIP3DErr does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eIP3DErr")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eIP3DErr_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L283_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L283_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2480
 *         #if not self.eIP3DErr_branch and "eIP3DErr" not in self.complained:
 *         if not self.eIP3DErr_branch and "eIP3DErr":
 *             warnings.warn( "EMTree: Expected branch eIP3DErr does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eIP3DErr")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2480, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2480, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__95, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2480, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2479
 *         self.eIP3DErr_branch = the_tree.GetBranch("eIP3DErr")
 *         #if not self.eIP3DErr_branch and "eIP3DErr" not in self.complained:
 *         if not self.eIP3DErr_branch and "eIP3DErr":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eIP3DErr does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eIP3DErr")
 */
    goto __pyx_L282;
  }

  /* "EMTree.pyx":2483
 *             #self.complained.add("eIP3DErr")
 *         else:
 *             self.eIP3DErr_branch.SetAddress(<void*>&self.eIP3DErr_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eIsoDB03"
 */
  /*else*/ {
    __pyx_v_self->eIP3DErr_branch->SetAddress(((void *)(&__pyx_v_self->eIP3DErr_value)));
  }
  __pyx_L282:;

  /* "EMTree.pyx":2486
 * 
 *         #print "making eIsoDB03"
 *         self.eIsoDB03_branch = the_tree.GetBranch("eIsoDB03")             # <<<<<<<<<<<<<<
 *         #if not self.eIsoDB03_branch and "eIsoDB03" not in self.complained:
 *         if not self.eIsoDB03_branch and "eIsoDB03":
 */
  __pyx_v_self->eIsoDB03_branch = __pyx_v_the_tree->GetBranch(((char *)"eIsoDB03"));

  /* "EMTree.pyx":2488
 *         self.eIsoDB03_branch = the_tree.GetBranch("eIsoDB03")
 *         #if not self.eIsoDB03_branch and "eIsoDB03" not in self.complained:
 *         if not self.eIsoDB03_branch and "eIsoDB03":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eIsoDB03 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eIsoDB03")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eIsoDB03_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L286_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L286_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2489
 *         #if not self.eIsoDB03_branch and "eIsoDB03" not in self.complained:
 *         if not self.eIsoDB03_branch and "eIsoDB03":
 *             warnings.warn( "EMTree: Expected branch eIsoDB03 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eIsoDB03")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2489, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2489, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__96, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2489, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2488
 *         self.eIsoDB03_branch = the_tree.GetBranch("eIsoDB03")
 *         #if not self.eIsoDB03_branch and "eIsoDB03" not in self.complained:
 *         if not self.eIsoDB03_branch and "eIsoDB03":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eIsoDB03 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eIsoDB03")
 */
    goto __pyx_L285;
  }

  /* "EMTree.pyx":2492
 *             #self.complained.add("eIsoDB03")
 *         else:
 *             self.eIsoDB03_branch.SetAddress(<void*>&self.eIsoDB03_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eJetArea"
 */
  /*else*/ {
    __pyx_v_self->eIsoDB03_branch->SetAddress(((void *)(&__pyx_v_self->eIsoDB03_value)));
  }
  __pyx_L285:;

  /* "EMTree.pyx":2495
 * 
 *         #print "making eJetArea"
 *         self.eJetArea_branch = the_tree.GetBranch("eJetArea")             # <<<<<<<<<<<<<<
 *         #if not self.eJetArea_branch and "eJetArea" not in self.complained:
 *         if not self.eJetArea_branch and "eJetArea":
 */
  __pyx_v_self->eJetArea_branch = __pyx_v_the_tree->GetBranch(((char *)"eJetArea"));

  /* "EMTree.pyx":2497
 *         self.eJetArea_branch = the_tree.GetBranch("eJetArea")
 *         #if not self.eJetArea_branch and "eJetArea" not in self.complained:
 *         if not self.eJetArea_branch and "eJetArea":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetArea does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetArea")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eJetArea_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L289_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L289_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2498
 *         #if not self.eJetArea_branch and "eJetArea" not in self.complained:
 *         if not self.eJetArea_branch and "eJetArea":
 *             warnings.warn( "EMTree: Expected branch eJetArea does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetArea")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2498, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2498, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__97, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2498, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2497
 *         self.eJetArea_branch = the_tree.GetBranch("eJetArea")
 *         #if not self.eJetArea_branch and "eJetArea" not in self.complained:
 *         if not self.eJetArea_branch and "eJetArea":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetArea does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetArea")
 */
    goto __pyx_L288;
  }

  /* "EMTree.pyx":2501
 *             #self.complained.add("eJetArea")
 *         else:
 *             self.eJetArea_branch.SetAddress(<void*>&self.eJetArea_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eJetBtag"
 */
  /*else*/ {
    __pyx_v_self->eJetArea_branch->SetAddress(((void *)(&__pyx_v_self->eJetArea_value)));
  }
  __pyx_L288:;

  /* "EMTree.pyx":2504
 * 
 *         #print "making eJetBtag"
 *         self.eJetBtag_branch = the_tree.GetBranch("eJetBtag")             # <<<<<<<<<<<<<<
 *         #if not self.eJetBtag_branch and "eJetBtag" not in self.complained:
 *         if not self.eJetBtag_branch and "eJetBtag":
 */
  __pyx_v_self->eJetBtag_branch = __pyx_v_the_tree->GetBranch(((char *)"eJetBtag"));

  /* "EMTree.pyx":2506
 *         self.eJetBtag_branch = the_tree.GetBranch("eJetBtag")
 *         #if not self.eJetBtag_branch and "eJetBtag" not in self.complained:
 *         if not self.eJetBtag_branch and "eJetBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetBtag")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eJetBtag_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L292_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L292_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2507
 *         #if not self.eJetBtag_branch and "eJetBtag" not in self.complained:
 *         if not self.eJetBtag_branch and "eJetBtag":
 *             warnings.warn( "EMTree: Expected branch eJetBtag does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetBtag")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__98, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2506
 *         self.eJetBtag_branch = the_tree.GetBranch("eJetBtag")
 *         #if not self.eJetBtag_branch and "eJetBtag" not in self.complained:
 *         if not self.eJetBtag_branch and "eJetBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetBtag")
 */
    goto __pyx_L291;
  }

  /* "EMTree.pyx":2510
 *             #self.complained.add("eJetBtag")
 *         else:
 *             self.eJetBtag_branch.SetAddress(<void*>&self.eJetBtag_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eJetDR"
 */
  /*else*/ {
    __pyx_v_self->eJetBtag_branch->SetAddress(((void *)(&__pyx_v_self->eJetBtag_value)));
  }
  __pyx_L291:;

  /* "EMTree.pyx":2513
 * 
 *         #print "making eJetDR"
 *         self.eJetDR_branch = the_tree.GetBranch("eJetDR")             # <<<<<<<<<<<<<<
 *         #if not self.eJetDR_branch and "eJetDR" not in self.complained:
 *         if not self.eJetDR_branch and "eJetDR":
 */
  __pyx_v_self->eJetDR_branch = __pyx_v_the_tree->GetBranch(((char *)"eJetDR"));

  /* "EMTree.pyx":2515
 *         self.eJetDR_branch = the_tree.GetBranch("eJetDR")
 *         #if not self.eJetDR_branch and "eJetDR" not in self.complained:
 *         if not self.eJetDR_branch and "eJetDR":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetDR does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetDR")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eJetDR_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L295_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L295_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2516
 *         #if not self.eJetDR_branch and "eJetDR" not in self.complained:
 *         if not self.eJetDR_branch and "eJetDR":
 *             warnings.warn( "EMTree: Expected branch eJetDR does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetDR")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2516, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2516, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__99, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2516, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2515
 *         self.eJetDR_branch = the_tree.GetBranch("eJetDR")
 *         #if not self.eJetDR_branch and "eJetDR" not in self.complained:
 *         if not self.eJetDR_branch and "eJetDR":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetDR does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetDR")
 */
    goto __pyx_L294;
  }

  /* "EMTree.pyx":2519
 *             #self.complained.add("eJetDR")
 *         else:
 *             self.eJetDR_branch.SetAddress(<void*>&self.eJetDR_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eJetEtaEtaMoment"
 */
  /*else*/ {
    __pyx_v_self->eJetDR_branch->SetAddress(((void *)(&__pyx_v_self->eJetDR_value)));
  }
  __pyx_L294:;

  /* "EMTree.pyx":2522
 * 
 *         #print "making eJetEtaEtaMoment"
 *         self.eJetEtaEtaMoment_branch = the_tree.GetBranch("eJetEtaEtaMoment")             # <<<<<<<<<<<<<<
 *         #if not self.eJetEtaEtaMoment_branch and "eJetEtaEtaMoment" not in self.complained:
 *         if not self.eJetEtaEtaMoment_branch and "eJetEtaEtaMoment":
 */
  __pyx_v_self->eJetEtaEtaMoment_branch = __pyx_v_the_tree->GetBranch(((char *)"eJetEtaEtaMoment"));

  /* "EMTree.pyx":2524
 *         self.eJetEtaEtaMoment_branch = the_tree.GetBranch("eJetEtaEtaMoment")
 *         #if not self.eJetEtaEtaMoment_branch and "eJetEtaEtaMoment" not in self.complained:
 *         if not self.eJetEtaEtaMoment_branch and "eJetEtaEtaMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetEtaEtaMoment")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eJetEtaEtaMoment_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L298_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L298_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2525
 *         #if not self.eJetEtaEtaMoment_branch and "eJetEtaEtaMoment" not in self.complained:
 *         if not self.eJetEtaEtaMoment_branch and "eJetEtaEtaMoment":
 *             warnings.warn( "EMTree: Expected branch eJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetEtaEtaMoment")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2525, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2525, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__100, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2525, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2524
 *         self.eJetEtaEtaMoment_branch = the_tree.GetBranch("eJetEtaEtaMoment")
 *         #if not self.eJetEtaEtaMoment_branch and "eJetEtaEtaMoment" not in self.complained:
 *         if not self.eJetEtaEtaMoment_branch and "eJetEtaEtaMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetEtaEtaMoment")
 */
    goto __pyx_L297;
  }

  /* "EMTree.pyx":2528
 *             #self.complained.add("eJetEtaEtaMoment")
 *         else:
 *             self.eJetEtaEtaMoment_branch.SetAddress(<void*>&self.eJetEtaEtaMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eJetEtaPhiMoment"
 */
  /*else*/ {
    __pyx_v_self->eJetEtaEtaMoment_branch->SetAddress(((void *)(&__pyx_v_self->eJetEtaEtaMoment_value)));
  }
  __pyx_L297:;

  /* "EMTree.pyx":2531
 * 
 *         #print "making eJetEtaPhiMoment"
 *         self.eJetEtaPhiMoment_branch = the_tree.GetBranch("eJetEtaPhiMoment")             # <<<<<<<<<<<<<<
 *         #if not self.eJetEtaPhiMoment_branch and "eJetEtaPhiMoment" not in self.complained:
 *         if not self.eJetEtaPhiMoment_branch and "eJetEtaPhiMoment":
 */
  __pyx_v_self->eJetEtaPhiMoment_branch = __pyx_v_the_tree->GetBranch(((char *)"eJetEtaPhiMoment"));

  /* "EMTree.pyx":2533
 *         self.eJetEtaPhiMoment_branch = the_tree.GetBranch("eJetEtaPhiMoment")
 *         #if not self.eJetEtaPhiMoment_branch and "eJetEtaPhiMoment" not in self.complained:
 *         if not self.eJetEtaPhiMoment_branch and "eJetEtaPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetEtaPhiMoment")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eJetEtaPhiMoment_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L301_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L301_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2534
 *         #if not self.eJetEtaPhiMoment_branch and "eJetEtaPhiMoment" not in self.complained:
 *         if not self.eJetEtaPhiMoment_branch and "eJetEtaPhiMoment":
 *             warnings.warn( "EMTree: Expected branch eJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetEtaPhiMoment")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2534, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2534, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__101, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2534, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2533
 *         self.eJetEtaPhiMoment_branch = the_tree.GetBranch("eJetEtaPhiMoment")
 *         #if not self.eJetEtaPhiMoment_branch and "eJetEtaPhiMoment" not in self.complained:
 *         if not self.eJetEtaPhiMoment_branch and "eJetEtaPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetEtaPhiMoment")
 */
    goto __pyx_L300;
  }

  /* "EMTree.pyx":2537
 *             #self.complained.add("eJetEtaPhiMoment")
 *         else:
 *             self.eJetEtaPhiMoment_branch.SetAddress(<void*>&self.eJetEtaPhiMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eJetEtaPhiSpread"
 */
  /*else*/ {
    __pyx_v_self->eJetEtaPhiMoment_branch->SetAddress(((void *)(&__pyx_v_self->eJetEtaPhiMoment_value)));
  }
  __pyx_L300:;

  /* "EMTree.pyx":2540
 * 
 *         #print "making eJetEtaPhiSpread"
 *         self.eJetEtaPhiSpread_branch = the_tree.GetBranch("eJetEtaPhiSpread")             # <<<<<<<<<<<<<<
 *         #if not self.eJetEtaPhiSpread_branch and "eJetEtaPhiSpread" not in self.complained:
 *         if not self.eJetEtaPhiSpread_branch and "eJetEtaPhiSpread":
 */
  __pyx_v_self->eJetEtaPhiSpread_branch = __pyx_v_the_tree->GetBranch(((char *)"eJetEtaPhiSpread"));

  /* "EMTree.pyx":2542
 *         self.eJetEtaPhiSpread_branch = the_tree.GetBranch("eJetEtaPhiSpread")
 *         #if not self.eJetEtaPhiSpread_branch and "eJetEtaPhiSpread" not in self.complained:
 *         if not self.eJetEtaPhiSpread_branch and "eJetEtaPhiSpread":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetEtaPhiSpread")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eJetEtaPhiSpread_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L304_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L304_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2543
 *         #if not self.eJetEtaPhiSpread_branch and "eJetEtaPhiSpread" not in self.complained:
 *         if not self.eJetEtaPhiSpread_branch and "eJetEtaPhiSpread":
 *             warnings.warn( "EMTree: Expected branch eJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetEtaPhiSpread")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2543, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2543, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__102, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2543, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2542
 *         self.eJetEtaPhiSpread_branch = the_tree.GetBranch("eJetEtaPhiSpread")
 *         #if not self.eJetEtaPhiSpread_branch and "eJetEtaPhiSpread" not in self.complained:
 *         if not self.eJetEtaPhiSpread_branch and "eJetEtaPhiSpread":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetEtaPhiSpread")
 */
    goto __pyx_L303;
  }

  /* "EMTree.pyx":2546
 *             #self.complained.add("eJetEtaPhiSpread")
 *         else:
 *             self.eJetEtaPhiSpread_branch.SetAddress(<void*>&self.eJetEtaPhiSpread_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eJetHadronFlavour"
 */
  /*else*/ {
    __pyx_v_self->eJetEtaPhiSpread_branch->SetAddress(((void *)(&__pyx_v_self->eJetEtaPhiSpread_value)));
  }
  __pyx_L303:;

  /* "EMTree.pyx":2549
 * 
 *         #print "making eJetHadronFlavour"
 *         self.eJetHadronFlavour_branch = the_tree.GetBranch("eJetHadronFlavour")             # <<<<<<<<<<<<<<
 *         #if not self.eJetHadronFlavour_branch and "eJetHadronFlavour" not in self.complained:
 *         if not self.eJetHadronFlavour_branch and "eJetHadronFlavour":
 */
  __pyx_v_self->eJetHadronFlavour_branch = __pyx_v_the_tree->GetBranch(((char *)"eJetHadronFlavour"));

  /* "EMTree.pyx":2551
 *         self.eJetHadronFlavour_branch = the_tree.GetBranch("eJetHadronFlavour")
 *         #if not self.eJetHadronFlavour_branch and "eJetHadronFlavour" not in self.complained:
 *         if not self.eJetHadronFlavour_branch and "eJetHadronFlavour":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetHadronFlavour does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetHadronFlavour")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eJetHadronFlavour_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L307_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L307_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2552
 *         #if not self.eJetHadronFlavour_branch and "eJetHadronFlavour" not in self.complained:
 *         if not self.eJetHadronFlavour_branch and "eJetHadronFlavour":
 *             warnings.warn( "EMTree: Expected branch eJetHadronFlavour does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetHadronFlavour")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2552, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2552, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__103, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2552, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2551
 *         self.eJetHadronFlavour_branch = the_tree.GetBranch("eJetHadronFlavour")
 *         #if not self.eJetHadronFlavour_branch and "eJetHadronFlavour" not in self.complained:
 *         if not self.eJetHadronFlavour_branch and "eJetHadronFlavour":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetHadronFlavour does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetHadronFlavour")
 */
    goto __pyx_L306;
  }

  /* "EMTree.pyx":2555
 *             #self.complained.add("eJetHadronFlavour")
 *         else:
 *             self.eJetHadronFlavour_branch.SetAddress(<void*>&self.eJetHadronFlavour_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eJetPFCISVBtag"
 */
  /*else*/ {
    __pyx_v_self->eJetHadronFlavour_branch->SetAddress(((void *)(&__pyx_v_self->eJetHadronFlavour_value)));
  }
  __pyx_L306:;

  /* "EMTree.pyx":2558
 * 
 *         #print "making eJetPFCISVBtag"
 *         self.eJetPFCISVBtag_branch = the_tree.GetBranch("eJetPFCISVBtag")             # <<<<<<<<<<<<<<
 *         #if not self.eJetPFCISVBtag_branch and "eJetPFCISVBtag" not in self.complained:
 *         if not self.eJetPFCISVBtag_branch and "eJetPFCISVBtag":
 */
  __pyx_v_self->eJetPFCISVBtag_branch = __pyx_v_the_tree->GetBranch(((char *)"eJetPFCISVBtag"));

  /* "EMTree.pyx":2560
 *         self.eJetPFCISVBtag_branch = the_tree.GetBranch("eJetPFCISVBtag")
 *         #if not self.eJetPFCISVBtag_branch and "eJetPFCISVBtag" not in self.complained:
 *         if not self.eJetPFCISVBtag_branch and "eJetPFCISVBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetPFCISVBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetPFCISVBtag")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eJetPFCISVBtag_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L310_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L310_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2561
 *         #if not self.eJetPFCISVBtag_branch and "eJetPFCISVBtag" not in self.complained:
 *         if not self.eJetPFCISVBtag_branch and "eJetPFCISVBtag":
 *             warnings.warn( "EMTree: Expected branch eJetPFCISVBtag does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetPFCISVBtag")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2561, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2561, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__104, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2561, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2560
 *         self.eJetPFCISVBtag_branch = the_tree.GetBranch("eJetPFCISVBtag")
 *         #if not self.eJetPFCISVBtag_branch and "eJetPFCISVBtag" not in self.complained:
 *         if not self.eJetPFCISVBtag_branch and "eJetPFCISVBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetPFCISVBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetPFCISVBtag")
 */
    goto __pyx_L309;
  }

  /* "EMTree.pyx":2564
 *             #self.complained.add("eJetPFCISVBtag")
 *         else:
 *             self.eJetPFCISVBtag_branch.SetAddress(<void*>&self.eJetPFCISVBtag_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eJetPartonFlavour"
 */
  /*else*/ {
    __pyx_v_self->eJetPFCISVBtag_branch->SetAddress(((void *)(&__pyx_v_self->eJetPFCISVBtag_value)));
  }
  __pyx_L309:;

  /* "EMTree.pyx":2567
 * 
 *         #print "making eJetPartonFlavour"
 *         self.eJetPartonFlavour_branch = the_tree.GetBranch("eJetPartonFlavour")             # <<<<<<<<<<<<<<
 *         #if not self.eJetPartonFlavour_branch and "eJetPartonFlavour" not in self.complained:
 *         if not self.eJetPartonFlavour_branch and "eJetPartonFlavour":
 */
  __pyx_v_self->eJetPartonFlavour_branch = __pyx_v_the_tree->GetBranch(((char *)"eJetPartonFlavour"));

  /* "EMTree.pyx":2569
 *         self.eJetPartonFlavour_branch = the_tree.GetBranch("eJetPartonFlavour")
 *         #if not self.eJetPartonFlavour_branch and "eJetPartonFlavour" not in self.complained:
 *         if not self.eJetPartonFlavour_branch and "eJetPartonFlavour":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetPartonFlavour does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetPartonFlavour")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eJetPartonFlavour_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L313_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L313_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2570
 *         #if not self.eJetPartonFlavour_branch and "eJetPartonFlavour" not in self.complained:
 *         if not self.eJetPartonFlavour_branch and "eJetPartonFlavour":
 *             warnings.warn( "EMTree: Expected branch eJetPartonFlavour does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetPartonFlavour")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2570, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2570, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__105, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2570, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2569
 *         self.eJetPartonFlavour_branch = the_tree.GetBranch("eJetPartonFlavour")
 *         #if not self.eJetPartonFlavour_branch and "eJetPartonFlavour" not in self.complained:
 *         if not self.eJetPartonFlavour_branch and "eJetPartonFlavour":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetPartonFlavour does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetPartonFlavour")
 */
    goto __pyx_L312;
  }

  /* "EMTree.pyx":2573
 *             #self.complained.add("eJetPartonFlavour")
 *         else:
 *             self.eJetPartonFlavour_branch.SetAddress(<void*>&self.eJetPartonFlavour_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eJetPhiPhiMoment"
 */
  /*else*/ {
    __pyx_v_self->eJetPartonFlavour_branch->SetAddress(((void *)(&__pyx_v_self->eJetPartonFlavour_value)));
  }
  __pyx_L312:;

  /* "EMTree.pyx":2576
 * 
 *         #print "making eJetPhiPhiMoment"
 *         self.eJetPhiPhiMoment_branch = the_tree.GetBranch("eJetPhiPhiMoment")             # <<<<<<<<<<<<<<
 *         #if not self.eJetPhiPhiMoment_branch and "eJetPhiPhiMoment" not in self.complained:
 *         if not self.eJetPhiPhiMoment_branch and "eJetPhiPhiMoment":
 */
  __pyx_v_self->eJetPhiPhiMoment_branch = __pyx_v_the_tree->GetBranch(((char *)"eJetPhiPhiMoment"));

  /* "EMTree.pyx":2578
 *         self.eJetPhiPhiMoment_branch = the_tree.GetBranch("eJetPhiPhiMoment")
 *         #if not self.eJetPhiPhiMoment_branch and "eJetPhiPhiMoment" not in self.complained:
 *         if not self.eJetPhiPhiMoment_branch and "eJetPhiPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetPhiPhiMoment")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eJetPhiPhiMoment_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L316_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L316_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2579
 *         #if not self.eJetPhiPhiMoment_branch and "eJetPhiPhiMoment" not in self.complained:
 *         if not self.eJetPhiPhiMoment_branch and "eJetPhiPhiMoment":
 *             warnings.warn( "EMTree: Expected branch eJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetPhiPhiMoment")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__106, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2578
 *         self.eJetPhiPhiMoment_branch = the_tree.GetBranch("eJetPhiPhiMoment")
 *         #if not self.eJetPhiPhiMoment_branch and "eJetPhiPhiMoment" not in self.complained:
 *         if not self.eJetPhiPhiMoment_branch and "eJetPhiPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetPhiPhiMoment")
 */
    goto __pyx_L315;
  }

  /* "EMTree.pyx":2582
 *             #self.complained.add("eJetPhiPhiMoment")
 *         else:
 *             self.eJetPhiPhiMoment_branch.SetAddress(<void*>&self.eJetPhiPhiMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eJetPt"
 */
  /*else*/ {
    __pyx_v_self->eJetPhiPhiMoment_branch->SetAddress(((void *)(&__pyx_v_self->eJetPhiPhiMoment_value)));
  }
  __pyx_L315:;

  /* "EMTree.pyx":2585
 * 
 *         #print "making eJetPt"
 *         self.eJetPt_branch = the_tree.GetBranch("eJetPt")             # <<<<<<<<<<<<<<
 *         #if not self.eJetPt_branch and "eJetPt" not in self.complained:
 *         if not self.eJetPt_branch and "eJetPt":
 */
  __pyx_v_self->eJetPt_branch = __pyx_v_the_tree->GetBranch(((char *)"eJetPt"));

  /* "EMTree.pyx":2587
 *         self.eJetPt_branch = the_tree.GetBranch("eJetPt")
 *         #if not self.eJetPt_branch and "eJetPt" not in self.complained:
 *         if not self.eJetPt_branch and "eJetPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetPt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eJetPt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L319_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L319_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2588
 *         #if not self.eJetPt_branch and "eJetPt" not in self.complained:
 *         if not self.eJetPt_branch and "eJetPt":
 *             warnings.warn( "EMTree: Expected branch eJetPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetPt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2588, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2588, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__107, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2588, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2587
 *         self.eJetPt_branch = the_tree.GetBranch("eJetPt")
 *         #if not self.eJetPt_branch and "eJetPt" not in self.complained:
 *         if not self.eJetPt_branch and "eJetPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eJetPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eJetPt")
 */
    goto __pyx_L318;
  }

  /* "EMTree.pyx":2591
 *             #self.complained.add("eJetPt")
 *         else:
 *             self.eJetPt_branch.SetAddress(<void*>&self.eJetPt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMVAIsoWP80"
 */
  /*else*/ {
    __pyx_v_self->eJetPt_branch->SetAddress(((void *)(&__pyx_v_self->eJetPt_value)));
  }
  __pyx_L318:;

  /* "EMTree.pyx":2594
 * 
 *         #print "making eMVAIsoWP80"
 *         self.eMVAIsoWP80_branch = the_tree.GetBranch("eMVAIsoWP80")             # <<<<<<<<<<<<<<
 *         #if not self.eMVAIsoWP80_branch and "eMVAIsoWP80" not in self.complained:
 *         if not self.eMVAIsoWP80_branch and "eMVAIsoWP80":
 */
  __pyx_v_self->eMVAIsoWP80_branch = __pyx_v_the_tree->GetBranch(((char *)"eMVAIsoWP80"));

  /* "EMTree.pyx":2596
 *         self.eMVAIsoWP80_branch = the_tree.GetBranch("eMVAIsoWP80")
 *         #if not self.eMVAIsoWP80_branch and "eMVAIsoWP80" not in self.complained:
 *         if not self.eMVAIsoWP80_branch and "eMVAIsoWP80":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMVAIsoWP80 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMVAIsoWP80")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMVAIsoWP80_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L322_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L322_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2597
 *         #if not self.eMVAIsoWP80_branch and "eMVAIsoWP80" not in self.complained:
 *         if not self.eMVAIsoWP80_branch and "eMVAIsoWP80":
 *             warnings.warn( "EMTree: Expected branch eMVAIsoWP80 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMVAIsoWP80")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2597, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2597, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__108, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2597, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2596
 *         self.eMVAIsoWP80_branch = the_tree.GetBranch("eMVAIsoWP80")
 *         #if not self.eMVAIsoWP80_branch and "eMVAIsoWP80" not in self.complained:
 *         if not self.eMVAIsoWP80_branch and "eMVAIsoWP80":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMVAIsoWP80 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMVAIsoWP80")
 */
    goto __pyx_L321;
  }

  /* "EMTree.pyx":2600
 *             #self.complained.add("eMVAIsoWP80")
 *         else:
 *             self.eMVAIsoWP80_branch.SetAddress(<void*>&self.eMVAIsoWP80_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMVAIsoWP90"
 */
  /*else*/ {
    __pyx_v_self->eMVAIsoWP80_branch->SetAddress(((void *)(&__pyx_v_self->eMVAIsoWP80_value)));
  }
  __pyx_L321:;

  /* "EMTree.pyx":2603
 * 
 *         #print "making eMVAIsoWP90"
 *         self.eMVAIsoWP90_branch = the_tree.GetBranch("eMVAIsoWP90")             # <<<<<<<<<<<<<<
 *         #if not self.eMVAIsoWP90_branch and "eMVAIsoWP90" not in self.complained:
 *         if not self.eMVAIsoWP90_branch and "eMVAIsoWP90":
 */
  __pyx_v_self->eMVAIsoWP90_branch = __pyx_v_the_tree->GetBranch(((char *)"eMVAIsoWP90"));

  /* "EMTree.pyx":2605
 *         self.eMVAIsoWP90_branch = the_tree.GetBranch("eMVAIsoWP90")
 *         #if not self.eMVAIsoWP90_branch and "eMVAIsoWP90" not in self.complained:
 *         if not self.eMVAIsoWP90_branch and "eMVAIsoWP90":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMVAIsoWP90 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMVAIsoWP90")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMVAIsoWP90_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L325_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L325_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2606
 *         #if not self.eMVAIsoWP90_branch and "eMVAIsoWP90" not in self.complained:
 *         if not self.eMVAIsoWP90_branch and "eMVAIsoWP90":
 *             warnings.warn( "EMTree: Expected branch eMVAIsoWP90 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMVAIsoWP90")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2606, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2606, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__109, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2606, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2605
 *         self.eMVAIsoWP90_branch = the_tree.GetBranch("eMVAIsoWP90")
 *         #if not self.eMVAIsoWP90_branch and "eMVAIsoWP90" not in self.complained:
 *         if not self.eMVAIsoWP90_branch and "eMVAIsoWP90":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMVAIsoWP90 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMVAIsoWP90")
 */
    goto __pyx_L324;
  }

  /* "EMTree.pyx":2609
 *             #self.complained.add("eMVAIsoWP90")
 *         else:
 *             self.eMVAIsoWP90_branch.SetAddress(<void*>&self.eMVAIsoWP90_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMVANoisoWP80"
 */
  /*else*/ {
    __pyx_v_self->eMVAIsoWP90_branch->SetAddress(((void *)(&__pyx_v_self->eMVAIsoWP90_value)));
  }
  __pyx_L324:;

  /* "EMTree.pyx":2612
 * 
 *         #print "making eMVANoisoWP80"
 *         self.eMVANoisoWP80_branch = the_tree.GetBranch("eMVANoisoWP80")             # <<<<<<<<<<<<<<
 *         #if not self.eMVANoisoWP80_branch and "eMVANoisoWP80" not in self.complained:
 *         if not self.eMVANoisoWP80_branch and "eMVANoisoWP80":
 */
  __pyx_v_self->eMVANoisoWP80_branch = __pyx_v_the_tree->GetBranch(((char *)"eMVANoisoWP80"));

  /* "EMTree.pyx":2614
 *         self.eMVANoisoWP80_branch = the_tree.GetBranch("eMVANoisoWP80")
 *         #if not self.eMVANoisoWP80_branch and "eMVANoisoWP80" not in self.complained:
 *         if not self.eMVANoisoWP80_branch and "eMVANoisoWP80":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMVANoisoWP80 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMVANoisoWP80")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMVANoisoWP80_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L328_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L328_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2615
 *         #if not self.eMVANoisoWP80_branch and "eMVANoisoWP80" not in self.complained:
 *         if not self.eMVANoisoWP80_branch and "eMVANoisoWP80":
 *             warnings.warn( "EMTree: Expected branch eMVANoisoWP80 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMVANoisoWP80")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2615, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2615, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__110, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2615, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2614
 *         self.eMVANoisoWP80_branch = the_tree.GetBranch("eMVANoisoWP80")
 *         #if not self.eMVANoisoWP80_branch and "eMVANoisoWP80" not in self.complained:
 *         if not self.eMVANoisoWP80_branch and "eMVANoisoWP80":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMVANoisoWP80 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMVANoisoWP80")
 */
    goto __pyx_L327;
  }

  /* "EMTree.pyx":2618
 *             #self.complained.add("eMVANoisoWP80")
 *         else:
 *             self.eMVANoisoWP80_branch.SetAddress(<void*>&self.eMVANoisoWP80_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMVANoisoWP90"
 */
  /*else*/ {
    __pyx_v_self->eMVANoisoWP80_branch->SetAddress(((void *)(&__pyx_v_self->eMVANoisoWP80_value)));
  }
  __pyx_L327:;

  /* "EMTree.pyx":2621
 * 
 *         #print "making eMVANoisoWP90"
 *         self.eMVANoisoWP90_branch = the_tree.GetBranch("eMVANoisoWP90")             # <<<<<<<<<<<<<<
 *         #if not self.eMVANoisoWP90_branch and "eMVANoisoWP90" not in self.complained:
 *         if not self.eMVANoisoWP90_branch and "eMVANoisoWP90":
 */
  __pyx_v_self->eMVANoisoWP90_branch = __pyx_v_the_tree->GetBranch(((char *)"eMVANoisoWP90"));

  /* "EMTree.pyx":2623
 *         self.eMVANoisoWP90_branch = the_tree.GetBranch("eMVANoisoWP90")
 *         #if not self.eMVANoisoWP90_branch and "eMVANoisoWP90" not in self.complained:
 *         if not self.eMVANoisoWP90_branch and "eMVANoisoWP90":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMVANoisoWP90 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMVANoisoWP90")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMVANoisoWP90_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L331_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L331_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2624
 *         #if not self.eMVANoisoWP90_branch and "eMVANoisoWP90" not in self.complained:
 *         if not self.eMVANoisoWP90_branch and "eMVANoisoWP90":
 *             warnings.warn( "EMTree: Expected branch eMVANoisoWP90 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMVANoisoWP90")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2624, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2624, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__111, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2624, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2623
 *         self.eMVANoisoWP90_branch = the_tree.GetBranch("eMVANoisoWP90")
 *         #if not self.eMVANoisoWP90_branch and "eMVANoisoWP90" not in self.complained:
 *         if not self.eMVANoisoWP90_branch and "eMVANoisoWP90":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMVANoisoWP90 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMVANoisoWP90")
 */
    goto __pyx_L330;
  }

  /* "EMTree.pyx":2627
 *             #self.complained.add("eMVANoisoWP90")
 *         else:
 *             self.eMVANoisoWP90_branch.SetAddress(<void*>&self.eMVANoisoWP90_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMass"
 */
  /*else*/ {
    __pyx_v_self->eMVANoisoWP90_branch->SetAddress(((void *)(&__pyx_v_self->eMVANoisoWP90_value)));
  }
  __pyx_L330:;

  /* "EMTree.pyx":2630
 * 
 *         #print "making eMass"
 *         self.eMass_branch = the_tree.GetBranch("eMass")             # <<<<<<<<<<<<<<
 *         #if not self.eMass_branch and "eMass" not in self.complained:
 *         if not self.eMass_branch and "eMass":
 */
  __pyx_v_self->eMass_branch = __pyx_v_the_tree->GetBranch(((char *)"eMass"));

  /* "EMTree.pyx":2632
 *         self.eMass_branch = the_tree.GetBranch("eMass")
 *         #if not self.eMass_branch and "eMass" not in self.complained:
 *         if not self.eMass_branch and "eMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L334_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L334_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2633
 *         #if not self.eMass_branch and "eMass" not in self.complained:
 *         if not self.eMass_branch and "eMass":
 *             warnings.warn( "EMTree: Expected branch eMass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2633, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2633, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__112, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2633, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2632
 *         self.eMass_branch = the_tree.GetBranch("eMass")
 *         #if not self.eMass_branch and "eMass" not in self.complained:
 *         if not self.eMass_branch and "eMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMass")
 */
    goto __pyx_L333;
  }

  /* "EMTree.pyx":2636
 *             #self.complained.add("eMass")
 *         else:
 *             self.eMass_branch.SetAddress(<void*>&self.eMass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchEmbeddedFilterEle24Tau30"
 */
  /*else*/ {
    __pyx_v_self->eMass_branch->SetAddress(((void *)(&__pyx_v_self->eMass_value)));
  }
  __pyx_L333:;

  /* "EMTree.pyx":2639
 * 
 *         #print "making eMatchEmbeddedFilterEle24Tau30"
 *         self.eMatchEmbeddedFilterEle24Tau30_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle24Tau30")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchEmbeddedFilterEle24Tau30_branch and "eMatchEmbeddedFilterEle24Tau30" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle24Tau30_branch and "eMatchEmbeddedFilterEle24Tau30":
 */
  __pyx_v_self->eMatchEmbeddedFilterEle24Tau30_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchEmbeddedFilterEle24Tau30"));

  /* "EMTree.pyx":2641
 *         self.eMatchEmbeddedFilterEle24Tau30_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle24Tau30")
 *         #if not self.eMatchEmbeddedFilterEle24Tau30_branch and "eMatchEmbeddedFilterEle24Tau30" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle24Tau30_branch and "eMatchEmbeddedFilterEle24Tau30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle24Tau30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchEmbeddedFilterEle24Tau30")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchEmbeddedFilterEle24Tau30_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L337_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L337_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2642
 *         #if not self.eMatchEmbeddedFilterEle24Tau30_branch and "eMatchEmbeddedFilterEle24Tau30" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle24Tau30_branch and "eMatchEmbeddedFilterEle24Tau30":
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle24Tau30 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchEmbeddedFilterEle24Tau30")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2642, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2642, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__113, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2642, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2641
 *         self.eMatchEmbeddedFilterEle24Tau30_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle24Tau30")
 *         #if not self.eMatchEmbeddedFilterEle24Tau30_branch and "eMatchEmbeddedFilterEle24Tau30" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle24Tau30_branch and "eMatchEmbeddedFilterEle24Tau30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle24Tau30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchEmbeddedFilterEle24Tau30")
 */
    goto __pyx_L336;
  }

  /* "EMTree.pyx":2645
 *             #self.complained.add("eMatchEmbeddedFilterEle24Tau30")
 *         else:
 *             self.eMatchEmbeddedFilterEle24Tau30_branch.SetAddress(<void*>&self.eMatchEmbeddedFilterEle24Tau30_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchEmbeddedFilterEle27"
 */
  /*else*/ {
    __pyx_v_self->eMatchEmbeddedFilterEle24Tau30_branch->SetAddress(((void *)(&__pyx_v_self->eMatchEmbeddedFilterEle24Tau30_value)));
  }
  __pyx_L336:;

  /* "EMTree.pyx":2648
 * 
 *         #print "making eMatchEmbeddedFilterEle27"
 *         self.eMatchEmbeddedFilterEle27_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle27")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchEmbeddedFilterEle27_branch and "eMatchEmbeddedFilterEle27" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle27_branch and "eMatchEmbeddedFilterEle27":
 */
  __pyx_v_self->eMatchEmbeddedFilterEle27_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchEmbeddedFilterEle27"));

  /* "EMTree.pyx":2650
 *         self.eMatchEmbeddedFilterEle27_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle27")
 *         #if not self.eMatchEmbeddedFilterEle27_branch and "eMatchEmbeddedFilterEle27" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle27_branch and "eMatchEmbeddedFilterEle27":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle27 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchEmbeddedFilterEle27")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchEmbeddedFilterEle27_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L340_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L340_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2651
 *         #if not self.eMatchEmbeddedFilterEle27_branch and "eMatchEmbeddedFilterEle27" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle27_branch and "eMatchEmbeddedFilterEle27":
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle27 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchEmbeddedFilterEle27")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2651, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2651, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__114, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2651, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2650
 *         self.eMatchEmbeddedFilterEle27_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle27")
 *         #if not self.eMatchEmbeddedFilterEle27_branch and "eMatchEmbeddedFilterEle27" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle27_branch and "eMatchEmbeddedFilterEle27":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle27 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchEmbeddedFilterEle27")
 */
    goto __pyx_L339;
  }

  /* "EMTree.pyx":2654
 *             #self.complained.add("eMatchEmbeddedFilterEle27")
 *         else:
 *             self.eMatchEmbeddedFilterEle27_branch.SetAddress(<void*>&self.eMatchEmbeddedFilterEle27_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchEmbeddedFilterEle32"
 */
  /*else*/ {
    __pyx_v_self->eMatchEmbeddedFilterEle27_branch->SetAddress(((void *)(&__pyx_v_self->eMatchEmbeddedFilterEle27_value)));
  }
  __pyx_L339:;

  /* "EMTree.pyx":2657
 * 
 *         #print "making eMatchEmbeddedFilterEle32"
 *         self.eMatchEmbeddedFilterEle32_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle32")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchEmbeddedFilterEle32_branch and "eMatchEmbeddedFilterEle32" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle32_branch and "eMatchEmbeddedFilterEle32":
 */
  __pyx_v_self->eMatchEmbeddedFilterEle32_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchEmbeddedFilterEle32"));

  /* "EMTree.pyx":2659
 *         self.eMatchEmbeddedFilterEle32_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle32")
 *         #if not self.eMatchEmbeddedFilterEle32_branch and "eMatchEmbeddedFilterEle32" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle32_branch and "eMatchEmbeddedFilterEle32":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle32 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchEmbeddedFilterEle32")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchEmbeddedFilterEle32_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L343_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L343_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2660
 *         #if not self.eMatchEmbeddedFilterEle32_branch and "eMatchEmbeddedFilterEle32" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle32_branch and "eMatchEmbeddedFilterEle32":
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle32 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchEmbeddedFilterEle32")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2660, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2660, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__115, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2660, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2659
 *         self.eMatchEmbeddedFilterEle32_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle32")
 *         #if not self.eMatchEmbeddedFilterEle32_branch and "eMatchEmbeddedFilterEle32" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle32_branch and "eMatchEmbeddedFilterEle32":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle32 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchEmbeddedFilterEle32")
 */
    goto __pyx_L342;
  }

  /* "EMTree.pyx":2663
 *             #self.complained.add("eMatchEmbeddedFilterEle32")
 *         else:
 *             self.eMatchEmbeddedFilterEle32_branch.SetAddress(<void*>&self.eMatchEmbeddedFilterEle32_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchEmbeddedFilterEle32DoubleL1_v1"
 */
  /*else*/ {
    __pyx_v_self->eMatchEmbeddedFilterEle32_branch->SetAddress(((void *)(&__pyx_v_self->eMatchEmbeddedFilterEle32_value)));
  }
  __pyx_L342:;

  /* "EMTree.pyx":2666
 * 
 *         #print "making eMatchEmbeddedFilterEle32DoubleL1_v1"
 *         self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle32DoubleL1_v1")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch and "eMatchEmbeddedFilterEle32DoubleL1_v1" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch and "eMatchEmbeddedFilterEle32DoubleL1_v1":
 */
  __pyx_v_self->eMatchEmbeddedFilterEle32DoubleL1_v1_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchEmbeddedFilterEle32DoubleL1_v1"));

  /* "EMTree.pyx":2668
 *         self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle32DoubleL1_v1")
 *         #if not self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch and "eMatchEmbeddedFilterEle32DoubleL1_v1" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch and "eMatchEmbeddedFilterEle32DoubleL1_v1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle32DoubleL1_v1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchEmbeddedFilterEle32DoubleL1_v1")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchEmbeddedFilterEle32DoubleL1_v1_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L346_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L346_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2669
 *         #if not self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch and "eMatchEmbeddedFilterEle32DoubleL1_v1" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch and "eMatchEmbeddedFilterEle32DoubleL1_v1":
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle32DoubleL1_v1 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchEmbeddedFilterEle32DoubleL1_v1")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2669, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2669, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__116, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2669, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2668
 *         self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle32DoubleL1_v1")
 *         #if not self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch and "eMatchEmbeddedFilterEle32DoubleL1_v1" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch and "eMatchEmbeddedFilterEle32DoubleL1_v1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle32DoubleL1_v1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchEmbeddedFilterEle32DoubleL1_v1")
 */
    goto __pyx_L345;
  }

  /* "EMTree.pyx":2672
 *             #self.complained.add("eMatchEmbeddedFilterEle32DoubleL1_v1")
 *         else:
 *             self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch.SetAddress(<void*>&self.eMatchEmbeddedFilterEle32DoubleL1_v1_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchEmbeddedFilterEle32DoubleL1_v2"
 */
  /*else*/ {
    __pyx_v_self->eMatchEmbeddedFilterEle32DoubleL1_v1_branch->SetAddress(((void *)(&__pyx_v_self->eMatchEmbeddedFilterEle32DoubleL1_v1_value)));
  }
  __pyx_L345:;

  /* "EMTree.pyx":2675
 * 
 *         #print "making eMatchEmbeddedFilterEle32DoubleL1_v2"
 *         self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle32DoubleL1_v2")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch and "eMatchEmbeddedFilterEle32DoubleL1_v2" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch and "eMatchEmbeddedFilterEle32DoubleL1_v2":
 */
  __pyx_v_self->eMatchEmbeddedFilterEle32DoubleL1_v2_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchEmbeddedFilterEle32DoubleL1_v2"));

  /* "EMTree.pyx":2677
 *         self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle32DoubleL1_v2")
 *         #if not self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch and "eMatchEmbeddedFilterEle32DoubleL1_v2" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch and "eMatchEmbeddedFilterEle32DoubleL1_v2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle32DoubleL1_v2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchEmbeddedFilterEle32DoubleL1_v2")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchEmbeddedFilterEle32DoubleL1_v2_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L349_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L349_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2678
 *         #if not self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch and "eMatchEmbeddedFilterEle32DoubleL1_v2" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch and "eMatchEmbeddedFilterEle32DoubleL1_v2":
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle32DoubleL1_v2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchEmbeddedFilterEle32DoubleL1_v2")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2678, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2678, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__117, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2678, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2677
 *         self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle32DoubleL1_v2")
 *         #if not self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch and "eMatchEmbeddedFilterEle32DoubleL1_v2" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch and "eMatchEmbeddedFilterEle32DoubleL1_v2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle32DoubleL1_v2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchEmbeddedFilterEle32DoubleL1_v2")
 */
    goto __pyx_L348;
  }

  /* "EMTree.pyx":2681
 *             #self.complained.add("eMatchEmbeddedFilterEle32DoubleL1_v2")
 *         else:
 *             self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch.SetAddress(<void*>&self.eMatchEmbeddedFilterEle32DoubleL1_v2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchEmbeddedFilterEle35"
 */
  /*else*/ {
    __pyx_v_self->eMatchEmbeddedFilterEle32DoubleL1_v2_branch->SetAddress(((void *)(&__pyx_v_self->eMatchEmbeddedFilterEle32DoubleL1_v2_value)));
  }
  __pyx_L348:;

  /* "EMTree.pyx":2684
 * 
 *         #print "making eMatchEmbeddedFilterEle35"
 *         self.eMatchEmbeddedFilterEle35_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle35")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchEmbeddedFilterEle35_branch and "eMatchEmbeddedFilterEle35" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle35_branch and "eMatchEmbeddedFilterEle35":
 */
  __pyx_v_self->eMatchEmbeddedFilterEle35_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchEmbeddedFilterEle35"));

  /* "EMTree.pyx":2686
 *         self.eMatchEmbeddedFilterEle35_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle35")
 *         #if not self.eMatchEmbeddedFilterEle35_branch and "eMatchEmbeddedFilterEle35" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle35_branch and "eMatchEmbeddedFilterEle35":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle35 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchEmbeddedFilterEle35")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchEmbeddedFilterEle35_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L352_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L352_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2687
 *         #if not self.eMatchEmbeddedFilterEle35_branch and "eMatchEmbeddedFilterEle35" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle35_branch and "eMatchEmbeddedFilterEle35":
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle35 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchEmbeddedFilterEle35")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2687, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2687, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__118, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2687, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2686
 *         self.eMatchEmbeddedFilterEle35_branch = the_tree.GetBranch("eMatchEmbeddedFilterEle35")
 *         #if not self.eMatchEmbeddedFilterEle35_branch and "eMatchEmbeddedFilterEle35" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle35_branch and "eMatchEmbeddedFilterEle35":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle35 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchEmbeddedFilterEle35")
 */
    goto __pyx_L351;
  }

  /* "EMTree.pyx":2690
 *             #self.complained.add("eMatchEmbeddedFilterEle35")
 *         else:
 *             self.eMatchEmbeddedFilterEle35_branch.SetAddress(<void*>&self.eMatchEmbeddedFilterEle35_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesEle24HPSTau30Filter"
 */
  /*else*/ {
    __pyx_v_self->eMatchEmbeddedFilterEle35_branch->SetAddress(((void *)(&__pyx_v_self->eMatchEmbeddedFilterEle35_value)));
  }
  __pyx_L351:;

  /* "EMTree.pyx":2693
 * 
 *         #print "making eMatchesEle24HPSTau30Filter"
 *         self.eMatchesEle24HPSTau30Filter_branch = the_tree.GetBranch("eMatchesEle24HPSTau30Filter")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesEle24HPSTau30Filter_branch and "eMatchesEle24HPSTau30Filter" not in self.complained:
 *         if not self.eMatchesEle24HPSTau30Filter_branch and "eMatchesEle24HPSTau30Filter":
 */
  __pyx_v_self->eMatchesEle24HPSTau30Filter_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesEle24HPSTau30Filter"));

  /* "EMTree.pyx":2695
 *         self.eMatchesEle24HPSTau30Filter_branch = the_tree.GetBranch("eMatchesEle24HPSTau30Filter")
 *         #if not self.eMatchesEle24HPSTau30Filter_branch and "eMatchesEle24HPSTau30Filter" not in self.complained:
 *         if not self.eMatchesEle24HPSTau30Filter_branch and "eMatchesEle24HPSTau30Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle24HPSTau30Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle24HPSTau30Filter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesEle24HPSTau30Filter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L355_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L355_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2696
 *         #if not self.eMatchesEle24HPSTau30Filter_branch and "eMatchesEle24HPSTau30Filter" not in self.complained:
 *         if not self.eMatchesEle24HPSTau30Filter_branch and "eMatchesEle24HPSTau30Filter":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle24HPSTau30Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle24HPSTau30Filter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2696, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2696, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__119, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2696, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2695
 *         self.eMatchesEle24HPSTau30Filter_branch = the_tree.GetBranch("eMatchesEle24HPSTau30Filter")
 *         #if not self.eMatchesEle24HPSTau30Filter_branch and "eMatchesEle24HPSTau30Filter" not in self.complained:
 *         if not self.eMatchesEle24HPSTau30Filter_branch and "eMatchesEle24HPSTau30Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle24HPSTau30Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle24HPSTau30Filter")
 */
    goto __pyx_L354;
  }

  /* "EMTree.pyx":2699
 *             #self.complained.add("eMatchesEle24HPSTau30Filter")
 *         else:
 *             self.eMatchesEle24HPSTau30Filter_branch.SetAddress(<void*>&self.eMatchesEle24HPSTau30Filter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesEle24HPSTau30Path"
 */
  /*else*/ {
    __pyx_v_self->eMatchesEle24HPSTau30Filter_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesEle24HPSTau30Filter_value)));
  }
  __pyx_L354:;

  /* "EMTree.pyx":2702
 * 
 *         #print "making eMatchesEle24HPSTau30Path"
 *         self.eMatchesEle24HPSTau30Path_branch = the_tree.GetBranch("eMatchesEle24HPSTau30Path")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesEle24HPSTau30Path_branch and "eMatchesEle24HPSTau30Path" not in self.complained:
 *         if not self.eMatchesEle24HPSTau30Path_branch and "eMatchesEle24HPSTau30Path":
 */
  __pyx_v_self->eMatchesEle24HPSTau30Path_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesEle24HPSTau30Path"));

  /* "EMTree.pyx":2704
 *         self.eMatchesEle24HPSTau30Path_branch = the_tree.GetBranch("eMatchesEle24HPSTau30Path")
 *         #if not self.eMatchesEle24HPSTau30Path_branch and "eMatchesEle24HPSTau30Path" not in self.complained:
 *         if not self.eMatchesEle24HPSTau30Path_branch and "eMatchesEle24HPSTau30Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle24HPSTau30Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle24HPSTau30Path")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesEle24HPSTau30Path_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L358_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L358_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2705
 *         #if not self.eMatchesEle24HPSTau30Path_branch and "eMatchesEle24HPSTau30Path" not in self.complained:
 *         if not self.eMatchesEle24HPSTau30Path_branch and "eMatchesEle24HPSTau30Path":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle24HPSTau30Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle24HPSTau30Path")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2705, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2705, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__120, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2705, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2704
 *         self.eMatchesEle24HPSTau30Path_branch = the_tree.GetBranch("eMatchesEle24HPSTau30Path")
 *         #if not self.eMatchesEle24HPSTau30Path_branch and "eMatchesEle24HPSTau30Path" not in self.complained:
 *         if not self.eMatchesEle24HPSTau30Path_branch and "eMatchesEle24HPSTau30Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle24HPSTau30Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle24HPSTau30Path")
 */
    goto __pyx_L357;
  }

  /* "EMTree.pyx":2708
 *             #self.complained.add("eMatchesEle24HPSTau30Path")
 *         else:
 *             self.eMatchesEle24HPSTau30Path_branch.SetAddress(<void*>&self.eMatchesEle24HPSTau30Path_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesEle24Tau30Filter"
 */
  /*else*/ {
    __pyx_v_self->eMatchesEle24HPSTau30Path_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesEle24HPSTau30Path_value)));
  }
  __pyx_L357:;

  /* "EMTree.pyx":2711
 * 
 *         #print "making eMatchesEle24Tau30Filter"
 *         self.eMatchesEle24Tau30Filter_branch = the_tree.GetBranch("eMatchesEle24Tau30Filter")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesEle24Tau30Filter_branch and "eMatchesEle24Tau30Filter" not in self.complained:
 *         if not self.eMatchesEle24Tau30Filter_branch and "eMatchesEle24Tau30Filter":
 */
  __pyx_v_self->eMatchesEle24Tau30Filter_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesEle24Tau30Filter"));

  /* "EMTree.pyx":2713
 *         self.eMatchesEle24Tau30Filter_branch = the_tree.GetBranch("eMatchesEle24Tau30Filter")
 *         #if not self.eMatchesEle24Tau30Filter_branch and "eMatchesEle24Tau30Filter" not in self.complained:
 *         if not self.eMatchesEle24Tau30Filter_branch and "eMatchesEle24Tau30Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle24Tau30Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle24Tau30Filter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesEle24Tau30Filter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L361_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L361_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2714
 *         #if not self.eMatchesEle24Tau30Filter_branch and "eMatchesEle24Tau30Filter" not in self.complained:
 *         if not self.eMatchesEle24Tau30Filter_branch and "eMatchesEle24Tau30Filter":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle24Tau30Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle24Tau30Filter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2714, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2714, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__121, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2714, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2713
 *         self.eMatchesEle24Tau30Filter_branch = the_tree.GetBranch("eMatchesEle24Tau30Filter")
 *         #if not self.eMatchesEle24Tau30Filter_branch and "eMatchesEle24Tau30Filter" not in self.complained:
 *         if not self.eMatchesEle24Tau30Filter_branch and "eMatchesEle24Tau30Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle24Tau30Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle24Tau30Filter")
 */
    goto __pyx_L360;
  }

  /* "EMTree.pyx":2717
 *             #self.complained.add("eMatchesEle24Tau30Filter")
 *         else:
 *             self.eMatchesEle24Tau30Filter_branch.SetAddress(<void*>&self.eMatchesEle24Tau30Filter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesEle24Tau30Path"
 */
  /*else*/ {
    __pyx_v_self->eMatchesEle24Tau30Filter_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesEle24Tau30Filter_value)));
  }
  __pyx_L360:;

  /* "EMTree.pyx":2720
 * 
 *         #print "making eMatchesEle24Tau30Path"
 *         self.eMatchesEle24Tau30Path_branch = the_tree.GetBranch("eMatchesEle24Tau30Path")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesEle24Tau30Path_branch and "eMatchesEle24Tau30Path" not in self.complained:
 *         if not self.eMatchesEle24Tau30Path_branch and "eMatchesEle24Tau30Path":
 */
  __pyx_v_self->eMatchesEle24Tau30Path_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesEle24Tau30Path"));

  /* "EMTree.pyx":2722
 *         self.eMatchesEle24Tau30Path_branch = the_tree.GetBranch("eMatchesEle24Tau30Path")
 *         #if not self.eMatchesEle24Tau30Path_branch and "eMatchesEle24Tau30Path" not in self.complained:
 *         if not self.eMatchesEle24Tau30Path_branch and "eMatchesEle24Tau30Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle24Tau30Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle24Tau30Path")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesEle24Tau30Path_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L364_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L364_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2723
 *         #if not self.eMatchesEle24Tau30Path_branch and "eMatchesEle24Tau30Path" not in self.complained:
 *         if not self.eMatchesEle24Tau30Path_branch and "eMatchesEle24Tau30Path":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle24Tau30Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle24Tau30Path")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2723, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2723, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__122, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2723, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2722
 *         self.eMatchesEle24Tau30Path_branch = the_tree.GetBranch("eMatchesEle24Tau30Path")
 *         #if not self.eMatchesEle24Tau30Path_branch and "eMatchesEle24Tau30Path" not in self.complained:
 *         if not self.eMatchesEle24Tau30Path_branch and "eMatchesEle24Tau30Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle24Tau30Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle24Tau30Path")
 */
    goto __pyx_L363;
  }

  /* "EMTree.pyx":2726
 *             #self.complained.add("eMatchesEle24Tau30Path")
 *         else:
 *             self.eMatchesEle24Tau30Path_branch.SetAddress(<void*>&self.eMatchesEle24Tau30Path_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesEle25Filter"
 */
  /*else*/ {
    __pyx_v_self->eMatchesEle24Tau30Path_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesEle24Tau30Path_value)));
  }
  __pyx_L363:;

  /* "EMTree.pyx":2729
 * 
 *         #print "making eMatchesEle25Filter"
 *         self.eMatchesEle25Filter_branch = the_tree.GetBranch("eMatchesEle25Filter")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesEle25Filter_branch and "eMatchesEle25Filter" not in self.complained:
 *         if not self.eMatchesEle25Filter_branch and "eMatchesEle25Filter":
 */
  __pyx_v_self->eMatchesEle25Filter_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesEle25Filter"));

  /* "EMTree.pyx":2731
 *         self.eMatchesEle25Filter_branch = the_tree.GetBranch("eMatchesEle25Filter")
 *         #if not self.eMatchesEle25Filter_branch and "eMatchesEle25Filter" not in self.complained:
 *         if not self.eMatchesEle25Filter_branch and "eMatchesEle25Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle25Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle25Filter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesEle25Filter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L367_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L367_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2732
 *         #if not self.eMatchesEle25Filter_branch and "eMatchesEle25Filter" not in self.complained:
 *         if not self.eMatchesEle25Filter_branch and "eMatchesEle25Filter":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle25Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle25Filter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2732, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2732, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__123, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2732, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2731
 *         self.eMatchesEle25Filter_branch = the_tree.GetBranch("eMatchesEle25Filter")
 *         #if not self.eMatchesEle25Filter_branch and "eMatchesEle25Filter" not in self.complained:
 *         if not self.eMatchesEle25Filter_branch and "eMatchesEle25Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle25Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle25Filter")
 */
    goto __pyx_L366;
  }

  /* "EMTree.pyx":2735
 *             #self.complained.add("eMatchesEle25Filter")
 *         else:
 *             self.eMatchesEle25Filter_branch.SetAddress(<void*>&self.eMatchesEle25Filter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesEle25Path"
 */
  /*else*/ {
    __pyx_v_self->eMatchesEle25Filter_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesEle25Filter_value)));
  }
  __pyx_L366:;

  /* "EMTree.pyx":2738
 * 
 *         #print "making eMatchesEle25Path"
 *         self.eMatchesEle25Path_branch = the_tree.GetBranch("eMatchesEle25Path")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesEle25Path_branch and "eMatchesEle25Path" not in self.complained:
 *         if not self.eMatchesEle25Path_branch and "eMatchesEle25Path":
 */
  __pyx_v_self->eMatchesEle25Path_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesEle25Path"));

  /* "EMTree.pyx":2740
 *         self.eMatchesEle25Path_branch = the_tree.GetBranch("eMatchesEle25Path")
 *         #if not self.eMatchesEle25Path_branch and "eMatchesEle25Path" not in self.complained:
 *         if not self.eMatchesEle25Path_branch and "eMatchesEle25Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle25Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle25Path")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesEle25Path_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L370_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L370_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2741
 *         #if not self.eMatchesEle25Path_branch and "eMatchesEle25Path" not in self.complained:
 *         if not self.eMatchesEle25Path_branch and "eMatchesEle25Path":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle25Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle25Path")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2741, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2741, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__124, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2741, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2740
 *         self.eMatchesEle25Path_branch = the_tree.GetBranch("eMatchesEle25Path")
 *         #if not self.eMatchesEle25Path_branch and "eMatchesEle25Path" not in self.complained:
 *         if not self.eMatchesEle25Path_branch and "eMatchesEle25Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle25Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle25Path")
 */
    goto __pyx_L369;
  }

  /* "EMTree.pyx":2744
 *             #self.complained.add("eMatchesEle25Path")
 *         else:
 *             self.eMatchesEle25Path_branch.SetAddress(<void*>&self.eMatchesEle25Path_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesEle27Filter"
 */
  /*else*/ {
    __pyx_v_self->eMatchesEle25Path_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesEle25Path_value)));
  }
  __pyx_L369:;

  /* "EMTree.pyx":2747
 * 
 *         #print "making eMatchesEle27Filter"
 *         self.eMatchesEle27Filter_branch = the_tree.GetBranch("eMatchesEle27Filter")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesEle27Filter_branch and "eMatchesEle27Filter" not in self.complained:
 *         if not self.eMatchesEle27Filter_branch and "eMatchesEle27Filter":
 */
  __pyx_v_self->eMatchesEle27Filter_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesEle27Filter"));

  /* "EMTree.pyx":2749
 *         self.eMatchesEle27Filter_branch = the_tree.GetBranch("eMatchesEle27Filter")
 *         #if not self.eMatchesEle27Filter_branch and "eMatchesEle27Filter" not in self.complained:
 *         if not self.eMatchesEle27Filter_branch and "eMatchesEle27Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle27Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle27Filter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesEle27Filter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L373_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L373_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2750
 *         #if not self.eMatchesEle27Filter_branch and "eMatchesEle27Filter" not in self.complained:
 *         if not self.eMatchesEle27Filter_branch and "eMatchesEle27Filter":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle27Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle27Filter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2750, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2750, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__125, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2750, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2749
 *         self.eMatchesEle27Filter_branch = the_tree.GetBranch("eMatchesEle27Filter")
 *         #if not self.eMatchesEle27Filter_branch and "eMatchesEle27Filter" not in self.complained:
 *         if not self.eMatchesEle27Filter_branch and "eMatchesEle27Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle27Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle27Filter")
 */
    goto __pyx_L372;
  }

  /* "EMTree.pyx":2753
 *             #self.complained.add("eMatchesEle27Filter")
 *         else:
 *             self.eMatchesEle27Filter_branch.SetAddress(<void*>&self.eMatchesEle27Filter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesEle27Path"
 */
  /*else*/ {
    __pyx_v_self->eMatchesEle27Filter_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesEle27Filter_value)));
  }
  __pyx_L372:;

  /* "EMTree.pyx":2756
 * 
 *         #print "making eMatchesEle27Path"
 *         self.eMatchesEle27Path_branch = the_tree.GetBranch("eMatchesEle27Path")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesEle27Path_branch and "eMatchesEle27Path" not in self.complained:
 *         if not self.eMatchesEle27Path_branch and "eMatchesEle27Path":
 */
  __pyx_v_self->eMatchesEle27Path_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesEle27Path"));

  /* "EMTree.pyx":2758
 *         self.eMatchesEle27Path_branch = the_tree.GetBranch("eMatchesEle27Path")
 *         #if not self.eMatchesEle27Path_branch and "eMatchesEle27Path" not in self.complained:
 *         if not self.eMatchesEle27Path_branch and "eMatchesEle27Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle27Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle27Path")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesEle27Path_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L376_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L376_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2759
 *         #if not self.eMatchesEle27Path_branch and "eMatchesEle27Path" not in self.complained:
 *         if not self.eMatchesEle27Path_branch and "eMatchesEle27Path":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle27Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle27Path")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2759, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2759, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__126, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2759, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2758
 *         self.eMatchesEle27Path_branch = the_tree.GetBranch("eMatchesEle27Path")
 *         #if not self.eMatchesEle27Path_branch and "eMatchesEle27Path" not in self.complained:
 *         if not self.eMatchesEle27Path_branch and "eMatchesEle27Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle27Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle27Path")
 */
    goto __pyx_L375;
  }

  /* "EMTree.pyx":2762
 *             #self.complained.add("eMatchesEle27Path")
 *         else:
 *             self.eMatchesEle27Path_branch.SetAddress(<void*>&self.eMatchesEle27Path_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesEle32Filter"
 */
  /*else*/ {
    __pyx_v_self->eMatchesEle27Path_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesEle27Path_value)));
  }
  __pyx_L375:;

  /* "EMTree.pyx":2765
 * 
 *         #print "making eMatchesEle32Filter"
 *         self.eMatchesEle32Filter_branch = the_tree.GetBranch("eMatchesEle32Filter")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesEle32Filter_branch and "eMatchesEle32Filter" not in self.complained:
 *         if not self.eMatchesEle32Filter_branch and "eMatchesEle32Filter":
 */
  __pyx_v_self->eMatchesEle32Filter_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesEle32Filter"));

  /* "EMTree.pyx":2767
 *         self.eMatchesEle32Filter_branch = the_tree.GetBranch("eMatchesEle32Filter")
 *         #if not self.eMatchesEle32Filter_branch and "eMatchesEle32Filter" not in self.complained:
 *         if not self.eMatchesEle32Filter_branch and "eMatchesEle32Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle32Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle32Filter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesEle32Filter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L379_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L379_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2768
 *         #if not self.eMatchesEle32Filter_branch and "eMatchesEle32Filter" not in self.complained:
 *         if not self.eMatchesEle32Filter_branch and "eMatchesEle32Filter":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle32Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle32Filter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2768, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2768, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__127, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2768, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2767
 *         self.eMatchesEle32Filter_branch = the_tree.GetBranch("eMatchesEle32Filter")
 *         #if not self.eMatchesEle32Filter_branch and "eMatchesEle32Filter" not in self.complained:
 *         if not self.eMatchesEle32Filter_branch and "eMatchesEle32Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle32Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle32Filter")
 */
    goto __pyx_L378;
  }

  /* "EMTree.pyx":2771
 *             #self.complained.add("eMatchesEle32Filter")
 *         else:
 *             self.eMatchesEle32Filter_branch.SetAddress(<void*>&self.eMatchesEle32Filter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesEle32Path"
 */
  /*else*/ {
    __pyx_v_self->eMatchesEle32Filter_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesEle32Filter_value)));
  }
  __pyx_L378:;

  /* "EMTree.pyx":2774
 * 
 *         #print "making eMatchesEle32Path"
 *         self.eMatchesEle32Path_branch = the_tree.GetBranch("eMatchesEle32Path")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesEle32Path_branch and "eMatchesEle32Path" not in self.complained:
 *         if not self.eMatchesEle32Path_branch and "eMatchesEle32Path":
 */
  __pyx_v_self->eMatchesEle32Path_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesEle32Path"));

  /* "EMTree.pyx":2776
 *         self.eMatchesEle32Path_branch = the_tree.GetBranch("eMatchesEle32Path")
 *         #if not self.eMatchesEle32Path_branch and "eMatchesEle32Path" not in self.complained:
 *         if not self.eMatchesEle32Path_branch and "eMatchesEle32Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle32Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle32Path")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesEle32Path_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L382_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L382_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2777
 *         #if not self.eMatchesEle32Path_branch and "eMatchesEle32Path" not in self.complained:
 *         if not self.eMatchesEle32Path_branch and "eMatchesEle32Path":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle32Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle32Path")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2777, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2777, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__128, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2777, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2776
 *         self.eMatchesEle32Path_branch = the_tree.GetBranch("eMatchesEle32Path")
 *         #if not self.eMatchesEle32Path_branch and "eMatchesEle32Path" not in self.complained:
 *         if not self.eMatchesEle32Path_branch and "eMatchesEle32Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle32Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle32Path")
 */
    goto __pyx_L381;
  }

  /* "EMTree.pyx":2780
 *             #self.complained.add("eMatchesEle32Path")
 *         else:
 *             self.eMatchesEle32Path_branch.SetAddress(<void*>&self.eMatchesEle32Path_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesEle35Filter"
 */
  /*else*/ {
    __pyx_v_self->eMatchesEle32Path_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesEle32Path_value)));
  }
  __pyx_L381:;

  /* "EMTree.pyx":2783
 * 
 *         #print "making eMatchesEle35Filter"
 *         self.eMatchesEle35Filter_branch = the_tree.GetBranch("eMatchesEle35Filter")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesEle35Filter_branch and "eMatchesEle35Filter" not in self.complained:
 *         if not self.eMatchesEle35Filter_branch and "eMatchesEle35Filter":
 */
  __pyx_v_self->eMatchesEle35Filter_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesEle35Filter"));

  /* "EMTree.pyx":2785
 *         self.eMatchesEle35Filter_branch = the_tree.GetBranch("eMatchesEle35Filter")
 *         #if not self.eMatchesEle35Filter_branch and "eMatchesEle35Filter" not in self.complained:
 *         if not self.eMatchesEle35Filter_branch and "eMatchesEle35Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle35Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle35Filter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesEle35Filter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L385_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L385_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2786
 *         #if not self.eMatchesEle35Filter_branch and "eMatchesEle35Filter" not in self.complained:
 *         if not self.eMatchesEle35Filter_branch and "eMatchesEle35Filter":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle35Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle35Filter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2786, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2786, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__129, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2786, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2785
 *         self.eMatchesEle35Filter_branch = the_tree.GetBranch("eMatchesEle35Filter")
 *         #if not self.eMatchesEle35Filter_branch and "eMatchesEle35Filter" not in self.complained:
 *         if not self.eMatchesEle35Filter_branch and "eMatchesEle35Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle35Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle35Filter")
 */
    goto __pyx_L384;
  }

  /* "EMTree.pyx":2789
 *             #self.complained.add("eMatchesEle35Filter")
 *         else:
 *             self.eMatchesEle35Filter_branch.SetAddress(<void*>&self.eMatchesEle35Filter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesEle35Path"
 */
  /*else*/ {
    __pyx_v_self->eMatchesEle35Filter_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesEle35Filter_value)));
  }
  __pyx_L384:;

  /* "EMTree.pyx":2792
 * 
 *         #print "making eMatchesEle35Path"
 *         self.eMatchesEle35Path_branch = the_tree.GetBranch("eMatchesEle35Path")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesEle35Path_branch and "eMatchesEle35Path" not in self.complained:
 *         if not self.eMatchesEle35Path_branch and "eMatchesEle35Path":
 */
  __pyx_v_self->eMatchesEle35Path_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesEle35Path"));

  /* "EMTree.pyx":2794
 *         self.eMatchesEle35Path_branch = the_tree.GetBranch("eMatchesEle35Path")
 *         #if not self.eMatchesEle35Path_branch and "eMatchesEle35Path" not in self.complained:
 *         if not self.eMatchesEle35Path_branch and "eMatchesEle35Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle35Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle35Path")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesEle35Path_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L388_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L388_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2795
 *         #if not self.eMatchesEle35Path_branch and "eMatchesEle35Path" not in self.complained:
 *         if not self.eMatchesEle35Path_branch and "eMatchesEle35Path":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle35Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle35Path")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__130, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2794
 *         self.eMatchesEle35Path_branch = the_tree.GetBranch("eMatchesEle35Path")
 *         #if not self.eMatchesEle35Path_branch and "eMatchesEle35Path" not in self.complained:
 *         if not self.eMatchesEle35Path_branch and "eMatchesEle35Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesEle35Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesEle35Path")
 */
    goto __pyx_L387;
  }

  /* "EMTree.pyx":2798
 *             #self.complained.add("eMatchesEle35Path")
 *         else:
 *             self.eMatchesEle35Path_branch.SetAddress(<void*>&self.eMatchesEle35Path_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesMu23e12DZFilter"
 */
  /*else*/ {
    __pyx_v_self->eMatchesEle35Path_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesEle35Path_value)));
  }
  __pyx_L387:;

  /* "EMTree.pyx":2801
 * 
 *         #print "making eMatchesMu23e12DZFilter"
 *         self.eMatchesMu23e12DZFilter_branch = the_tree.GetBranch("eMatchesMu23e12DZFilter")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesMu23e12DZFilter_branch and "eMatchesMu23e12DZFilter" not in self.complained:
 *         if not self.eMatchesMu23e12DZFilter_branch and "eMatchesMu23e12DZFilter":
 */
  __pyx_v_self->eMatchesMu23e12DZFilter_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesMu23e12DZFilter"));

  /* "EMTree.pyx":2803
 *         self.eMatchesMu23e12DZFilter_branch = the_tree.GetBranch("eMatchesMu23e12DZFilter")
 *         #if not self.eMatchesMu23e12DZFilter_branch and "eMatchesMu23e12DZFilter" not in self.complained:
 *         if not self.eMatchesMu23e12DZFilter_branch and "eMatchesMu23e12DZFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesMu23e12DZFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesMu23e12DZFilter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesMu23e12DZFilter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L391_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L391_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2804
 *         #if not self.eMatchesMu23e12DZFilter_branch and "eMatchesMu23e12DZFilter" not in self.complained:
 *         if not self.eMatchesMu23e12DZFilter_branch and "eMatchesMu23e12DZFilter":
 *             warnings.warn( "EMTree: Expected branch eMatchesMu23e12DZFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesMu23e12DZFilter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2804, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2804, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__131, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2804, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2803
 *         self.eMatchesMu23e12DZFilter_branch = the_tree.GetBranch("eMatchesMu23e12DZFilter")
 *         #if not self.eMatchesMu23e12DZFilter_branch and "eMatchesMu23e12DZFilter" not in self.complained:
 *         if not self.eMatchesMu23e12DZFilter_branch and "eMatchesMu23e12DZFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesMu23e12DZFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesMu23e12DZFilter")
 */
    goto __pyx_L390;
  }

  /* "EMTree.pyx":2807
 *             #self.complained.add("eMatchesMu23e12DZFilter")
 *         else:
 *             self.eMatchesMu23e12DZFilter_branch.SetAddress(<void*>&self.eMatchesMu23e12DZFilter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesMu23e12DZPath"
 */
  /*else*/ {
    __pyx_v_self->eMatchesMu23e12DZFilter_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesMu23e12DZFilter_value)));
  }
  __pyx_L390:;

  /* "EMTree.pyx":2810
 * 
 *         #print "making eMatchesMu23e12DZPath"
 *         self.eMatchesMu23e12DZPath_branch = the_tree.GetBranch("eMatchesMu23e12DZPath")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesMu23e12DZPath_branch and "eMatchesMu23e12DZPath" not in self.complained:
 *         if not self.eMatchesMu23e12DZPath_branch and "eMatchesMu23e12DZPath":
 */
  __pyx_v_self->eMatchesMu23e12DZPath_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesMu23e12DZPath"));

  /* "EMTree.pyx":2812
 *         self.eMatchesMu23e12DZPath_branch = the_tree.GetBranch("eMatchesMu23e12DZPath")
 *         #if not self.eMatchesMu23e12DZPath_branch and "eMatchesMu23e12DZPath" not in self.complained:
 *         if not self.eMatchesMu23e12DZPath_branch and "eMatchesMu23e12DZPath":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesMu23e12DZPath does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesMu23e12DZPath")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesMu23e12DZPath_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L394_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L394_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2813
 *         #if not self.eMatchesMu23e12DZPath_branch and "eMatchesMu23e12DZPath" not in self.complained:
 *         if not self.eMatchesMu23e12DZPath_branch and "eMatchesMu23e12DZPath":
 *             warnings.warn( "EMTree: Expected branch eMatchesMu23e12DZPath does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesMu23e12DZPath")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2813, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2813, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__132, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2813, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2812
 *         self.eMatchesMu23e12DZPath_branch = the_tree.GetBranch("eMatchesMu23e12DZPath")
 *         #if not self.eMatchesMu23e12DZPath_branch and "eMatchesMu23e12DZPath" not in self.complained:
 *         if not self.eMatchesMu23e12DZPath_branch and "eMatchesMu23e12DZPath":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesMu23e12DZPath does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesMu23e12DZPath")
 */
    goto __pyx_L393;
  }

  /* "EMTree.pyx":2816
 *             #self.complained.add("eMatchesMu23e12DZPath")
 *         else:
 *             self.eMatchesMu23e12DZPath_branch.SetAddress(<void*>&self.eMatchesMu23e12DZPath_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesMu23e12Filter"
 */
  /*else*/ {
    __pyx_v_self->eMatchesMu23e12DZPath_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesMu23e12DZPath_value)));
  }
  __pyx_L393:;

  /* "EMTree.pyx":2819
 * 
 *         #print "making eMatchesMu23e12Filter"
 *         self.eMatchesMu23e12Filter_branch = the_tree.GetBranch("eMatchesMu23e12Filter")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesMu23e12Filter_branch and "eMatchesMu23e12Filter" not in self.complained:
 *         if not self.eMatchesMu23e12Filter_branch and "eMatchesMu23e12Filter":
 */
  __pyx_v_self->eMatchesMu23e12Filter_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesMu23e12Filter"));

  /* "EMTree.pyx":2821
 *         self.eMatchesMu23e12Filter_branch = the_tree.GetBranch("eMatchesMu23e12Filter")
 *         #if not self.eMatchesMu23e12Filter_branch and "eMatchesMu23e12Filter" not in self.complained:
 *         if not self.eMatchesMu23e12Filter_branch and "eMatchesMu23e12Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesMu23e12Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesMu23e12Filter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesMu23e12Filter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L397_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L397_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2822
 *         #if not self.eMatchesMu23e12Filter_branch and "eMatchesMu23e12Filter" not in self.complained:
 *         if not self.eMatchesMu23e12Filter_branch and "eMatchesMu23e12Filter":
 *             warnings.warn( "EMTree: Expected branch eMatchesMu23e12Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesMu23e12Filter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2822, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2822, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__133, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2822, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2821
 *         self.eMatchesMu23e12Filter_branch = the_tree.GetBranch("eMatchesMu23e12Filter")
 *         #if not self.eMatchesMu23e12Filter_branch and "eMatchesMu23e12Filter" not in self.complained:
 *         if not self.eMatchesMu23e12Filter_branch and "eMatchesMu23e12Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesMu23e12Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesMu23e12Filter")
 */
    goto __pyx_L396;
  }

  /* "EMTree.pyx":2825
 *             #self.complained.add("eMatchesMu23e12Filter")
 *         else:
 *             self.eMatchesMu23e12Filter_branch.SetAddress(<void*>&self.eMatchesMu23e12Filter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesMu23e12Path"
 */
  /*else*/ {
    __pyx_v_self->eMatchesMu23e12Filter_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesMu23e12Filter_value)));
  }
  __pyx_L396:;

  /* "EMTree.pyx":2828
 * 
 *         #print "making eMatchesMu23e12Path"
 *         self.eMatchesMu23e12Path_branch = the_tree.GetBranch("eMatchesMu23e12Path")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesMu23e12Path_branch and "eMatchesMu23e12Path" not in self.complained:
 *         if not self.eMatchesMu23e12Path_branch and "eMatchesMu23e12Path":
 */
  __pyx_v_self->eMatchesMu23e12Path_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesMu23e12Path"));

  /* "EMTree.pyx":2830
 *         self.eMatchesMu23e12Path_branch = the_tree.GetBranch("eMatchesMu23e12Path")
 *         #if not self.eMatchesMu23e12Path_branch and "eMatchesMu23e12Path" not in self.complained:
 *         if not self.eMatchesMu23e12Path_branch and "eMatchesMu23e12Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesMu23e12Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesMu23e12Path")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesMu23e12Path_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L400_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L400_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2831
 *         #if not self.eMatchesMu23e12Path_branch and "eMatchesMu23e12Path" not in self.complained:
 *         if not self.eMatchesMu23e12Path_branch and "eMatchesMu23e12Path":
 *             warnings.warn( "EMTree: Expected branch eMatchesMu23e12Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesMu23e12Path")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2831, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2831, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__134, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2831, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2830
 *         self.eMatchesMu23e12Path_branch = the_tree.GetBranch("eMatchesMu23e12Path")
 *         #if not self.eMatchesMu23e12Path_branch and "eMatchesMu23e12Path" not in self.complained:
 *         if not self.eMatchesMu23e12Path_branch and "eMatchesMu23e12Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesMu23e12Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesMu23e12Path")
 */
    goto __pyx_L399;
  }

  /* "EMTree.pyx":2834
 *             #self.complained.add("eMatchesMu23e12Path")
 *         else:
 *             self.eMatchesMu23e12Path_branch.SetAddress(<void*>&self.eMatchesMu23e12Path_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesMu8e23DZFilter"
 */
  /*else*/ {
    __pyx_v_self->eMatchesMu23e12Path_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesMu23e12Path_value)));
  }
  __pyx_L399:;

  /* "EMTree.pyx":2837
 * 
 *         #print "making eMatchesMu8e23DZFilter"
 *         self.eMatchesMu8e23DZFilter_branch = the_tree.GetBranch("eMatchesMu8e23DZFilter")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesMu8e23DZFilter_branch and "eMatchesMu8e23DZFilter" not in self.complained:
 *         if not self.eMatchesMu8e23DZFilter_branch and "eMatchesMu8e23DZFilter":
 */
  __pyx_v_self->eMatchesMu8e23DZFilter_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesMu8e23DZFilter"));

  /* "EMTree.pyx":2839
 *         self.eMatchesMu8e23DZFilter_branch = the_tree.GetBranch("eMatchesMu8e23DZFilter")
 *         #if not self.eMatchesMu8e23DZFilter_branch and "eMatchesMu8e23DZFilter" not in self.complained:
 *         if not self.eMatchesMu8e23DZFilter_branch and "eMatchesMu8e23DZFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesMu8e23DZFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesMu8e23DZFilter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesMu8e23DZFilter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L403_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L403_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2840
 *         #if not self.eMatchesMu8e23DZFilter_branch and "eMatchesMu8e23DZFilter" not in self.complained:
 *         if not self.eMatchesMu8e23DZFilter_branch and "eMatchesMu8e23DZFilter":
 *             warnings.warn( "EMTree: Expected branch eMatchesMu8e23DZFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesMu8e23DZFilter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2840, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2840, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__135, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2840, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2839
 *         self.eMatchesMu8e23DZFilter_branch = the_tree.GetBranch("eMatchesMu8e23DZFilter")
 *         #if not self.eMatchesMu8e23DZFilter_branch and "eMatchesMu8e23DZFilter" not in self.complained:
 *         if not self.eMatchesMu8e23DZFilter_branch and "eMatchesMu8e23DZFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesMu8e23DZFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesMu8e23DZFilter")
 */
    goto __pyx_L402;
  }

  /* "EMTree.pyx":2843
 *             #self.complained.add("eMatchesMu8e23DZFilter")
 *         else:
 *             self.eMatchesMu8e23DZFilter_branch.SetAddress(<void*>&self.eMatchesMu8e23DZFilter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesMu8e23DZPath"
 */
  /*else*/ {
    __pyx_v_self->eMatchesMu8e23DZFilter_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesMu8e23DZFilter_value)));
  }
  __pyx_L402:;

  /* "EMTree.pyx":2846
 * 
 *         #print "making eMatchesMu8e23DZPath"
 *         self.eMatchesMu8e23DZPath_branch = the_tree.GetBranch("eMatchesMu8e23DZPath")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesMu8e23DZPath_branch and "eMatchesMu8e23DZPath" not in self.complained:
 *         if not self.eMatchesMu8e23DZPath_branch and "eMatchesMu8e23DZPath":
 */
  __pyx_v_self->eMatchesMu8e23DZPath_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesMu8e23DZPath"));

  /* "EMTree.pyx":2848
 *         self.eMatchesMu8e23DZPath_branch = the_tree.GetBranch("eMatchesMu8e23DZPath")
 *         #if not self.eMatchesMu8e23DZPath_branch and "eMatchesMu8e23DZPath" not in self.complained:
 *         if not self.eMatchesMu8e23DZPath_branch and "eMatchesMu8e23DZPath":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesMu8e23DZPath does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesMu8e23DZPath")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesMu8e23DZPath_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L406_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L406_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2849
 *         #if not self.eMatchesMu8e23DZPath_branch and "eMatchesMu8e23DZPath" not in self.complained:
 *         if not self.eMatchesMu8e23DZPath_branch and "eMatchesMu8e23DZPath":
 *             warnings.warn( "EMTree: Expected branch eMatchesMu8e23DZPath does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesMu8e23DZPath")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2849, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2849, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__136, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2849, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2848
 *         self.eMatchesMu8e23DZPath_branch = the_tree.GetBranch("eMatchesMu8e23DZPath")
 *         #if not self.eMatchesMu8e23DZPath_branch and "eMatchesMu8e23DZPath" not in self.complained:
 *         if not self.eMatchesMu8e23DZPath_branch and "eMatchesMu8e23DZPath":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesMu8e23DZPath does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesMu8e23DZPath")
 */
    goto __pyx_L405;
  }

  /* "EMTree.pyx":2852
 *             #self.complained.add("eMatchesMu8e23DZPath")
 *         else:
 *             self.eMatchesMu8e23DZPath_branch.SetAddress(<void*>&self.eMatchesMu8e23DZPath_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesMu8e23Filter"
 */
  /*else*/ {
    __pyx_v_self->eMatchesMu8e23DZPath_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesMu8e23DZPath_value)));
  }
  __pyx_L405:;

  /* "EMTree.pyx":2855
 * 
 *         #print "making eMatchesMu8e23Filter"
 *         self.eMatchesMu8e23Filter_branch = the_tree.GetBranch("eMatchesMu8e23Filter")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesMu8e23Filter_branch and "eMatchesMu8e23Filter" not in self.complained:
 *         if not self.eMatchesMu8e23Filter_branch and "eMatchesMu8e23Filter":
 */
  __pyx_v_self->eMatchesMu8e23Filter_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesMu8e23Filter"));

  /* "EMTree.pyx":2857
 *         self.eMatchesMu8e23Filter_branch = the_tree.GetBranch("eMatchesMu8e23Filter")
 *         #if not self.eMatchesMu8e23Filter_branch and "eMatchesMu8e23Filter" not in self.complained:
 *         if not self.eMatchesMu8e23Filter_branch and "eMatchesMu8e23Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesMu8e23Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesMu8e23Filter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesMu8e23Filter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L409_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L409_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2858
 *         #if not self.eMatchesMu8e23Filter_branch and "eMatchesMu8e23Filter" not in self.complained:
 *         if not self.eMatchesMu8e23Filter_branch and "eMatchesMu8e23Filter":
 *             warnings.warn( "EMTree: Expected branch eMatchesMu8e23Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesMu8e23Filter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2858, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2858, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__137, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2858, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2857
 *         self.eMatchesMu8e23Filter_branch = the_tree.GetBranch("eMatchesMu8e23Filter")
 *         #if not self.eMatchesMu8e23Filter_branch and "eMatchesMu8e23Filter" not in self.complained:
 *         if not self.eMatchesMu8e23Filter_branch and "eMatchesMu8e23Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesMu8e23Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesMu8e23Filter")
 */
    goto __pyx_L408;
  }

  /* "EMTree.pyx":2861
 *             #self.complained.add("eMatchesMu8e23Filter")
 *         else:
 *             self.eMatchesMu8e23Filter_branch.SetAddress(<void*>&self.eMatchesMu8e23Filter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMatchesMu8e23Path"
 */
  /*else*/ {
    __pyx_v_self->eMatchesMu8e23Filter_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesMu8e23Filter_value)));
  }
  __pyx_L408:;

  /* "EMTree.pyx":2864
 * 
 *         #print "making eMatchesMu8e23Path"
 *         self.eMatchesMu8e23Path_branch = the_tree.GetBranch("eMatchesMu8e23Path")             # <<<<<<<<<<<<<<
 *         #if not self.eMatchesMu8e23Path_branch and "eMatchesMu8e23Path" not in self.complained:
 *         if not self.eMatchesMu8e23Path_branch and "eMatchesMu8e23Path":
 */
  __pyx_v_self->eMatchesMu8e23Path_branch = __pyx_v_the_tree->GetBranch(((char *)"eMatchesMu8e23Path"));

  /* "EMTree.pyx":2866
 *         self.eMatchesMu8e23Path_branch = the_tree.GetBranch("eMatchesMu8e23Path")
 *         #if not self.eMatchesMu8e23Path_branch and "eMatchesMu8e23Path" not in self.complained:
 *         if not self.eMatchesMu8e23Path_branch and "eMatchesMu8e23Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesMu8e23Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesMu8e23Path")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMatchesMu8e23Path_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L412_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L412_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2867
 *         #if not self.eMatchesMu8e23Path_branch and "eMatchesMu8e23Path" not in self.complained:
 *         if not self.eMatchesMu8e23Path_branch and "eMatchesMu8e23Path":
 *             warnings.warn( "EMTree: Expected branch eMatchesMu8e23Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesMu8e23Path")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2867, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2867, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__138, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2867, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2866
 *         self.eMatchesMu8e23Path_branch = the_tree.GetBranch("eMatchesMu8e23Path")
 *         #if not self.eMatchesMu8e23Path_branch and "eMatchesMu8e23Path" not in self.complained:
 *         if not self.eMatchesMu8e23Path_branch and "eMatchesMu8e23Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMatchesMu8e23Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMatchesMu8e23Path")
 */
    goto __pyx_L411;
  }

  /* "EMTree.pyx":2870
 *             #self.complained.add("eMatchesMu8e23Path")
 *         else:
 *             self.eMatchesMu8e23Path_branch.SetAddress(<void*>&self.eMatchesMu8e23Path_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eMissingHits"
 */
  /*else*/ {
    __pyx_v_self->eMatchesMu8e23Path_branch->SetAddress(((void *)(&__pyx_v_self->eMatchesMu8e23Path_value)));
  }
  __pyx_L411:;

  /* "EMTree.pyx":2873
 * 
 *         #print "making eMissingHits"
 *         self.eMissingHits_branch = the_tree.GetBranch("eMissingHits")             # <<<<<<<<<<<<<<
 *         #if not self.eMissingHits_branch and "eMissingHits" not in self.complained:
 *         if not self.eMissingHits_branch and "eMissingHits":
 */
  __pyx_v_self->eMissingHits_branch = __pyx_v_the_tree->GetBranch(((char *)"eMissingHits"));

  /* "EMTree.pyx":2875
 *         self.eMissingHits_branch = the_tree.GetBranch("eMissingHits")
 *         #if not self.eMissingHits_branch and "eMissingHits" not in self.complained:
 *         if not self.eMissingHits_branch and "eMissingHits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMissingHits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMissingHits")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eMissingHits_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L415_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L415_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2876
 *         #if not self.eMissingHits_branch and "eMissingHits" not in self.complained:
 *         if not self.eMissingHits_branch and "eMissingHits":
 *             warnings.warn( "EMTree: Expected branch eMissingHits does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMissingHits")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2876, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2876, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__139, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2876, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2875
 *         self.eMissingHits_branch = the_tree.GetBranch("eMissingHits")
 *         #if not self.eMissingHits_branch and "eMissingHits" not in self.complained:
 *         if not self.eMissingHits_branch and "eMissingHits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eMissingHits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eMissingHits")
 */
    goto __pyx_L414;
  }

  /* "EMTree.pyx":2879
 *             #self.complained.add("eMissingHits")
 *         else:
 *             self.eMissingHits_branch.SetAddress(<void*>&self.eMissingHits_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making ePVDXY"
 */
  /*else*/ {
    __pyx_v_self->eMissingHits_branch->SetAddress(((void *)(&__pyx_v_self->eMissingHits_value)));
  }
  __pyx_L414:;

  /* "EMTree.pyx":2882
 * 
 *         #print "making ePVDXY"
 *         self.ePVDXY_branch = the_tree.GetBranch("ePVDXY")             # <<<<<<<<<<<<<<
 *         #if not self.ePVDXY_branch and "ePVDXY" not in self.complained:
 *         if not self.ePVDXY_branch and "ePVDXY":
 */
  __pyx_v_self->ePVDXY_branch = __pyx_v_the_tree->GetBranch(((char *)"ePVDXY"));

  /* "EMTree.pyx":2884
 *         self.ePVDXY_branch = the_tree.GetBranch("ePVDXY")
 *         #if not self.ePVDXY_branch and "ePVDXY" not in self.complained:
 *         if not self.ePVDXY_branch and "ePVDXY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch ePVDXY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("ePVDXY")
 */
  __pyx_t_2 = ((!(__pyx_v_self->ePVDXY_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L418_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L418_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2885
 *         #if not self.ePVDXY_branch and "ePVDXY" not in self.complained:
 *         if not self.ePVDXY_branch and "ePVDXY":
 *             warnings.warn( "EMTree: Expected branch ePVDXY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("ePVDXY")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2885, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2885, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__140, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2885, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2884
 *         self.ePVDXY_branch = the_tree.GetBranch("ePVDXY")
 *         #if not self.ePVDXY_branch and "ePVDXY" not in self.complained:
 *         if not self.ePVDXY_branch and "ePVDXY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch ePVDXY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("ePVDXY")
 */
    goto __pyx_L417;
  }

  /* "EMTree.pyx":2888
 *             #self.complained.add("ePVDXY")
 *         else:
 *             self.ePVDXY_branch.SetAddress(<void*>&self.ePVDXY_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making ePVDZ"
 */
  /*else*/ {
    __pyx_v_self->ePVDXY_branch->SetAddress(((void *)(&__pyx_v_self->ePVDXY_value)));
  }
  __pyx_L417:;

  /* "EMTree.pyx":2891
 * 
 *         #print "making ePVDZ"
 *         self.ePVDZ_branch = the_tree.GetBranch("ePVDZ")             # <<<<<<<<<<<<<<
 *         #if not self.ePVDZ_branch and "ePVDZ" not in self.complained:
 *         if not self.ePVDZ_branch and "ePVDZ":
 */
  __pyx_v_self->ePVDZ_branch = __pyx_v_the_tree->GetBranch(((char *)"ePVDZ"));

  /* "EMTree.pyx":2893
 *         self.ePVDZ_branch = the_tree.GetBranch("ePVDZ")
 *         #if not self.ePVDZ_branch and "ePVDZ" not in self.complained:
 *         if not self.ePVDZ_branch and "ePVDZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch ePVDZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("ePVDZ")
 */
  __pyx_t_2 = ((!(__pyx_v_self->ePVDZ_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L421_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L421_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2894
 *         #if not self.ePVDZ_branch and "ePVDZ" not in self.complained:
 *         if not self.ePVDZ_branch and "ePVDZ":
 *             warnings.warn( "EMTree: Expected branch ePVDZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("ePVDZ")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2894, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2894, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__141, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2894, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2893
 *         self.ePVDZ_branch = the_tree.GetBranch("ePVDZ")
 *         #if not self.ePVDZ_branch and "ePVDZ" not in self.complained:
 *         if not self.ePVDZ_branch and "ePVDZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch ePVDZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("ePVDZ")
 */
    goto __pyx_L420;
  }

  /* "EMTree.pyx":2897
 *             #self.complained.add("ePVDZ")
 *         else:
 *             self.ePVDZ_branch.SetAddress(<void*>&self.ePVDZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making ePassesConversionVeto"
 */
  /*else*/ {
    __pyx_v_self->ePVDZ_branch->SetAddress(((void *)(&__pyx_v_self->ePVDZ_value)));
  }
  __pyx_L420:;

  /* "EMTree.pyx":2900
 * 
 *         #print "making ePassesConversionVeto"
 *         self.ePassesConversionVeto_branch = the_tree.GetBranch("ePassesConversionVeto")             # <<<<<<<<<<<<<<
 *         #if not self.ePassesConversionVeto_branch and "ePassesConversionVeto" not in self.complained:
 *         if not self.ePassesConversionVeto_branch and "ePassesConversionVeto":
 */
  __pyx_v_self->ePassesConversionVeto_branch = __pyx_v_the_tree->GetBranch(((char *)"ePassesConversionVeto"));

  /* "EMTree.pyx":2902
 *         self.ePassesConversionVeto_branch = the_tree.GetBranch("ePassesConversionVeto")
 *         #if not self.ePassesConversionVeto_branch and "ePassesConversionVeto" not in self.complained:
 *         if not self.ePassesConversionVeto_branch and "ePassesConversionVeto":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch ePassesConversionVeto does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("ePassesConversionVeto")
 */
  __pyx_t_2 = ((!(__pyx_v_self->ePassesConversionVeto_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L424_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L424_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2903
 *         #if not self.ePassesConversionVeto_branch and "ePassesConversionVeto" not in self.complained:
 *         if not self.ePassesConversionVeto_branch and "ePassesConversionVeto":
 *             warnings.warn( "EMTree: Expected branch ePassesConversionVeto does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("ePassesConversionVeto")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2903, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2903, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__142, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2903, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2902
 *         self.ePassesConversionVeto_branch = the_tree.GetBranch("ePassesConversionVeto")
 *         #if not self.ePassesConversionVeto_branch and "ePassesConversionVeto" not in self.complained:
 *         if not self.ePassesConversionVeto_branch and "ePassesConversionVeto":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch ePassesConversionVeto does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("ePassesConversionVeto")
 */
    goto __pyx_L423;
  }

  /* "EMTree.pyx":2906
 *             #self.complained.add("ePassesConversionVeto")
 *         else:
 *             self.ePassesConversionVeto_branch.SetAddress(<void*>&self.ePassesConversionVeto_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making ePhi"
 */
  /*else*/ {
    __pyx_v_self->ePassesConversionVeto_branch->SetAddress(((void *)(&__pyx_v_self->ePassesConversionVeto_value)));
  }
  __pyx_L423:;

  /* "EMTree.pyx":2909
 * 
 *         #print "making ePhi"
 *         self.ePhi_branch = the_tree.GetBranch("ePhi")             # <<<<<<<<<<<<<<
 *         #if not self.ePhi_branch and "ePhi" not in self.complained:
 *         if not self.ePhi_branch and "ePhi":
 */
  __pyx_v_self->ePhi_branch = __pyx_v_the_tree->GetBranch(((char *)"ePhi"));

  /* "EMTree.pyx":2911
 *         self.ePhi_branch = the_tree.GetBranch("ePhi")
 *         #if not self.ePhi_branch and "ePhi" not in self.complained:
 *         if not self.ePhi_branch and "ePhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch ePhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("ePhi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->ePhi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L427_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L427_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2912
 *         #if not self.ePhi_branch and "ePhi" not in self.complained:
 *         if not self.ePhi_branch and "ePhi":
 *             warnings.warn( "EMTree: Expected branch ePhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("ePhi")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2912, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2912, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__143, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2912, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2911
 *         self.ePhi_branch = the_tree.GetBranch("ePhi")
 *         #if not self.ePhi_branch and "ePhi" not in self.complained:
 *         if not self.ePhi_branch and "ePhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch ePhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("ePhi")
 */
    goto __pyx_L426;
  }

  /* "EMTree.pyx":2915
 *             #self.complained.add("ePhi")
 *         else:
 *             self.ePhi_branch.SetAddress(<void*>&self.ePhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making ePt"
 */
  /*else*/ {
    __pyx_v_self->ePhi_branch->SetAddress(((void *)(&__pyx_v_self->ePhi_value)));
  }
  __pyx_L426:;

  /* "EMTree.pyx":2918
 * 
 *         #print "making ePt"
 *         self.ePt_branch = the_tree.GetBranch("ePt")             # <<<<<<<<<<<<<<
 *         #if not self.ePt_branch and "ePt" not in self.complained:
 *         if not self.ePt_branch and "ePt":
 */
  __pyx_v_self->ePt_branch = __pyx_v_the_tree->GetBranch(((char *)"ePt"));

  /* "EMTree.pyx":2920
 *         self.ePt_branch = the_tree.GetBranch("ePt")
 *         #if not self.ePt_branch and "ePt" not in self.complained:
 *         if not self.ePt_branch and "ePt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch ePt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("ePt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->ePt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L430_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L430_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2921
 *         #if not self.ePt_branch and "ePt" not in self.complained:
 *         if not self.ePt_branch and "ePt":
 *             warnings.warn( "EMTree: Expected branch ePt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("ePt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2921, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2921, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__144, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2921, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2920
 *         self.ePt_branch = the_tree.GetBranch("ePt")
 *         #if not self.ePt_branch and "ePt" not in self.complained:
 *         if not self.ePt_branch and "ePt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch ePt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("ePt")
 */
    goto __pyx_L429;
  }

  /* "EMTree.pyx":2924
 *             #self.complained.add("ePt")
 *         else:
 *             self.ePt_branch.SetAddress(<void*>&self.ePt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eRelPFIsoRho"
 */
  /*else*/ {
    __pyx_v_self->ePt_branch->SetAddress(((void *)(&__pyx_v_self->ePt_value)));
  }
  __pyx_L429:;

  /* "EMTree.pyx":2927
 * 
 *         #print "making eRelPFIsoRho"
 *         self.eRelPFIsoRho_branch = the_tree.GetBranch("eRelPFIsoRho")             # <<<<<<<<<<<<<<
 *         #if not self.eRelPFIsoRho_branch and "eRelPFIsoRho" not in self.complained:
 *         if not self.eRelPFIsoRho_branch and "eRelPFIsoRho":
 */
  __pyx_v_self->eRelPFIsoRho_branch = __pyx_v_the_tree->GetBranch(((char *)"eRelPFIsoRho"));

  /* "EMTree.pyx":2929
 *         self.eRelPFIsoRho_branch = the_tree.GetBranch("eRelPFIsoRho")
 *         #if not self.eRelPFIsoRho_branch and "eRelPFIsoRho" not in self.complained:
 *         if not self.eRelPFIsoRho_branch and "eRelPFIsoRho":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eRelPFIsoRho does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eRelPFIsoRho")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eRelPFIsoRho_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L433_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L433_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2930
 *         #if not self.eRelPFIsoRho_branch and "eRelPFIsoRho" not in self.complained:
 *         if not self.eRelPFIsoRho_branch and "eRelPFIsoRho":
 *             warnings.warn( "EMTree: Expected branch eRelPFIsoRho does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eRelPFIsoRho")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2930, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2930, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__145, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2930, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2929
 *         self.eRelPFIsoRho_branch = the_tree.GetBranch("eRelPFIsoRho")
 *         #if not self.eRelPFIsoRho_branch and "eRelPFIsoRho" not in self.complained:
 *         if not self.eRelPFIsoRho_branch and "eRelPFIsoRho":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eRelPFIsoRho does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eRelPFIsoRho")
 */
    goto __pyx_L432;
  }

  /* "EMTree.pyx":2933
 *             #self.complained.add("eRelPFIsoRho")
 *         else:
 *             self.eRelPFIsoRho_branch.SetAddress(<void*>&self.eRelPFIsoRho_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eSIP2D"
 */
  /*else*/ {
    __pyx_v_self->eRelPFIsoRho_branch->SetAddress(((void *)(&__pyx_v_self->eRelPFIsoRho_value)));
  }
  __pyx_L432:;

  /* "EMTree.pyx":2936
 * 
 *         #print "making eSIP2D"
 *         self.eSIP2D_branch = the_tree.GetBranch("eSIP2D")             # <<<<<<<<<<<<<<
 *         #if not self.eSIP2D_branch and "eSIP2D" not in self.complained:
 *         if not self.eSIP2D_branch and "eSIP2D":
 */
  __pyx_v_self->eSIP2D_branch = __pyx_v_the_tree->GetBranch(((char *)"eSIP2D"));

  /* "EMTree.pyx":2938
 *         self.eSIP2D_branch = the_tree.GetBranch("eSIP2D")
 *         #if not self.eSIP2D_branch and "eSIP2D" not in self.complained:
 *         if not self.eSIP2D_branch and "eSIP2D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eSIP2D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eSIP2D")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eSIP2D_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L436_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L436_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2939
 *         #if not self.eSIP2D_branch and "eSIP2D" not in self.complained:
 *         if not self.eSIP2D_branch and "eSIP2D":
 *             warnings.warn( "EMTree: Expected branch eSIP2D does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eSIP2D")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2939, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2939, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__146, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2939, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2938
 *         self.eSIP2D_branch = the_tree.GetBranch("eSIP2D")
 *         #if not self.eSIP2D_branch and "eSIP2D" not in self.complained:
 *         if not self.eSIP2D_branch and "eSIP2D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eSIP2D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eSIP2D")
 */
    goto __pyx_L435;
  }

  /* "EMTree.pyx":2942
 *             #self.complained.add("eSIP2D")
 *         else:
 *             self.eSIP2D_branch.SetAddress(<void*>&self.eSIP2D_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eSIP3D"
 */
  /*else*/ {
    __pyx_v_self->eSIP2D_branch->SetAddress(((void *)(&__pyx_v_self->eSIP2D_value)));
  }
  __pyx_L435:;

  /* "EMTree.pyx":2945
 * 
 *         #print "making eSIP3D"
 *         self.eSIP3D_branch = the_tree.GetBranch("eSIP3D")             # <<<<<<<<<<<<<<
 *         #if not self.eSIP3D_branch and "eSIP3D" not in self.complained:
 *         if not self.eSIP3D_branch and "eSIP3D":
 */
  __pyx_v_self->eSIP3D_branch = __pyx_v_the_tree->GetBranch(((char *)"eSIP3D"));

  /* "EMTree.pyx":2947
 *         self.eSIP3D_branch = the_tree.GetBranch("eSIP3D")
 *         #if not self.eSIP3D_branch and "eSIP3D" not in self.complained:
 *         if not self.eSIP3D_branch and "eSIP3D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eSIP3D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eSIP3D")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eSIP3D_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L439_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L439_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2948
 *         #if not self.eSIP3D_branch and "eSIP3D" not in self.complained:
 *         if not self.eSIP3D_branch and "eSIP3D":
 *             warnings.warn( "EMTree: Expected branch eSIP3D does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eSIP3D")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2948, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2948, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__147, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2948, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2947
 *         self.eSIP3D_branch = the_tree.GetBranch("eSIP3D")
 *         #if not self.eSIP3D_branch and "eSIP3D" not in self.complained:
 *         if not self.eSIP3D_branch and "eSIP3D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eSIP3D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eSIP3D")
 */
    goto __pyx_L438;
  }

  /* "EMTree.pyx":2951
 *             #self.complained.add("eSIP3D")
 *         else:
 *             self.eSIP3D_branch.SetAddress(<void*>&self.eSIP3D_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eVZ"
 */
  /*else*/ {
    __pyx_v_self->eSIP3D_branch->SetAddress(((void *)(&__pyx_v_self->eSIP3D_value)));
  }
  __pyx_L438:;

  /* "EMTree.pyx":2954
 * 
 *         #print "making eVZ"
 *         self.eVZ_branch = the_tree.GetBranch("eVZ")             # <<<<<<<<<<<<<<
 *         #if not self.eVZ_branch and "eVZ" not in self.complained:
 *         if not self.eVZ_branch and "eVZ":
 */
  __pyx_v_self->eVZ_branch = __pyx_v_the_tree->GetBranch(((char *)"eVZ"));

  /* "EMTree.pyx":2956
 *         self.eVZ_branch = the_tree.GetBranch("eVZ")
 *         #if not self.eVZ_branch and "eVZ" not in self.complained:
 *         if not self.eVZ_branch and "eVZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eVZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eVZ")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eVZ_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L442_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L442_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2957
 *         #if not self.eVZ_branch and "eVZ" not in self.complained:
 *         if not self.eVZ_branch and "eVZ":
 *             warnings.warn( "EMTree: Expected branch eVZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eVZ")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2957, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2957, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__148, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2957, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2956
 *         self.eVZ_branch = the_tree.GetBranch("eVZ")
 *         #if not self.eVZ_branch and "eVZ" not in self.complained:
 *         if not self.eVZ_branch and "eVZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eVZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eVZ")
 */
    goto __pyx_L441;
  }

  /* "EMTree.pyx":2960
 *             #self.complained.add("eVZ")
 *         else:
 *             self.eVZ_branch.SetAddress(<void*>&self.eVZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eVetoMVAIsoVtx"
 */
  /*else*/ {
    __pyx_v_self->eVZ_branch->SetAddress(((void *)(&__pyx_v_self->eVZ_value)));
  }
  __pyx_L441:;

  /* "EMTree.pyx":2963
 * 
 *         #print "making eVetoMVAIsoVtx"
 *         self.eVetoMVAIsoVtx_branch = the_tree.GetBranch("eVetoMVAIsoVtx")             # <<<<<<<<<<<<<<
 *         #if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx" not in self.complained:
 *         if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx":
 */
  __pyx_v_self->eVetoMVAIsoVtx_branch = __pyx_v_the_tree->GetBranch(((char *)"eVetoMVAIsoVtx"));

  /* "EMTree.pyx":2965
 *         self.eVetoMVAIsoVtx_branch = the_tree.GetBranch("eVetoMVAIsoVtx")
 *         #if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx" not in self.complained:
 *         if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eVetoMVAIsoVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eVetoMVAIsoVtx")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eVetoMVAIsoVtx_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L445_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L445_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2966
 *         #if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx" not in self.complained:
 *         if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx":
 *             warnings.warn( "EMTree: Expected branch eVetoMVAIsoVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eVetoMVAIsoVtx")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__149, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2965
 *         self.eVetoMVAIsoVtx_branch = the_tree.GetBranch("eVetoMVAIsoVtx")
 *         #if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx" not in self.complained:
 *         if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eVetoMVAIsoVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eVetoMVAIsoVtx")
 */
    goto __pyx_L444;
  }

  /* "EMTree.pyx":2969
 *             #self.complained.add("eVetoMVAIsoVtx")
 *         else:
 *             self.eVetoMVAIsoVtx_branch.SetAddress(<void*>&self.eVetoMVAIsoVtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eVetoZTTp001dxyz"
 */
  /*else*/ {
    __pyx_v_self->eVetoMVAIsoVtx_branch->SetAddress(((void *)(&__pyx_v_self->eVetoMVAIsoVtx_value)));
  }
  __pyx_L444:;

  /* "EMTree.pyx":2972
 * 
 *         #print "making eVetoZTTp001dxyz"
 *         self.eVetoZTTp001dxyz_branch = the_tree.GetBranch("eVetoZTTp001dxyz")             # <<<<<<<<<<<<<<
 *         #if not self.eVetoZTTp001dxyz_branch and "eVetoZTTp001dxyz" not in self.complained:
 *         if not self.eVetoZTTp001dxyz_branch and "eVetoZTTp001dxyz":
 */
  __pyx_v_self->eVetoZTTp001dxyz_branch = __pyx_v_the_tree->GetBranch(((char *)"eVetoZTTp001dxyz"));

  /* "EMTree.pyx":2974
 *         self.eVetoZTTp001dxyz_branch = the_tree.GetBranch("eVetoZTTp001dxyz")
 *         #if not self.eVetoZTTp001dxyz_branch and "eVetoZTTp001dxyz" not in self.complained:
 *         if not self.eVetoZTTp001dxyz_branch and "eVetoZTTp001dxyz":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eVetoZTTp001dxyz does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eVetoZTTp001dxyz")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eVetoZTTp001dxyz_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L448_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L448_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2975
 *         #if not self.eVetoZTTp001dxyz_branch and "eVetoZTTp001dxyz" not in self.complained:
 *         if not self.eVetoZTTp001dxyz_branch and "eVetoZTTp001dxyz":
 *             warnings.warn( "EMTree: Expected branch eVetoZTTp001dxyz does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eVetoZTTp001dxyz")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2975, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2975, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__150, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2975, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2974
 *         self.eVetoZTTp001dxyz_branch = the_tree.GetBranch("eVetoZTTp001dxyz")
 *         #if not self.eVetoZTTp001dxyz_branch and "eVetoZTTp001dxyz" not in self.complained:
 *         if not self.eVetoZTTp001dxyz_branch and "eVetoZTTp001dxyz":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eVetoZTTp001dxyz does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eVetoZTTp001dxyz")
 */
    goto __pyx_L447;
  }

  /* "EMTree.pyx":2978
 *             #self.complained.add("eVetoZTTp001dxyz")
 *         else:
 *             self.eVetoZTTp001dxyz_branch.SetAddress(<void*>&self.eVetoZTTp001dxyz_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eZTTGenMatching"
 */
  /*else*/ {
    __pyx_v_self->eVetoZTTp001dxyz_branch->SetAddress(((void *)(&__pyx_v_self->eVetoZTTp001dxyz_value)));
  }
  __pyx_L447:;

  /* "EMTree.pyx":2981
 * 
 *         #print "making eZTTGenMatching"
 *         self.eZTTGenMatching_branch = the_tree.GetBranch("eZTTGenMatching")             # <<<<<<<<<<<<<<
 *         #if not self.eZTTGenMatching_branch and "eZTTGenMatching" not in self.complained:
 *         if not self.eZTTGenMatching_branch and "eZTTGenMatching":
 */
  __pyx_v_self->eZTTGenMatching_branch = __pyx_v_the_tree->GetBranch(((char *)"eZTTGenMatching"));

  /* "EMTree.pyx":2983
 *         self.eZTTGenMatching_branch = the_tree.GetBranch("eZTTGenMatching")
 *         #if not self.eZTTGenMatching_branch and "eZTTGenMatching" not in self.complained:
 *         if not self.eZTTGenMatching_branch and "eZTTGenMatching":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eZTTGenMatching does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eZTTGenMatching")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eZTTGenMatching_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L451_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L451_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2984
 *         #if not self.eZTTGenMatching_branch and "eZTTGenMatching" not in self.complained:
 *         if not self.eZTTGenMatching_branch and "eZTTGenMatching":
 *             warnings.warn( "EMTree: Expected branch eZTTGenMatching does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eZTTGenMatching")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2984, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2984, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__151, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2984, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2983
 *         self.eZTTGenMatching_branch = the_tree.GetBranch("eZTTGenMatching")
 *         #if not self.eZTTGenMatching_branch and "eZTTGenMatching" not in self.complained:
 *         if not self.eZTTGenMatching_branch and "eZTTGenMatching":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eZTTGenMatching does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eZTTGenMatching")
 */
    goto __pyx_L450;
  }

  /* "EMTree.pyx":2987
 *             #self.complained.add("eZTTGenMatching")
 *         else:
 *             self.eZTTGenMatching_branch.SetAddress(<void*>&self.eZTTGenMatching_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making e_m_PZeta"
 */
  /*else*/ {
    __pyx_v_self->eZTTGenMatching_branch->SetAddress(((void *)(&__pyx_v_self->eZTTGenMatching_value)));
  }
  __pyx_L450:;

  /* "EMTree.pyx":2990
 * 
 *         #print "making e_m_PZeta"
 *         self.e_m_PZeta_branch = the_tree.GetBranch("e_m_PZeta")             # <<<<<<<<<<<<<<
 *         #if not self.e_m_PZeta_branch and "e_m_PZeta" not in self.complained:
 *         if not self.e_m_PZeta_branch and "e_m_PZeta":
 */
  __pyx_v_self->e_m_PZeta_branch = __pyx_v_the_tree->GetBranch(((char *)"e_m_PZeta"));

  /* "EMTree.pyx":2992
 *         self.e_m_PZeta_branch = the_tree.GetBranch("e_m_PZeta")
 *         #if not self.e_m_PZeta_branch and "e_m_PZeta" not in self.complained:
 *         if not self.e_m_PZeta_branch and "e_m_PZeta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch e_m_PZeta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("e_m_PZeta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->e_m_PZeta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L454_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L454_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":2993
 *         #if not self.e_m_PZeta_branch and "e_m_PZeta" not in self.complained:
 *         if not self.e_m_PZeta_branch and "e_m_PZeta":
 *             warnings.warn( "EMTree: Expected branch e_m_PZeta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("e_m_PZeta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2993, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2993, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__152, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2993, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":2992
 *         self.e_m_PZeta_branch = the_tree.GetBranch("e_m_PZeta")
 *         #if not self.e_m_PZeta_branch and "e_m_PZeta" not in self.complained:
 *         if not self.e_m_PZeta_branch and "e_m_PZeta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch e_m_PZeta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("e_m_PZeta")
 */
    goto __pyx_L453;
  }

  /* "EMTree.pyx":2996
 *             #self.complained.add("e_m_PZeta")
 *         else:
 *             self.e_m_PZeta_branch.SetAddress(<void*>&self.e_m_PZeta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making e_m_PZetaVis"
 */
  /*else*/ {
    __pyx_v_self->e_m_PZeta_branch->SetAddress(((void *)(&__pyx_v_self->e_m_PZeta_value)));
  }
  __pyx_L453:;

  /* "EMTree.pyx":2999
 * 
 *         #print "making e_m_PZetaVis"
 *         self.e_m_PZetaVis_branch = the_tree.GetBranch("e_m_PZetaVis")             # <<<<<<<<<<<<<<
 *         #if not self.e_m_PZetaVis_branch and "e_m_PZetaVis" not in self.complained:
 *         if not self.e_m_PZetaVis_branch and "e_m_PZetaVis":
 */
  __pyx_v_self->e_m_PZetaVis_branch = __pyx_v_the_tree->GetBranch(((char *)"e_m_PZetaVis"));

  /* "EMTree.pyx":3001
 *         self.e_m_PZetaVis_branch = the_tree.GetBranch("e_m_PZetaVis")
 *         #if not self.e_m_PZetaVis_branch and "e_m_PZetaVis" not in self.complained:
 *         if not self.e_m_PZetaVis_branch and "e_m_PZetaVis":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch e_m_PZetaVis does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("e_m_PZetaVis")
 */
  __pyx_t_2 = ((!(__pyx_v_self->e_m_PZetaVis_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L457_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L457_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3002
 *         #if not self.e_m_PZetaVis_branch and "e_m_PZetaVis" not in self.complained:
 *         if not self.e_m_PZetaVis_branch and "e_m_PZetaVis":
 *             warnings.warn( "EMTree: Expected branch e_m_PZetaVis does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("e_m_PZetaVis")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3002, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3002, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__153, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3002, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3001
 *         self.e_m_PZetaVis_branch = the_tree.GetBranch("e_m_PZetaVis")
 *         #if not self.e_m_PZetaVis_branch and "e_m_PZetaVis" not in self.complained:
 *         if not self.e_m_PZetaVis_branch and "e_m_PZetaVis":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch e_m_PZetaVis does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("e_m_PZetaVis")
 */
    goto __pyx_L456;
  }

  /* "EMTree.pyx":3005
 *             #self.complained.add("e_m_PZetaVis")
 *         else:
 *             self.e_m_PZetaVis_branch.SetAddress(<void*>&self.e_m_PZetaVis_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making e_m_doubleL1IsoTauMatch"
 */
  /*else*/ {
    __pyx_v_self->e_m_PZetaVis_branch->SetAddress(((void *)(&__pyx_v_self->e_m_PZetaVis_value)));
  }
  __pyx_L456:;

  /* "EMTree.pyx":3008
 * 
 *         #print "making e_m_doubleL1IsoTauMatch"
 *         self.e_m_doubleL1IsoTauMatch_branch = the_tree.GetBranch("e_m_doubleL1IsoTauMatch")             # <<<<<<<<<<<<<<
 *         #if not self.e_m_doubleL1IsoTauMatch_branch and "e_m_doubleL1IsoTauMatch" not in self.complained:
 *         if not self.e_m_doubleL1IsoTauMatch_branch and "e_m_doubleL1IsoTauMatch":
 */
  __pyx_v_self->e_m_doubleL1IsoTauMatch_branch = __pyx_v_the_tree->GetBranch(((char *)"e_m_doubleL1IsoTauMatch"));

  /* "EMTree.pyx":3010
 *         self.e_m_doubleL1IsoTauMatch_branch = the_tree.GetBranch("e_m_doubleL1IsoTauMatch")
 *         #if not self.e_m_doubleL1IsoTauMatch_branch and "e_m_doubleL1IsoTauMatch" not in self.complained:
 *         if not self.e_m_doubleL1IsoTauMatch_branch and "e_m_doubleL1IsoTauMatch":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch e_m_doubleL1IsoTauMatch does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("e_m_doubleL1IsoTauMatch")
 */
  __pyx_t_2 = ((!(__pyx_v_self->e_m_doubleL1IsoTauMatch_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L460_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L460_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3011
 *         #if not self.e_m_doubleL1IsoTauMatch_branch and "e_m_doubleL1IsoTauMatch" not in self.complained:
 *         if not self.e_m_doubleL1IsoTauMatch_branch and "e_m_doubleL1IsoTauMatch":
 *             warnings.warn( "EMTree: Expected branch e_m_doubleL1IsoTauMatch does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("e_m_doubleL1IsoTauMatch")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3011, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3011, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__154, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3011, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3010
 *         self.e_m_doubleL1IsoTauMatch_branch = the_tree.GetBranch("e_m_doubleL1IsoTauMatch")
 *         #if not self.e_m_doubleL1IsoTauMatch_branch and "e_m_doubleL1IsoTauMatch" not in self.complained:
 *         if not self.e_m_doubleL1IsoTauMatch_branch and "e_m_doubleL1IsoTauMatch":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch e_m_doubleL1IsoTauMatch does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("e_m_doubleL1IsoTauMatch")
 */
    goto __pyx_L459;
  }

  /* "EMTree.pyx":3014
 *             #self.complained.add("e_m_doubleL1IsoTauMatch")
 *         else:
 *             self.e_m_doubleL1IsoTauMatch_branch.SetAddress(<void*>&self.e_m_doubleL1IsoTauMatch_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eecalEnergy"
 */
  /*else*/ {
    __pyx_v_self->e_m_doubleL1IsoTauMatch_branch->SetAddress(((void *)(&__pyx_v_self->e_m_doubleL1IsoTauMatch_value)));
  }
  __pyx_L459:;

  /* "EMTree.pyx":3017
 * 
 *         #print "making eecalEnergy"
 *         self.eecalEnergy_branch = the_tree.GetBranch("eecalEnergy")             # <<<<<<<<<<<<<<
 *         #if not self.eecalEnergy_branch and "eecalEnergy" not in self.complained:
 *         if not self.eecalEnergy_branch and "eecalEnergy":
 */
  __pyx_v_self->eecalEnergy_branch = __pyx_v_the_tree->GetBranch(((char *)"eecalEnergy"));

  /* "EMTree.pyx":3019
 *         self.eecalEnergy_branch = the_tree.GetBranch("eecalEnergy")
 *         #if not self.eecalEnergy_branch and "eecalEnergy" not in self.complained:
 *         if not self.eecalEnergy_branch and "eecalEnergy":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eecalEnergy does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eecalEnergy")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eecalEnergy_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L463_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L463_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3020
 *         #if not self.eecalEnergy_branch and "eecalEnergy" not in self.complained:
 *         if not self.eecalEnergy_branch and "eecalEnergy":
 *             warnings.warn( "EMTree: Expected branch eecalEnergy does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eecalEnergy")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3020, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3020, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__155, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3020, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3019
 *         self.eecalEnergy_branch = the_tree.GetBranch("eecalEnergy")
 *         #if not self.eecalEnergy_branch and "eecalEnergy" not in self.complained:
 *         if not self.eecalEnergy_branch and "eecalEnergy":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch eecalEnergy does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eecalEnergy")
 */
    goto __pyx_L462;
  }

  /* "EMTree.pyx":3023
 *             #self.complained.add("eecalEnergy")
 *         else:
 *             self.eecalEnergy_branch.SetAddress(<void*>&self.eecalEnergy_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making evt"
 */
  /*else*/ {
    __pyx_v_self->eecalEnergy_branch->SetAddress(((void *)(&__pyx_v_self->eecalEnergy_value)));
  }
  __pyx_L462:;

  /* "EMTree.pyx":3026
 * 
 *         #print "making evt"
 *         self.evt_branch = the_tree.GetBranch("evt")             # <<<<<<<<<<<<<<
 *         #if not self.evt_branch and "evt" not in self.complained:
 *         if not self.evt_branch and "evt":
 */
  __pyx_v_self->evt_branch = __pyx_v_the_tree->GetBranch(((char *)"evt"));

  /* "EMTree.pyx":3028
 *         self.evt_branch = the_tree.GetBranch("evt")
 *         #if not self.evt_branch and "evt" not in self.complained:
 *         if not self.evt_branch and "evt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch evt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("evt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->evt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L466_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L466_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3029
 *         #if not self.evt_branch and "evt" not in self.complained:
 *         if not self.evt_branch and "evt":
 *             warnings.warn( "EMTree: Expected branch evt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("evt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3029, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3029, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__156, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3029, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3028
 *         self.evt_branch = the_tree.GetBranch("evt")
 *         #if not self.evt_branch and "evt" not in self.complained:
 *         if not self.evt_branch and "evt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch evt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("evt")
 */
    goto __pyx_L465;
  }

  /* "EMTree.pyx":3032
 *             #self.complained.add("evt")
 *         else:
 *             self.evt_branch.SetAddress(<void*>&self.evt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making genEta"
 */
  /*else*/ {
    __pyx_v_self->evt_branch->SetAddress(((void *)(&__pyx_v_self->evt_value)));
  }
  __pyx_L465:;

  /* "EMTree.pyx":3035
 * 
 *         #print "making genEta"
 *         self.genEta_branch = the_tree.GetBranch("genEta")             # <<<<<<<<<<<<<<
 *         #if not self.genEta_branch and "genEta" not in self.complained:
 *         if not self.genEta_branch and "genEta":
 */
  __pyx_v_self->genEta_branch = __pyx_v_the_tree->GetBranch(((char *)"genEta"));

  /* "EMTree.pyx":3037
 *         self.genEta_branch = the_tree.GetBranch("genEta")
 *         #if not self.genEta_branch and "genEta" not in self.complained:
 *         if not self.genEta_branch and "genEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch genEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("genEta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->genEta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L469_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L469_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3038
 *         #if not self.genEta_branch and "genEta" not in self.complained:
 *         if not self.genEta_branch and "genEta":
 *             warnings.warn( "EMTree: Expected branch genEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("genEta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3038, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3038, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__157, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3038, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3037
 *         self.genEta_branch = the_tree.GetBranch("genEta")
 *         #if not self.genEta_branch and "genEta" not in self.complained:
 *         if not self.genEta_branch and "genEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch genEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("genEta")
 */
    goto __pyx_L468;
  }

  /* "EMTree.pyx":3041
 *             #self.complained.add("genEta")
 *         else:
 *             self.genEta_branch.SetAddress(<void*>&self.genEta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making genHTT"
 */
  /*else*/ {
    __pyx_v_self->genEta_branch->SetAddress(((void *)(&__pyx_v_self->genEta_value)));
  }
  __pyx_L468:;

  /* "EMTree.pyx":3044
 * 
 *         #print "making genHTT"
 *         self.genHTT_branch = the_tree.GetBranch("genHTT")             # <<<<<<<<<<<<<<
 *         #if not self.genHTT_branch and "genHTT" not in self.complained:
 *         if not self.genHTT_branch and "genHTT":
 */
  __pyx_v_self->genHTT_branch = __pyx_v_the_tree->GetBranch(((char *)"genHTT"));

  /* "EMTree.pyx":3046
 *         self.genHTT_branch = the_tree.GetBranch("genHTT")
 *         #if not self.genHTT_branch and "genHTT" not in self.complained:
 *         if not self.genHTT_branch and "genHTT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch genHTT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("genHTT")
 */
  __pyx_t_2 = ((!(__pyx_v_self->genHTT_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L472_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L472_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3047
 *         #if not self.genHTT_branch and "genHTT" not in self.complained:
 *         if not self.genHTT_branch and "genHTT":
 *             warnings.warn( "EMTree: Expected branch genHTT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("genHTT")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__158, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3046
 *         self.genHTT_branch = the_tree.GetBranch("genHTT")
 *         #if not self.genHTT_branch and "genHTT" not in self.complained:
 *         if not self.genHTT_branch and "genHTT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch genHTT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("genHTT")
 */
    goto __pyx_L471;
  }

  /* "EMTree.pyx":3050
 *             #self.complained.add("genHTT")
 *         else:
 *             self.genHTT_branch.SetAddress(<void*>&self.genHTT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making genM"
 */
  /*else*/ {
    __pyx_v_self->genHTT_branch->SetAddress(((void *)(&__pyx_v_self->genHTT_value)));
  }
  __pyx_L471:;

  /* "EMTree.pyx":3053
 * 
 *         #print "making genM"
 *         self.genM_branch = the_tree.GetBranch("genM")             # <<<<<<<<<<<<<<
 *         #if not self.genM_branch and "genM" not in self.complained:
 *         if not self.genM_branch and "genM":
 */
  __pyx_v_self->genM_branch = __pyx_v_the_tree->GetBranch(((char *)"genM"));

  /* "EMTree.pyx":3055
 *         self.genM_branch = the_tree.GetBranch("genM")
 *         #if not self.genM_branch and "genM" not in self.complained:
 *         if not self.genM_branch and "genM":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch genM does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("genM")
 */
  __pyx_t_2 = ((!(__pyx_v_self->genM_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L475_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L475_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3056
 *         #if not self.genM_branch and "genM" not in self.complained:
 *         if not self.genM_branch and "genM":
 *             warnings.warn( "EMTree: Expected branch genM does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("genM")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3056, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3056, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__159, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3056, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3055
 *         self.genM_branch = the_tree.GetBranch("genM")
 *         #if not self.genM_branch and "genM" not in self.complained:
 *         if not self.genM_branch and "genM":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch genM does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("genM")
 */
    goto __pyx_L474;
  }

  /* "EMTree.pyx":3059
 *             #self.complained.add("genM")
 *         else:
 *             self.genM_branch.SetAddress(<void*>&self.genM_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making genMass"
 */
  /*else*/ {
    __pyx_v_self->genM_branch->SetAddress(((void *)(&__pyx_v_self->genM_value)));
  }
  __pyx_L474:;

  /* "EMTree.pyx":3062
 * 
 *         #print "making genMass"
 *         self.genMass_branch = the_tree.GetBranch("genMass")             # <<<<<<<<<<<<<<
 *         #if not self.genMass_branch and "genMass" not in self.complained:
 *         if not self.genMass_branch and "genMass":
 */
  __pyx_v_self->genMass_branch = __pyx_v_the_tree->GetBranch(((char *)"genMass"));

  /* "EMTree.pyx":3064
 *         self.genMass_branch = the_tree.GetBranch("genMass")
 *         #if not self.genMass_branch and "genMass" not in self.complained:
 *         if not self.genMass_branch and "genMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch genMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("genMass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->genMass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L478_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L478_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3065
 *         #if not self.genMass_branch and "genMass" not in self.complained:
 *         if not self.genMass_branch and "genMass":
 *             warnings.warn( "EMTree: Expected branch genMass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("genMass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3065, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3065, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__160, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3065, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3064
 *         self.genMass_branch = the_tree.GetBranch("genMass")
 *         #if not self.genMass_branch and "genMass" not in self.complained:
 *         if not self.genMass_branch and "genMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch genMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("genMass")
 */
    goto __pyx_L477;
  }

  /* "EMTree.pyx":3068
 *             #self.complained.add("genMass")
 *         else:
 *             self.genMass_branch.SetAddress(<void*>&self.genMass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making genPhi"
 */
  /*else*/ {
    __pyx_v_self->genMass_branch->SetAddress(((void *)(&__pyx_v_self->genMass_value)));
  }
  __pyx_L477:;

  /* "EMTree.pyx":3071
 * 
 *         #print "making genPhi"
 *         self.genPhi_branch = the_tree.GetBranch("genPhi")             # <<<<<<<<<<<<<<
 *         #if not self.genPhi_branch and "genPhi" not in self.complained:
 *         if not self.genPhi_branch and "genPhi":
 */
  __pyx_v_self->genPhi_branch = __pyx_v_the_tree->GetBranch(((char *)"genPhi"));

  /* "EMTree.pyx":3073
 *         self.genPhi_branch = the_tree.GetBranch("genPhi")
 *         #if not self.genPhi_branch and "genPhi" not in self.complained:
 *         if not self.genPhi_branch and "genPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch genPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("genPhi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->genPhi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L481_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L481_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3074
 *         #if not self.genPhi_branch and "genPhi" not in self.complained:
 *         if not self.genPhi_branch and "genPhi":
 *             warnings.warn( "EMTree: Expected branch genPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("genPhi")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3074, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3074, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__161, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3074, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3073
 *         self.genPhi_branch = the_tree.GetBranch("genPhi")
 *         #if not self.genPhi_branch and "genPhi" not in self.complained:
 *         if not self.genPhi_branch and "genPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch genPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("genPhi")
 */
    goto __pyx_L480;
  }

  /* "EMTree.pyx":3077
 *             #self.complained.add("genPhi")
 *         else:
 *             self.genPhi_branch.SetAddress(<void*>&self.genPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making genpT"
 */
  /*else*/ {
    __pyx_v_self->genPhi_branch->SetAddress(((void *)(&__pyx_v_self->genPhi_value)));
  }
  __pyx_L480:;

  /* "EMTree.pyx":3080
 * 
 *         #print "making genpT"
 *         self.genpT_branch = the_tree.GetBranch("genpT")             # <<<<<<<<<<<<<<
 *         #if not self.genpT_branch and "genpT" not in self.complained:
 *         if not self.genpT_branch and "genpT":
 */
  __pyx_v_self->genpT_branch = __pyx_v_the_tree->GetBranch(((char *)"genpT"));

  /* "EMTree.pyx":3082
 *         self.genpT_branch = the_tree.GetBranch("genpT")
 *         #if not self.genpT_branch and "genpT" not in self.complained:
 *         if not self.genpT_branch and "genpT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch genpT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("genpT")
 */
  __pyx_t_2 = ((!(__pyx_v_self->genpT_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L484_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L484_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3083
 *         #if not self.genpT_branch and "genpT" not in self.complained:
 *         if not self.genpT_branch and "genpT":
 *             warnings.warn( "EMTree: Expected branch genpT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("genpT")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3083, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3083, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__162, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3083, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3082
 *         self.genpT_branch = the_tree.GetBranch("genpT")
 *         #if not self.genpT_branch and "genpT" not in self.complained:
 *         if not self.genpT_branch and "genpT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch genpT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("genpT")
 */
    goto __pyx_L483;
  }

  /* "EMTree.pyx":3086
 *             #self.complained.add("genpT")
 *         else:
 *             self.genpT_branch.SetAddress(<void*>&self.genpT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making genpX"
 */
  /*else*/ {
    __pyx_v_self->genpT_branch->SetAddress(((void *)(&__pyx_v_self->genpT_value)));
  }
  __pyx_L483:;

  /* "EMTree.pyx":3089
 * 
 *         #print "making genpX"
 *         self.genpX_branch = the_tree.GetBranch("genpX")             # <<<<<<<<<<<<<<
 *         #if not self.genpX_branch and "genpX" not in self.complained:
 *         if not self.genpX_branch and "genpX":
 */
  __pyx_v_self->genpX_branch = __pyx_v_the_tree->GetBranch(((char *)"genpX"));

  /* "EMTree.pyx":3091
 *         self.genpX_branch = the_tree.GetBranch("genpX")
 *         #if not self.genpX_branch and "genpX" not in self.complained:
 *         if not self.genpX_branch and "genpX":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch genpX does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("genpX")
 */
  __pyx_t_2 = ((!(__pyx_v_self->genpX_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L487_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L487_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3092
 *         #if not self.genpX_branch and "genpX" not in self.complained:
 *         if not self.genpX_branch and "genpX":
 *             warnings.warn( "EMTree: Expected branch genpX does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("genpX")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3092, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3092, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__163, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3092, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3091
 *         self.genpX_branch = the_tree.GetBranch("genpX")
 *         #if not self.genpX_branch and "genpX" not in self.complained:
 *         if not self.genpX_branch and "genpX":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch genpX does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("genpX")
 */
    goto __pyx_L486;
  }

  /* "EMTree.pyx":3095
 *             #self.complained.add("genpX")
 *         else:
 *             self.genpX_branch.SetAddress(<void*>&self.genpX_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making genpY"
 */
  /*else*/ {
    __pyx_v_self->genpX_branch->SetAddress(((void *)(&__pyx_v_self->genpX_value)));
  }
  __pyx_L486:;

  /* "EMTree.pyx":3098
 * 
 *         #print "making genpY"
 *         self.genpY_branch = the_tree.GetBranch("genpY")             # <<<<<<<<<<<<<<
 *         #if not self.genpY_branch and "genpY" not in self.complained:
 *         if not self.genpY_branch and "genpY":
 */
  __pyx_v_self->genpY_branch = __pyx_v_the_tree->GetBranch(((char *)"genpY"));

  /* "EMTree.pyx":3100
 *         self.genpY_branch = the_tree.GetBranch("genpY")
 *         #if not self.genpY_branch and "genpY" not in self.complained:
 *         if not self.genpY_branch and "genpY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch genpY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("genpY")
 */
  __pyx_t_2 = ((!(__pyx_v_self->genpY_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L490_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L490_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3101
 *         #if not self.genpY_branch and "genpY" not in self.complained:
 *         if not self.genpY_branch and "genpY":
 *             warnings.warn( "EMTree: Expected branch genpY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("genpY")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3101, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3101, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__164, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3101, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3100
 *         self.genpY_branch = the_tree.GetBranch("genpY")
 *         #if not self.genpY_branch and "genpY" not in self.complained:
 *         if not self.genpY_branch and "genpY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch genpY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("genpY")
 */
    goto __pyx_L489;
  }

  /* "EMTree.pyx":3104
 *             #self.complained.add("genpY")
 *         else:
 *             self.genpY_branch.SetAddress(<void*>&self.genpY_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isGtautau"
 */
  /*else*/ {
    __pyx_v_self->genpY_branch->SetAddress(((void *)(&__pyx_v_self->genpY_value)));
  }
  __pyx_L489:;

  /* "EMTree.pyx":3107
 * 
 *         #print "making isGtautau"
 *         self.isGtautau_branch = the_tree.GetBranch("isGtautau")             # <<<<<<<<<<<<<<
 *         #if not self.isGtautau_branch and "isGtautau" not in self.complained:
 *         if not self.isGtautau_branch and "isGtautau":
 */
  __pyx_v_self->isGtautau_branch = __pyx_v_the_tree->GetBranch(((char *)"isGtautau"));

  /* "EMTree.pyx":3109
 *         self.isGtautau_branch = the_tree.GetBranch("isGtautau")
 *         #if not self.isGtautau_branch and "isGtautau" not in self.complained:
 *         if not self.isGtautau_branch and "isGtautau":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isGtautau does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isGtautau")
 */
  __pyx_t_2 = ((!(__pyx_v_self->isGtautau_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L493_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L493_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3110
 *         #if not self.isGtautau_branch and "isGtautau" not in self.complained:
 *         if not self.isGtautau_branch and "isGtautau":
 *             warnings.warn( "EMTree: Expected branch isGtautau does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isGtautau")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__165, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3109
 *         self.isGtautau_branch = the_tree.GetBranch("isGtautau")
 *         #if not self.isGtautau_branch and "isGtautau" not in self.complained:
 *         if not self.isGtautau_branch and "isGtautau":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isGtautau does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isGtautau")
 */
    goto __pyx_L492;
  }

  /* "EMTree.pyx":3113
 *             #self.complained.add("isGtautau")
 *         else:
 *             self.isGtautau_branch.SetAddress(<void*>&self.isGtautau_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isWenu"
 */
  /*else*/ {
    __pyx_v_self->isGtautau_branch->SetAddress(((void *)(&__pyx_v_self->isGtautau_value)));
  }
  __pyx_L492:;

  /* "EMTree.pyx":3116
 * 
 *         #print "making isWenu"
 *         self.isWenu_branch = the_tree.GetBranch("isWenu")             # <<<<<<<<<<<<<<
 *         #if not self.isWenu_branch and "isWenu" not in self.complained:
 *         if not self.isWenu_branch and "isWenu":
 */
  __pyx_v_self->isWenu_branch = __pyx_v_the_tree->GetBranch(((char *)"isWenu"));

  /* "EMTree.pyx":3118
 *         self.isWenu_branch = the_tree.GetBranch("isWenu")
 *         #if not self.isWenu_branch and "isWenu" not in self.complained:
 *         if not self.isWenu_branch and "isWenu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isWenu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isWenu")
 */
  __pyx_t_2 = ((!(__pyx_v_self->isWenu_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L496_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L496_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3119
 *         #if not self.isWenu_branch and "isWenu" not in self.complained:
 *         if not self.isWenu_branch and "isWenu":
 *             warnings.warn( "EMTree: Expected branch isWenu does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isWenu")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3119, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3119, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__166, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3119, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3118
 *         self.isWenu_branch = the_tree.GetBranch("isWenu")
 *         #if not self.isWenu_branch and "isWenu" not in self.complained:
 *         if not self.isWenu_branch and "isWenu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isWenu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isWenu")
 */
    goto __pyx_L495;
  }

  /* "EMTree.pyx":3122
 *             #self.complained.add("isWenu")
 *         else:
 *             self.isWenu_branch.SetAddress(<void*>&self.isWenu_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isWmunu"
 */
  /*else*/ {
    __pyx_v_self->isWenu_branch->SetAddress(((void *)(&__pyx_v_self->isWenu_value)));
  }
  __pyx_L495:;

  /* "EMTree.pyx":3125
 * 
 *         #print "making isWmunu"
 *         self.isWmunu_branch = the_tree.GetBranch("isWmunu")             # <<<<<<<<<<<<<<
 *         #if not self.isWmunu_branch and "isWmunu" not in self.complained:
 *         if not self.isWmunu_branch and "isWmunu":
 */
  __pyx_v_self->isWmunu_branch = __pyx_v_the_tree->GetBranch(((char *)"isWmunu"));

  /* "EMTree.pyx":3127
 *         self.isWmunu_branch = the_tree.GetBranch("isWmunu")
 *         #if not self.isWmunu_branch and "isWmunu" not in self.complained:
 *         if not self.isWmunu_branch and "isWmunu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isWmunu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isWmunu")
 */
  __pyx_t_2 = ((!(__pyx_v_self->isWmunu_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L499_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L499_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3128
 *         #if not self.isWmunu_branch and "isWmunu" not in self.complained:
 *         if not self.isWmunu_branch and "isWmunu":
 *             warnings.warn( "EMTree: Expected branch isWmunu does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isWmunu")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__167, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3127
 *         self.isWmunu_branch = the_tree.GetBranch("isWmunu")
 *         #if not self.isWmunu_branch and "isWmunu" not in self.complained:
 *         if not self.isWmunu_branch and "isWmunu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isWmunu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isWmunu")
 */
    goto __pyx_L498;
  }

  /* "EMTree.pyx":3131
 *             #self.complained.add("isWmunu")
 *         else:
 *             self.isWmunu_branch.SetAddress(<void*>&self.isWmunu_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isWtaunu"
 */
  /*else*/ {
    __pyx_v_self->isWmunu_branch->SetAddress(((void *)(&__pyx_v_self->isWmunu_value)));
  }
  __pyx_L498:;

  /* "EMTree.pyx":3134
 * 
 *         #print "making isWtaunu"
 *         self.isWtaunu_branch = the_tree.GetBranch("isWtaunu")             # <<<<<<<<<<<<<<
 *         #if not self.isWtaunu_branch and "isWtaunu" not in self.complained:
 *         if not self.isWtaunu_branch and "isWtaunu":
 */
  __pyx_v_self->isWtaunu_branch = __pyx_v_the_tree->GetBranch(((char *)"isWtaunu"));

  /* "EMTree.pyx":3136
 *         self.isWtaunu_branch = the_tree.GetBranch("isWtaunu")
 *         #if not self.isWtaunu_branch and "isWtaunu" not in self.complained:
 *         if not self.isWtaunu_branch and "isWtaunu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isWtaunu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isWtaunu")
 */
  __pyx_t_2 = ((!(__pyx_v_self->isWtaunu_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L502_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L502_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3137
 *         #if not self.isWtaunu_branch and "isWtaunu" not in self.complained:
 *         if not self.isWtaunu_branch and "isWtaunu":
 *             warnings.warn( "EMTree: Expected branch isWtaunu does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isWtaunu")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3137, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3137, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__168, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3137, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3136
 *         self.isWtaunu_branch = the_tree.GetBranch("isWtaunu")
 *         #if not self.isWtaunu_branch and "isWtaunu" not in self.complained:
 *         if not self.isWtaunu_branch and "isWtaunu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isWtaunu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isWtaunu")
 */
    goto __pyx_L501;
  }

  /* "EMTree.pyx":3140
 *             #self.complained.add("isWtaunu")
 *         else:
 *             self.isWtaunu_branch.SetAddress(<void*>&self.isWtaunu_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isZee"
 */
  /*else*/ {
    __pyx_v_self->isWtaunu_branch->SetAddress(((void *)(&__pyx_v_self->isWtaunu_value)));
  }
  __pyx_L501:;

  /* "EMTree.pyx":3143
 * 
 *         #print "making isZee"
 *         self.isZee_branch = the_tree.GetBranch("isZee")             # <<<<<<<<<<<<<<
 *         #if not self.isZee_branch and "isZee" not in self.complained:
 *         if not self.isZee_branch and "isZee":
 */
  __pyx_v_self->isZee_branch = __pyx_v_the_tree->GetBranch(((char *)"isZee"));

  /* "EMTree.pyx":3145
 *         self.isZee_branch = the_tree.GetBranch("isZee")
 *         #if not self.isZee_branch and "isZee" not in self.complained:
 *         if not self.isZee_branch and "isZee":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isZee does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isZee")
 */
  __pyx_t_2 = ((!(__pyx_v_self->isZee_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L505_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L505_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3146
 *         #if not self.isZee_branch and "isZee" not in self.complained:
 *         if not self.isZee_branch and "isZee":
 *             warnings.warn( "EMTree: Expected branch isZee does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isZee")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__169, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3145
 *         self.isZee_branch = the_tree.GetBranch("isZee")
 *         #if not self.isZee_branch and "isZee" not in self.complained:
 *         if not self.isZee_branch and "isZee":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isZee does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isZee")
 */
    goto __pyx_L504;
  }

  /* "EMTree.pyx":3149
 *             #self.complained.add("isZee")
 *         else:
 *             self.isZee_branch.SetAddress(<void*>&self.isZee_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isZmumu"
 */
  /*else*/ {
    __pyx_v_self->isZee_branch->SetAddress(((void *)(&__pyx_v_self->isZee_value)));
  }
  __pyx_L504:;

  /* "EMTree.pyx":3152
 * 
 *         #print "making isZmumu"
 *         self.isZmumu_branch = the_tree.GetBranch("isZmumu")             # <<<<<<<<<<<<<<
 *         #if not self.isZmumu_branch and "isZmumu" not in self.complained:
 *         if not self.isZmumu_branch and "isZmumu":
 */
  __pyx_v_self->isZmumu_branch = __pyx_v_the_tree->GetBranch(((char *)"isZmumu"));

  /* "EMTree.pyx":3154
 *         self.isZmumu_branch = the_tree.GetBranch("isZmumu")
 *         #if not self.isZmumu_branch and "isZmumu" not in self.complained:
 *         if not self.isZmumu_branch and "isZmumu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isZmumu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isZmumu")
 */
  __pyx_t_2 = ((!(__pyx_v_self->isZmumu_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L508_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L508_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3155
 *         #if not self.isZmumu_branch and "isZmumu" not in self.complained:
 *         if not self.isZmumu_branch and "isZmumu":
 *             warnings.warn( "EMTree: Expected branch isZmumu does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isZmumu")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3155, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3155, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__170, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3155, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3154
 *         self.isZmumu_branch = the_tree.GetBranch("isZmumu")
 *         #if not self.isZmumu_branch and "isZmumu" not in self.complained:
 *         if not self.isZmumu_branch and "isZmumu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isZmumu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isZmumu")
 */
    goto __pyx_L507;
  }

  /* "EMTree.pyx":3158
 *             #self.complained.add("isZmumu")
 *         else:
 *             self.isZmumu_branch.SetAddress(<void*>&self.isZmumu_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isZtautau"
 */
  /*else*/ {
    __pyx_v_self->isZmumu_branch->SetAddress(((void *)(&__pyx_v_self->isZmumu_value)));
  }
  __pyx_L507:;

  /* "EMTree.pyx":3161
 * 
 *         #print "making isZtautau"
 *         self.isZtautau_branch = the_tree.GetBranch("isZtautau")             # <<<<<<<<<<<<<<
 *         #if not self.isZtautau_branch and "isZtautau" not in self.complained:
 *         if not self.isZtautau_branch and "isZtautau":
 */
  __pyx_v_self->isZtautau_branch = __pyx_v_the_tree->GetBranch(((char *)"isZtautau"));

  /* "EMTree.pyx":3163
 *         self.isZtautau_branch = the_tree.GetBranch("isZtautau")
 *         #if not self.isZtautau_branch and "isZtautau" not in self.complained:
 *         if not self.isZtautau_branch and "isZtautau":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isZtautau does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isZtautau")
 */
  __pyx_t_2 = ((!(__pyx_v_self->isZtautau_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L511_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L511_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3164
 *         #if not self.isZtautau_branch and "isZtautau" not in self.complained:
 *         if not self.isZtautau_branch and "isZtautau":
 *             warnings.warn( "EMTree: Expected branch isZtautau does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isZtautau")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__171, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3163
 *         self.isZtautau_branch = the_tree.GetBranch("isZtautau")
 *         #if not self.isZtautau_branch and "isZtautau" not in self.complained:
 *         if not self.isZtautau_branch and "isZtautau":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isZtautau does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isZtautau")
 */
    goto __pyx_L510;
  }

  /* "EMTree.pyx":3167
 *             #self.complained.add("isZtautau")
 *         else:
 *             self.isZtautau_branch.SetAddress(<void*>&self.isZtautau_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isdata"
 */
  /*else*/ {
    __pyx_v_self->isZtautau_branch->SetAddress(((void *)(&__pyx_v_self->isZtautau_value)));
  }
  __pyx_L510:;

  /* "EMTree.pyx":3170
 * 
 *         #print "making isdata"
 *         self.isdata_branch = the_tree.GetBranch("isdata")             # <<<<<<<<<<<<<<
 *         #if not self.isdata_branch and "isdata" not in self.complained:
 *         if not self.isdata_branch and "isdata":
 */
  __pyx_v_self->isdata_branch = __pyx_v_the_tree->GetBranch(((char *)"isdata"));

  /* "EMTree.pyx":3172
 *         self.isdata_branch = the_tree.GetBranch("isdata")
 *         #if not self.isdata_branch and "isdata" not in self.complained:
 *         if not self.isdata_branch and "isdata":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isdata does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isdata")
 */
  __pyx_t_2 = ((!(__pyx_v_self->isdata_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L514_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L514_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3173
 *         #if not self.isdata_branch and "isdata" not in self.complained:
 *         if not self.isdata_branch and "isdata":
 *             warnings.warn( "EMTree: Expected branch isdata does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isdata")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3173, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3173, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__172, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3173, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3172
 *         self.isdata_branch = the_tree.GetBranch("isdata")
 *         #if not self.isdata_branch and "isdata" not in self.complained:
 *         if not self.isdata_branch and "isdata":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isdata does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isdata")
 */
    goto __pyx_L513;
  }

  /* "EMTree.pyx":3176
 *             #self.complained.add("isdata")
 *         else:
 *             self.isdata_branch.SetAddress(<void*>&self.isdata_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isembed"
 */
  /*else*/ {
    __pyx_v_self->isdata_branch->SetAddress(((void *)(&__pyx_v_self->isdata_value)));
  }
  __pyx_L513:;

  /* "EMTree.pyx":3179
 * 
 *         #print "making isembed"
 *         self.isembed_branch = the_tree.GetBranch("isembed")             # <<<<<<<<<<<<<<
 *         #if not self.isembed_branch and "isembed" not in self.complained:
 *         if not self.isembed_branch and "isembed":
 */
  __pyx_v_self->isembed_branch = __pyx_v_the_tree->GetBranch(((char *)"isembed"));

  /* "EMTree.pyx":3181
 *         self.isembed_branch = the_tree.GetBranch("isembed")
 *         #if not self.isembed_branch and "isembed" not in self.complained:
 *         if not self.isembed_branch and "isembed":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isembed does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isembed")
 */
  __pyx_t_2 = ((!(__pyx_v_self->isembed_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L517_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L517_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3182
 *         #if not self.isembed_branch and "isembed" not in self.complained:
 *         if not self.isembed_branch and "isembed":
 *             warnings.warn( "EMTree: Expected branch isembed does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isembed")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__173, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3181
 *         self.isembed_branch = the_tree.GetBranch("isembed")
 *         #if not self.isembed_branch and "isembed" not in self.complained:
 *         if not self.isembed_branch and "isembed":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch isembed does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isembed")
 */
    goto __pyx_L516;
  }

  /* "EMTree.pyx":3185
 *             #self.complained.add("isembed")
 *         else:
 *             self.isembed_branch.SetAddress(<void*>&self.isembed_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1csv"
 */
  /*else*/ {
    __pyx_v_self->isembed_branch->SetAddress(((void *)(&__pyx_v_self->isembed_value)));
  }
  __pyx_L516:;

  /* "EMTree.pyx":3188
 * 
 *         #print "making j1csv"
 *         self.j1csv_branch = the_tree.GetBranch("j1csv")             # <<<<<<<<<<<<<<
 *         #if not self.j1csv_branch and "j1csv" not in self.complained:
 *         if not self.j1csv_branch and "j1csv":
 */
  __pyx_v_self->j1csv_branch = __pyx_v_the_tree->GetBranch(((char *)"j1csv"));

  /* "EMTree.pyx":3190
 *         self.j1csv_branch = the_tree.GetBranch("j1csv")
 *         #if not self.j1csv_branch and "j1csv" not in self.complained:
 *         if not self.j1csv_branch and "j1csv":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1csv does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1csv")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1csv_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L520_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L520_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3191
 *         #if not self.j1csv_branch and "j1csv" not in self.complained:
 *         if not self.j1csv_branch and "j1csv":
 *             warnings.warn( "EMTree: Expected branch j1csv does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1csv")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3191, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3191, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__174, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3191, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3190
 *         self.j1csv_branch = the_tree.GetBranch("j1csv")
 *         #if not self.j1csv_branch and "j1csv" not in self.complained:
 *         if not self.j1csv_branch and "j1csv":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1csv does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1csv")
 */
    goto __pyx_L519;
  }

  /* "EMTree.pyx":3194
 *             #self.complained.add("j1csv")
 *         else:
 *             self.j1csv_branch.SetAddress(<void*>&self.j1csv_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1csvWoNoisyJets"
 */
  /*else*/ {
    __pyx_v_self->j1csv_branch->SetAddress(((void *)(&__pyx_v_self->j1csv_value)));
  }
  __pyx_L519:;

  /* "EMTree.pyx":3197
 * 
 *         #print "making j1csvWoNoisyJets"
 *         self.j1csvWoNoisyJets_branch = the_tree.GetBranch("j1csvWoNoisyJets")             # <<<<<<<<<<<<<<
 *         #if not self.j1csvWoNoisyJets_branch and "j1csvWoNoisyJets" not in self.complained:
 *         if not self.j1csvWoNoisyJets_branch and "j1csvWoNoisyJets":
 */
  __pyx_v_self->j1csvWoNoisyJets_branch = __pyx_v_the_tree->GetBranch(((char *)"j1csvWoNoisyJets"));

  /* "EMTree.pyx":3199
 *         self.j1csvWoNoisyJets_branch = the_tree.GetBranch("j1csvWoNoisyJets")
 *         #if not self.j1csvWoNoisyJets_branch and "j1csvWoNoisyJets" not in self.complained:
 *         if not self.j1csvWoNoisyJets_branch and "j1csvWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1csvWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1csvWoNoisyJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1csvWoNoisyJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L523_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L523_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3200
 *         #if not self.j1csvWoNoisyJets_branch and "j1csvWoNoisyJets" not in self.complained:
 *         if not self.j1csvWoNoisyJets_branch and "j1csvWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j1csvWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1csvWoNoisyJets")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3200, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3200, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__175, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3200, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3199
 *         self.j1csvWoNoisyJets_branch = the_tree.GetBranch("j1csvWoNoisyJets")
 *         #if not self.j1csvWoNoisyJets_branch and "j1csvWoNoisyJets" not in self.complained:
 *         if not self.j1csvWoNoisyJets_branch and "j1csvWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1csvWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1csvWoNoisyJets")
 */
    goto __pyx_L522;
  }

  /* "EMTree.pyx":3203
 *             #self.complained.add("j1csvWoNoisyJets")
 *         else:
 *             self.j1csvWoNoisyJets_branch.SetAddress(<void*>&self.j1csvWoNoisyJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1eta"
 */
  /*else*/ {
    __pyx_v_self->j1csvWoNoisyJets_branch->SetAddress(((void *)(&__pyx_v_self->j1csvWoNoisyJets_value)));
  }
  __pyx_L522:;

  /* "EMTree.pyx":3206
 * 
 *         #print "making j1eta"
 *         self.j1eta_branch = the_tree.GetBranch("j1eta")             # <<<<<<<<<<<<<<
 *         #if not self.j1eta_branch and "j1eta" not in self.complained:
 *         if not self.j1eta_branch and "j1eta":
 */
  __pyx_v_self->j1eta_branch = __pyx_v_the_tree->GetBranch(((char *)"j1eta"));

  /* "EMTree.pyx":3208
 *         self.j1eta_branch = the_tree.GetBranch("j1eta")
 *         #if not self.j1eta_branch and "j1eta" not in self.complained:
 *         if not self.j1eta_branch and "j1eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1eta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1eta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L526_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L526_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3209
 *         #if not self.j1eta_branch and "j1eta" not in self.complained:
 *         if not self.j1eta_branch and "j1eta":
 *             warnings.warn( "EMTree: Expected branch j1eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1eta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3209, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3209, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__176, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3209, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3208
 *         self.j1eta_branch = the_tree.GetBranch("j1eta")
 *         #if not self.j1eta_branch and "j1eta" not in self.complained:
 *         if not self.j1eta_branch and "j1eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1eta")
 */
    goto __pyx_L525;
  }

  /* "EMTree.pyx":3212
 *             #self.complained.add("j1eta")
 *         else:
 *             self.j1eta_branch.SetAddress(<void*>&self.j1eta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1etaWoNoisyJets"
 */
  /*else*/ {
    __pyx_v_self->j1eta_branch->SetAddress(((void *)(&__pyx_v_self->j1eta_value)));
  }
  __pyx_L525:;

  /* "EMTree.pyx":3215
 * 
 *         #print "making j1etaWoNoisyJets"
 *         self.j1etaWoNoisyJets_branch = the_tree.GetBranch("j1etaWoNoisyJets")             # <<<<<<<<<<<<<<
 *         #if not self.j1etaWoNoisyJets_branch and "j1etaWoNoisyJets" not in self.complained:
 *         if not self.j1etaWoNoisyJets_branch and "j1etaWoNoisyJets":
 */
  __pyx_v_self->j1etaWoNoisyJets_branch = __pyx_v_the_tree->GetBranch(((char *)"j1etaWoNoisyJets"));

  /* "EMTree.pyx":3217
 *         self.j1etaWoNoisyJets_branch = the_tree.GetBranch("j1etaWoNoisyJets")
 *         #if not self.j1etaWoNoisyJets_branch and "j1etaWoNoisyJets" not in self.complained:
 *         if not self.j1etaWoNoisyJets_branch and "j1etaWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1etaWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1etaWoNoisyJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1etaWoNoisyJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L529_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L529_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3218
 *         #if not self.j1etaWoNoisyJets_branch and "j1etaWoNoisyJets" not in self.complained:
 *         if not self.j1etaWoNoisyJets_branch and "j1etaWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j1etaWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1etaWoNoisyJets")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3218, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3218, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__177, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3218, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3217
 *         self.j1etaWoNoisyJets_branch = the_tree.GetBranch("j1etaWoNoisyJets")
 *         #if not self.j1etaWoNoisyJets_branch and "j1etaWoNoisyJets" not in self.complained:
 *         if not self.j1etaWoNoisyJets_branch and "j1etaWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1etaWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1etaWoNoisyJets")
 */
    goto __pyx_L528;
  }

  /* "EMTree.pyx":3221
 *             #self.complained.add("j1etaWoNoisyJets")
 *         else:
 *             self.j1etaWoNoisyJets_branch.SetAddress(<void*>&self.j1etaWoNoisyJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1hadronflavor"
 */
  /*else*/ {
    __pyx_v_self->j1etaWoNoisyJets_branch->SetAddress(((void *)(&__pyx_v_self->j1etaWoNoisyJets_value)));
  }
  __pyx_L528:;

  /* "EMTree.pyx":3224
 * 
 *         #print "making j1hadronflavor"
 *         self.j1hadronflavor_branch = the_tree.GetBranch("j1hadronflavor")             # <<<<<<<<<<<<<<
 *         #if not self.j1hadronflavor_branch and "j1hadronflavor" not in self.complained:
 *         if not self.j1hadronflavor_branch and "j1hadronflavor":
 */
  __pyx_v_self->j1hadronflavor_branch = __pyx_v_the_tree->GetBranch(((char *)"j1hadronflavor"));

  /* "EMTree.pyx":3226
 *         self.j1hadronflavor_branch = the_tree.GetBranch("j1hadronflavor")
 *         #if not self.j1hadronflavor_branch and "j1hadronflavor" not in self.complained:
 *         if not self.j1hadronflavor_branch and "j1hadronflavor":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1hadronflavor does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1hadronflavor")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1hadronflavor_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L532_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L532_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3227
 *         #if not self.j1hadronflavor_branch and "j1hadronflavor" not in self.complained:
 *         if not self.j1hadronflavor_branch and "j1hadronflavor":
 *             warnings.warn( "EMTree: Expected branch j1hadronflavor does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1hadronflavor")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3227, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3227, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__178, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3227, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3226
 *         self.j1hadronflavor_branch = the_tree.GetBranch("j1hadronflavor")
 *         #if not self.j1hadronflavor_branch and "j1hadronflavor" not in self.complained:
 *         if not self.j1hadronflavor_branch and "j1hadronflavor":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1hadronflavor does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1hadronflavor")
 */
    goto __pyx_L531;
  }

  /* "EMTree.pyx":3230
 *             #self.complained.add("j1hadronflavor")
 *         else:
 *             self.j1hadronflavor_branch.SetAddress(<void*>&self.j1hadronflavor_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1hadronflavorWoNoisyJets"
 */
  /*else*/ {
    __pyx_v_self->j1hadronflavor_branch->SetAddress(((void *)(&__pyx_v_self->j1hadronflavor_value)));
  }
  __pyx_L531:;

  /* "EMTree.pyx":3233
 * 
 *         #print "making j1hadronflavorWoNoisyJets"
 *         self.j1hadronflavorWoNoisyJets_branch = the_tree.GetBranch("j1hadronflavorWoNoisyJets")             # <<<<<<<<<<<<<<
 *         #if not self.j1hadronflavorWoNoisyJets_branch and "j1hadronflavorWoNoisyJets" not in self.complained:
 *         if not self.j1hadronflavorWoNoisyJets_branch and "j1hadronflavorWoNoisyJets":
 */
  __pyx_v_self->j1hadronflavorWoNoisyJets_branch = __pyx_v_the_tree->GetBranch(((char *)"j1hadronflavorWoNoisyJets"));

  /* "EMTree.pyx":3235
 *         self.j1hadronflavorWoNoisyJets_branch = the_tree.GetBranch("j1hadronflavorWoNoisyJets")
 *         #if not self.j1hadronflavorWoNoisyJets_branch and "j1hadronflavorWoNoisyJets" not in self.complained:
 *         if not self.j1hadronflavorWoNoisyJets_branch and "j1hadronflavorWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1hadronflavorWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1hadronflavorWoNoisyJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1hadronflavorWoNoisyJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L535_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L535_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3236
 *         #if not self.j1hadronflavorWoNoisyJets_branch and "j1hadronflavorWoNoisyJets" not in self.complained:
 *         if not self.j1hadronflavorWoNoisyJets_branch and "j1hadronflavorWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j1hadronflavorWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1hadronflavorWoNoisyJets")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3236, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3236, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__179, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3236, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3235
 *         self.j1hadronflavorWoNoisyJets_branch = the_tree.GetBranch("j1hadronflavorWoNoisyJets")
 *         #if not self.j1hadronflavorWoNoisyJets_branch and "j1hadronflavorWoNoisyJets" not in self.complained:
 *         if not self.j1hadronflavorWoNoisyJets_branch and "j1hadronflavorWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1hadronflavorWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1hadronflavorWoNoisyJets")
 */
    goto __pyx_L534;
  }

  /* "EMTree.pyx":3239
 *             #self.complained.add("j1hadronflavorWoNoisyJets")
 *         else:
 *             self.j1hadronflavorWoNoisyJets_branch.SetAddress(<void*>&self.j1hadronflavorWoNoisyJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1phi"
 */
  /*else*/ {
    __pyx_v_self->j1hadronflavorWoNoisyJets_branch->SetAddress(((void *)(&__pyx_v_self->j1hadronflavorWoNoisyJets_value)));
  }
  __pyx_L534:;

  /* "EMTree.pyx":3242
 * 
 *         #print "making j1phi"
 *         self.j1phi_branch = the_tree.GetBranch("j1phi")             # <<<<<<<<<<<<<<
 *         #if not self.j1phi_branch and "j1phi" not in self.complained:
 *         if not self.j1phi_branch and "j1phi":
 */
  __pyx_v_self->j1phi_branch = __pyx_v_the_tree->GetBranch(((char *)"j1phi"));

  /* "EMTree.pyx":3244
 *         self.j1phi_branch = the_tree.GetBranch("j1phi")
 *         #if not self.j1phi_branch and "j1phi" not in self.complained:
 *         if not self.j1phi_branch and "j1phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1phi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1phi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L538_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L538_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3245
 *         #if not self.j1phi_branch and "j1phi" not in self.complained:
 *         if not self.j1phi_branch and "j1phi":
 *             warnings.warn( "EMTree: Expected branch j1phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1phi")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3245, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3245, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__180, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3245, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3244
 *         self.j1phi_branch = the_tree.GetBranch("j1phi")
 *         #if not self.j1phi_branch and "j1phi" not in self.complained:
 *         if not self.j1phi_branch and "j1phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1phi")
 */
    goto __pyx_L537;
  }

  /* "EMTree.pyx":3248
 *             #self.complained.add("j1phi")
 *         else:
 *             self.j1phi_branch.SetAddress(<void*>&self.j1phi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1phiWoNoisyJets"
 */
  /*else*/ {
    __pyx_v_self->j1phi_branch->SetAddress(((void *)(&__pyx_v_self->j1phi_value)));
  }
  __pyx_L537:;

  /* "EMTree.pyx":3251
 * 
 *         #print "making j1phiWoNoisyJets"
 *         self.j1phiWoNoisyJets_branch = the_tree.GetBranch("j1phiWoNoisyJets")             # <<<<<<<<<<<<<<
 *         #if not self.j1phiWoNoisyJets_branch and "j1phiWoNoisyJets" not in self.complained:
 *         if not self.j1phiWoNoisyJets_branch and "j1phiWoNoisyJets":
 */
  __pyx_v_self->j1phiWoNoisyJets_branch = __pyx_v_the_tree->GetBranch(((char *)"j1phiWoNoisyJets"));

  /* "EMTree.pyx":3253
 *         self.j1phiWoNoisyJets_branch = the_tree.GetBranch("j1phiWoNoisyJets")
 *         #if not self.j1phiWoNoisyJets_branch and "j1phiWoNoisyJets" not in self.complained:
 *         if not self.j1phiWoNoisyJets_branch and "j1phiWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1phiWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1phiWoNoisyJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1phiWoNoisyJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L541_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L541_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3254
 *         #if not self.j1phiWoNoisyJets_branch and "j1phiWoNoisyJets" not in self.complained:
 *         if not self.j1phiWoNoisyJets_branch and "j1phiWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j1phiWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1phiWoNoisyJets")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3254, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3254, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__181, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3254, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3253
 *         self.j1phiWoNoisyJets_branch = the_tree.GetBranch("j1phiWoNoisyJets")
 *         #if not self.j1phiWoNoisyJets_branch and "j1phiWoNoisyJets" not in self.complained:
 *         if not self.j1phiWoNoisyJets_branch and "j1phiWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1phiWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1phiWoNoisyJets")
 */
    goto __pyx_L540;
  }

  /* "EMTree.pyx":3257
 *             #self.complained.add("j1phiWoNoisyJets")
 *         else:
 *             self.j1phiWoNoisyJets_branch.SetAddress(<void*>&self.j1phiWoNoisyJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1pt"
 */
  /*else*/ {
    __pyx_v_self->j1phiWoNoisyJets_branch->SetAddress(((void *)(&__pyx_v_self->j1phiWoNoisyJets_value)));
  }
  __pyx_L540:;

  /* "EMTree.pyx":3260
 * 
 *         #print "making j1pt"
 *         self.j1pt_branch = the_tree.GetBranch("j1pt")             # <<<<<<<<<<<<<<
 *         #if not self.j1pt_branch and "j1pt" not in self.complained:
 *         if not self.j1pt_branch and "j1pt":
 */
  __pyx_v_self->j1pt_branch = __pyx_v_the_tree->GetBranch(((char *)"j1pt"));

  /* "EMTree.pyx":3262
 *         self.j1pt_branch = the_tree.GetBranch("j1pt")
 *         #if not self.j1pt_branch and "j1pt" not in self.complained:
 *         if not self.j1pt_branch and "j1pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1pt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1pt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L544_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L544_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3263
 *         #if not self.j1pt_branch and "j1pt" not in self.complained:
 *         if not self.j1pt_branch and "j1pt":
 *             warnings.warn( "EMTree: Expected branch j1pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1pt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3263, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3263, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__182, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3263, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3262
 *         self.j1pt_branch = the_tree.GetBranch("j1pt")
 *         #if not self.j1pt_branch and "j1pt" not in self.complained:
 *         if not self.j1pt_branch and "j1pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1pt")
 */
    goto __pyx_L543;
  }

  /* "EMTree.pyx":3266
 *             #self.complained.add("j1pt")
 *         else:
 *             self.j1pt_branch.SetAddress(<void*>&self.j1pt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets"
 */
  /*else*/ {
    __pyx_v_self->j1pt_branch->SetAddress(((void *)(&__pyx_v_self->j1pt_value)));
  }
  __pyx_L543:;

  /* "EMTree.pyx":3269
 * 
 *         #print "making j1ptWoNoisyJets"
 *         self.j1ptWoNoisyJets_branch = the_tree.GetBranch("j1ptWoNoisyJets")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_branch and "j1ptWoNoisyJets" not in self.complained:
 *         if not self.j1ptWoNoisyJets_branch and "j1ptWoNoisyJets":
 */
  __pyx_v_self->j1ptWoNoisyJets_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets"));

  /* "EMTree.pyx":3271
 *         self.j1ptWoNoisyJets_branch = the_tree.GetBranch("j1ptWoNoisyJets")
 *         #if not self.j1ptWoNoisyJets_branch and "j1ptWoNoisyJets" not in self.complained:
 *         if not self.j1ptWoNoisyJets_branch and "j1ptWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L547_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L547_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3272
 *         #if not self.j1ptWoNoisyJets_branch and "j1ptWoNoisyJets" not in self.complained:
 *         if not self.j1ptWoNoisyJets_branch and "j1ptWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__183, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3271
 *         self.j1ptWoNoisyJets_branch = the_tree.GetBranch("j1ptWoNoisyJets")
 *         #if not self.j1ptWoNoisyJets_branch and "j1ptWoNoisyJets" not in self.complained:
 *         if not self.j1ptWoNoisyJets_branch and "j1ptWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets")
 */
    goto __pyx_L546;
  }

  /* "EMTree.pyx":3275
 *             #self.complained.add("j1ptWoNoisyJets")
 *         else:
 *             self.j1ptWoNoisyJets_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JERDown"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_value)));
  }
  __pyx_L546:;

  /* "EMTree.pyx":3278
 * 
 *         #print "making j1ptWoNoisyJets_JERDown"
 *         self.j1ptWoNoisyJets_JERDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JERDown")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JERDown_branch and "j1ptWoNoisyJets_JERDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JERDown_branch and "j1ptWoNoisyJets_JERDown":
 */
  __pyx_v_self->j1ptWoNoisyJets_JERDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JERDown"));

  /* "EMTree.pyx":3280
 *         self.j1ptWoNoisyJets_JERDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JERDown")
 *         #if not self.j1ptWoNoisyJets_JERDown_branch and "j1ptWoNoisyJets_JERDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JERDown_branch and "j1ptWoNoisyJets_JERDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JERDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JERDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JERDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L550_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L550_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3281
 *         #if not self.j1ptWoNoisyJets_JERDown_branch and "j1ptWoNoisyJets_JERDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JERDown_branch and "j1ptWoNoisyJets_JERDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JERDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JERDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3281, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3281, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__184, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3281, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3280
 *         self.j1ptWoNoisyJets_JERDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JERDown")
 *         #if not self.j1ptWoNoisyJets_JERDown_branch and "j1ptWoNoisyJets_JERDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JERDown_branch and "j1ptWoNoisyJets_JERDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JERDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JERDown")
 */
    goto __pyx_L549;
  }

  /* "EMTree.pyx":3284
 *             #self.complained.add("j1ptWoNoisyJets_JERDown")
 *         else:
 *             self.j1ptWoNoisyJets_JERDown_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JERDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JERUp"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JERDown_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JERDown_value)));
  }
  __pyx_L549:;

  /* "EMTree.pyx":3287
 * 
 *         #print "making j1ptWoNoisyJets_JERUp"
 *         self.j1ptWoNoisyJets_JERUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JERUp")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JERUp_branch and "j1ptWoNoisyJets_JERUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JERUp_branch and "j1ptWoNoisyJets_JERUp":
 */
  __pyx_v_self->j1ptWoNoisyJets_JERUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JERUp"));

  /* "EMTree.pyx":3289
 *         self.j1ptWoNoisyJets_JERUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JERUp")
 *         #if not self.j1ptWoNoisyJets_JERUp_branch and "j1ptWoNoisyJets_JERUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JERUp_branch and "j1ptWoNoisyJets_JERUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JERUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JERUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JERUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L553_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L553_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3290
 *         #if not self.j1ptWoNoisyJets_JERUp_branch and "j1ptWoNoisyJets_JERUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JERUp_branch and "j1ptWoNoisyJets_JERUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JERUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JERUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3290, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3290, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__185, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3290, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3289
 *         self.j1ptWoNoisyJets_JERUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JERUp")
 *         #if not self.j1ptWoNoisyJets_JERUp_branch and "j1ptWoNoisyJets_JERUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JERUp_branch and "j1ptWoNoisyJets_JERUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JERUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JERUp")
 */
    goto __pyx_L552;
  }

  /* "EMTree.pyx":3293
 *             #self.complained.add("j1ptWoNoisyJets_JERUp")
 *         else:
 *             self.j1ptWoNoisyJets_JERUp_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JERUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetAbsoluteDown"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JERUp_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JERUp_value)));
  }
  __pyx_L552:;

  /* "EMTree.pyx":3296
 * 
 *         #print "making j1ptWoNoisyJets_JetAbsoluteDown"
 *         self.j1ptWoNoisyJets_JetAbsoluteDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetAbsoluteDown")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteDown_branch and "j1ptWoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteDown_branch and "j1ptWoNoisyJets_JetAbsoluteDown":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetAbsoluteDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetAbsoluteDown"));

  /* "EMTree.pyx":3298
 *         self.j1ptWoNoisyJets_JetAbsoluteDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetAbsoluteDown")
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteDown_branch and "j1ptWoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteDown_branch and "j1ptWoNoisyJets_JetAbsoluteDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetAbsoluteDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L556_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L556_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3299
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteDown_branch and "j1ptWoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteDown_branch and "j1ptWoNoisyJets_JetAbsoluteDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3299, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3299, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__186, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3299, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3298
 *         self.j1ptWoNoisyJets_JetAbsoluteDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetAbsoluteDown")
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteDown_branch and "j1ptWoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteDown_branch and "j1ptWoNoisyJets_JetAbsoluteDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteDown")
 */
    goto __pyx_L555;
  }

  /* "EMTree.pyx":3302
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteDown")
 *         else:
 *             self.j1ptWoNoisyJets_JetAbsoluteDown_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetAbsoluteDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetAbsoluteUp"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetAbsoluteDown_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetAbsoluteDown_value)));
  }
  __pyx_L555:;

  /* "EMTree.pyx":3305
 * 
 *         #print "making j1ptWoNoisyJets_JetAbsoluteUp"
 *         self.j1ptWoNoisyJets_JetAbsoluteUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetAbsoluteUp")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteUp_branch and "j1ptWoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteUp_branch and "j1ptWoNoisyJets_JetAbsoluteUp":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetAbsoluteUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetAbsoluteUp"));

  /* "EMTree.pyx":3307
 *         self.j1ptWoNoisyJets_JetAbsoluteUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetAbsoluteUp")
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteUp_branch and "j1ptWoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteUp_branch and "j1ptWoNoisyJets_JetAbsoluteUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetAbsoluteUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L559_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L559_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3308
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteUp_branch and "j1ptWoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteUp_branch and "j1ptWoNoisyJets_JetAbsoluteUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__187, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3307
 *         self.j1ptWoNoisyJets_JetAbsoluteUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetAbsoluteUp")
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteUp_branch and "j1ptWoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteUp_branch and "j1ptWoNoisyJets_JetAbsoluteUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteUp")
 */
    goto __pyx_L558;
  }

  /* "EMTree.pyx":3311
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteUp")
 *         else:
 *             self.j1ptWoNoisyJets_JetAbsoluteUp_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetAbsoluteUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetAbsoluteyearDown"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetAbsoluteUp_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetAbsoluteUp_value)));
  }
  __pyx_L558:;

  /* "EMTree.pyx":3314
 * 
 *         #print "making j1ptWoNoisyJets_JetAbsoluteyearDown"
 *         self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetAbsoluteyearDown")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch and "j1ptWoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch and "j1ptWoNoisyJets_JetAbsoluteyearDown":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetAbsoluteyearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetAbsoluteyearDown"));

  /* "EMTree.pyx":3316
 *         self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetAbsoluteyearDown")
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch and "j1ptWoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch and "j1ptWoNoisyJets_JetAbsoluteyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteyearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetAbsoluteyearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L562_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L562_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3317
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch and "j1ptWoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch and "j1ptWoNoisyJets_JetAbsoluteyearDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteyearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3317, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3317, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__188, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3317, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3316
 *         self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetAbsoluteyearDown")
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch and "j1ptWoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch and "j1ptWoNoisyJets_JetAbsoluteyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteyearDown")
 */
    goto __pyx_L561;
  }

  /* "EMTree.pyx":3320
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteyearDown")
 *         else:
 *             self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetAbsoluteyearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetAbsoluteyearUp"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetAbsoluteyearDown_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetAbsoluteyearDown_value)));
  }
  __pyx_L561:;

  /* "EMTree.pyx":3323
 * 
 *         #print "making j1ptWoNoisyJets_JetAbsoluteyearUp"
 *         self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetAbsoluteyearUp")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch and "j1ptWoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch and "j1ptWoNoisyJets_JetAbsoluteyearUp":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetAbsoluteyearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetAbsoluteyearUp"));

  /* "EMTree.pyx":3325
 *         self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetAbsoluteyearUp")
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch and "j1ptWoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch and "j1ptWoNoisyJets_JetAbsoluteyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteyearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetAbsoluteyearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L565_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L565_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3326
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch and "j1ptWoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch and "j1ptWoNoisyJets_JetAbsoluteyearUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteyearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3326, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3326, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__189, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3326, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3325
 *         self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetAbsoluteyearUp")
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch and "j1ptWoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch and "j1ptWoNoisyJets_JetAbsoluteyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteyearUp")
 */
    goto __pyx_L564;
  }

  /* "EMTree.pyx":3329
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteyearUp")
 *         else:
 *             self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetAbsoluteyearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetBBEC1Down"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetAbsoluteyearUp_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetAbsoluteyearUp_value)));
  }
  __pyx_L564:;

  /* "EMTree.pyx":3332
 * 
 *         #print "making j1ptWoNoisyJets_JetBBEC1Down"
 *         self.j1ptWoNoisyJets_JetBBEC1Down_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetBBEC1Down")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetBBEC1Down_branch and "j1ptWoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1Down_branch and "j1ptWoNoisyJets_JetBBEC1Down":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetBBEC1Down_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetBBEC1Down"));

  /* "EMTree.pyx":3334
 *         self.j1ptWoNoisyJets_JetBBEC1Down_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetBBEC1Down")
 *         #if not self.j1ptWoNoisyJets_JetBBEC1Down_branch and "j1ptWoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1Down_branch and "j1ptWoNoisyJets_JetBBEC1Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1Down")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetBBEC1Down_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L568_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L568_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3335
 *         #if not self.j1ptWoNoisyJets_JetBBEC1Down_branch and "j1ptWoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1Down_branch and "j1ptWoNoisyJets_JetBBEC1Down":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1Down")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__190, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3334
 *         self.j1ptWoNoisyJets_JetBBEC1Down_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetBBEC1Down")
 *         #if not self.j1ptWoNoisyJets_JetBBEC1Down_branch and "j1ptWoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1Down_branch and "j1ptWoNoisyJets_JetBBEC1Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1Down")
 */
    goto __pyx_L567;
  }

  /* "EMTree.pyx":3338
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1Down")
 *         else:
 *             self.j1ptWoNoisyJets_JetBBEC1Down_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetBBEC1Down_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetBBEC1Up"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetBBEC1Down_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetBBEC1Down_value)));
  }
  __pyx_L567:;

  /* "EMTree.pyx":3341
 * 
 *         #print "making j1ptWoNoisyJets_JetBBEC1Up"
 *         self.j1ptWoNoisyJets_JetBBEC1Up_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetBBEC1Up")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetBBEC1Up_branch and "j1ptWoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1Up_branch and "j1ptWoNoisyJets_JetBBEC1Up":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetBBEC1Up_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetBBEC1Up"));

  /* "EMTree.pyx":3343
 *         self.j1ptWoNoisyJets_JetBBEC1Up_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetBBEC1Up")
 *         #if not self.j1ptWoNoisyJets_JetBBEC1Up_branch and "j1ptWoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1Up_branch and "j1ptWoNoisyJets_JetBBEC1Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1Up")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetBBEC1Up_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L571_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L571_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3344
 *         #if not self.j1ptWoNoisyJets_JetBBEC1Up_branch and "j1ptWoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1Up_branch and "j1ptWoNoisyJets_JetBBEC1Up":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1Up")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3344, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3344, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__191, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3344, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3343
 *         self.j1ptWoNoisyJets_JetBBEC1Up_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetBBEC1Up")
 *         #if not self.j1ptWoNoisyJets_JetBBEC1Up_branch and "j1ptWoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1Up_branch and "j1ptWoNoisyJets_JetBBEC1Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1Up")
 */
    goto __pyx_L570;
  }

  /* "EMTree.pyx":3347
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1Up")
 *         else:
 *             self.j1ptWoNoisyJets_JetBBEC1Up_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetBBEC1Up_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetBBEC1yearDown"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetBBEC1Up_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetBBEC1Up_value)));
  }
  __pyx_L570:;

  /* "EMTree.pyx":3350
 * 
 *         #print "making j1ptWoNoisyJets_JetBBEC1yearDown"
 *         self.j1ptWoNoisyJets_JetBBEC1yearDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetBBEC1yearDown")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetBBEC1yearDown_branch and "j1ptWoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1yearDown_branch and "j1ptWoNoisyJets_JetBBEC1yearDown":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetBBEC1yearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetBBEC1yearDown"));

  /* "EMTree.pyx":3352
 *         self.j1ptWoNoisyJets_JetBBEC1yearDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetBBEC1yearDown")
 *         #if not self.j1ptWoNoisyJets_JetBBEC1yearDown_branch and "j1ptWoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1yearDown_branch and "j1ptWoNoisyJets_JetBBEC1yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1yearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetBBEC1yearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L574_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L574_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3353
 *         #if not self.j1ptWoNoisyJets_JetBBEC1yearDown_branch and "j1ptWoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1yearDown_branch and "j1ptWoNoisyJets_JetBBEC1yearDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1yearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__192, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3352
 *         self.j1ptWoNoisyJets_JetBBEC1yearDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetBBEC1yearDown")
 *         #if not self.j1ptWoNoisyJets_JetBBEC1yearDown_branch and "j1ptWoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1yearDown_branch and "j1ptWoNoisyJets_JetBBEC1yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1yearDown")
 */
    goto __pyx_L573;
  }

  /* "EMTree.pyx":3356
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1yearDown")
 *         else:
 *             self.j1ptWoNoisyJets_JetBBEC1yearDown_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetBBEC1yearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetBBEC1yearUp"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetBBEC1yearDown_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetBBEC1yearDown_value)));
  }
  __pyx_L573:;

  /* "EMTree.pyx":3359
 * 
 *         #print "making j1ptWoNoisyJets_JetBBEC1yearUp"
 *         self.j1ptWoNoisyJets_JetBBEC1yearUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetBBEC1yearUp")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetBBEC1yearUp_branch and "j1ptWoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1yearUp_branch and "j1ptWoNoisyJets_JetBBEC1yearUp":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetBBEC1yearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetBBEC1yearUp"));

  /* "EMTree.pyx":3361
 *         self.j1ptWoNoisyJets_JetBBEC1yearUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetBBEC1yearUp")
 *         #if not self.j1ptWoNoisyJets_JetBBEC1yearUp_branch and "j1ptWoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1yearUp_branch and "j1ptWoNoisyJets_JetBBEC1yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1yearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetBBEC1yearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L577_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L577_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3362
 *         #if not self.j1ptWoNoisyJets_JetBBEC1yearUp_branch and "j1ptWoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1yearUp_branch and "j1ptWoNoisyJets_JetBBEC1yearUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1yearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3362, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3362, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__193, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3362, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3361
 *         self.j1ptWoNoisyJets_JetBBEC1yearUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetBBEC1yearUp")
 *         #if not self.j1ptWoNoisyJets_JetBBEC1yearUp_branch and "j1ptWoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1yearUp_branch and "j1ptWoNoisyJets_JetBBEC1yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1yearUp")
 */
    goto __pyx_L576;
  }

  /* "EMTree.pyx":3365
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1yearUp")
 *         else:
 *             self.j1ptWoNoisyJets_JetBBEC1yearUp_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetBBEC1yearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetEC2Down"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetBBEC1yearUp_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetBBEC1yearUp_value)));
  }
  __pyx_L576:;

  /* "EMTree.pyx":3368
 * 
 *         #print "making j1ptWoNoisyJets_JetEC2Down"
 *         self.j1ptWoNoisyJets_JetEC2Down_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetEC2Down")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetEC2Down_branch and "j1ptWoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2Down_branch and "j1ptWoNoisyJets_JetEC2Down":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetEC2Down_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetEC2Down"));

  /* "EMTree.pyx":3370
 *         self.j1ptWoNoisyJets_JetEC2Down_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetEC2Down")
 *         #if not self.j1ptWoNoisyJets_JetEC2Down_branch and "j1ptWoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2Down_branch and "j1ptWoNoisyJets_JetEC2Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2Down")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetEC2Down_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L580_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L580_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3371
 *         #if not self.j1ptWoNoisyJets_JetEC2Down_branch and "j1ptWoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2Down_branch and "j1ptWoNoisyJets_JetEC2Down":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2Down")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3371, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3371, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__194, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3371, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3370
 *         self.j1ptWoNoisyJets_JetEC2Down_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetEC2Down")
 *         #if not self.j1ptWoNoisyJets_JetEC2Down_branch and "j1ptWoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2Down_branch and "j1ptWoNoisyJets_JetEC2Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2Down")
 */
    goto __pyx_L579;
  }

  /* "EMTree.pyx":3374
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2Down")
 *         else:
 *             self.j1ptWoNoisyJets_JetEC2Down_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetEC2Down_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetEC2Up"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetEC2Down_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetEC2Down_value)));
  }
  __pyx_L579:;

  /* "EMTree.pyx":3377
 * 
 *         #print "making j1ptWoNoisyJets_JetEC2Up"
 *         self.j1ptWoNoisyJets_JetEC2Up_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetEC2Up")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetEC2Up_branch and "j1ptWoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2Up_branch and "j1ptWoNoisyJets_JetEC2Up":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetEC2Up_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetEC2Up"));

  /* "EMTree.pyx":3379
 *         self.j1ptWoNoisyJets_JetEC2Up_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetEC2Up")
 *         #if not self.j1ptWoNoisyJets_JetEC2Up_branch and "j1ptWoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2Up_branch and "j1ptWoNoisyJets_JetEC2Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2Up")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetEC2Up_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L583_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L583_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3380
 *         #if not self.j1ptWoNoisyJets_JetEC2Up_branch and "j1ptWoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2Up_branch and "j1ptWoNoisyJets_JetEC2Up":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2Up")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3380, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3380, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__195, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3380, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3379
 *         self.j1ptWoNoisyJets_JetEC2Up_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetEC2Up")
 *         #if not self.j1ptWoNoisyJets_JetEC2Up_branch and "j1ptWoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2Up_branch and "j1ptWoNoisyJets_JetEC2Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2Up")
 */
    goto __pyx_L582;
  }

  /* "EMTree.pyx":3383
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2Up")
 *         else:
 *             self.j1ptWoNoisyJets_JetEC2Up_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetEC2Up_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetEC2yearDown"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetEC2Up_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetEC2Up_value)));
  }
  __pyx_L582:;

  /* "EMTree.pyx":3386
 * 
 *         #print "making j1ptWoNoisyJets_JetEC2yearDown"
 *         self.j1ptWoNoisyJets_JetEC2yearDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetEC2yearDown")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetEC2yearDown_branch and "j1ptWoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2yearDown_branch and "j1ptWoNoisyJets_JetEC2yearDown":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetEC2yearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetEC2yearDown"));

  /* "EMTree.pyx":3388
 *         self.j1ptWoNoisyJets_JetEC2yearDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetEC2yearDown")
 *         #if not self.j1ptWoNoisyJets_JetEC2yearDown_branch and "j1ptWoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2yearDown_branch and "j1ptWoNoisyJets_JetEC2yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2yearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetEC2yearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L586_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L586_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3389
 *         #if not self.j1ptWoNoisyJets_JetEC2yearDown_branch and "j1ptWoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2yearDown_branch and "j1ptWoNoisyJets_JetEC2yearDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2yearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3389, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3389, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__196, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3389, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3388
 *         self.j1ptWoNoisyJets_JetEC2yearDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetEC2yearDown")
 *         #if not self.j1ptWoNoisyJets_JetEC2yearDown_branch and "j1ptWoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2yearDown_branch and "j1ptWoNoisyJets_JetEC2yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2yearDown")
 */
    goto __pyx_L585;
  }

  /* "EMTree.pyx":3392
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2yearDown")
 *         else:
 *             self.j1ptWoNoisyJets_JetEC2yearDown_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetEC2yearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetEC2yearUp"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetEC2yearDown_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetEC2yearDown_value)));
  }
  __pyx_L585:;

  /* "EMTree.pyx":3395
 * 
 *         #print "making j1ptWoNoisyJets_JetEC2yearUp"
 *         self.j1ptWoNoisyJets_JetEC2yearUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetEC2yearUp")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetEC2yearUp_branch and "j1ptWoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2yearUp_branch and "j1ptWoNoisyJets_JetEC2yearUp":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetEC2yearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetEC2yearUp"));

  /* "EMTree.pyx":3397
 *         self.j1ptWoNoisyJets_JetEC2yearUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetEC2yearUp")
 *         #if not self.j1ptWoNoisyJets_JetEC2yearUp_branch and "j1ptWoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2yearUp_branch and "j1ptWoNoisyJets_JetEC2yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2yearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetEC2yearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L589_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L589_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3398
 *         #if not self.j1ptWoNoisyJets_JetEC2yearUp_branch and "j1ptWoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2yearUp_branch and "j1ptWoNoisyJets_JetEC2yearUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2yearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__197, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3397
 *         self.j1ptWoNoisyJets_JetEC2yearUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetEC2yearUp")
 *         #if not self.j1ptWoNoisyJets_JetEC2yearUp_branch and "j1ptWoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2yearUp_branch and "j1ptWoNoisyJets_JetEC2yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2yearUp")
 */
    goto __pyx_L588;
  }

  /* "EMTree.pyx":3401
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2yearUp")
 *         else:
 *             self.j1ptWoNoisyJets_JetEC2yearUp_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetEC2yearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetFlavorQCDDown"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetEC2yearUp_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetEC2yearUp_value)));
  }
  __pyx_L588:;

  /* "EMTree.pyx":3404
 * 
 *         #print "making j1ptWoNoisyJets_JetFlavorQCDDown"
 *         self.j1ptWoNoisyJets_JetFlavorQCDDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetFlavorQCDDown")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetFlavorQCDDown_branch and "j1ptWoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetFlavorQCDDown_branch and "j1ptWoNoisyJets_JetFlavorQCDDown":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetFlavorQCDDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetFlavorQCDDown"));

  /* "EMTree.pyx":3406
 *         self.j1ptWoNoisyJets_JetFlavorQCDDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetFlavorQCDDown")
 *         #if not self.j1ptWoNoisyJets_JetFlavorQCDDown_branch and "j1ptWoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetFlavorQCDDown_branch and "j1ptWoNoisyJets_JetFlavorQCDDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetFlavorQCDDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetFlavorQCDDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L592_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L592_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3407
 *         #if not self.j1ptWoNoisyJets_JetFlavorQCDDown_branch and "j1ptWoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetFlavorQCDDown_branch and "j1ptWoNoisyJets_JetFlavorQCDDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetFlavorQCDDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3407, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3407, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__198, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3407, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3406
 *         self.j1ptWoNoisyJets_JetFlavorQCDDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetFlavorQCDDown")
 *         #if not self.j1ptWoNoisyJets_JetFlavorQCDDown_branch and "j1ptWoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetFlavorQCDDown_branch and "j1ptWoNoisyJets_JetFlavorQCDDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetFlavorQCDDown")
 */
    goto __pyx_L591;
  }

  /* "EMTree.pyx":3410
 *             #self.complained.add("j1ptWoNoisyJets_JetFlavorQCDDown")
 *         else:
 *             self.j1ptWoNoisyJets_JetFlavorQCDDown_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetFlavorQCDDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetFlavorQCDUp"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetFlavorQCDDown_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetFlavorQCDDown_value)));
  }
  __pyx_L591:;

  /* "EMTree.pyx":3413
 * 
 *         #print "making j1ptWoNoisyJets_JetFlavorQCDUp"
 *         self.j1ptWoNoisyJets_JetFlavorQCDUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetFlavorQCDUp")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetFlavorQCDUp_branch and "j1ptWoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetFlavorQCDUp_branch and "j1ptWoNoisyJets_JetFlavorQCDUp":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetFlavorQCDUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetFlavorQCDUp"));

  /* "EMTree.pyx":3415
 *         self.j1ptWoNoisyJets_JetFlavorQCDUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetFlavorQCDUp")
 *         #if not self.j1ptWoNoisyJets_JetFlavorQCDUp_branch and "j1ptWoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetFlavorQCDUp_branch and "j1ptWoNoisyJets_JetFlavorQCDUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetFlavorQCDUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetFlavorQCDUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L595_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L595_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3416
 *         #if not self.j1ptWoNoisyJets_JetFlavorQCDUp_branch and "j1ptWoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetFlavorQCDUp_branch and "j1ptWoNoisyJets_JetFlavorQCDUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetFlavorQCDUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3416, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3416, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__199, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3416, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3415
 *         self.j1ptWoNoisyJets_JetFlavorQCDUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetFlavorQCDUp")
 *         #if not self.j1ptWoNoisyJets_JetFlavorQCDUp_branch and "j1ptWoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetFlavorQCDUp_branch and "j1ptWoNoisyJets_JetFlavorQCDUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetFlavorQCDUp")
 */
    goto __pyx_L594;
  }

  /* "EMTree.pyx":3419
 *             #self.complained.add("j1ptWoNoisyJets_JetFlavorQCDUp")
 *         else:
 *             self.j1ptWoNoisyJets_JetFlavorQCDUp_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetFlavorQCDUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetHFDown"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetFlavorQCDUp_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetFlavorQCDUp_value)));
  }
  __pyx_L594:;

  /* "EMTree.pyx":3422
 * 
 *         #print "making j1ptWoNoisyJets_JetHFDown"
 *         self.j1ptWoNoisyJets_JetHFDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetHFDown")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetHFDown_branch and "j1ptWoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFDown_branch and "j1ptWoNoisyJets_JetHFDown":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetHFDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetHFDown"));

  /* "EMTree.pyx":3424
 *         self.j1ptWoNoisyJets_JetHFDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetHFDown")
 *         #if not self.j1ptWoNoisyJets_JetHFDown_branch and "j1ptWoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFDown_branch and "j1ptWoNoisyJets_JetHFDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetHFDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetHFDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L598_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L598_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3425
 *         #if not self.j1ptWoNoisyJets_JetHFDown_branch and "j1ptWoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFDown_branch and "j1ptWoNoisyJets_JetHFDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetHFDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3425, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3425, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__200, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3425, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3424
 *         self.j1ptWoNoisyJets_JetHFDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetHFDown")
 *         #if not self.j1ptWoNoisyJets_JetHFDown_branch and "j1ptWoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFDown_branch and "j1ptWoNoisyJets_JetHFDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetHFDown")
 */
    goto __pyx_L597;
  }

  /* "EMTree.pyx":3428
 *             #self.complained.add("j1ptWoNoisyJets_JetHFDown")
 *         else:
 *             self.j1ptWoNoisyJets_JetHFDown_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetHFDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetHFUp"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetHFDown_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetHFDown_value)));
  }
  __pyx_L597:;

  /* "EMTree.pyx":3431
 * 
 *         #print "making j1ptWoNoisyJets_JetHFUp"
 *         self.j1ptWoNoisyJets_JetHFUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetHFUp")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetHFUp_branch and "j1ptWoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFUp_branch and "j1ptWoNoisyJets_JetHFUp":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetHFUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetHFUp"));

  /* "EMTree.pyx":3433
 *         self.j1ptWoNoisyJets_JetHFUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetHFUp")
 *         #if not self.j1ptWoNoisyJets_JetHFUp_branch and "j1ptWoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFUp_branch and "j1ptWoNoisyJets_JetHFUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetHFUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetHFUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L601_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L601_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3434
 *         #if not self.j1ptWoNoisyJets_JetHFUp_branch and "j1ptWoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFUp_branch and "j1ptWoNoisyJets_JetHFUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetHFUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3434, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3434, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__201, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3434, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3433
 *         self.j1ptWoNoisyJets_JetHFUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetHFUp")
 *         #if not self.j1ptWoNoisyJets_JetHFUp_branch and "j1ptWoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFUp_branch and "j1ptWoNoisyJets_JetHFUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetHFUp")
 */
    goto __pyx_L600;
  }

  /* "EMTree.pyx":3437
 *             #self.complained.add("j1ptWoNoisyJets_JetHFUp")
 *         else:
 *             self.j1ptWoNoisyJets_JetHFUp_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetHFUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetHFyearDown"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetHFUp_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetHFUp_value)));
  }
  __pyx_L600:;

  /* "EMTree.pyx":3440
 * 
 *         #print "making j1ptWoNoisyJets_JetHFyearDown"
 *         self.j1ptWoNoisyJets_JetHFyearDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetHFyearDown")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetHFyearDown_branch and "j1ptWoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFyearDown_branch and "j1ptWoNoisyJets_JetHFyearDown":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetHFyearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetHFyearDown"));

  /* "EMTree.pyx":3442
 *         self.j1ptWoNoisyJets_JetHFyearDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetHFyearDown")
 *         #if not self.j1ptWoNoisyJets_JetHFyearDown_branch and "j1ptWoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFyearDown_branch and "j1ptWoNoisyJets_JetHFyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetHFyearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetHFyearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L604_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L604_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3443
 *         #if not self.j1ptWoNoisyJets_JetHFyearDown_branch and "j1ptWoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFyearDown_branch and "j1ptWoNoisyJets_JetHFyearDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetHFyearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3443, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3443, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__202, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3443, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3442
 *         self.j1ptWoNoisyJets_JetHFyearDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetHFyearDown")
 *         #if not self.j1ptWoNoisyJets_JetHFyearDown_branch and "j1ptWoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFyearDown_branch and "j1ptWoNoisyJets_JetHFyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetHFyearDown")
 */
    goto __pyx_L603;
  }

  /* "EMTree.pyx":3446
 *             #self.complained.add("j1ptWoNoisyJets_JetHFyearDown")
 *         else:
 *             self.j1ptWoNoisyJets_JetHFyearDown_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetHFyearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetHFyearUp"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetHFyearDown_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetHFyearDown_value)));
  }
  __pyx_L603:;

  /* "EMTree.pyx":3449
 * 
 *         #print "making j1ptWoNoisyJets_JetHFyearUp"
 *         self.j1ptWoNoisyJets_JetHFyearUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetHFyearUp")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetHFyearUp_branch and "j1ptWoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFyearUp_branch and "j1ptWoNoisyJets_JetHFyearUp":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetHFyearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetHFyearUp"));

  /* "EMTree.pyx":3451
 *         self.j1ptWoNoisyJets_JetHFyearUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetHFyearUp")
 *         #if not self.j1ptWoNoisyJets_JetHFyearUp_branch and "j1ptWoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFyearUp_branch and "j1ptWoNoisyJets_JetHFyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetHFyearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetHFyearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L607_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L607_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3452
 *         #if not self.j1ptWoNoisyJets_JetHFyearUp_branch and "j1ptWoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFyearUp_branch and "j1ptWoNoisyJets_JetHFyearUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetHFyearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3452, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3452, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__203, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3452, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3451
 *         self.j1ptWoNoisyJets_JetHFyearUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetHFyearUp")
 *         #if not self.j1ptWoNoisyJets_JetHFyearUp_branch and "j1ptWoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFyearUp_branch and "j1ptWoNoisyJets_JetHFyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetHFyearUp")
 */
    goto __pyx_L606;
  }

  /* "EMTree.pyx":3455
 *             #self.complained.add("j1ptWoNoisyJets_JetHFyearUp")
 *         else:
 *             self.j1ptWoNoisyJets_JetHFyearUp_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetHFyearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetRelativeBalDown"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetHFyearUp_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetHFyearUp_value)));
  }
  __pyx_L606:;

  /* "EMTree.pyx":3458
 * 
 *         #print "making j1ptWoNoisyJets_JetRelativeBalDown"
 *         self.j1ptWoNoisyJets_JetRelativeBalDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetRelativeBalDown")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetRelativeBalDown_branch and "j1ptWoNoisyJets_JetRelativeBalDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeBalDown_branch and "j1ptWoNoisyJets_JetRelativeBalDown":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetRelativeBalDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetRelativeBalDown"));

  /* "EMTree.pyx":3460
 *         self.j1ptWoNoisyJets_JetRelativeBalDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetRelativeBalDown")
 *         #if not self.j1ptWoNoisyJets_JetRelativeBalDown_branch and "j1ptWoNoisyJets_JetRelativeBalDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeBalDown_branch and "j1ptWoNoisyJets_JetRelativeBalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeBalDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetRelativeBalDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L610_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L610_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3461
 *         #if not self.j1ptWoNoisyJets_JetRelativeBalDown_branch and "j1ptWoNoisyJets_JetRelativeBalDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeBalDown_branch and "j1ptWoNoisyJets_JetRelativeBalDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeBalDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3461, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3461, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__204, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3461, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3460
 *         self.j1ptWoNoisyJets_JetRelativeBalDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetRelativeBalDown")
 *         #if not self.j1ptWoNoisyJets_JetRelativeBalDown_branch and "j1ptWoNoisyJets_JetRelativeBalDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeBalDown_branch and "j1ptWoNoisyJets_JetRelativeBalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeBalDown")
 */
    goto __pyx_L609;
  }

  /* "EMTree.pyx":3464
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeBalDown")
 *         else:
 *             self.j1ptWoNoisyJets_JetRelativeBalDown_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetRelativeBalDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetRelativeBalUp"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetRelativeBalDown_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetRelativeBalDown_value)));
  }
  __pyx_L609:;

  /* "EMTree.pyx":3467
 * 
 *         #print "making j1ptWoNoisyJets_JetRelativeBalUp"
 *         self.j1ptWoNoisyJets_JetRelativeBalUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetRelativeBalUp")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetRelativeBalUp_branch and "j1ptWoNoisyJets_JetRelativeBalUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeBalUp_branch and "j1ptWoNoisyJets_JetRelativeBalUp":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetRelativeBalUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetRelativeBalUp"));

  /* "EMTree.pyx":3469
 *         self.j1ptWoNoisyJets_JetRelativeBalUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetRelativeBalUp")
 *         #if not self.j1ptWoNoisyJets_JetRelativeBalUp_branch and "j1ptWoNoisyJets_JetRelativeBalUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeBalUp_branch and "j1ptWoNoisyJets_JetRelativeBalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeBalUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetRelativeBalUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L613_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L613_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3470
 *         #if not self.j1ptWoNoisyJets_JetRelativeBalUp_branch and "j1ptWoNoisyJets_JetRelativeBalUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeBalUp_branch and "j1ptWoNoisyJets_JetRelativeBalUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeBalUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3470, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3470, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__205, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3470, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3469
 *         self.j1ptWoNoisyJets_JetRelativeBalUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetRelativeBalUp")
 *         #if not self.j1ptWoNoisyJets_JetRelativeBalUp_branch and "j1ptWoNoisyJets_JetRelativeBalUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeBalUp_branch and "j1ptWoNoisyJets_JetRelativeBalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeBalUp")
 */
    goto __pyx_L612;
  }

  /* "EMTree.pyx":3473
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeBalUp")
 *         else:
 *             self.j1ptWoNoisyJets_JetRelativeBalUp_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetRelativeBalUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetRelativeSampleDown"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetRelativeBalUp_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetRelativeBalUp_value)));
  }
  __pyx_L612:;

  /* "EMTree.pyx":3476
 * 
 *         #print "making j1ptWoNoisyJets_JetRelativeSampleDown"
 *         self.j1ptWoNoisyJets_JetRelativeSampleDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetRelativeSampleDown")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetRelativeSampleDown_branch and "j1ptWoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeSampleDown_branch and "j1ptWoNoisyJets_JetRelativeSampleDown":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetRelativeSampleDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetRelativeSampleDown"));

  /* "EMTree.pyx":3478
 *         self.j1ptWoNoisyJets_JetRelativeSampleDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetRelativeSampleDown")
 *         #if not self.j1ptWoNoisyJets_JetRelativeSampleDown_branch and "j1ptWoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeSampleDown_branch and "j1ptWoNoisyJets_JetRelativeSampleDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeSampleDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetRelativeSampleDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L616_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L616_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3479
 *         #if not self.j1ptWoNoisyJets_JetRelativeSampleDown_branch and "j1ptWoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeSampleDown_branch and "j1ptWoNoisyJets_JetRelativeSampleDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeSampleDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3479, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3479, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__206, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3479, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3478
 *         self.j1ptWoNoisyJets_JetRelativeSampleDown_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetRelativeSampleDown")
 *         #if not self.j1ptWoNoisyJets_JetRelativeSampleDown_branch and "j1ptWoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeSampleDown_branch and "j1ptWoNoisyJets_JetRelativeSampleDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeSampleDown")
 */
    goto __pyx_L615;
  }

  /* "EMTree.pyx":3482
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeSampleDown")
 *         else:
 *             self.j1ptWoNoisyJets_JetRelativeSampleDown_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetRelativeSampleDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j1ptWoNoisyJets_JetRelativeSampleUp"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetRelativeSampleDown_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetRelativeSampleDown_value)));
  }
  __pyx_L615:;

  /* "EMTree.pyx":3485
 * 
 *         #print "making j1ptWoNoisyJets_JetRelativeSampleUp"
 *         self.j1ptWoNoisyJets_JetRelativeSampleUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetRelativeSampleUp")             # <<<<<<<<<<<<<<
 *         #if not self.j1ptWoNoisyJets_JetRelativeSampleUp_branch and "j1ptWoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeSampleUp_branch and "j1ptWoNoisyJets_JetRelativeSampleUp":
 */
  __pyx_v_self->j1ptWoNoisyJets_JetRelativeSampleUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j1ptWoNoisyJets_JetRelativeSampleUp"));

  /* "EMTree.pyx":3487
 *         self.j1ptWoNoisyJets_JetRelativeSampleUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetRelativeSampleUp")
 *         #if not self.j1ptWoNoisyJets_JetRelativeSampleUp_branch and "j1ptWoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeSampleUp_branch and "j1ptWoNoisyJets_JetRelativeSampleUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeSampleUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j1ptWoNoisyJets_JetRelativeSampleUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L619_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L619_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3488
 *         #if not self.j1ptWoNoisyJets_JetRelativeSampleUp_branch and "j1ptWoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeSampleUp_branch and "j1ptWoNoisyJets_JetRelativeSampleUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeSampleUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3488, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3488, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__207, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3488, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3487
 *         self.j1ptWoNoisyJets_JetRelativeSampleUp_branch = the_tree.GetBranch("j1ptWoNoisyJets_JetRelativeSampleUp")
 *         #if not self.j1ptWoNoisyJets_JetRelativeSampleUp_branch and "j1ptWoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeSampleUp_branch and "j1ptWoNoisyJets_JetRelativeSampleUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeSampleUp")
 */
    goto __pyx_L618;
  }

  /* "EMTree.pyx":3491
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeSampleUp")
 *         else:
 *             self.j1ptWoNoisyJets_JetRelativeSampleUp_branch.SetAddress(<void*>&self.j1ptWoNoisyJets_JetRelativeSampleUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2csv"
 */
  /*else*/ {
    __pyx_v_self->j1ptWoNoisyJets_JetRelativeSampleUp_branch->SetAddress(((void *)(&__pyx_v_self->j1ptWoNoisyJets_JetRelativeSampleUp_value)));
  }
  __pyx_L618:;

  /* "EMTree.pyx":3494
 * 
 *         #print "making j2csv"
 *         self.j2csv_branch = the_tree.GetBranch("j2csv")             # <<<<<<<<<<<<<<
 *         #if not self.j2csv_branch and "j2csv" not in self.complained:
 *         if not self.j2csv_branch and "j2csv":
 */
  __pyx_v_self->j2csv_branch = __pyx_v_the_tree->GetBranch(((char *)"j2csv"));

  /* "EMTree.pyx":3496
 *         self.j2csv_branch = the_tree.GetBranch("j2csv")
 *         #if not self.j2csv_branch and "j2csv" not in self.complained:
 *         if not self.j2csv_branch and "j2csv":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2csv does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2csv")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2csv_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L622_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L622_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3497
 *         #if not self.j2csv_branch and "j2csv" not in self.complained:
 *         if not self.j2csv_branch and "j2csv":
 *             warnings.warn( "EMTree: Expected branch j2csv does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2csv")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3497, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3497, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__208, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3497, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3496
 *         self.j2csv_branch = the_tree.GetBranch("j2csv")
 *         #if not self.j2csv_branch and "j2csv" not in self.complained:
 *         if not self.j2csv_branch and "j2csv":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2csv does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2csv")
 */
    goto __pyx_L621;
  }

  /* "EMTree.pyx":3500
 *             #self.complained.add("j2csv")
 *         else:
 *             self.j2csv_branch.SetAddress(<void*>&self.j2csv_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2csvWoNoisyJets"
 */
  /*else*/ {
    __pyx_v_self->j2csv_branch->SetAddress(((void *)(&__pyx_v_self->j2csv_value)));
  }
  __pyx_L621:;

  /* "EMTree.pyx":3503
 * 
 *         #print "making j2csvWoNoisyJets"
 *         self.j2csvWoNoisyJets_branch = the_tree.GetBranch("j2csvWoNoisyJets")             # <<<<<<<<<<<<<<
 *         #if not self.j2csvWoNoisyJets_branch and "j2csvWoNoisyJets" not in self.complained:
 *         if not self.j2csvWoNoisyJets_branch and "j2csvWoNoisyJets":
 */
  __pyx_v_self->j2csvWoNoisyJets_branch = __pyx_v_the_tree->GetBranch(((char *)"j2csvWoNoisyJets"));

  /* "EMTree.pyx":3505
 *         self.j2csvWoNoisyJets_branch = the_tree.GetBranch("j2csvWoNoisyJets")
 *         #if not self.j2csvWoNoisyJets_branch and "j2csvWoNoisyJets" not in self.complained:
 *         if not self.j2csvWoNoisyJets_branch and "j2csvWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2csvWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2csvWoNoisyJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2csvWoNoisyJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L625_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L625_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3506
 *         #if not self.j2csvWoNoisyJets_branch and "j2csvWoNoisyJets" not in self.complained:
 *         if not self.j2csvWoNoisyJets_branch and "j2csvWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j2csvWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2csvWoNoisyJets")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__209, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3505
 *         self.j2csvWoNoisyJets_branch = the_tree.GetBranch("j2csvWoNoisyJets")
 *         #if not self.j2csvWoNoisyJets_branch and "j2csvWoNoisyJets" not in self.complained:
 *         if not self.j2csvWoNoisyJets_branch and "j2csvWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2csvWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2csvWoNoisyJets")
 */
    goto __pyx_L624;
  }

  /* "EMTree.pyx":3509
 *             #self.complained.add("j2csvWoNoisyJets")
 *         else:
 *             self.j2csvWoNoisyJets_branch.SetAddress(<void*>&self.j2csvWoNoisyJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2eta"
 */
  /*else*/ {
    __pyx_v_self->j2csvWoNoisyJets_branch->SetAddress(((void *)(&__pyx_v_self->j2csvWoNoisyJets_value)));
  }
  __pyx_L624:;

  /* "EMTree.pyx":3512
 * 
 *         #print "making j2eta"
 *         self.j2eta_branch = the_tree.GetBranch("j2eta")             # <<<<<<<<<<<<<<
 *         #if not self.j2eta_branch and "j2eta" not in self.complained:
 *         if not self.j2eta_branch and "j2eta":
 */
  __pyx_v_self->j2eta_branch = __pyx_v_the_tree->GetBranch(((char *)"j2eta"));

  /* "EMTree.pyx":3514
 *         self.j2eta_branch = the_tree.GetBranch("j2eta")
 *         #if not self.j2eta_branch and "j2eta" not in self.complained:
 *         if not self.j2eta_branch and "j2eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2eta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2eta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L628_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L628_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3515
 *         #if not self.j2eta_branch and "j2eta" not in self.complained:
 *         if not self.j2eta_branch and "j2eta":
 *             warnings.warn( "EMTree: Expected branch j2eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2eta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3515, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3515, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__210, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3515, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3514
 *         self.j2eta_branch = the_tree.GetBranch("j2eta")
 *         #if not self.j2eta_branch and "j2eta" not in self.complained:
 *         if not self.j2eta_branch and "j2eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2eta")
 */
    goto __pyx_L627;
  }

  /* "EMTree.pyx":3518
 *             #self.complained.add("j2eta")
 *         else:
 *             self.j2eta_branch.SetAddress(<void*>&self.j2eta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2etaWoNoisyJets"
 */
  /*else*/ {
    __pyx_v_self->j2eta_branch->SetAddress(((void *)(&__pyx_v_self->j2eta_value)));
  }
  __pyx_L627:;

  /* "EMTree.pyx":3521
 * 
 *         #print "making j2etaWoNoisyJets"
 *         self.j2etaWoNoisyJets_branch = the_tree.GetBranch("j2etaWoNoisyJets")             # <<<<<<<<<<<<<<
 *         #if not self.j2etaWoNoisyJets_branch and "j2etaWoNoisyJets" not in self.complained:
 *         if not self.j2etaWoNoisyJets_branch and "j2etaWoNoisyJets":
 */
  __pyx_v_self->j2etaWoNoisyJets_branch = __pyx_v_the_tree->GetBranch(((char *)"j2etaWoNoisyJets"));

  /* "EMTree.pyx":3523
 *         self.j2etaWoNoisyJets_branch = the_tree.GetBranch("j2etaWoNoisyJets")
 *         #if not self.j2etaWoNoisyJets_branch and "j2etaWoNoisyJets" not in self.complained:
 *         if not self.j2etaWoNoisyJets_branch and "j2etaWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2etaWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2etaWoNoisyJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2etaWoNoisyJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L631_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L631_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3524
 *         #if not self.j2etaWoNoisyJets_branch and "j2etaWoNoisyJets" not in self.complained:
 *         if not self.j2etaWoNoisyJets_branch and "j2etaWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j2etaWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2etaWoNoisyJets")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3524, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3524, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__211, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3524, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3523
 *         self.j2etaWoNoisyJets_branch = the_tree.GetBranch("j2etaWoNoisyJets")
 *         #if not self.j2etaWoNoisyJets_branch and "j2etaWoNoisyJets" not in self.complained:
 *         if not self.j2etaWoNoisyJets_branch and "j2etaWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2etaWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2etaWoNoisyJets")
 */
    goto __pyx_L630;
  }

  /* "EMTree.pyx":3527
 *             #self.complained.add("j2etaWoNoisyJets")
 *         else:
 *             self.j2etaWoNoisyJets_branch.SetAddress(<void*>&self.j2etaWoNoisyJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2hadronflavor"
 */
  /*else*/ {
    __pyx_v_self->j2etaWoNoisyJets_branch->SetAddress(((void *)(&__pyx_v_self->j2etaWoNoisyJets_value)));
  }
  __pyx_L630:;

  /* "EMTree.pyx":3530
 * 
 *         #print "making j2hadronflavor"
 *         self.j2hadronflavor_branch = the_tree.GetBranch("j2hadronflavor")             # <<<<<<<<<<<<<<
 *         #if not self.j2hadronflavor_branch and "j2hadronflavor" not in self.complained:
 *         if not self.j2hadronflavor_branch and "j2hadronflavor":
 */
  __pyx_v_self->j2hadronflavor_branch = __pyx_v_the_tree->GetBranch(((char *)"j2hadronflavor"));

  /* "EMTree.pyx":3532
 *         self.j2hadronflavor_branch = the_tree.GetBranch("j2hadronflavor")
 *         #if not self.j2hadronflavor_branch and "j2hadronflavor" not in self.complained:
 *         if not self.j2hadronflavor_branch and "j2hadronflavor":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2hadronflavor does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2hadronflavor")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2hadronflavor_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L634_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L634_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3533
 *         #if not self.j2hadronflavor_branch and "j2hadronflavor" not in self.complained:
 *         if not self.j2hadronflavor_branch and "j2hadronflavor":
 *             warnings.warn( "EMTree: Expected branch j2hadronflavor does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2hadronflavor")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3533, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3533, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__212, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3533, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3532
 *         self.j2hadronflavor_branch = the_tree.GetBranch("j2hadronflavor")
 *         #if not self.j2hadronflavor_branch and "j2hadronflavor" not in self.complained:
 *         if not self.j2hadronflavor_branch and "j2hadronflavor":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2hadronflavor does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2hadronflavor")
 */
    goto __pyx_L633;
  }

  /* "EMTree.pyx":3536
 *             #self.complained.add("j2hadronflavor")
 *         else:
 *             self.j2hadronflavor_branch.SetAddress(<void*>&self.j2hadronflavor_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2hadronflavorWoNoisyJets"
 */
  /*else*/ {
    __pyx_v_self->j2hadronflavor_branch->SetAddress(((void *)(&__pyx_v_self->j2hadronflavor_value)));
  }
  __pyx_L633:;

  /* "EMTree.pyx":3539
 * 
 *         #print "making j2hadronflavorWoNoisyJets"
 *         self.j2hadronflavorWoNoisyJets_branch = the_tree.GetBranch("j2hadronflavorWoNoisyJets")             # <<<<<<<<<<<<<<
 *         #if not self.j2hadronflavorWoNoisyJets_branch and "j2hadronflavorWoNoisyJets" not in self.complained:
 *         if not self.j2hadronflavorWoNoisyJets_branch and "j2hadronflavorWoNoisyJets":
 */
  __pyx_v_self->j2hadronflavorWoNoisyJets_branch = __pyx_v_the_tree->GetBranch(((char *)"j2hadronflavorWoNoisyJets"));

  /* "EMTree.pyx":3541
 *         self.j2hadronflavorWoNoisyJets_branch = the_tree.GetBranch("j2hadronflavorWoNoisyJets")
 *         #if not self.j2hadronflavorWoNoisyJets_branch and "j2hadronflavorWoNoisyJets" not in self.complained:
 *         if not self.j2hadronflavorWoNoisyJets_branch and "j2hadronflavorWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2hadronflavorWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2hadronflavorWoNoisyJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2hadronflavorWoNoisyJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L637_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L637_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3542
 *         #if not self.j2hadronflavorWoNoisyJets_branch and "j2hadronflavorWoNoisyJets" not in self.complained:
 *         if not self.j2hadronflavorWoNoisyJets_branch and "j2hadronflavorWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j2hadronflavorWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2hadronflavorWoNoisyJets")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3542, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3542, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__213, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3542, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3541
 *         self.j2hadronflavorWoNoisyJets_branch = the_tree.GetBranch("j2hadronflavorWoNoisyJets")
 *         #if not self.j2hadronflavorWoNoisyJets_branch and "j2hadronflavorWoNoisyJets" not in self.complained:
 *         if not self.j2hadronflavorWoNoisyJets_branch and "j2hadronflavorWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2hadronflavorWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2hadronflavorWoNoisyJets")
 */
    goto __pyx_L636;
  }

  /* "EMTree.pyx":3545
 *             #self.complained.add("j2hadronflavorWoNoisyJets")
 *         else:
 *             self.j2hadronflavorWoNoisyJets_branch.SetAddress(<void*>&self.j2hadronflavorWoNoisyJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2phi"
 */
  /*else*/ {
    __pyx_v_self->j2hadronflavorWoNoisyJets_branch->SetAddress(((void *)(&__pyx_v_self->j2hadronflavorWoNoisyJets_value)));
  }
  __pyx_L636:;

  /* "EMTree.pyx":3548
 * 
 *         #print "making j2phi"
 *         self.j2phi_branch = the_tree.GetBranch("j2phi")             # <<<<<<<<<<<<<<
 *         #if not self.j2phi_branch and "j2phi" not in self.complained:
 *         if not self.j2phi_branch and "j2phi":
 */
  __pyx_v_self->j2phi_branch = __pyx_v_the_tree->GetBranch(((char *)"j2phi"));

  /* "EMTree.pyx":3550
 *         self.j2phi_branch = the_tree.GetBranch("j2phi")
 *         #if not self.j2phi_branch and "j2phi" not in self.complained:
 *         if not self.j2phi_branch and "j2phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2phi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2phi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L640_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L640_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3551
 *         #if not self.j2phi_branch and "j2phi" not in self.complained:
 *         if not self.j2phi_branch and "j2phi":
 *             warnings.warn( "EMTree: Expected branch j2phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2phi")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3551, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3551, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__214, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3551, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3550
 *         self.j2phi_branch = the_tree.GetBranch("j2phi")
 *         #if not self.j2phi_branch and "j2phi" not in self.complained:
 *         if not self.j2phi_branch and "j2phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2phi")
 */
    goto __pyx_L639;
  }

  /* "EMTree.pyx":3554
 *             #self.complained.add("j2phi")
 *         else:
 *             self.j2phi_branch.SetAddress(<void*>&self.j2phi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2phiWoNoisyJets"
 */
  /*else*/ {
    __pyx_v_self->j2phi_branch->SetAddress(((void *)(&__pyx_v_self->j2phi_value)));
  }
  __pyx_L639:;

  /* "EMTree.pyx":3557
 * 
 *         #print "making j2phiWoNoisyJets"
 *         self.j2phiWoNoisyJets_branch = the_tree.GetBranch("j2phiWoNoisyJets")             # <<<<<<<<<<<<<<
 *         #if not self.j2phiWoNoisyJets_branch and "j2phiWoNoisyJets" not in self.complained:
 *         if not self.j2phiWoNoisyJets_branch and "j2phiWoNoisyJets":
 */
  __pyx_v_self->j2phiWoNoisyJets_branch = __pyx_v_the_tree->GetBranch(((char *)"j2phiWoNoisyJets"));

  /* "EMTree.pyx":3559
 *         self.j2phiWoNoisyJets_branch = the_tree.GetBranch("j2phiWoNoisyJets")
 *         #if not self.j2phiWoNoisyJets_branch and "j2phiWoNoisyJets" not in self.complained:
 *         if not self.j2phiWoNoisyJets_branch and "j2phiWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2phiWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2phiWoNoisyJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2phiWoNoisyJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L643_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L643_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3560
 *         #if not self.j2phiWoNoisyJets_branch and "j2phiWoNoisyJets" not in self.complained:
 *         if not self.j2phiWoNoisyJets_branch and "j2phiWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j2phiWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2phiWoNoisyJets")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3560, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3560, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__215, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3560, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3559
 *         self.j2phiWoNoisyJets_branch = the_tree.GetBranch("j2phiWoNoisyJets")
 *         #if not self.j2phiWoNoisyJets_branch and "j2phiWoNoisyJets" not in self.complained:
 *         if not self.j2phiWoNoisyJets_branch and "j2phiWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2phiWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2phiWoNoisyJets")
 */
    goto __pyx_L642;
  }

  /* "EMTree.pyx":3563
 *             #self.complained.add("j2phiWoNoisyJets")
 *         else:
 *             self.j2phiWoNoisyJets_branch.SetAddress(<void*>&self.j2phiWoNoisyJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2pt"
 */
  /*else*/ {
    __pyx_v_self->j2phiWoNoisyJets_branch->SetAddress(((void *)(&__pyx_v_self->j2phiWoNoisyJets_value)));
  }
  __pyx_L642:;

  /* "EMTree.pyx":3566
 * 
 *         #print "making j2pt"
 *         self.j2pt_branch = the_tree.GetBranch("j2pt")             # <<<<<<<<<<<<<<
 *         #if not self.j2pt_branch and "j2pt" not in self.complained:
 *         if not self.j2pt_branch and "j2pt":
 */
  __pyx_v_self->j2pt_branch = __pyx_v_the_tree->GetBranch(((char *)"j2pt"));

  /* "EMTree.pyx":3568
 *         self.j2pt_branch = the_tree.GetBranch("j2pt")
 *         #if not self.j2pt_branch and "j2pt" not in self.complained:
 *         if not self.j2pt_branch and "j2pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2pt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2pt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L646_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L646_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3569
 *         #if not self.j2pt_branch and "j2pt" not in self.complained:
 *         if not self.j2pt_branch and "j2pt":
 *             warnings.warn( "EMTree: Expected branch j2pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2pt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3569, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3569, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__216, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3569, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3568
 *         self.j2pt_branch = the_tree.GetBranch("j2pt")
 *         #if not self.j2pt_branch and "j2pt" not in self.complained:
 *         if not self.j2pt_branch and "j2pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2pt")
 */
    goto __pyx_L645;
  }

  /* "EMTree.pyx":3572
 *             #self.complained.add("j2pt")
 *         else:
 *             self.j2pt_branch.SetAddress(<void*>&self.j2pt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets"
 */
  /*else*/ {
    __pyx_v_self->j2pt_branch->SetAddress(((void *)(&__pyx_v_self->j2pt_value)));
  }
  __pyx_L645:;

  /* "EMTree.pyx":3575
 * 
 *         #print "making j2ptWoNoisyJets"
 *         self.j2ptWoNoisyJets_branch = the_tree.GetBranch("j2ptWoNoisyJets")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_branch and "j2ptWoNoisyJets" not in self.complained:
 *         if not self.j2ptWoNoisyJets_branch and "j2ptWoNoisyJets":
 */
  __pyx_v_self->j2ptWoNoisyJets_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets"));

  /* "EMTree.pyx":3577
 *         self.j2ptWoNoisyJets_branch = the_tree.GetBranch("j2ptWoNoisyJets")
 *         #if not self.j2ptWoNoisyJets_branch and "j2ptWoNoisyJets" not in self.complained:
 *         if not self.j2ptWoNoisyJets_branch and "j2ptWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L649_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L649_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3578
 *         #if not self.j2ptWoNoisyJets_branch and "j2ptWoNoisyJets" not in self.complained:
 *         if not self.j2ptWoNoisyJets_branch and "j2ptWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__217, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3577
 *         self.j2ptWoNoisyJets_branch = the_tree.GetBranch("j2ptWoNoisyJets")
 *         #if not self.j2ptWoNoisyJets_branch and "j2ptWoNoisyJets" not in self.complained:
 *         if not self.j2ptWoNoisyJets_branch and "j2ptWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets")
 */
    goto __pyx_L648;
  }

  /* "EMTree.pyx":3581
 *             #self.complained.add("j2ptWoNoisyJets")
 *         else:
 *             self.j2ptWoNoisyJets_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JERDown"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_value)));
  }
  __pyx_L648:;

  /* "EMTree.pyx":3584
 * 
 *         #print "making j2ptWoNoisyJets_JERDown"
 *         self.j2ptWoNoisyJets_JERDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JERDown")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JERDown_branch and "j2ptWoNoisyJets_JERDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JERDown_branch and "j2ptWoNoisyJets_JERDown":
 */
  __pyx_v_self->j2ptWoNoisyJets_JERDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JERDown"));

  /* "EMTree.pyx":3586
 *         self.j2ptWoNoisyJets_JERDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JERDown")
 *         #if not self.j2ptWoNoisyJets_JERDown_branch and "j2ptWoNoisyJets_JERDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JERDown_branch and "j2ptWoNoisyJets_JERDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JERDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JERDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JERDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L652_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L652_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3587
 *         #if not self.j2ptWoNoisyJets_JERDown_branch and "j2ptWoNoisyJets_JERDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JERDown_branch and "j2ptWoNoisyJets_JERDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JERDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JERDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3587, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3587, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__218, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3587, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3586
 *         self.j2ptWoNoisyJets_JERDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JERDown")
 *         #if not self.j2ptWoNoisyJets_JERDown_branch and "j2ptWoNoisyJets_JERDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JERDown_branch and "j2ptWoNoisyJets_JERDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JERDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JERDown")
 */
    goto __pyx_L651;
  }

  /* "EMTree.pyx":3590
 *             #self.complained.add("j2ptWoNoisyJets_JERDown")
 *         else:
 *             self.j2ptWoNoisyJets_JERDown_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JERDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JERUp"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JERDown_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JERDown_value)));
  }
  __pyx_L651:;

  /* "EMTree.pyx":3593
 * 
 *         #print "making j2ptWoNoisyJets_JERUp"
 *         self.j2ptWoNoisyJets_JERUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JERUp")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JERUp_branch and "j2ptWoNoisyJets_JERUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JERUp_branch and "j2ptWoNoisyJets_JERUp":
 */
  __pyx_v_self->j2ptWoNoisyJets_JERUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JERUp"));

  /* "EMTree.pyx":3595
 *         self.j2ptWoNoisyJets_JERUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JERUp")
 *         #if not self.j2ptWoNoisyJets_JERUp_branch and "j2ptWoNoisyJets_JERUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JERUp_branch and "j2ptWoNoisyJets_JERUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JERUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JERUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JERUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L655_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L655_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3596
 *         #if not self.j2ptWoNoisyJets_JERUp_branch and "j2ptWoNoisyJets_JERUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JERUp_branch and "j2ptWoNoisyJets_JERUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JERUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JERUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3596, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3596, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__219, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3596, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3595
 *         self.j2ptWoNoisyJets_JERUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JERUp")
 *         #if not self.j2ptWoNoisyJets_JERUp_branch and "j2ptWoNoisyJets_JERUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JERUp_branch and "j2ptWoNoisyJets_JERUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JERUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JERUp")
 */
    goto __pyx_L654;
  }

  /* "EMTree.pyx":3599
 *             #self.complained.add("j2ptWoNoisyJets_JERUp")
 *         else:
 *             self.j2ptWoNoisyJets_JERUp_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JERUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetAbsoluteDown"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JERUp_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JERUp_value)));
  }
  __pyx_L654:;

  /* "EMTree.pyx":3602
 * 
 *         #print "making j2ptWoNoisyJets_JetAbsoluteDown"
 *         self.j2ptWoNoisyJets_JetAbsoluteDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetAbsoluteDown")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteDown_branch and "j2ptWoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteDown_branch and "j2ptWoNoisyJets_JetAbsoluteDown":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetAbsoluteDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetAbsoluteDown"));

  /* "EMTree.pyx":3604
 *         self.j2ptWoNoisyJets_JetAbsoluteDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetAbsoluteDown")
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteDown_branch and "j2ptWoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteDown_branch and "j2ptWoNoisyJets_JetAbsoluteDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetAbsoluteDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L658_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L658_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3605
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteDown_branch and "j2ptWoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteDown_branch and "j2ptWoNoisyJets_JetAbsoluteDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3605, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3605, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__220, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3605, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3604
 *         self.j2ptWoNoisyJets_JetAbsoluteDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetAbsoluteDown")
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteDown_branch and "j2ptWoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteDown_branch and "j2ptWoNoisyJets_JetAbsoluteDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteDown")
 */
    goto __pyx_L657;
  }

  /* "EMTree.pyx":3608
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteDown")
 *         else:
 *             self.j2ptWoNoisyJets_JetAbsoluteDown_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetAbsoluteDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetAbsoluteUp"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetAbsoluteDown_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetAbsoluteDown_value)));
  }
  __pyx_L657:;

  /* "EMTree.pyx":3611
 * 
 *         #print "making j2ptWoNoisyJets_JetAbsoluteUp"
 *         self.j2ptWoNoisyJets_JetAbsoluteUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetAbsoluteUp")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteUp_branch and "j2ptWoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteUp_branch and "j2ptWoNoisyJets_JetAbsoluteUp":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetAbsoluteUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetAbsoluteUp"));

  /* "EMTree.pyx":3613
 *         self.j2ptWoNoisyJets_JetAbsoluteUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetAbsoluteUp")
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteUp_branch and "j2ptWoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteUp_branch and "j2ptWoNoisyJets_JetAbsoluteUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetAbsoluteUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L661_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L661_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3614
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteUp_branch and "j2ptWoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteUp_branch and "j2ptWoNoisyJets_JetAbsoluteUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3614, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3614, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__221, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3614, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3613
 *         self.j2ptWoNoisyJets_JetAbsoluteUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetAbsoluteUp")
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteUp_branch and "j2ptWoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteUp_branch and "j2ptWoNoisyJets_JetAbsoluteUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteUp")
 */
    goto __pyx_L660;
  }

  /* "EMTree.pyx":3617
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteUp")
 *         else:
 *             self.j2ptWoNoisyJets_JetAbsoluteUp_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetAbsoluteUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetAbsoluteyearDown"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetAbsoluteUp_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetAbsoluteUp_value)));
  }
  __pyx_L660:;

  /* "EMTree.pyx":3620
 * 
 *         #print "making j2ptWoNoisyJets_JetAbsoluteyearDown"
 *         self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetAbsoluteyearDown")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch and "j2ptWoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch and "j2ptWoNoisyJets_JetAbsoluteyearDown":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetAbsoluteyearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetAbsoluteyearDown"));

  /* "EMTree.pyx":3622
 *         self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetAbsoluteyearDown")
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch and "j2ptWoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch and "j2ptWoNoisyJets_JetAbsoluteyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteyearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetAbsoluteyearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L664_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L664_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3623
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch and "j2ptWoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch and "j2ptWoNoisyJets_JetAbsoluteyearDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteyearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3623, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3623, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__222, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3623, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3622
 *         self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetAbsoluteyearDown")
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch and "j2ptWoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch and "j2ptWoNoisyJets_JetAbsoluteyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteyearDown")
 */
    goto __pyx_L663;
  }

  /* "EMTree.pyx":3626
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteyearDown")
 *         else:
 *             self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetAbsoluteyearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetAbsoluteyearUp"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetAbsoluteyearDown_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetAbsoluteyearDown_value)));
  }
  __pyx_L663:;

  /* "EMTree.pyx":3629
 * 
 *         #print "making j2ptWoNoisyJets_JetAbsoluteyearUp"
 *         self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetAbsoluteyearUp")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch and "j2ptWoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch and "j2ptWoNoisyJets_JetAbsoluteyearUp":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetAbsoluteyearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetAbsoluteyearUp"));

  /* "EMTree.pyx":3631
 *         self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetAbsoluteyearUp")
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch and "j2ptWoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch and "j2ptWoNoisyJets_JetAbsoluteyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteyearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetAbsoluteyearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L667_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L667_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3632
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch and "j2ptWoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch and "j2ptWoNoisyJets_JetAbsoluteyearUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteyearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3632, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3632, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__223, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3632, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3631
 *         self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetAbsoluteyearUp")
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch and "j2ptWoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch and "j2ptWoNoisyJets_JetAbsoluteyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteyearUp")
 */
    goto __pyx_L666;
  }

  /* "EMTree.pyx":3635
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteyearUp")
 *         else:
 *             self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetAbsoluteyearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetBBEC1Down"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetAbsoluteyearUp_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetAbsoluteyearUp_value)));
  }
  __pyx_L666:;

  /* "EMTree.pyx":3638
 * 
 *         #print "making j2ptWoNoisyJets_JetBBEC1Down"
 *         self.j2ptWoNoisyJets_JetBBEC1Down_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetBBEC1Down")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetBBEC1Down_branch and "j2ptWoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1Down_branch and "j2ptWoNoisyJets_JetBBEC1Down":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetBBEC1Down_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetBBEC1Down"));

  /* "EMTree.pyx":3640
 *         self.j2ptWoNoisyJets_JetBBEC1Down_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetBBEC1Down")
 *         #if not self.j2ptWoNoisyJets_JetBBEC1Down_branch and "j2ptWoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1Down_branch and "j2ptWoNoisyJets_JetBBEC1Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1Down")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetBBEC1Down_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L670_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L670_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3641
 *         #if not self.j2ptWoNoisyJets_JetBBEC1Down_branch and "j2ptWoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1Down_branch and "j2ptWoNoisyJets_JetBBEC1Down":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1Down")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3641, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3641, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__224, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3641, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3640
 *         self.j2ptWoNoisyJets_JetBBEC1Down_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetBBEC1Down")
 *         #if not self.j2ptWoNoisyJets_JetBBEC1Down_branch and "j2ptWoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1Down_branch and "j2ptWoNoisyJets_JetBBEC1Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1Down")
 */
    goto __pyx_L669;
  }

  /* "EMTree.pyx":3644
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1Down")
 *         else:
 *             self.j2ptWoNoisyJets_JetBBEC1Down_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetBBEC1Down_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetBBEC1Up"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetBBEC1Down_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetBBEC1Down_value)));
  }
  __pyx_L669:;

  /* "EMTree.pyx":3647
 * 
 *         #print "making j2ptWoNoisyJets_JetBBEC1Up"
 *         self.j2ptWoNoisyJets_JetBBEC1Up_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetBBEC1Up")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetBBEC1Up_branch and "j2ptWoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1Up_branch and "j2ptWoNoisyJets_JetBBEC1Up":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetBBEC1Up_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetBBEC1Up"));

  /* "EMTree.pyx":3649
 *         self.j2ptWoNoisyJets_JetBBEC1Up_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetBBEC1Up")
 *         #if not self.j2ptWoNoisyJets_JetBBEC1Up_branch and "j2ptWoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1Up_branch and "j2ptWoNoisyJets_JetBBEC1Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1Up")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetBBEC1Up_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L673_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L673_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3650
 *         #if not self.j2ptWoNoisyJets_JetBBEC1Up_branch and "j2ptWoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1Up_branch and "j2ptWoNoisyJets_JetBBEC1Up":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1Up")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3650, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3650, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__225, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3650, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3649
 *         self.j2ptWoNoisyJets_JetBBEC1Up_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetBBEC1Up")
 *         #if not self.j2ptWoNoisyJets_JetBBEC1Up_branch and "j2ptWoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1Up_branch and "j2ptWoNoisyJets_JetBBEC1Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1Up")
 */
    goto __pyx_L672;
  }

  /* "EMTree.pyx":3653
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1Up")
 *         else:
 *             self.j2ptWoNoisyJets_JetBBEC1Up_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetBBEC1Up_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetBBEC1yearDown"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetBBEC1Up_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetBBEC1Up_value)));
  }
  __pyx_L672:;

  /* "EMTree.pyx":3656
 * 
 *         #print "making j2ptWoNoisyJets_JetBBEC1yearDown"
 *         self.j2ptWoNoisyJets_JetBBEC1yearDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetBBEC1yearDown")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetBBEC1yearDown_branch and "j2ptWoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1yearDown_branch and "j2ptWoNoisyJets_JetBBEC1yearDown":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetBBEC1yearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetBBEC1yearDown"));

  /* "EMTree.pyx":3658
 *         self.j2ptWoNoisyJets_JetBBEC1yearDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetBBEC1yearDown")
 *         #if not self.j2ptWoNoisyJets_JetBBEC1yearDown_branch and "j2ptWoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1yearDown_branch and "j2ptWoNoisyJets_JetBBEC1yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1yearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetBBEC1yearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L676_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L676_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3659
 *         #if not self.j2ptWoNoisyJets_JetBBEC1yearDown_branch and "j2ptWoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1yearDown_branch and "j2ptWoNoisyJets_JetBBEC1yearDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1yearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__226, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3658
 *         self.j2ptWoNoisyJets_JetBBEC1yearDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetBBEC1yearDown")
 *         #if not self.j2ptWoNoisyJets_JetBBEC1yearDown_branch and "j2ptWoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1yearDown_branch and "j2ptWoNoisyJets_JetBBEC1yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1yearDown")
 */
    goto __pyx_L675;
  }

  /* "EMTree.pyx":3662
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1yearDown")
 *         else:
 *             self.j2ptWoNoisyJets_JetBBEC1yearDown_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetBBEC1yearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetBBEC1yearUp"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetBBEC1yearDown_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetBBEC1yearDown_value)));
  }
  __pyx_L675:;

  /* "EMTree.pyx":3665
 * 
 *         #print "making j2ptWoNoisyJets_JetBBEC1yearUp"
 *         self.j2ptWoNoisyJets_JetBBEC1yearUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetBBEC1yearUp")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetBBEC1yearUp_branch and "j2ptWoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1yearUp_branch and "j2ptWoNoisyJets_JetBBEC1yearUp":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetBBEC1yearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetBBEC1yearUp"));

  /* "EMTree.pyx":3667
 *         self.j2ptWoNoisyJets_JetBBEC1yearUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetBBEC1yearUp")
 *         #if not self.j2ptWoNoisyJets_JetBBEC1yearUp_branch and "j2ptWoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1yearUp_branch and "j2ptWoNoisyJets_JetBBEC1yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1yearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetBBEC1yearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L679_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L679_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3668
 *         #if not self.j2ptWoNoisyJets_JetBBEC1yearUp_branch and "j2ptWoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1yearUp_branch and "j2ptWoNoisyJets_JetBBEC1yearUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1yearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3668, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3668, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__227, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3668, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3667
 *         self.j2ptWoNoisyJets_JetBBEC1yearUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetBBEC1yearUp")
 *         #if not self.j2ptWoNoisyJets_JetBBEC1yearUp_branch and "j2ptWoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1yearUp_branch and "j2ptWoNoisyJets_JetBBEC1yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1yearUp")
 */
    goto __pyx_L678;
  }

  /* "EMTree.pyx":3671
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1yearUp")
 *         else:
 *             self.j2ptWoNoisyJets_JetBBEC1yearUp_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetBBEC1yearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetEC2Down"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetBBEC1yearUp_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetBBEC1yearUp_value)));
  }
  __pyx_L678:;

  /* "EMTree.pyx":3674
 * 
 *         #print "making j2ptWoNoisyJets_JetEC2Down"
 *         self.j2ptWoNoisyJets_JetEC2Down_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetEC2Down")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetEC2Down_branch and "j2ptWoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2Down_branch and "j2ptWoNoisyJets_JetEC2Down":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetEC2Down_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetEC2Down"));

  /* "EMTree.pyx":3676
 *         self.j2ptWoNoisyJets_JetEC2Down_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetEC2Down")
 *         #if not self.j2ptWoNoisyJets_JetEC2Down_branch and "j2ptWoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2Down_branch and "j2ptWoNoisyJets_JetEC2Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2Down")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetEC2Down_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L682_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L682_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3677
 *         #if not self.j2ptWoNoisyJets_JetEC2Down_branch and "j2ptWoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2Down_branch and "j2ptWoNoisyJets_JetEC2Down":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2Down")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3677, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3677, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__228, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3677, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3676
 *         self.j2ptWoNoisyJets_JetEC2Down_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetEC2Down")
 *         #if not self.j2ptWoNoisyJets_JetEC2Down_branch and "j2ptWoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2Down_branch and "j2ptWoNoisyJets_JetEC2Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2Down")
 */
    goto __pyx_L681;
  }

  /* "EMTree.pyx":3680
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2Down")
 *         else:
 *             self.j2ptWoNoisyJets_JetEC2Down_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetEC2Down_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetEC2Up"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetEC2Down_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetEC2Down_value)));
  }
  __pyx_L681:;

  /* "EMTree.pyx":3683
 * 
 *         #print "making j2ptWoNoisyJets_JetEC2Up"
 *         self.j2ptWoNoisyJets_JetEC2Up_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetEC2Up")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetEC2Up_branch and "j2ptWoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2Up_branch and "j2ptWoNoisyJets_JetEC2Up":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetEC2Up_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetEC2Up"));

  /* "EMTree.pyx":3685
 *         self.j2ptWoNoisyJets_JetEC2Up_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetEC2Up")
 *         #if not self.j2ptWoNoisyJets_JetEC2Up_branch and "j2ptWoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2Up_branch and "j2ptWoNoisyJets_JetEC2Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2Up")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetEC2Up_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L685_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L685_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3686
 *         #if not self.j2ptWoNoisyJets_JetEC2Up_branch and "j2ptWoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2Up_branch and "j2ptWoNoisyJets_JetEC2Up":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2Up")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3686, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3686, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__229, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3686, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3685
 *         self.j2ptWoNoisyJets_JetEC2Up_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetEC2Up")
 *         #if not self.j2ptWoNoisyJets_JetEC2Up_branch and "j2ptWoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2Up_branch and "j2ptWoNoisyJets_JetEC2Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2Up")
 */
    goto __pyx_L684;
  }

  /* "EMTree.pyx":3689
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2Up")
 *         else:
 *             self.j2ptWoNoisyJets_JetEC2Up_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetEC2Up_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetEC2yearDown"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetEC2Up_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetEC2Up_value)));
  }
  __pyx_L684:;

  /* "EMTree.pyx":3692
 * 
 *         #print "making j2ptWoNoisyJets_JetEC2yearDown"
 *         self.j2ptWoNoisyJets_JetEC2yearDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetEC2yearDown")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetEC2yearDown_branch and "j2ptWoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2yearDown_branch and "j2ptWoNoisyJets_JetEC2yearDown":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetEC2yearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetEC2yearDown"));

  /* "EMTree.pyx":3694
 *         self.j2ptWoNoisyJets_JetEC2yearDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetEC2yearDown")
 *         #if not self.j2ptWoNoisyJets_JetEC2yearDown_branch and "j2ptWoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2yearDown_branch and "j2ptWoNoisyJets_JetEC2yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2yearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetEC2yearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L688_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L688_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3695
 *         #if not self.j2ptWoNoisyJets_JetEC2yearDown_branch and "j2ptWoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2yearDown_branch and "j2ptWoNoisyJets_JetEC2yearDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2yearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3695, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3695, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__230, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3695, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3694
 *         self.j2ptWoNoisyJets_JetEC2yearDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetEC2yearDown")
 *         #if not self.j2ptWoNoisyJets_JetEC2yearDown_branch and "j2ptWoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2yearDown_branch and "j2ptWoNoisyJets_JetEC2yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2yearDown")
 */
    goto __pyx_L687;
  }

  /* "EMTree.pyx":3698
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2yearDown")
 *         else:
 *             self.j2ptWoNoisyJets_JetEC2yearDown_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetEC2yearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetEC2yearUp"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetEC2yearDown_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetEC2yearDown_value)));
  }
  __pyx_L687:;

  /* "EMTree.pyx":3701
 * 
 *         #print "making j2ptWoNoisyJets_JetEC2yearUp"
 *         self.j2ptWoNoisyJets_JetEC2yearUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetEC2yearUp")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetEC2yearUp_branch and "j2ptWoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2yearUp_branch and "j2ptWoNoisyJets_JetEC2yearUp":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetEC2yearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetEC2yearUp"));

  /* "EMTree.pyx":3703
 *         self.j2ptWoNoisyJets_JetEC2yearUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetEC2yearUp")
 *         #if not self.j2ptWoNoisyJets_JetEC2yearUp_branch and "j2ptWoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2yearUp_branch and "j2ptWoNoisyJets_JetEC2yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2yearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetEC2yearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L691_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L691_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3704
 *         #if not self.j2ptWoNoisyJets_JetEC2yearUp_branch and "j2ptWoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2yearUp_branch and "j2ptWoNoisyJets_JetEC2yearUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2yearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3704, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3704, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__231, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3704, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3703
 *         self.j2ptWoNoisyJets_JetEC2yearUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetEC2yearUp")
 *         #if not self.j2ptWoNoisyJets_JetEC2yearUp_branch and "j2ptWoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2yearUp_branch and "j2ptWoNoisyJets_JetEC2yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2yearUp")
 */
    goto __pyx_L690;
  }

  /* "EMTree.pyx":3707
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2yearUp")
 *         else:
 *             self.j2ptWoNoisyJets_JetEC2yearUp_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetEC2yearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetFlavorQCDDown"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetEC2yearUp_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetEC2yearUp_value)));
  }
  __pyx_L690:;

  /* "EMTree.pyx":3710
 * 
 *         #print "making j2ptWoNoisyJets_JetFlavorQCDDown"
 *         self.j2ptWoNoisyJets_JetFlavorQCDDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetFlavorQCDDown")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetFlavorQCDDown_branch and "j2ptWoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetFlavorQCDDown_branch and "j2ptWoNoisyJets_JetFlavorQCDDown":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetFlavorQCDDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetFlavorQCDDown"));

  /* "EMTree.pyx":3712
 *         self.j2ptWoNoisyJets_JetFlavorQCDDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetFlavorQCDDown")
 *         #if not self.j2ptWoNoisyJets_JetFlavorQCDDown_branch and "j2ptWoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetFlavorQCDDown_branch and "j2ptWoNoisyJets_JetFlavorQCDDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetFlavorQCDDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetFlavorQCDDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L694_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L694_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3713
 *         #if not self.j2ptWoNoisyJets_JetFlavorQCDDown_branch and "j2ptWoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetFlavorQCDDown_branch and "j2ptWoNoisyJets_JetFlavorQCDDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetFlavorQCDDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__232, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3712
 *         self.j2ptWoNoisyJets_JetFlavorQCDDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetFlavorQCDDown")
 *         #if not self.j2ptWoNoisyJets_JetFlavorQCDDown_branch and "j2ptWoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetFlavorQCDDown_branch and "j2ptWoNoisyJets_JetFlavorQCDDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetFlavorQCDDown")
 */
    goto __pyx_L693;
  }

  /* "EMTree.pyx":3716
 *             #self.complained.add("j2ptWoNoisyJets_JetFlavorQCDDown")
 *         else:
 *             self.j2ptWoNoisyJets_JetFlavorQCDDown_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetFlavorQCDDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetFlavorQCDUp"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetFlavorQCDDown_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetFlavorQCDDown_value)));
  }
  __pyx_L693:;

  /* "EMTree.pyx":3719
 * 
 *         #print "making j2ptWoNoisyJets_JetFlavorQCDUp"
 *         self.j2ptWoNoisyJets_JetFlavorQCDUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetFlavorQCDUp")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetFlavorQCDUp_branch and "j2ptWoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetFlavorQCDUp_branch and "j2ptWoNoisyJets_JetFlavorQCDUp":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetFlavorQCDUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetFlavorQCDUp"));

  /* "EMTree.pyx":3721
 *         self.j2ptWoNoisyJets_JetFlavorQCDUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetFlavorQCDUp")
 *         #if not self.j2ptWoNoisyJets_JetFlavorQCDUp_branch and "j2ptWoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetFlavorQCDUp_branch and "j2ptWoNoisyJets_JetFlavorQCDUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetFlavorQCDUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetFlavorQCDUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L697_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L697_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3722
 *         #if not self.j2ptWoNoisyJets_JetFlavorQCDUp_branch and "j2ptWoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetFlavorQCDUp_branch and "j2ptWoNoisyJets_JetFlavorQCDUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetFlavorQCDUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3722, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3722, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__233, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3722, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3721
 *         self.j2ptWoNoisyJets_JetFlavorQCDUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetFlavorQCDUp")
 *         #if not self.j2ptWoNoisyJets_JetFlavorQCDUp_branch and "j2ptWoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetFlavorQCDUp_branch and "j2ptWoNoisyJets_JetFlavorQCDUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetFlavorQCDUp")
 */
    goto __pyx_L696;
  }

  /* "EMTree.pyx":3725
 *             #self.complained.add("j2ptWoNoisyJets_JetFlavorQCDUp")
 *         else:
 *             self.j2ptWoNoisyJets_JetFlavorQCDUp_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetFlavorQCDUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetHFDown"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetFlavorQCDUp_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetFlavorQCDUp_value)));
  }
  __pyx_L696:;

  /* "EMTree.pyx":3728
 * 
 *         #print "making j2ptWoNoisyJets_JetHFDown"
 *         self.j2ptWoNoisyJets_JetHFDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetHFDown")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetHFDown_branch and "j2ptWoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFDown_branch and "j2ptWoNoisyJets_JetHFDown":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetHFDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetHFDown"));

  /* "EMTree.pyx":3730
 *         self.j2ptWoNoisyJets_JetHFDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetHFDown")
 *         #if not self.j2ptWoNoisyJets_JetHFDown_branch and "j2ptWoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFDown_branch and "j2ptWoNoisyJets_JetHFDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetHFDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetHFDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L700_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L700_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3731
 *         #if not self.j2ptWoNoisyJets_JetHFDown_branch and "j2ptWoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFDown_branch and "j2ptWoNoisyJets_JetHFDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetHFDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3731, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3731, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__234, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3731, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3730
 *         self.j2ptWoNoisyJets_JetHFDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetHFDown")
 *         #if not self.j2ptWoNoisyJets_JetHFDown_branch and "j2ptWoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFDown_branch and "j2ptWoNoisyJets_JetHFDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetHFDown")
 */
    goto __pyx_L699;
  }

  /* "EMTree.pyx":3734
 *             #self.complained.add("j2ptWoNoisyJets_JetHFDown")
 *         else:
 *             self.j2ptWoNoisyJets_JetHFDown_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetHFDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetHFUp"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetHFDown_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetHFDown_value)));
  }
  __pyx_L699:;

  /* "EMTree.pyx":3737
 * 
 *         #print "making j2ptWoNoisyJets_JetHFUp"
 *         self.j2ptWoNoisyJets_JetHFUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetHFUp")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetHFUp_branch and "j2ptWoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFUp_branch and "j2ptWoNoisyJets_JetHFUp":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetHFUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetHFUp"));

  /* "EMTree.pyx":3739
 *         self.j2ptWoNoisyJets_JetHFUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetHFUp")
 *         #if not self.j2ptWoNoisyJets_JetHFUp_branch and "j2ptWoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFUp_branch and "j2ptWoNoisyJets_JetHFUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetHFUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetHFUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L703_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L703_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3740
 *         #if not self.j2ptWoNoisyJets_JetHFUp_branch and "j2ptWoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFUp_branch and "j2ptWoNoisyJets_JetHFUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetHFUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3740, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3740, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__235, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3740, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3739
 *         self.j2ptWoNoisyJets_JetHFUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetHFUp")
 *         #if not self.j2ptWoNoisyJets_JetHFUp_branch and "j2ptWoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFUp_branch and "j2ptWoNoisyJets_JetHFUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetHFUp")
 */
    goto __pyx_L702;
  }

  /* "EMTree.pyx":3743
 *             #self.complained.add("j2ptWoNoisyJets_JetHFUp")
 *         else:
 *             self.j2ptWoNoisyJets_JetHFUp_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetHFUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetHFyearDown"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetHFUp_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetHFUp_value)));
  }
  __pyx_L702:;

  /* "EMTree.pyx":3746
 * 
 *         #print "making j2ptWoNoisyJets_JetHFyearDown"
 *         self.j2ptWoNoisyJets_JetHFyearDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetHFyearDown")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetHFyearDown_branch and "j2ptWoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFyearDown_branch and "j2ptWoNoisyJets_JetHFyearDown":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetHFyearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetHFyearDown"));

  /* "EMTree.pyx":3748
 *         self.j2ptWoNoisyJets_JetHFyearDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetHFyearDown")
 *         #if not self.j2ptWoNoisyJets_JetHFyearDown_branch and "j2ptWoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFyearDown_branch and "j2ptWoNoisyJets_JetHFyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetHFyearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetHFyearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L706_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L706_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3749
 *         #if not self.j2ptWoNoisyJets_JetHFyearDown_branch and "j2ptWoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFyearDown_branch and "j2ptWoNoisyJets_JetHFyearDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetHFyearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3749, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3749, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__236, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3749, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3748
 *         self.j2ptWoNoisyJets_JetHFyearDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetHFyearDown")
 *         #if not self.j2ptWoNoisyJets_JetHFyearDown_branch and "j2ptWoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFyearDown_branch and "j2ptWoNoisyJets_JetHFyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetHFyearDown")
 */
    goto __pyx_L705;
  }

  /* "EMTree.pyx":3752
 *             #self.complained.add("j2ptWoNoisyJets_JetHFyearDown")
 *         else:
 *             self.j2ptWoNoisyJets_JetHFyearDown_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetHFyearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetHFyearUp"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetHFyearDown_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetHFyearDown_value)));
  }
  __pyx_L705:;

  /* "EMTree.pyx":3755
 * 
 *         #print "making j2ptWoNoisyJets_JetHFyearUp"
 *         self.j2ptWoNoisyJets_JetHFyearUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetHFyearUp")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetHFyearUp_branch and "j2ptWoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFyearUp_branch and "j2ptWoNoisyJets_JetHFyearUp":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetHFyearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetHFyearUp"));

  /* "EMTree.pyx":3757
 *         self.j2ptWoNoisyJets_JetHFyearUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetHFyearUp")
 *         #if not self.j2ptWoNoisyJets_JetHFyearUp_branch and "j2ptWoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFyearUp_branch and "j2ptWoNoisyJets_JetHFyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetHFyearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetHFyearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L709_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L709_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3758
 *         #if not self.j2ptWoNoisyJets_JetHFyearUp_branch and "j2ptWoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFyearUp_branch and "j2ptWoNoisyJets_JetHFyearUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetHFyearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3758, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3758, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__237, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3758, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3757
 *         self.j2ptWoNoisyJets_JetHFyearUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetHFyearUp")
 *         #if not self.j2ptWoNoisyJets_JetHFyearUp_branch and "j2ptWoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFyearUp_branch and "j2ptWoNoisyJets_JetHFyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetHFyearUp")
 */
    goto __pyx_L708;
  }

  /* "EMTree.pyx":3761
 *             #self.complained.add("j2ptWoNoisyJets_JetHFyearUp")
 *         else:
 *             self.j2ptWoNoisyJets_JetHFyearUp_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetHFyearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetRelativeBalDown"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetHFyearUp_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetHFyearUp_value)));
  }
  __pyx_L708:;

  /* "EMTree.pyx":3764
 * 
 *         #print "making j2ptWoNoisyJets_JetRelativeBalDown"
 *         self.j2ptWoNoisyJets_JetRelativeBalDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetRelativeBalDown")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetRelativeBalDown_branch and "j2ptWoNoisyJets_JetRelativeBalDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeBalDown_branch and "j2ptWoNoisyJets_JetRelativeBalDown":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetRelativeBalDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetRelativeBalDown"));

  /* "EMTree.pyx":3766
 *         self.j2ptWoNoisyJets_JetRelativeBalDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetRelativeBalDown")
 *         #if not self.j2ptWoNoisyJets_JetRelativeBalDown_branch and "j2ptWoNoisyJets_JetRelativeBalDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeBalDown_branch and "j2ptWoNoisyJets_JetRelativeBalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeBalDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetRelativeBalDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L712_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L712_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3767
 *         #if not self.j2ptWoNoisyJets_JetRelativeBalDown_branch and "j2ptWoNoisyJets_JetRelativeBalDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeBalDown_branch and "j2ptWoNoisyJets_JetRelativeBalDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeBalDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3767, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3767, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__238, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3767, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3766
 *         self.j2ptWoNoisyJets_JetRelativeBalDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetRelativeBalDown")
 *         #if not self.j2ptWoNoisyJets_JetRelativeBalDown_branch and "j2ptWoNoisyJets_JetRelativeBalDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeBalDown_branch and "j2ptWoNoisyJets_JetRelativeBalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeBalDown")
 */
    goto __pyx_L711;
  }

  /* "EMTree.pyx":3770
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeBalDown")
 *         else:
 *             self.j2ptWoNoisyJets_JetRelativeBalDown_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetRelativeBalDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetRelativeBalUp"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetRelativeBalDown_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetRelativeBalDown_value)));
  }
  __pyx_L711:;

  /* "EMTree.pyx":3773
 * 
 *         #print "making j2ptWoNoisyJets_JetRelativeBalUp"
 *         self.j2ptWoNoisyJets_JetRelativeBalUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetRelativeBalUp")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetRelativeBalUp_branch and "j2ptWoNoisyJets_JetRelativeBalUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeBalUp_branch and "j2ptWoNoisyJets_JetRelativeBalUp":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetRelativeBalUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetRelativeBalUp"));

  /* "EMTree.pyx":3775
 *         self.j2ptWoNoisyJets_JetRelativeBalUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetRelativeBalUp")
 *         #if not self.j2ptWoNoisyJets_JetRelativeBalUp_branch and "j2ptWoNoisyJets_JetRelativeBalUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeBalUp_branch and "j2ptWoNoisyJets_JetRelativeBalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeBalUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetRelativeBalUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L715_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L715_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3776
 *         #if not self.j2ptWoNoisyJets_JetRelativeBalUp_branch and "j2ptWoNoisyJets_JetRelativeBalUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeBalUp_branch and "j2ptWoNoisyJets_JetRelativeBalUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeBalUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3776, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3776, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__239, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3776, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3775
 *         self.j2ptWoNoisyJets_JetRelativeBalUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetRelativeBalUp")
 *         #if not self.j2ptWoNoisyJets_JetRelativeBalUp_branch and "j2ptWoNoisyJets_JetRelativeBalUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeBalUp_branch and "j2ptWoNoisyJets_JetRelativeBalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeBalUp")
 */
    goto __pyx_L714;
  }

  /* "EMTree.pyx":3779
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeBalUp")
 *         else:
 *             self.j2ptWoNoisyJets_JetRelativeBalUp_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetRelativeBalUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetRelativeSampleDown"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetRelativeBalUp_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetRelativeBalUp_value)));
  }
  __pyx_L714:;

  /* "EMTree.pyx":3782
 * 
 *         #print "making j2ptWoNoisyJets_JetRelativeSampleDown"
 *         self.j2ptWoNoisyJets_JetRelativeSampleDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetRelativeSampleDown")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetRelativeSampleDown_branch and "j2ptWoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeSampleDown_branch and "j2ptWoNoisyJets_JetRelativeSampleDown":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetRelativeSampleDown_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetRelativeSampleDown"));

  /* "EMTree.pyx":3784
 *         self.j2ptWoNoisyJets_JetRelativeSampleDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetRelativeSampleDown")
 *         #if not self.j2ptWoNoisyJets_JetRelativeSampleDown_branch and "j2ptWoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeSampleDown_branch and "j2ptWoNoisyJets_JetRelativeSampleDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeSampleDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetRelativeSampleDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L718_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L718_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3785
 *         #if not self.j2ptWoNoisyJets_JetRelativeSampleDown_branch and "j2ptWoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeSampleDown_branch and "j2ptWoNoisyJets_JetRelativeSampleDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeSampleDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3785, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3785, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__240, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3785, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3784
 *         self.j2ptWoNoisyJets_JetRelativeSampleDown_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetRelativeSampleDown")
 *         #if not self.j2ptWoNoisyJets_JetRelativeSampleDown_branch and "j2ptWoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeSampleDown_branch and "j2ptWoNoisyJets_JetRelativeSampleDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeSampleDown")
 */
    goto __pyx_L717;
  }

  /* "EMTree.pyx":3788
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeSampleDown")
 *         else:
 *             self.j2ptWoNoisyJets_JetRelativeSampleDown_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetRelativeSampleDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making j2ptWoNoisyJets_JetRelativeSampleUp"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetRelativeSampleDown_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetRelativeSampleDown_value)));
  }
  __pyx_L717:;

  /* "EMTree.pyx":3791
 * 
 *         #print "making j2ptWoNoisyJets_JetRelativeSampleUp"
 *         self.j2ptWoNoisyJets_JetRelativeSampleUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetRelativeSampleUp")             # <<<<<<<<<<<<<<
 *         #if not self.j2ptWoNoisyJets_JetRelativeSampleUp_branch and "j2ptWoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeSampleUp_branch and "j2ptWoNoisyJets_JetRelativeSampleUp":
 */
  __pyx_v_self->j2ptWoNoisyJets_JetRelativeSampleUp_branch = __pyx_v_the_tree->GetBranch(((char *)"j2ptWoNoisyJets_JetRelativeSampleUp"));

  /* "EMTree.pyx":3793
 *         self.j2ptWoNoisyJets_JetRelativeSampleUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetRelativeSampleUp")
 *         #if not self.j2ptWoNoisyJets_JetRelativeSampleUp_branch and "j2ptWoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeSampleUp_branch and "j2ptWoNoisyJets_JetRelativeSampleUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeSampleUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->j2ptWoNoisyJets_JetRelativeSampleUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L721_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L721_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3794
 *         #if not self.j2ptWoNoisyJets_JetRelativeSampleUp_branch and "j2ptWoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeSampleUp_branch and "j2ptWoNoisyJets_JetRelativeSampleUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeSampleUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3794, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3794, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__241, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3794, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3793
 *         self.j2ptWoNoisyJets_JetRelativeSampleUp_branch = the_tree.GetBranch("j2ptWoNoisyJets_JetRelativeSampleUp")
 *         #if not self.j2ptWoNoisyJets_JetRelativeSampleUp_branch and "j2ptWoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeSampleUp_branch and "j2ptWoNoisyJets_JetRelativeSampleUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeSampleUp")
 */
    goto __pyx_L720;
  }

  /* "EMTree.pyx":3797
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeSampleUp")
 *         else:
 *             self.j2ptWoNoisyJets_JetRelativeSampleUp_branch.SetAddress(<void*>&self.j2ptWoNoisyJets_JetRelativeSampleUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb1eta_2016"
 */
  /*else*/ {
    __pyx_v_self->j2ptWoNoisyJets_JetRelativeSampleUp_branch->SetAddress(((void *)(&__pyx_v_self->j2ptWoNoisyJets_JetRelativeSampleUp_value)));
  }
  __pyx_L720:;

  /* "EMTree.pyx":3800
 * 
 *         #print "making jb1eta_2016"
 *         self.jb1eta_2016_branch = the_tree.GetBranch("jb1eta_2016")             # <<<<<<<<<<<<<<
 *         #if not self.jb1eta_2016_branch and "jb1eta_2016" not in self.complained:
 *         if not self.jb1eta_2016_branch and "jb1eta_2016":
 */
  __pyx_v_self->jb1eta_2016_branch = __pyx_v_the_tree->GetBranch(((char *)"jb1eta_2016"));

  /* "EMTree.pyx":3802
 *         self.jb1eta_2016_branch = the_tree.GetBranch("jb1eta_2016")
 *         #if not self.jb1eta_2016_branch and "jb1eta_2016" not in self.complained:
 *         if not self.jb1eta_2016_branch and "jb1eta_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1eta_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1eta_2016")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb1eta_2016_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L724_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L724_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3803
 *         #if not self.jb1eta_2016_branch and "jb1eta_2016" not in self.complained:
 *         if not self.jb1eta_2016_branch and "jb1eta_2016":
 *             warnings.warn( "EMTree: Expected branch jb1eta_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1eta_2016")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3803, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3803, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__242, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3803, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3802
 *         self.jb1eta_2016_branch = the_tree.GetBranch("jb1eta_2016")
 *         #if not self.jb1eta_2016_branch and "jb1eta_2016" not in self.complained:
 *         if not self.jb1eta_2016_branch and "jb1eta_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1eta_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1eta_2016")
 */
    goto __pyx_L723;
  }

  /* "EMTree.pyx":3806
 *             #self.complained.add("jb1eta_2016")
 *         else:
 *             self.jb1eta_2016_branch.SetAddress(<void*>&self.jb1eta_2016_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb1eta_2017"
 */
  /*else*/ {
    __pyx_v_self->jb1eta_2016_branch->SetAddress(((void *)(&__pyx_v_self->jb1eta_2016_value)));
  }
  __pyx_L723:;

  /* "EMTree.pyx":3809
 * 
 *         #print "making jb1eta_2017"
 *         self.jb1eta_2017_branch = the_tree.GetBranch("jb1eta_2017")             # <<<<<<<<<<<<<<
 *         #if not self.jb1eta_2017_branch and "jb1eta_2017" not in self.complained:
 *         if not self.jb1eta_2017_branch and "jb1eta_2017":
 */
  __pyx_v_self->jb1eta_2017_branch = __pyx_v_the_tree->GetBranch(((char *)"jb1eta_2017"));

  /* "EMTree.pyx":3811
 *         self.jb1eta_2017_branch = the_tree.GetBranch("jb1eta_2017")
 *         #if not self.jb1eta_2017_branch and "jb1eta_2017" not in self.complained:
 *         if not self.jb1eta_2017_branch and "jb1eta_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1eta_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1eta_2017")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb1eta_2017_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L727_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L727_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3812
 *         #if not self.jb1eta_2017_branch and "jb1eta_2017" not in self.complained:
 *         if not self.jb1eta_2017_branch and "jb1eta_2017":
 *             warnings.warn( "EMTree: Expected branch jb1eta_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1eta_2017")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3812, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3812, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__243, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3812, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3811
 *         self.jb1eta_2017_branch = the_tree.GetBranch("jb1eta_2017")
 *         #if not self.jb1eta_2017_branch and "jb1eta_2017" not in self.complained:
 *         if not self.jb1eta_2017_branch and "jb1eta_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1eta_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1eta_2017")
 */
    goto __pyx_L726;
  }

  /* "EMTree.pyx":3815
 *             #self.complained.add("jb1eta_2017")
 *         else:
 *             self.jb1eta_2017_branch.SetAddress(<void*>&self.jb1eta_2017_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb1eta_2018"
 */
  /*else*/ {
    __pyx_v_self->jb1eta_2017_branch->SetAddress(((void *)(&__pyx_v_self->jb1eta_2017_value)));
  }
  __pyx_L726:;

  /* "EMTree.pyx":3818
 * 
 *         #print "making jb1eta_2018"
 *         self.jb1eta_2018_branch = the_tree.GetBranch("jb1eta_2018")             # <<<<<<<<<<<<<<
 *         #if not self.jb1eta_2018_branch and "jb1eta_2018" not in self.complained:
 *         if not self.jb1eta_2018_branch and "jb1eta_2018":
 */
  __pyx_v_self->jb1eta_2018_branch = __pyx_v_the_tree->GetBranch(((char *)"jb1eta_2018"));

  /* "EMTree.pyx":3820
 *         self.jb1eta_2018_branch = the_tree.GetBranch("jb1eta_2018")
 *         #if not self.jb1eta_2018_branch and "jb1eta_2018" not in self.complained:
 *         if not self.jb1eta_2018_branch and "jb1eta_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1eta_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1eta_2018")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb1eta_2018_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L730_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L730_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3821
 *         #if not self.jb1eta_2018_branch and "jb1eta_2018" not in self.complained:
 *         if not self.jb1eta_2018_branch and "jb1eta_2018":
 *             warnings.warn( "EMTree: Expected branch jb1eta_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1eta_2018")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3821, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3821, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__244, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3821, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3820
 *         self.jb1eta_2018_branch = the_tree.GetBranch("jb1eta_2018")
 *         #if not self.jb1eta_2018_branch and "jb1eta_2018" not in self.complained:
 *         if not self.jb1eta_2018_branch and "jb1eta_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1eta_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1eta_2018")
 */
    goto __pyx_L729;
  }

  /* "EMTree.pyx":3824
 *             #self.complained.add("jb1eta_2018")
 *         else:
 *             self.jb1eta_2018_branch.SetAddress(<void*>&self.jb1eta_2018_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb1hadronflavor_2016"
 */
  /*else*/ {
    __pyx_v_self->jb1eta_2018_branch->SetAddress(((void *)(&__pyx_v_self->jb1eta_2018_value)));
  }
  __pyx_L729:;

  /* "EMTree.pyx":3827
 * 
 *         #print "making jb1hadronflavor_2016"
 *         self.jb1hadronflavor_2016_branch = the_tree.GetBranch("jb1hadronflavor_2016")             # <<<<<<<<<<<<<<
 *         #if not self.jb1hadronflavor_2016_branch and "jb1hadronflavor_2016" not in self.complained:
 *         if not self.jb1hadronflavor_2016_branch and "jb1hadronflavor_2016":
 */
  __pyx_v_self->jb1hadronflavor_2016_branch = __pyx_v_the_tree->GetBranch(((char *)"jb1hadronflavor_2016"));

  /* "EMTree.pyx":3829
 *         self.jb1hadronflavor_2016_branch = the_tree.GetBranch("jb1hadronflavor_2016")
 *         #if not self.jb1hadronflavor_2016_branch and "jb1hadronflavor_2016" not in self.complained:
 *         if not self.jb1hadronflavor_2016_branch and "jb1hadronflavor_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1hadronflavor_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1hadronflavor_2016")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb1hadronflavor_2016_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L733_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L733_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3830
 *         #if not self.jb1hadronflavor_2016_branch and "jb1hadronflavor_2016" not in self.complained:
 *         if not self.jb1hadronflavor_2016_branch and "jb1hadronflavor_2016":
 *             warnings.warn( "EMTree: Expected branch jb1hadronflavor_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1hadronflavor_2016")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__245, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3829
 *         self.jb1hadronflavor_2016_branch = the_tree.GetBranch("jb1hadronflavor_2016")
 *         #if not self.jb1hadronflavor_2016_branch and "jb1hadronflavor_2016" not in self.complained:
 *         if not self.jb1hadronflavor_2016_branch and "jb1hadronflavor_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1hadronflavor_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1hadronflavor_2016")
 */
    goto __pyx_L732;
  }

  /* "EMTree.pyx":3833
 *             #self.complained.add("jb1hadronflavor_2016")
 *         else:
 *             self.jb1hadronflavor_2016_branch.SetAddress(<void*>&self.jb1hadronflavor_2016_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb1hadronflavor_2017"
 */
  /*else*/ {
    __pyx_v_self->jb1hadronflavor_2016_branch->SetAddress(((void *)(&__pyx_v_self->jb1hadronflavor_2016_value)));
  }
  __pyx_L732:;

  /* "EMTree.pyx":3836
 * 
 *         #print "making jb1hadronflavor_2017"
 *         self.jb1hadronflavor_2017_branch = the_tree.GetBranch("jb1hadronflavor_2017")             # <<<<<<<<<<<<<<
 *         #if not self.jb1hadronflavor_2017_branch and "jb1hadronflavor_2017" not in self.complained:
 *         if not self.jb1hadronflavor_2017_branch and "jb1hadronflavor_2017":
 */
  __pyx_v_self->jb1hadronflavor_2017_branch = __pyx_v_the_tree->GetBranch(((char *)"jb1hadronflavor_2017"));

  /* "EMTree.pyx":3838
 *         self.jb1hadronflavor_2017_branch = the_tree.GetBranch("jb1hadronflavor_2017")
 *         #if not self.jb1hadronflavor_2017_branch and "jb1hadronflavor_2017" not in self.complained:
 *         if not self.jb1hadronflavor_2017_branch and "jb1hadronflavor_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1hadronflavor_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1hadronflavor_2017")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb1hadronflavor_2017_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L736_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L736_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3839
 *         #if not self.jb1hadronflavor_2017_branch and "jb1hadronflavor_2017" not in self.complained:
 *         if not self.jb1hadronflavor_2017_branch and "jb1hadronflavor_2017":
 *             warnings.warn( "EMTree: Expected branch jb1hadronflavor_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1hadronflavor_2017")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3839, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3839, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__246, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3839, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3838
 *         self.jb1hadronflavor_2017_branch = the_tree.GetBranch("jb1hadronflavor_2017")
 *         #if not self.jb1hadronflavor_2017_branch and "jb1hadronflavor_2017" not in self.complained:
 *         if not self.jb1hadronflavor_2017_branch and "jb1hadronflavor_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1hadronflavor_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1hadronflavor_2017")
 */
    goto __pyx_L735;
  }

  /* "EMTree.pyx":3842
 *             #self.complained.add("jb1hadronflavor_2017")
 *         else:
 *             self.jb1hadronflavor_2017_branch.SetAddress(<void*>&self.jb1hadronflavor_2017_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb1hadronflavor_2018"
 */
  /*else*/ {
    __pyx_v_self->jb1hadronflavor_2017_branch->SetAddress(((void *)(&__pyx_v_self->jb1hadronflavor_2017_value)));
  }
  __pyx_L735:;

  /* "EMTree.pyx":3845
 * 
 *         #print "making jb1hadronflavor_2018"
 *         self.jb1hadronflavor_2018_branch = the_tree.GetBranch("jb1hadronflavor_2018")             # <<<<<<<<<<<<<<
 *         #if not self.jb1hadronflavor_2018_branch and "jb1hadronflavor_2018" not in self.complained:
 *         if not self.jb1hadronflavor_2018_branch and "jb1hadronflavor_2018":
 */
  __pyx_v_self->jb1hadronflavor_2018_branch = __pyx_v_the_tree->GetBranch(((char *)"jb1hadronflavor_2018"));

  /* "EMTree.pyx":3847
 *         self.jb1hadronflavor_2018_branch = the_tree.GetBranch("jb1hadronflavor_2018")
 *         #if not self.jb1hadronflavor_2018_branch and "jb1hadronflavor_2018" not in self.complained:
 *         if not self.jb1hadronflavor_2018_branch and "jb1hadronflavor_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1hadronflavor_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1hadronflavor_2018")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb1hadronflavor_2018_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L739_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L739_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3848
 *         #if not self.jb1hadronflavor_2018_branch and "jb1hadronflavor_2018" not in self.complained:
 *         if not self.jb1hadronflavor_2018_branch and "jb1hadronflavor_2018":
 *             warnings.warn( "EMTree: Expected branch jb1hadronflavor_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1hadronflavor_2018")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3848, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3848, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__247, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3848, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3847
 *         self.jb1hadronflavor_2018_branch = the_tree.GetBranch("jb1hadronflavor_2018")
 *         #if not self.jb1hadronflavor_2018_branch and "jb1hadronflavor_2018" not in self.complained:
 *         if not self.jb1hadronflavor_2018_branch and "jb1hadronflavor_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1hadronflavor_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1hadronflavor_2018")
 */
    goto __pyx_L738;
  }

  /* "EMTree.pyx":3851
 *             #self.complained.add("jb1hadronflavor_2018")
 *         else:
 *             self.jb1hadronflavor_2018_branch.SetAddress(<void*>&self.jb1hadronflavor_2018_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb1phi_2016"
 */
  /*else*/ {
    __pyx_v_self->jb1hadronflavor_2018_branch->SetAddress(((void *)(&__pyx_v_self->jb1hadronflavor_2018_value)));
  }
  __pyx_L738:;

  /* "EMTree.pyx":3854
 * 
 *         #print "making jb1phi_2016"
 *         self.jb1phi_2016_branch = the_tree.GetBranch("jb1phi_2016")             # <<<<<<<<<<<<<<
 *         #if not self.jb1phi_2016_branch and "jb1phi_2016" not in self.complained:
 *         if not self.jb1phi_2016_branch and "jb1phi_2016":
 */
  __pyx_v_self->jb1phi_2016_branch = __pyx_v_the_tree->GetBranch(((char *)"jb1phi_2016"));

  /* "EMTree.pyx":3856
 *         self.jb1phi_2016_branch = the_tree.GetBranch("jb1phi_2016")
 *         #if not self.jb1phi_2016_branch and "jb1phi_2016" not in self.complained:
 *         if not self.jb1phi_2016_branch and "jb1phi_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1phi_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1phi_2016")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb1phi_2016_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L742_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L742_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3857
 *         #if not self.jb1phi_2016_branch and "jb1phi_2016" not in self.complained:
 *         if not self.jb1phi_2016_branch and "jb1phi_2016":
 *             warnings.warn( "EMTree: Expected branch jb1phi_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1phi_2016")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3857, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3857, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__248, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3857, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3856
 *         self.jb1phi_2016_branch = the_tree.GetBranch("jb1phi_2016")
 *         #if not self.jb1phi_2016_branch and "jb1phi_2016" not in self.complained:
 *         if not self.jb1phi_2016_branch and "jb1phi_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1phi_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1phi_2016")
 */
    goto __pyx_L741;
  }

  /* "EMTree.pyx":3860
 *             #self.complained.add("jb1phi_2016")
 *         else:
 *             self.jb1phi_2016_branch.SetAddress(<void*>&self.jb1phi_2016_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb1phi_2017"
 */
  /*else*/ {
    __pyx_v_self->jb1phi_2016_branch->SetAddress(((void *)(&__pyx_v_self->jb1phi_2016_value)));
  }
  __pyx_L741:;

  /* "EMTree.pyx":3863
 * 
 *         #print "making jb1phi_2017"
 *         self.jb1phi_2017_branch = the_tree.GetBranch("jb1phi_2017")             # <<<<<<<<<<<<<<
 *         #if not self.jb1phi_2017_branch and "jb1phi_2017" not in self.complained:
 *         if not self.jb1phi_2017_branch and "jb1phi_2017":
 */
  __pyx_v_self->jb1phi_2017_branch = __pyx_v_the_tree->GetBranch(((char *)"jb1phi_2017"));

  /* "EMTree.pyx":3865
 *         self.jb1phi_2017_branch = the_tree.GetBranch("jb1phi_2017")
 *         #if not self.jb1phi_2017_branch and "jb1phi_2017" not in self.complained:
 *         if not self.jb1phi_2017_branch and "jb1phi_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1phi_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1phi_2017")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb1phi_2017_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L745_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L745_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3866
 *         #if not self.jb1phi_2017_branch and "jb1phi_2017" not in self.complained:
 *         if not self.jb1phi_2017_branch and "jb1phi_2017":
 *             warnings.warn( "EMTree: Expected branch jb1phi_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1phi_2017")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3866, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3866, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__249, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3866, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3865
 *         self.jb1phi_2017_branch = the_tree.GetBranch("jb1phi_2017")
 *         #if not self.jb1phi_2017_branch and "jb1phi_2017" not in self.complained:
 *         if not self.jb1phi_2017_branch and "jb1phi_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1phi_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1phi_2017")
 */
    goto __pyx_L744;
  }

  /* "EMTree.pyx":3869
 *             #self.complained.add("jb1phi_2017")
 *         else:
 *             self.jb1phi_2017_branch.SetAddress(<void*>&self.jb1phi_2017_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb1phi_2018"
 */
  /*else*/ {
    __pyx_v_self->jb1phi_2017_branch->SetAddress(((void *)(&__pyx_v_self->jb1phi_2017_value)));
  }
  __pyx_L744:;

  /* "EMTree.pyx":3872
 * 
 *         #print "making jb1phi_2018"
 *         self.jb1phi_2018_branch = the_tree.GetBranch("jb1phi_2018")             # <<<<<<<<<<<<<<
 *         #if not self.jb1phi_2018_branch and "jb1phi_2018" not in self.complained:
 *         if not self.jb1phi_2018_branch and "jb1phi_2018":
 */
  __pyx_v_self->jb1phi_2018_branch = __pyx_v_the_tree->GetBranch(((char *)"jb1phi_2018"));

  /* "EMTree.pyx":3874
 *         self.jb1phi_2018_branch = the_tree.GetBranch("jb1phi_2018")
 *         #if not self.jb1phi_2018_branch and "jb1phi_2018" not in self.complained:
 *         if not self.jb1phi_2018_branch and "jb1phi_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1phi_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1phi_2018")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb1phi_2018_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L748_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L748_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3875
 *         #if not self.jb1phi_2018_branch and "jb1phi_2018" not in self.complained:
 *         if not self.jb1phi_2018_branch and "jb1phi_2018":
 *             warnings.warn( "EMTree: Expected branch jb1phi_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1phi_2018")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3875, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3875, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__250, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3875, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3874
 *         self.jb1phi_2018_branch = the_tree.GetBranch("jb1phi_2018")
 *         #if not self.jb1phi_2018_branch and "jb1phi_2018" not in self.complained:
 *         if not self.jb1phi_2018_branch and "jb1phi_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1phi_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1phi_2018")
 */
    goto __pyx_L747;
  }

  /* "EMTree.pyx":3878
 *             #self.complained.add("jb1phi_2018")
 *         else:
 *             self.jb1phi_2018_branch.SetAddress(<void*>&self.jb1phi_2018_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb1pt_2016"
 */
  /*else*/ {
    __pyx_v_self->jb1phi_2018_branch->SetAddress(((void *)(&__pyx_v_self->jb1phi_2018_value)));
  }
  __pyx_L747:;

  /* "EMTree.pyx":3881
 * 
 *         #print "making jb1pt_2016"
 *         self.jb1pt_2016_branch = the_tree.GetBranch("jb1pt_2016")             # <<<<<<<<<<<<<<
 *         #if not self.jb1pt_2016_branch and "jb1pt_2016" not in self.complained:
 *         if not self.jb1pt_2016_branch and "jb1pt_2016":
 */
  __pyx_v_self->jb1pt_2016_branch = __pyx_v_the_tree->GetBranch(((char *)"jb1pt_2016"));

  /* "EMTree.pyx":3883
 *         self.jb1pt_2016_branch = the_tree.GetBranch("jb1pt_2016")
 *         #if not self.jb1pt_2016_branch and "jb1pt_2016" not in self.complained:
 *         if not self.jb1pt_2016_branch and "jb1pt_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1pt_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1pt_2016")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb1pt_2016_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L751_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L751_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3884
 *         #if not self.jb1pt_2016_branch and "jb1pt_2016" not in self.complained:
 *         if not self.jb1pt_2016_branch and "jb1pt_2016":
 *             warnings.warn( "EMTree: Expected branch jb1pt_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1pt_2016")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3884, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3884, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__251, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3884, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3883
 *         self.jb1pt_2016_branch = the_tree.GetBranch("jb1pt_2016")
 *         #if not self.jb1pt_2016_branch and "jb1pt_2016" not in self.complained:
 *         if not self.jb1pt_2016_branch and "jb1pt_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1pt_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1pt_2016")
 */
    goto __pyx_L750;
  }

  /* "EMTree.pyx":3887
 *             #self.complained.add("jb1pt_2016")
 *         else:
 *             self.jb1pt_2016_branch.SetAddress(<void*>&self.jb1pt_2016_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb1pt_2017"
 */
  /*else*/ {
    __pyx_v_self->jb1pt_2016_branch->SetAddress(((void *)(&__pyx_v_self->jb1pt_2016_value)));
  }
  __pyx_L750:;

  /* "EMTree.pyx":3890
 * 
 *         #print "making jb1pt_2017"
 *         self.jb1pt_2017_branch = the_tree.GetBranch("jb1pt_2017")             # <<<<<<<<<<<<<<
 *         #if not self.jb1pt_2017_branch and "jb1pt_2017" not in self.complained:
 *         if not self.jb1pt_2017_branch and "jb1pt_2017":
 */
  __pyx_v_self->jb1pt_2017_branch = __pyx_v_the_tree->GetBranch(((char *)"jb1pt_2017"));

  /* "EMTree.pyx":3892
 *         self.jb1pt_2017_branch = the_tree.GetBranch("jb1pt_2017")
 *         #if not self.jb1pt_2017_branch and "jb1pt_2017" not in self.complained:
 *         if not self.jb1pt_2017_branch and "jb1pt_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1pt_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1pt_2017")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb1pt_2017_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L754_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L754_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3893
 *         #if not self.jb1pt_2017_branch and "jb1pt_2017" not in self.complained:
 *         if not self.jb1pt_2017_branch and "jb1pt_2017":
 *             warnings.warn( "EMTree: Expected branch jb1pt_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1pt_2017")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3893, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3893, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__252, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3893, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3892
 *         self.jb1pt_2017_branch = the_tree.GetBranch("jb1pt_2017")
 *         #if not self.jb1pt_2017_branch and "jb1pt_2017" not in self.complained:
 *         if not self.jb1pt_2017_branch and "jb1pt_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1pt_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1pt_2017")
 */
    goto __pyx_L753;
  }

  /* "EMTree.pyx":3896
 *             #self.complained.add("jb1pt_2017")
 *         else:
 *             self.jb1pt_2017_branch.SetAddress(<void*>&self.jb1pt_2017_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb1pt_2018"
 */
  /*else*/ {
    __pyx_v_self->jb1pt_2017_branch->SetAddress(((void *)(&__pyx_v_self->jb1pt_2017_value)));
  }
  __pyx_L753:;

  /* "EMTree.pyx":3899
 * 
 *         #print "making jb1pt_2018"
 *         self.jb1pt_2018_branch = the_tree.GetBranch("jb1pt_2018")             # <<<<<<<<<<<<<<
 *         #if not self.jb1pt_2018_branch and "jb1pt_2018" not in self.complained:
 *         if not self.jb1pt_2018_branch and "jb1pt_2018":
 */
  __pyx_v_self->jb1pt_2018_branch = __pyx_v_the_tree->GetBranch(((char *)"jb1pt_2018"));

  /* "EMTree.pyx":3901
 *         self.jb1pt_2018_branch = the_tree.GetBranch("jb1pt_2018")
 *         #if not self.jb1pt_2018_branch and "jb1pt_2018" not in self.complained:
 *         if not self.jb1pt_2018_branch and "jb1pt_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1pt_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1pt_2018")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb1pt_2018_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L757_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L757_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3902
 *         #if not self.jb1pt_2018_branch and "jb1pt_2018" not in self.complained:
 *         if not self.jb1pt_2018_branch and "jb1pt_2018":
 *             warnings.warn( "EMTree: Expected branch jb1pt_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1pt_2018")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3902, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3902, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__253, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3902, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3901
 *         self.jb1pt_2018_branch = the_tree.GetBranch("jb1pt_2018")
 *         #if not self.jb1pt_2018_branch and "jb1pt_2018" not in self.complained:
 *         if not self.jb1pt_2018_branch and "jb1pt_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb1pt_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb1pt_2018")
 */
    goto __pyx_L756;
  }

  /* "EMTree.pyx":3905
 *             #self.complained.add("jb1pt_2018")
 *         else:
 *             self.jb1pt_2018_branch.SetAddress(<void*>&self.jb1pt_2018_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb2eta_2016"
 */
  /*else*/ {
    __pyx_v_self->jb1pt_2018_branch->SetAddress(((void *)(&__pyx_v_self->jb1pt_2018_value)));
  }
  __pyx_L756:;

  /* "EMTree.pyx":3908
 * 
 *         #print "making jb2eta_2016"
 *         self.jb2eta_2016_branch = the_tree.GetBranch("jb2eta_2016")             # <<<<<<<<<<<<<<
 *         #if not self.jb2eta_2016_branch and "jb2eta_2016" not in self.complained:
 *         if not self.jb2eta_2016_branch and "jb2eta_2016":
 */
  __pyx_v_self->jb2eta_2016_branch = __pyx_v_the_tree->GetBranch(((char *)"jb2eta_2016"));

  /* "EMTree.pyx":3910
 *         self.jb2eta_2016_branch = the_tree.GetBranch("jb2eta_2016")
 *         #if not self.jb2eta_2016_branch and "jb2eta_2016" not in self.complained:
 *         if not self.jb2eta_2016_branch and "jb2eta_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2eta_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2eta_2016")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb2eta_2016_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L760_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L760_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3911
 *         #if not self.jb2eta_2016_branch and "jb2eta_2016" not in self.complained:
 *         if not self.jb2eta_2016_branch and "jb2eta_2016":
 *             warnings.warn( "EMTree: Expected branch jb2eta_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2eta_2016")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3911, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3911, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__254, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3911, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3910
 *         self.jb2eta_2016_branch = the_tree.GetBranch("jb2eta_2016")
 *         #if not self.jb2eta_2016_branch and "jb2eta_2016" not in self.complained:
 *         if not self.jb2eta_2016_branch and "jb2eta_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2eta_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2eta_2016")
 */
    goto __pyx_L759;
  }

  /* "EMTree.pyx":3914
 *             #self.complained.add("jb2eta_2016")
 *         else:
 *             self.jb2eta_2016_branch.SetAddress(<void*>&self.jb2eta_2016_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb2eta_2017"
 */
  /*else*/ {
    __pyx_v_self->jb2eta_2016_branch->SetAddress(((void *)(&__pyx_v_self->jb2eta_2016_value)));
  }
  __pyx_L759:;

  /* "EMTree.pyx":3917
 * 
 *         #print "making jb2eta_2017"
 *         self.jb2eta_2017_branch = the_tree.GetBranch("jb2eta_2017")             # <<<<<<<<<<<<<<
 *         #if not self.jb2eta_2017_branch and "jb2eta_2017" not in self.complained:
 *         if not self.jb2eta_2017_branch and "jb2eta_2017":
 */
  __pyx_v_self->jb2eta_2017_branch = __pyx_v_the_tree->GetBranch(((char *)"jb2eta_2017"));

  /* "EMTree.pyx":3919
 *         self.jb2eta_2017_branch = the_tree.GetBranch("jb2eta_2017")
 *         #if not self.jb2eta_2017_branch and "jb2eta_2017" not in self.complained:
 *         if not self.jb2eta_2017_branch and "jb2eta_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2eta_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2eta_2017")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb2eta_2017_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L763_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L763_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3920
 *         #if not self.jb2eta_2017_branch and "jb2eta_2017" not in self.complained:
 *         if not self.jb2eta_2017_branch and "jb2eta_2017":
 *             warnings.warn( "EMTree: Expected branch jb2eta_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2eta_2017")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3920, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3920, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__255, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3920, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3919
 *         self.jb2eta_2017_branch = the_tree.GetBranch("jb2eta_2017")
 *         #if not self.jb2eta_2017_branch and "jb2eta_2017" not in self.complained:
 *         if not self.jb2eta_2017_branch and "jb2eta_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2eta_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2eta_2017")
 */
    goto __pyx_L762;
  }

  /* "EMTree.pyx":3923
 *             #self.complained.add("jb2eta_2017")
 *         else:
 *             self.jb2eta_2017_branch.SetAddress(<void*>&self.jb2eta_2017_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb2eta_2018"
 */
  /*else*/ {
    __pyx_v_self->jb2eta_2017_branch->SetAddress(((void *)(&__pyx_v_self->jb2eta_2017_value)));
  }
  __pyx_L762:;

  /* "EMTree.pyx":3926
 * 
 *         #print "making jb2eta_2018"
 *         self.jb2eta_2018_branch = the_tree.GetBranch("jb2eta_2018")             # <<<<<<<<<<<<<<
 *         #if not self.jb2eta_2018_branch and "jb2eta_2018" not in self.complained:
 *         if not self.jb2eta_2018_branch and "jb2eta_2018":
 */
  __pyx_v_self->jb2eta_2018_branch = __pyx_v_the_tree->GetBranch(((char *)"jb2eta_2018"));

  /* "EMTree.pyx":3928
 *         self.jb2eta_2018_branch = the_tree.GetBranch("jb2eta_2018")
 *         #if not self.jb2eta_2018_branch and "jb2eta_2018" not in self.complained:
 *         if not self.jb2eta_2018_branch and "jb2eta_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2eta_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2eta_2018")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb2eta_2018_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L766_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L766_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3929
 *         #if not self.jb2eta_2018_branch and "jb2eta_2018" not in self.complained:
 *         if not self.jb2eta_2018_branch and "jb2eta_2018":
 *             warnings.warn( "EMTree: Expected branch jb2eta_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2eta_2018")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3929, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3929, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__256, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3929, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3928
 *         self.jb2eta_2018_branch = the_tree.GetBranch("jb2eta_2018")
 *         #if not self.jb2eta_2018_branch and "jb2eta_2018" not in self.complained:
 *         if not self.jb2eta_2018_branch and "jb2eta_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2eta_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2eta_2018")
 */
    goto __pyx_L765;
  }

  /* "EMTree.pyx":3932
 *             #self.complained.add("jb2eta_2018")
 *         else:
 *             self.jb2eta_2018_branch.SetAddress(<void*>&self.jb2eta_2018_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb2hadronflavor_2016"
 */
  /*else*/ {
    __pyx_v_self->jb2eta_2018_branch->SetAddress(((void *)(&__pyx_v_self->jb2eta_2018_value)));
  }
  __pyx_L765:;

  /* "EMTree.pyx":3935
 * 
 *         #print "making jb2hadronflavor_2016"
 *         self.jb2hadronflavor_2016_branch = the_tree.GetBranch("jb2hadronflavor_2016")             # <<<<<<<<<<<<<<
 *         #if not self.jb2hadronflavor_2016_branch and "jb2hadronflavor_2016" not in self.complained:
 *         if not self.jb2hadronflavor_2016_branch and "jb2hadronflavor_2016":
 */
  __pyx_v_self->jb2hadronflavor_2016_branch = __pyx_v_the_tree->GetBranch(((char *)"jb2hadronflavor_2016"));

  /* "EMTree.pyx":3937
 *         self.jb2hadronflavor_2016_branch = the_tree.GetBranch("jb2hadronflavor_2016")
 *         #if not self.jb2hadronflavor_2016_branch and "jb2hadronflavor_2016" not in self.complained:
 *         if not self.jb2hadronflavor_2016_branch and "jb2hadronflavor_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2hadronflavor_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2hadronflavor_2016")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb2hadronflavor_2016_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L769_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L769_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3938
 *         #if not self.jb2hadronflavor_2016_branch and "jb2hadronflavor_2016" not in self.complained:
 *         if not self.jb2hadronflavor_2016_branch and "jb2hadronflavor_2016":
 *             warnings.warn( "EMTree: Expected branch jb2hadronflavor_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2hadronflavor_2016")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3938, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3938, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__257, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3938, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3937
 *         self.jb2hadronflavor_2016_branch = the_tree.GetBranch("jb2hadronflavor_2016")
 *         #if not self.jb2hadronflavor_2016_branch and "jb2hadronflavor_2016" not in self.complained:
 *         if not self.jb2hadronflavor_2016_branch and "jb2hadronflavor_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2hadronflavor_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2hadronflavor_2016")
 */
    goto __pyx_L768;
  }

  /* "EMTree.pyx":3941
 *             #self.complained.add("jb2hadronflavor_2016")
 *         else:
 *             self.jb2hadronflavor_2016_branch.SetAddress(<void*>&self.jb2hadronflavor_2016_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb2hadronflavor_2017"
 */
  /*else*/ {
    __pyx_v_self->jb2hadronflavor_2016_branch->SetAddress(((void *)(&__pyx_v_self->jb2hadronflavor_2016_value)));
  }
  __pyx_L768:;

  /* "EMTree.pyx":3944
 * 
 *         #print "making jb2hadronflavor_2017"
 *         self.jb2hadronflavor_2017_branch = the_tree.GetBranch("jb2hadronflavor_2017")             # <<<<<<<<<<<<<<
 *         #if not self.jb2hadronflavor_2017_branch and "jb2hadronflavor_2017" not in self.complained:
 *         if not self.jb2hadronflavor_2017_branch and "jb2hadronflavor_2017":
 */
  __pyx_v_self->jb2hadronflavor_2017_branch = __pyx_v_the_tree->GetBranch(((char *)"jb2hadronflavor_2017"));

  /* "EMTree.pyx":3946
 *         self.jb2hadronflavor_2017_branch = the_tree.GetBranch("jb2hadronflavor_2017")
 *         #if not self.jb2hadronflavor_2017_branch and "jb2hadronflavor_2017" not in self.complained:
 *         if not self.jb2hadronflavor_2017_branch and "jb2hadronflavor_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2hadronflavor_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2hadronflavor_2017")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb2hadronflavor_2017_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L772_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L772_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3947
 *         #if not self.jb2hadronflavor_2017_branch and "jb2hadronflavor_2017" not in self.complained:
 *         if not self.jb2hadronflavor_2017_branch and "jb2hadronflavor_2017":
 *             warnings.warn( "EMTree: Expected branch jb2hadronflavor_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2hadronflavor_2017")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3947, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3947, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__258, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3947, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3946
 *         self.jb2hadronflavor_2017_branch = the_tree.GetBranch("jb2hadronflavor_2017")
 *         #if not self.jb2hadronflavor_2017_branch and "jb2hadronflavor_2017" not in self.complained:
 *         if not self.jb2hadronflavor_2017_branch and "jb2hadronflavor_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2hadronflavor_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2hadronflavor_2017")
 */
    goto __pyx_L771;
  }

  /* "EMTree.pyx":3950
 *             #self.complained.add("jb2hadronflavor_2017")
 *         else:
 *             self.jb2hadronflavor_2017_branch.SetAddress(<void*>&self.jb2hadronflavor_2017_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb2hadronflavor_2018"
 */
  /*else*/ {
    __pyx_v_self->jb2hadronflavor_2017_branch->SetAddress(((void *)(&__pyx_v_self->jb2hadronflavor_2017_value)));
  }
  __pyx_L771:;

  /* "EMTree.pyx":3953
 * 
 *         #print "making jb2hadronflavor_2018"
 *         self.jb2hadronflavor_2018_branch = the_tree.GetBranch("jb2hadronflavor_2018")             # <<<<<<<<<<<<<<
 *         #if not self.jb2hadronflavor_2018_branch and "jb2hadronflavor_2018" not in self.complained:
 *         if not self.jb2hadronflavor_2018_branch and "jb2hadronflavor_2018":
 */
  __pyx_v_self->jb2hadronflavor_2018_branch = __pyx_v_the_tree->GetBranch(((char *)"jb2hadronflavor_2018"));

  /* "EMTree.pyx":3955
 *         self.jb2hadronflavor_2018_branch = the_tree.GetBranch("jb2hadronflavor_2018")
 *         #if not self.jb2hadronflavor_2018_branch and "jb2hadronflavor_2018" not in self.complained:
 *         if not self.jb2hadronflavor_2018_branch and "jb2hadronflavor_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2hadronflavor_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2hadronflavor_2018")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb2hadronflavor_2018_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L775_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L775_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3956
 *         #if not self.jb2hadronflavor_2018_branch and "jb2hadronflavor_2018" not in self.complained:
 *         if not self.jb2hadronflavor_2018_branch and "jb2hadronflavor_2018":
 *             warnings.warn( "EMTree: Expected branch jb2hadronflavor_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2hadronflavor_2018")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3956, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3956, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__259, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3956, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3955
 *         self.jb2hadronflavor_2018_branch = the_tree.GetBranch("jb2hadronflavor_2018")
 *         #if not self.jb2hadronflavor_2018_branch and "jb2hadronflavor_2018" not in self.complained:
 *         if not self.jb2hadronflavor_2018_branch and "jb2hadronflavor_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2hadronflavor_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2hadronflavor_2018")
 */
    goto __pyx_L774;
  }

  /* "EMTree.pyx":3959
 *             #self.complained.add("jb2hadronflavor_2018")
 *         else:
 *             self.jb2hadronflavor_2018_branch.SetAddress(<void*>&self.jb2hadronflavor_2018_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb2phi_2016"
 */
  /*else*/ {
    __pyx_v_self->jb2hadronflavor_2018_branch->SetAddress(((void *)(&__pyx_v_self->jb2hadronflavor_2018_value)));
  }
  __pyx_L774:;

  /* "EMTree.pyx":3962
 * 
 *         #print "making jb2phi_2016"
 *         self.jb2phi_2016_branch = the_tree.GetBranch("jb2phi_2016")             # <<<<<<<<<<<<<<
 *         #if not self.jb2phi_2016_branch and "jb2phi_2016" not in self.complained:
 *         if not self.jb2phi_2016_branch and "jb2phi_2016":
 */
  __pyx_v_self->jb2phi_2016_branch = __pyx_v_the_tree->GetBranch(((char *)"jb2phi_2016"));

  /* "EMTree.pyx":3964
 *         self.jb2phi_2016_branch = the_tree.GetBranch("jb2phi_2016")
 *         #if not self.jb2phi_2016_branch and "jb2phi_2016" not in self.complained:
 *         if not self.jb2phi_2016_branch and "jb2phi_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2phi_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2phi_2016")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb2phi_2016_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L778_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L778_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3965
 *         #if not self.jb2phi_2016_branch and "jb2phi_2016" not in self.complained:
 *         if not self.jb2phi_2016_branch and "jb2phi_2016":
 *             warnings.warn( "EMTree: Expected branch jb2phi_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2phi_2016")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3965, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3965, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__260, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3965, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3964
 *         self.jb2phi_2016_branch = the_tree.GetBranch("jb2phi_2016")
 *         #if not self.jb2phi_2016_branch and "jb2phi_2016" not in self.complained:
 *         if not self.jb2phi_2016_branch and "jb2phi_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2phi_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2phi_2016")
 */
    goto __pyx_L777;
  }

  /* "EMTree.pyx":3968
 *             #self.complained.add("jb2phi_2016")
 *         else:
 *             self.jb2phi_2016_branch.SetAddress(<void*>&self.jb2phi_2016_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb2phi_2017"
 */
  /*else*/ {
    __pyx_v_self->jb2phi_2016_branch->SetAddress(((void *)(&__pyx_v_self->jb2phi_2016_value)));
  }
  __pyx_L777:;

  /* "EMTree.pyx":3971
 * 
 *         #print "making jb2phi_2017"
 *         self.jb2phi_2017_branch = the_tree.GetBranch("jb2phi_2017")             # <<<<<<<<<<<<<<
 *         #if not self.jb2phi_2017_branch and "jb2phi_2017" not in self.complained:
 *         if not self.jb2phi_2017_branch and "jb2phi_2017":
 */
  __pyx_v_self->jb2phi_2017_branch = __pyx_v_the_tree->GetBranch(((char *)"jb2phi_2017"));

  /* "EMTree.pyx":3973
 *         self.jb2phi_2017_branch = the_tree.GetBranch("jb2phi_2017")
 *         #if not self.jb2phi_2017_branch and "jb2phi_2017" not in self.complained:
 *         if not self.jb2phi_2017_branch and "jb2phi_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2phi_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2phi_2017")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb2phi_2017_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L781_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L781_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3974
 *         #if not self.jb2phi_2017_branch and "jb2phi_2017" not in self.complained:
 *         if not self.jb2phi_2017_branch and "jb2phi_2017":
 *             warnings.warn( "EMTree: Expected branch jb2phi_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2phi_2017")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3974, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3974, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__261, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3974, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3973
 *         self.jb2phi_2017_branch = the_tree.GetBranch("jb2phi_2017")
 *         #if not self.jb2phi_2017_branch and "jb2phi_2017" not in self.complained:
 *         if not self.jb2phi_2017_branch and "jb2phi_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2phi_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2phi_2017")
 */
    goto __pyx_L780;
  }

  /* "EMTree.pyx":3977
 *             #self.complained.add("jb2phi_2017")
 *         else:
 *             self.jb2phi_2017_branch.SetAddress(<void*>&self.jb2phi_2017_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb2phi_2018"
 */
  /*else*/ {
    __pyx_v_self->jb2phi_2017_branch->SetAddress(((void *)(&__pyx_v_self->jb2phi_2017_value)));
  }
  __pyx_L780:;

  /* "EMTree.pyx":3980
 * 
 *         #print "making jb2phi_2018"
 *         self.jb2phi_2018_branch = the_tree.GetBranch("jb2phi_2018")             # <<<<<<<<<<<<<<
 *         #if not self.jb2phi_2018_branch and "jb2phi_2018" not in self.complained:
 *         if not self.jb2phi_2018_branch and "jb2phi_2018":
 */
  __pyx_v_self->jb2phi_2018_branch = __pyx_v_the_tree->GetBranch(((char *)"jb2phi_2018"));

  /* "EMTree.pyx":3982
 *         self.jb2phi_2018_branch = the_tree.GetBranch("jb2phi_2018")
 *         #if not self.jb2phi_2018_branch and "jb2phi_2018" not in self.complained:
 *         if not self.jb2phi_2018_branch and "jb2phi_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2phi_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2phi_2018")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb2phi_2018_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L784_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L784_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3983
 *         #if not self.jb2phi_2018_branch and "jb2phi_2018" not in self.complained:
 *         if not self.jb2phi_2018_branch and "jb2phi_2018":
 *             warnings.warn( "EMTree: Expected branch jb2phi_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2phi_2018")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3983, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3983, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__262, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3983, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3982
 *         self.jb2phi_2018_branch = the_tree.GetBranch("jb2phi_2018")
 *         #if not self.jb2phi_2018_branch and "jb2phi_2018" not in self.complained:
 *         if not self.jb2phi_2018_branch and "jb2phi_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2phi_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2phi_2018")
 */
    goto __pyx_L783;
  }

  /* "EMTree.pyx":3986
 *             #self.complained.add("jb2phi_2018")
 *         else:
 *             self.jb2phi_2018_branch.SetAddress(<void*>&self.jb2phi_2018_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb2pt_2016"
 */
  /*else*/ {
    __pyx_v_self->jb2phi_2018_branch->SetAddress(((void *)(&__pyx_v_self->jb2phi_2018_value)));
  }
  __pyx_L783:;

  /* "EMTree.pyx":3989
 * 
 *         #print "making jb2pt_2016"
 *         self.jb2pt_2016_branch = the_tree.GetBranch("jb2pt_2016")             # <<<<<<<<<<<<<<
 *         #if not self.jb2pt_2016_branch and "jb2pt_2016" not in self.complained:
 *         if not self.jb2pt_2016_branch and "jb2pt_2016":
 */
  __pyx_v_self->jb2pt_2016_branch = __pyx_v_the_tree->GetBranch(((char *)"jb2pt_2016"));

  /* "EMTree.pyx":3991
 *         self.jb2pt_2016_branch = the_tree.GetBranch("jb2pt_2016")
 *         #if not self.jb2pt_2016_branch and "jb2pt_2016" not in self.complained:
 *         if not self.jb2pt_2016_branch and "jb2pt_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2pt_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2pt_2016")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb2pt_2016_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L787_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L787_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":3992
 *         #if not self.jb2pt_2016_branch and "jb2pt_2016" not in self.complained:
 *         if not self.jb2pt_2016_branch and "jb2pt_2016":
 *             warnings.warn( "EMTree: Expected branch jb2pt_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2pt_2016")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3992, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3992, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__263, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3992, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":3991
 *         self.jb2pt_2016_branch = the_tree.GetBranch("jb2pt_2016")
 *         #if not self.jb2pt_2016_branch and "jb2pt_2016" not in self.complained:
 *         if not self.jb2pt_2016_branch and "jb2pt_2016":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2pt_2016 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2pt_2016")
 */
    goto __pyx_L786;
  }

  /* "EMTree.pyx":3995
 *             #self.complained.add("jb2pt_2016")
 *         else:
 *             self.jb2pt_2016_branch.SetAddress(<void*>&self.jb2pt_2016_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb2pt_2017"
 */
  /*else*/ {
    __pyx_v_self->jb2pt_2016_branch->SetAddress(((void *)(&__pyx_v_self->jb2pt_2016_value)));
  }
  __pyx_L786:;

  /* "EMTree.pyx":3998
 * 
 *         #print "making jb2pt_2017"
 *         self.jb2pt_2017_branch = the_tree.GetBranch("jb2pt_2017")             # <<<<<<<<<<<<<<
 *         #if not self.jb2pt_2017_branch and "jb2pt_2017" not in self.complained:
 *         if not self.jb2pt_2017_branch and "jb2pt_2017":
 */
  __pyx_v_self->jb2pt_2017_branch = __pyx_v_the_tree->GetBranch(((char *)"jb2pt_2017"));

  /* "EMTree.pyx":4000
 *         self.jb2pt_2017_branch = the_tree.GetBranch("jb2pt_2017")
 *         #if not self.jb2pt_2017_branch and "jb2pt_2017" not in self.complained:
 *         if not self.jb2pt_2017_branch and "jb2pt_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2pt_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2pt_2017")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb2pt_2017_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L790_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L790_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4001
 *         #if not self.jb2pt_2017_branch and "jb2pt_2017" not in self.complained:
 *         if not self.jb2pt_2017_branch and "jb2pt_2017":
 *             warnings.warn( "EMTree: Expected branch jb2pt_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2pt_2017")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4001, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4001, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__264, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4001, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4000
 *         self.jb2pt_2017_branch = the_tree.GetBranch("jb2pt_2017")
 *         #if not self.jb2pt_2017_branch and "jb2pt_2017" not in self.complained:
 *         if not self.jb2pt_2017_branch and "jb2pt_2017":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2pt_2017 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2pt_2017")
 */
    goto __pyx_L789;
  }

  /* "EMTree.pyx":4004
 *             #self.complained.add("jb2pt_2017")
 *         else:
 *             self.jb2pt_2017_branch.SetAddress(<void*>&self.jb2pt_2017_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jb2pt_2018"
 */
  /*else*/ {
    __pyx_v_self->jb2pt_2017_branch->SetAddress(((void *)(&__pyx_v_self->jb2pt_2017_value)));
  }
  __pyx_L789:;

  /* "EMTree.pyx":4007
 * 
 *         #print "making jb2pt_2018"
 *         self.jb2pt_2018_branch = the_tree.GetBranch("jb2pt_2018")             # <<<<<<<<<<<<<<
 *         #if not self.jb2pt_2018_branch and "jb2pt_2018" not in self.complained:
 *         if not self.jb2pt_2018_branch and "jb2pt_2018":
 */
  __pyx_v_self->jb2pt_2018_branch = __pyx_v_the_tree->GetBranch(((char *)"jb2pt_2018"));

  /* "EMTree.pyx":4009
 *         self.jb2pt_2018_branch = the_tree.GetBranch("jb2pt_2018")
 *         #if not self.jb2pt_2018_branch and "jb2pt_2018" not in self.complained:
 *         if not self.jb2pt_2018_branch and "jb2pt_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2pt_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2pt_2018")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jb2pt_2018_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L793_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L793_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4010
 *         #if not self.jb2pt_2018_branch and "jb2pt_2018" not in self.complained:
 *         if not self.jb2pt_2018_branch and "jb2pt_2018":
 *             warnings.warn( "EMTree: Expected branch jb2pt_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2pt_2018")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4010, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4010, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__265, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4010, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4009
 *         self.jb2pt_2018_branch = the_tree.GetBranch("jb2pt_2018")
 *         #if not self.jb2pt_2018_branch and "jb2pt_2018" not in self.complained:
 *         if not self.jb2pt_2018_branch and "jb2pt_2018":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jb2pt_2018 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jb2pt_2018")
 */
    goto __pyx_L792;
  }

  /* "EMTree.pyx":4013
 *             #self.complained.add("jb2pt_2018")
 *         else:
 *             self.jb2pt_2018_branch.SetAddress(<void*>&self.jb2pt_2018_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto20"
 */
  /*else*/ {
    __pyx_v_self->jb2pt_2018_branch->SetAddress(((void *)(&__pyx_v_self->jb2pt_2018_value)));
  }
  __pyx_L792:;

  /* "EMTree.pyx":4016
 * 
 *         #print "making jetVeto20"
 *         self.jetVeto20_branch = the_tree.GetBranch("jetVeto20")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto20_branch and "jetVeto20" not in self.complained:
 *         if not self.jetVeto20_branch and "jetVeto20":
 */
  __pyx_v_self->jetVeto20_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto20"));

  /* "EMTree.pyx":4018
 *         self.jetVeto20_branch = the_tree.GetBranch("jetVeto20")
 *         #if not self.jetVeto20_branch and "jetVeto20" not in self.complained:
 *         if not self.jetVeto20_branch and "jetVeto20":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto20")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto20_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L796_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L796_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4019
 *         #if not self.jetVeto20_branch and "jetVeto20" not in self.complained:
 *         if not self.jetVeto20_branch and "jetVeto20":
 *             warnings.warn( "EMTree: Expected branch jetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto20")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4019, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4019, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__266, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4019, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4018
 *         self.jetVeto20_branch = the_tree.GetBranch("jetVeto20")
 *         #if not self.jetVeto20_branch and "jetVeto20" not in self.complained:
 *         if not self.jetVeto20_branch and "jetVeto20":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto20")
 */
    goto __pyx_L795;
  }

  /* "EMTree.pyx":4022
 *             #self.complained.add("jetVeto20")
 *         else:
 *             self.jetVeto20_branch.SetAddress(<void*>&self.jetVeto20_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto20WoNoisyJets"
 */
  /*else*/ {
    __pyx_v_self->jetVeto20_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto20_value)));
  }
  __pyx_L795:;

  /* "EMTree.pyx":4025
 * 
 *         #print "making jetVeto20WoNoisyJets"
 *         self.jetVeto20WoNoisyJets_branch = the_tree.GetBranch("jetVeto20WoNoisyJets")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto20WoNoisyJets_branch and "jetVeto20WoNoisyJets" not in self.complained:
 *         if not self.jetVeto20WoNoisyJets_branch and "jetVeto20WoNoisyJets":
 */
  __pyx_v_self->jetVeto20WoNoisyJets_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto20WoNoisyJets"));

  /* "EMTree.pyx":4027
 *         self.jetVeto20WoNoisyJets_branch = the_tree.GetBranch("jetVeto20WoNoisyJets")
 *         #if not self.jetVeto20WoNoisyJets_branch and "jetVeto20WoNoisyJets" not in self.complained:
 *         if not self.jetVeto20WoNoisyJets_branch and "jetVeto20WoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto20WoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto20WoNoisyJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto20WoNoisyJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L799_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L799_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4028
 *         #if not self.jetVeto20WoNoisyJets_branch and "jetVeto20WoNoisyJets" not in self.complained:
 *         if not self.jetVeto20WoNoisyJets_branch and "jetVeto20WoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch jetVeto20WoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto20WoNoisyJets")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4028, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4028, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__267, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4028, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4027
 *         self.jetVeto20WoNoisyJets_branch = the_tree.GetBranch("jetVeto20WoNoisyJets")
 *         #if not self.jetVeto20WoNoisyJets_branch and "jetVeto20WoNoisyJets" not in self.complained:
 *         if not self.jetVeto20WoNoisyJets_branch and "jetVeto20WoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto20WoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto20WoNoisyJets")
 */
    goto __pyx_L798;
  }

  /* "EMTree.pyx":4031
 *             #self.complained.add("jetVeto20WoNoisyJets")
 *         else:
 *             self.jetVeto20WoNoisyJets_branch.SetAddress(<void*>&self.jetVeto20WoNoisyJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30"
 */
  /*else*/ {
    __pyx_v_self->jetVeto20WoNoisyJets_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto20WoNoisyJets_value)));
  }
  __pyx_L798:;

  /* "EMTree.pyx":4034
 * 
 *         #print "making jetVeto30"
 *         self.jetVeto30_branch = the_tree.GetBranch("jetVeto30")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30_branch and "jetVeto30" not in self.complained:
 *         if not self.jetVeto30_branch and "jetVeto30":
 */
  __pyx_v_self->jetVeto30_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30"));

  /* "EMTree.pyx":4036
 *         self.jetVeto30_branch = the_tree.GetBranch("jetVeto30")
 *         #if not self.jetVeto30_branch and "jetVeto30" not in self.complained:
 *         if not self.jetVeto30_branch and "jetVeto30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L802_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L802_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4037
 *         #if not self.jetVeto30_branch and "jetVeto30" not in self.complained:
 *         if not self.jetVeto30_branch and "jetVeto30":
 *             warnings.warn( "EMTree: Expected branch jetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4037, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4037, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__268, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4037, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4036
 *         self.jetVeto30_branch = the_tree.GetBranch("jetVeto30")
 *         #if not self.jetVeto30_branch and "jetVeto30" not in self.complained:
 *         if not self.jetVeto30_branch and "jetVeto30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30")
 */
    goto __pyx_L801;
  }

  /* "EMTree.pyx":4040
 *             #self.complained.add("jetVeto30")
 *         else:
 *             self.jetVeto30_branch.SetAddress(<void*>&self.jetVeto30_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30_value)));
  }
  __pyx_L801:;

  /* "EMTree.pyx":4043
 * 
 *         #print "making jetVeto30WoNoisyJets"
 *         self.jetVeto30WoNoisyJets_branch = the_tree.GetBranch("jetVeto30WoNoisyJets")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_branch and "jetVeto30WoNoisyJets" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_branch and "jetVeto30WoNoisyJets":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets"));

  /* "EMTree.pyx":4045
 *         self.jetVeto30WoNoisyJets_branch = the_tree.GetBranch("jetVeto30WoNoisyJets")
 *         #if not self.jetVeto30WoNoisyJets_branch and "jetVeto30WoNoisyJets" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_branch and "jetVeto30WoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L805_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L805_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4046
 *         #if not self.jetVeto30WoNoisyJets_branch and "jetVeto30WoNoisyJets" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_branch and "jetVeto30WoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4046, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4046, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__269, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4046, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4045
 *         self.jetVeto30WoNoisyJets_branch = the_tree.GetBranch("jetVeto30WoNoisyJets")
 *         #if not self.jetVeto30WoNoisyJets_branch and "jetVeto30WoNoisyJets" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_branch and "jetVeto30WoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets")
 */
    goto __pyx_L804;
  }

  /* "EMTree.pyx":4049
 *             #self.complained.add("jetVeto30WoNoisyJets")
 *         else:
 *             self.jetVeto30WoNoisyJets_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JERDown"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_value)));
  }
  __pyx_L804:;

  /* "EMTree.pyx":4052
 * 
 *         #print "making jetVeto30WoNoisyJets_JERDown"
 *         self.jetVeto30WoNoisyJets_JERDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JERDown")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JERDown_branch and "jetVeto30WoNoisyJets_JERDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JERDown_branch and "jetVeto30WoNoisyJets_JERDown":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JERDown_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JERDown"));

  /* "EMTree.pyx":4054
 *         self.jetVeto30WoNoisyJets_JERDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JERDown")
 *         #if not self.jetVeto30WoNoisyJets_JERDown_branch and "jetVeto30WoNoisyJets_JERDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JERDown_branch and "jetVeto30WoNoisyJets_JERDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JERDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JERDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JERDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L808_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L808_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4055
 *         #if not self.jetVeto30WoNoisyJets_JERDown_branch and "jetVeto30WoNoisyJets_JERDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JERDown_branch and "jetVeto30WoNoisyJets_JERDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JERDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JERDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4055, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4055, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__270, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4055, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4054
 *         self.jetVeto30WoNoisyJets_JERDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JERDown")
 *         #if not self.jetVeto30WoNoisyJets_JERDown_branch and "jetVeto30WoNoisyJets_JERDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JERDown_branch and "jetVeto30WoNoisyJets_JERDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JERDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JERDown")
 */
    goto __pyx_L807;
  }

  /* "EMTree.pyx":4058
 *             #self.complained.add("jetVeto30WoNoisyJets_JERDown")
 *         else:
 *             self.jetVeto30WoNoisyJets_JERDown_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JERDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JERUp"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JERDown_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JERDown_value)));
  }
  __pyx_L807:;

  /* "EMTree.pyx":4061
 * 
 *         #print "making jetVeto30WoNoisyJets_JERUp"
 *         self.jetVeto30WoNoisyJets_JERUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JERUp")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JERUp_branch and "jetVeto30WoNoisyJets_JERUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JERUp_branch and "jetVeto30WoNoisyJets_JERUp":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JERUp_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JERUp"));

  /* "EMTree.pyx":4063
 *         self.jetVeto30WoNoisyJets_JERUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JERUp")
 *         #if not self.jetVeto30WoNoisyJets_JERUp_branch and "jetVeto30WoNoisyJets_JERUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JERUp_branch and "jetVeto30WoNoisyJets_JERUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JERUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JERUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JERUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L811_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L811_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4064
 *         #if not self.jetVeto30WoNoisyJets_JERUp_branch and "jetVeto30WoNoisyJets_JERUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JERUp_branch and "jetVeto30WoNoisyJets_JERUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JERUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JERUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4064, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4064, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__271, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4064, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4063
 *         self.jetVeto30WoNoisyJets_JERUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JERUp")
 *         #if not self.jetVeto30WoNoisyJets_JERUp_branch and "jetVeto30WoNoisyJets_JERUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JERUp_branch and "jetVeto30WoNoisyJets_JERUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JERUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JERUp")
 */
    goto __pyx_L810;
  }

  /* "EMTree.pyx":4067
 *             #self.complained.add("jetVeto30WoNoisyJets_JERUp")
 *         else:
 *             self.jetVeto30WoNoisyJets_JERUp_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JERUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetAbsoluteDown"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JERUp_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JERUp_value)));
  }
  __pyx_L810:;

  /* "EMTree.pyx":4070
 * 
 *         #print "making jetVeto30WoNoisyJets_JetAbsoluteDown"
 *         self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetAbsoluteDown")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteDown":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteDown_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetAbsoluteDown"));

  /* "EMTree.pyx":4072
 *         self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetAbsoluteDown")
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L814_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L814_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4073
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4073, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4073, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__272, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4073, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4072
 *         self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetAbsoluteDown")
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteDown")
 */
    goto __pyx_L813;
  }

  /* "EMTree.pyx":4076
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteDown")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetAbsoluteDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetAbsoluteUp"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteDown_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteDown_value)));
  }
  __pyx_L813:;

  /* "EMTree.pyx":4079
 * 
 *         #print "making jetVeto30WoNoisyJets_JetAbsoluteUp"
 *         self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetAbsoluteUp")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteUp":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteUp_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetAbsoluteUp"));

  /* "EMTree.pyx":4081
 *         self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetAbsoluteUp")
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L817_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L817_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4082
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4082, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4082, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__273, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4082, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4081
 *         self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetAbsoluteUp")
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteUp")
 */
    goto __pyx_L816;
  }

  /* "EMTree.pyx":4085
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteUp")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetAbsoluteUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetAbsoluteyearDown"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteUp_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteUp_value)));
  }
  __pyx_L816:;

  /* "EMTree.pyx":4088
 * 
 *         #print "making jetVeto30WoNoisyJets_JetAbsoluteyearDown"
 *         self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetAbsoluteyearDown")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearDown":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetAbsoluteyearDown"));

  /* "EMTree.pyx":4090
 *         self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetAbsoluteyearDown")
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteyearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L820_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L820_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4091
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteyearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__274, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4090
 *         self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetAbsoluteyearDown")
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteyearDown")
 */
    goto __pyx_L819;
  }

  /* "EMTree.pyx":4094
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteyearDown")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetAbsoluteyearUp"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteyearDown_value)));
  }
  __pyx_L819:;

  /* "EMTree.pyx":4097
 * 
 *         #print "making jetVeto30WoNoisyJets_JetAbsoluteyearUp"
 *         self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetAbsoluteyearUp")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearUp":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetAbsoluteyearUp"));

  /* "EMTree.pyx":4099
 *         self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetAbsoluteyearUp")
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteyearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L823_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L823_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4100
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteyearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__275, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4099
 *         self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetAbsoluteyearUp")
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteyearUp")
 */
    goto __pyx_L822;
  }

  /* "EMTree.pyx":4103
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteyearUp")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetBBEC1Down"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteyearUp_value)));
  }
  __pyx_L822:;

  /* "EMTree.pyx":4106
 * 
 *         #print "making jetVeto30WoNoisyJets_JetBBEC1Down"
 *         self.jetVeto30WoNoisyJets_JetBBEC1Down_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetBBEC1Down")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1Down_branch and "jetVeto30WoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1Down_branch and "jetVeto30WoNoisyJets_JetBBEC1Down":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1Down_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetBBEC1Down"));

  /* "EMTree.pyx":4108
 *         self.jetVeto30WoNoisyJets_JetBBEC1Down_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetBBEC1Down")
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1Down_branch and "jetVeto30WoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1Down_branch and "jetVeto30WoNoisyJets_JetBBEC1Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1Down")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1Down_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L826_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L826_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4109
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1Down_branch and "jetVeto30WoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1Down_branch and "jetVeto30WoNoisyJets_JetBBEC1Down":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1Down")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__276, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4108
 *         self.jetVeto30WoNoisyJets_JetBBEC1Down_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetBBEC1Down")
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1Down_branch and "jetVeto30WoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1Down_branch and "jetVeto30WoNoisyJets_JetBBEC1Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1Down")
 */
    goto __pyx_L825;
  }

  /* "EMTree.pyx":4112
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1Down")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetBBEC1Down_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetBBEC1Down_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetBBEC1Up"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1Down_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1Down_value)));
  }
  __pyx_L825:;

  /* "EMTree.pyx":4115
 * 
 *         #print "making jetVeto30WoNoisyJets_JetBBEC1Up"
 *         self.jetVeto30WoNoisyJets_JetBBEC1Up_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetBBEC1Up")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1Up_branch and "jetVeto30WoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1Up_branch and "jetVeto30WoNoisyJets_JetBBEC1Up":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1Up_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetBBEC1Up"));

  /* "EMTree.pyx":4117
 *         self.jetVeto30WoNoisyJets_JetBBEC1Up_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetBBEC1Up")
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1Up_branch and "jetVeto30WoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1Up_branch and "jetVeto30WoNoisyJets_JetBBEC1Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1Up")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1Up_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L829_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L829_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4118
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1Up_branch and "jetVeto30WoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1Up_branch and "jetVeto30WoNoisyJets_JetBBEC1Up":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1Up")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__277, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4117
 *         self.jetVeto30WoNoisyJets_JetBBEC1Up_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetBBEC1Up")
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1Up_branch and "jetVeto30WoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1Up_branch and "jetVeto30WoNoisyJets_JetBBEC1Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1Up")
 */
    goto __pyx_L828;
  }

  /* "EMTree.pyx":4121
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1Up")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetBBEC1Up_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetBBEC1Up_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetBBEC1yearDown"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1Up_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1Up_value)));
  }
  __pyx_L828:;

  /* "EMTree.pyx":4124
 * 
 *         #print "making jetVeto30WoNoisyJets_JetBBEC1yearDown"
 *         self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetBBEC1yearDown")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch and "jetVeto30WoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch and "jetVeto30WoNoisyJets_JetBBEC1yearDown":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1yearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetBBEC1yearDown"));

  /* "EMTree.pyx":4126
 *         self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetBBEC1yearDown")
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch and "jetVeto30WoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch and "jetVeto30WoNoisyJets_JetBBEC1yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1yearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1yearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L832_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L832_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4127
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch and "jetVeto30WoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch and "jetVeto30WoNoisyJets_JetBBEC1yearDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1yearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__278, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4126
 *         self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetBBEC1yearDown")
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch and "jetVeto30WoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch and "jetVeto30WoNoisyJets_JetBBEC1yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1yearDown")
 */
    goto __pyx_L831;
  }

  /* "EMTree.pyx":4130
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1yearDown")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetBBEC1yearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetBBEC1yearUp"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1yearDown_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1yearDown_value)));
  }
  __pyx_L831:;

  /* "EMTree.pyx":4133
 * 
 *         #print "making jetVeto30WoNoisyJets_JetBBEC1yearUp"
 *         self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetBBEC1yearUp")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch and "jetVeto30WoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch and "jetVeto30WoNoisyJets_JetBBEC1yearUp":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1yearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetBBEC1yearUp"));

  /* "EMTree.pyx":4135
 *         self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetBBEC1yearUp")
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch and "jetVeto30WoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch and "jetVeto30WoNoisyJets_JetBBEC1yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1yearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1yearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L835_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L835_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4136
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch and "jetVeto30WoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch and "jetVeto30WoNoisyJets_JetBBEC1yearUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1yearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4136, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4136, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__279, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4136, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4135
 *         self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetBBEC1yearUp")
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch and "jetVeto30WoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch and "jetVeto30WoNoisyJets_JetBBEC1yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1yearUp")
 */
    goto __pyx_L834;
  }

  /* "EMTree.pyx":4139
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1yearUp")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetBBEC1yearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetEC2Down"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1yearUp_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1yearUp_value)));
  }
  __pyx_L834:;

  /* "EMTree.pyx":4142
 * 
 *         #print "making jetVeto30WoNoisyJets_JetEC2Down"
 *         self.jetVeto30WoNoisyJets_JetEC2Down_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetEC2Down")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetEC2Down_branch and "jetVeto30WoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2Down_branch and "jetVeto30WoNoisyJets_JetEC2Down":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetEC2Down_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetEC2Down"));

  /* "EMTree.pyx":4144
 *         self.jetVeto30WoNoisyJets_JetEC2Down_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetEC2Down")
 *         #if not self.jetVeto30WoNoisyJets_JetEC2Down_branch and "jetVeto30WoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2Down_branch and "jetVeto30WoNoisyJets_JetEC2Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2Down")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetEC2Down_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L838_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L838_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4145
 *         #if not self.jetVeto30WoNoisyJets_JetEC2Down_branch and "jetVeto30WoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2Down_branch and "jetVeto30WoNoisyJets_JetEC2Down":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2Down")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4145, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4145, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__280, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4145, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4144
 *         self.jetVeto30WoNoisyJets_JetEC2Down_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetEC2Down")
 *         #if not self.jetVeto30WoNoisyJets_JetEC2Down_branch and "jetVeto30WoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2Down_branch and "jetVeto30WoNoisyJets_JetEC2Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2Down")
 */
    goto __pyx_L837;
  }

  /* "EMTree.pyx":4148
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2Down")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetEC2Down_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetEC2Down_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetEC2Up"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetEC2Down_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetEC2Down_value)));
  }
  __pyx_L837:;

  /* "EMTree.pyx":4151
 * 
 *         #print "making jetVeto30WoNoisyJets_JetEC2Up"
 *         self.jetVeto30WoNoisyJets_JetEC2Up_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetEC2Up")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetEC2Up_branch and "jetVeto30WoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2Up_branch and "jetVeto30WoNoisyJets_JetEC2Up":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetEC2Up_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetEC2Up"));

  /* "EMTree.pyx":4153
 *         self.jetVeto30WoNoisyJets_JetEC2Up_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetEC2Up")
 *         #if not self.jetVeto30WoNoisyJets_JetEC2Up_branch and "jetVeto30WoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2Up_branch and "jetVeto30WoNoisyJets_JetEC2Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2Up")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetEC2Up_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L841_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L841_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4154
 *         #if not self.jetVeto30WoNoisyJets_JetEC2Up_branch and "jetVeto30WoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2Up_branch and "jetVeto30WoNoisyJets_JetEC2Up":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2Up")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4154, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4154, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__281, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4154, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4153
 *         self.jetVeto30WoNoisyJets_JetEC2Up_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetEC2Up")
 *         #if not self.jetVeto30WoNoisyJets_JetEC2Up_branch and "jetVeto30WoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2Up_branch and "jetVeto30WoNoisyJets_JetEC2Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2Up")
 */
    goto __pyx_L840;
  }

  /* "EMTree.pyx":4157
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2Up")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetEC2Up_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetEC2Up_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetEC2yearDown"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetEC2Up_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetEC2Up_value)));
  }
  __pyx_L840:;

  /* "EMTree.pyx":4160
 * 
 *         #print "making jetVeto30WoNoisyJets_JetEC2yearDown"
 *         self.jetVeto30WoNoisyJets_JetEC2yearDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetEC2yearDown")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetEC2yearDown_branch and "jetVeto30WoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2yearDown_branch and "jetVeto30WoNoisyJets_JetEC2yearDown":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetEC2yearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetEC2yearDown"));

  /* "EMTree.pyx":4162
 *         self.jetVeto30WoNoisyJets_JetEC2yearDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetEC2yearDown")
 *         #if not self.jetVeto30WoNoisyJets_JetEC2yearDown_branch and "jetVeto30WoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2yearDown_branch and "jetVeto30WoNoisyJets_JetEC2yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2yearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetEC2yearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L844_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L844_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4163
 *         #if not self.jetVeto30WoNoisyJets_JetEC2yearDown_branch and "jetVeto30WoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2yearDown_branch and "jetVeto30WoNoisyJets_JetEC2yearDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2yearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4163, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4163, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__282, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4163, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4162
 *         self.jetVeto30WoNoisyJets_JetEC2yearDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetEC2yearDown")
 *         #if not self.jetVeto30WoNoisyJets_JetEC2yearDown_branch and "jetVeto30WoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2yearDown_branch and "jetVeto30WoNoisyJets_JetEC2yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2yearDown")
 */
    goto __pyx_L843;
  }

  /* "EMTree.pyx":4166
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2yearDown")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetEC2yearDown_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetEC2yearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetEC2yearUp"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetEC2yearDown_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetEC2yearDown_value)));
  }
  __pyx_L843:;

  /* "EMTree.pyx":4169
 * 
 *         #print "making jetVeto30WoNoisyJets_JetEC2yearUp"
 *         self.jetVeto30WoNoisyJets_JetEC2yearUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetEC2yearUp")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetEC2yearUp_branch and "jetVeto30WoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2yearUp_branch and "jetVeto30WoNoisyJets_JetEC2yearUp":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetEC2yearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetEC2yearUp"));

  /* "EMTree.pyx":4171
 *         self.jetVeto30WoNoisyJets_JetEC2yearUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetEC2yearUp")
 *         #if not self.jetVeto30WoNoisyJets_JetEC2yearUp_branch and "jetVeto30WoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2yearUp_branch and "jetVeto30WoNoisyJets_JetEC2yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2yearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetEC2yearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L847_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L847_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4172
 *         #if not self.jetVeto30WoNoisyJets_JetEC2yearUp_branch and "jetVeto30WoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2yearUp_branch and "jetVeto30WoNoisyJets_JetEC2yearUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2yearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4172, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4172, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__283, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4172, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4171
 *         self.jetVeto30WoNoisyJets_JetEC2yearUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetEC2yearUp")
 *         #if not self.jetVeto30WoNoisyJets_JetEC2yearUp_branch and "jetVeto30WoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2yearUp_branch and "jetVeto30WoNoisyJets_JetEC2yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2yearUp")
 */
    goto __pyx_L846;
  }

  /* "EMTree.pyx":4175
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2yearUp")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetEC2yearUp_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetEC2yearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetFlavorQCDDown"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetEC2yearUp_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetEC2yearUp_value)));
  }
  __pyx_L846:;

  /* "EMTree.pyx":4178
 * 
 *         #print "making jetVeto30WoNoisyJets_JetFlavorQCDDown"
 *         self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetFlavorQCDDown")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch and "jetVeto30WoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch and "jetVeto30WoNoisyJets_JetFlavorQCDDown":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetFlavorQCDDown_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetFlavorQCDDown"));

  /* "EMTree.pyx":4180
 *         self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetFlavorQCDDown")
 *         #if not self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch and "jetVeto30WoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch and "jetVeto30WoNoisyJets_JetFlavorQCDDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetFlavorQCDDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetFlavorQCDDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L850_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L850_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4181
 *         #if not self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch and "jetVeto30WoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch and "jetVeto30WoNoisyJets_JetFlavorQCDDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetFlavorQCDDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4181, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4181, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__284, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4181, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4180
 *         self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetFlavorQCDDown")
 *         #if not self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch and "jetVeto30WoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch and "jetVeto30WoNoisyJets_JetFlavorQCDDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetFlavorQCDDown")
 */
    goto __pyx_L849;
  }

  /* "EMTree.pyx":4184
 *             #self.complained.add("jetVeto30WoNoisyJets_JetFlavorQCDDown")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetFlavorQCDDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetFlavorQCDUp"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetFlavorQCDDown_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetFlavorQCDDown_value)));
  }
  __pyx_L849:;

  /* "EMTree.pyx":4187
 * 
 *         #print "making jetVeto30WoNoisyJets_JetFlavorQCDUp"
 *         self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetFlavorQCDUp")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch and "jetVeto30WoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch and "jetVeto30WoNoisyJets_JetFlavorQCDUp":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetFlavorQCDUp_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetFlavorQCDUp"));

  /* "EMTree.pyx":4189
 *         self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetFlavorQCDUp")
 *         #if not self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch and "jetVeto30WoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch and "jetVeto30WoNoisyJets_JetFlavorQCDUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetFlavorQCDUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetFlavorQCDUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L853_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L853_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4190
 *         #if not self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch and "jetVeto30WoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch and "jetVeto30WoNoisyJets_JetFlavorQCDUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetFlavorQCDUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4190, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4190, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__285, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4190, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4189
 *         self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetFlavorQCDUp")
 *         #if not self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch and "jetVeto30WoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch and "jetVeto30WoNoisyJets_JetFlavorQCDUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetFlavorQCDUp")
 */
    goto __pyx_L852;
  }

  /* "EMTree.pyx":4193
 *             #self.complained.add("jetVeto30WoNoisyJets_JetFlavorQCDUp")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetFlavorQCDUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetHFDown"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetFlavorQCDUp_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetFlavorQCDUp_value)));
  }
  __pyx_L852:;

  /* "EMTree.pyx":4196
 * 
 *         #print "making jetVeto30WoNoisyJets_JetHFDown"
 *         self.jetVeto30WoNoisyJets_JetHFDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetHFDown")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetHFDown_branch and "jetVeto30WoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFDown_branch and "jetVeto30WoNoisyJets_JetHFDown":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetHFDown_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetHFDown"));

  /* "EMTree.pyx":4198
 *         self.jetVeto30WoNoisyJets_JetHFDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetHFDown")
 *         #if not self.jetVeto30WoNoisyJets_JetHFDown_branch and "jetVeto30WoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFDown_branch and "jetVeto30WoNoisyJets_JetHFDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetHFDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L856_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L856_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4199
 *         #if not self.jetVeto30WoNoisyJets_JetHFDown_branch and "jetVeto30WoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFDown_branch and "jetVeto30WoNoisyJets_JetHFDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4199, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4199, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__286, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4199, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4198
 *         self.jetVeto30WoNoisyJets_JetHFDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetHFDown")
 *         #if not self.jetVeto30WoNoisyJets_JetHFDown_branch and "jetVeto30WoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFDown_branch and "jetVeto30WoNoisyJets_JetHFDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFDown")
 */
    goto __pyx_L855;
  }

  /* "EMTree.pyx":4202
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFDown")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetHFDown_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetHFDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetHFUp"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetHFDown_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetHFDown_value)));
  }
  __pyx_L855:;

  /* "EMTree.pyx":4205
 * 
 *         #print "making jetVeto30WoNoisyJets_JetHFUp"
 *         self.jetVeto30WoNoisyJets_JetHFUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetHFUp")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetHFUp_branch and "jetVeto30WoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFUp_branch and "jetVeto30WoNoisyJets_JetHFUp":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetHFUp_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetHFUp"));

  /* "EMTree.pyx":4207
 *         self.jetVeto30WoNoisyJets_JetHFUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetHFUp")
 *         #if not self.jetVeto30WoNoisyJets_JetHFUp_branch and "jetVeto30WoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFUp_branch and "jetVeto30WoNoisyJets_JetHFUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetHFUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L859_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L859_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4208
 *         #if not self.jetVeto30WoNoisyJets_JetHFUp_branch and "jetVeto30WoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFUp_branch and "jetVeto30WoNoisyJets_JetHFUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4208, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4208, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__287, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4208, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4207
 *         self.jetVeto30WoNoisyJets_JetHFUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetHFUp")
 *         #if not self.jetVeto30WoNoisyJets_JetHFUp_branch and "jetVeto30WoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFUp_branch and "jetVeto30WoNoisyJets_JetHFUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFUp")
 */
    goto __pyx_L858;
  }

  /* "EMTree.pyx":4211
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFUp")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetHFUp_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetHFUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetHFyearDown"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetHFUp_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetHFUp_value)));
  }
  __pyx_L858:;

  /* "EMTree.pyx":4214
 * 
 *         #print "making jetVeto30WoNoisyJets_JetHFyearDown"
 *         self.jetVeto30WoNoisyJets_JetHFyearDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetHFyearDown")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetHFyearDown_branch and "jetVeto30WoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFyearDown_branch and "jetVeto30WoNoisyJets_JetHFyearDown":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetHFyearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetHFyearDown"));

  /* "EMTree.pyx":4216
 *         self.jetVeto30WoNoisyJets_JetHFyearDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetHFyearDown")
 *         #if not self.jetVeto30WoNoisyJets_JetHFyearDown_branch and "jetVeto30WoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFyearDown_branch and "jetVeto30WoNoisyJets_JetHFyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFyearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetHFyearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L862_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L862_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4217
 *         #if not self.jetVeto30WoNoisyJets_JetHFyearDown_branch and "jetVeto30WoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFyearDown_branch and "jetVeto30WoNoisyJets_JetHFyearDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFyearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4217, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4217, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__288, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4217, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4216
 *         self.jetVeto30WoNoisyJets_JetHFyearDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetHFyearDown")
 *         #if not self.jetVeto30WoNoisyJets_JetHFyearDown_branch and "jetVeto30WoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFyearDown_branch and "jetVeto30WoNoisyJets_JetHFyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFyearDown")
 */
    goto __pyx_L861;
  }

  /* "EMTree.pyx":4220
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFyearDown")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetHFyearDown_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetHFyearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetHFyearUp"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetHFyearDown_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetHFyearDown_value)));
  }
  __pyx_L861:;

  /* "EMTree.pyx":4223
 * 
 *         #print "making jetVeto30WoNoisyJets_JetHFyearUp"
 *         self.jetVeto30WoNoisyJets_JetHFyearUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetHFyearUp")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetHFyearUp_branch and "jetVeto30WoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFyearUp_branch and "jetVeto30WoNoisyJets_JetHFyearUp":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetHFyearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetHFyearUp"));

  /* "EMTree.pyx":4225
 *         self.jetVeto30WoNoisyJets_JetHFyearUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetHFyearUp")
 *         #if not self.jetVeto30WoNoisyJets_JetHFyearUp_branch and "jetVeto30WoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFyearUp_branch and "jetVeto30WoNoisyJets_JetHFyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFyearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetHFyearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L865_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L865_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4226
 *         #if not self.jetVeto30WoNoisyJets_JetHFyearUp_branch and "jetVeto30WoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFyearUp_branch and "jetVeto30WoNoisyJets_JetHFyearUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFyearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4226, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4226, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__289, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4226, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4225
 *         self.jetVeto30WoNoisyJets_JetHFyearUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetHFyearUp")
 *         #if not self.jetVeto30WoNoisyJets_JetHFyearUp_branch and "jetVeto30WoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFyearUp_branch and "jetVeto30WoNoisyJets_JetHFyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFyearUp")
 */
    goto __pyx_L864;
  }

  /* "EMTree.pyx":4229
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFyearUp")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetHFyearUp_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetHFyearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetHFyearUp_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetHFyearUp_value)));
  }
  __pyx_L864:;

  /* "EMTree.pyx":4232
 * 
 *         #print "making jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets"
 *         self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets"));

  /* "EMTree.pyx":4234
 *         self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets")
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L868_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L868_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4235
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4235, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4235, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__290, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4235, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4234
 *         self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets")
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets")
 */
    goto __pyx_L867;
  }

  /* "EMTree.pyx":4238
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_value)));
  }
  __pyx_L867:;

  /* "EMTree.pyx":4241
 * 
 *         #print "making jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets"
 *         self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets"));

  /* "EMTree.pyx":4243
 *         self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets")
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L871_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L871_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4244
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4244, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4244, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__291, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4244, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4243
 *         self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets")
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets")
 */
    goto __pyx_L870;
  }

  /* "EMTree.pyx":4247
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetRelativeSampleDown"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_value)));
  }
  __pyx_L870:;

  /* "EMTree.pyx":4250
 * 
 *         #print "making jetVeto30WoNoisyJets_JetRelativeSampleDown"
 *         self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetRelativeSampleDown")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch and "jetVeto30WoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch and "jetVeto30WoNoisyJets_JetRelativeSampleDown":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetRelativeSampleDown_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetRelativeSampleDown"));

  /* "EMTree.pyx":4252
 *         self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetRelativeSampleDown")
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch and "jetVeto30WoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch and "jetVeto30WoNoisyJets_JetRelativeSampleDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeSampleDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetRelativeSampleDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L874_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L874_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4253
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch and "jetVeto30WoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch and "jetVeto30WoNoisyJets_JetRelativeSampleDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeSampleDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4253, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4253, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__292, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4253, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4252
 *         self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetRelativeSampleDown")
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch and "jetVeto30WoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch and "jetVeto30WoNoisyJets_JetRelativeSampleDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeSampleDown")
 */
    goto __pyx_L873;
  }

  /* "EMTree.pyx":4256
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeSampleDown")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetRelativeSampleDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetRelativeSampleUp"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetRelativeSampleDown_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetRelativeSampleDown_value)));
  }
  __pyx_L873:;

  /* "EMTree.pyx":4259
 * 
 *         #print "making jetVeto30WoNoisyJets_JetRelativeSampleUp"
 *         self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetRelativeSampleUp")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch and "jetVeto30WoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch and "jetVeto30WoNoisyJets_JetRelativeSampleUp":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetRelativeSampleUp_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetRelativeSampleUp"));

  /* "EMTree.pyx":4261
 *         self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetRelativeSampleUp")
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch and "jetVeto30WoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch and "jetVeto30WoNoisyJets_JetRelativeSampleUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeSampleUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetRelativeSampleUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L877_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L877_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4262
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch and "jetVeto30WoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch and "jetVeto30WoNoisyJets_JetRelativeSampleUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeSampleUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4262, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4262, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__293, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4262, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4261
 *         self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetRelativeSampleUp")
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch and "jetVeto30WoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch and "jetVeto30WoNoisyJets_JetRelativeSampleUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeSampleUp")
 */
    goto __pyx_L876;
  }

  /* "EMTree.pyx":4265
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeSampleUp")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetRelativeSampleUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetTotalDown"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetRelativeSampleUp_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetRelativeSampleUp_value)));
  }
  __pyx_L876:;

  /* "EMTree.pyx":4268
 * 
 *         #print "making jetVeto30WoNoisyJets_JetTotalDown"
 *         self.jetVeto30WoNoisyJets_JetTotalDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetTotalDown")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetTotalDown_branch and "jetVeto30WoNoisyJets_JetTotalDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetTotalDown_branch and "jetVeto30WoNoisyJets_JetTotalDown":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetTotalDown_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetTotalDown"));

  /* "EMTree.pyx":4270
 *         self.jetVeto30WoNoisyJets_JetTotalDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetTotalDown")
 *         #if not self.jetVeto30WoNoisyJets_JetTotalDown_branch and "jetVeto30WoNoisyJets_JetTotalDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetTotalDown_branch and "jetVeto30WoNoisyJets_JetTotalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetTotalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetTotalDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetTotalDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L880_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L880_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4271
 *         #if not self.jetVeto30WoNoisyJets_JetTotalDown_branch and "jetVeto30WoNoisyJets_JetTotalDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetTotalDown_branch and "jetVeto30WoNoisyJets_JetTotalDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetTotalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetTotalDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4271, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4271, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__294, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4271, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4270
 *         self.jetVeto30WoNoisyJets_JetTotalDown_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetTotalDown")
 *         #if not self.jetVeto30WoNoisyJets_JetTotalDown_branch and "jetVeto30WoNoisyJets_JetTotalDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetTotalDown_branch and "jetVeto30WoNoisyJets_JetTotalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetTotalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetTotalDown")
 */
    goto __pyx_L879;
  }

  /* "EMTree.pyx":4274
 *             #self.complained.add("jetVeto30WoNoisyJets_JetTotalDown")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetTotalDown_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetTotalDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30WoNoisyJets_JetTotalUp"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetTotalDown_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetTotalDown_value)));
  }
  __pyx_L879:;

  /* "EMTree.pyx":4277
 * 
 *         #print "making jetVeto30WoNoisyJets_JetTotalUp"
 *         self.jetVeto30WoNoisyJets_JetTotalUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetTotalUp")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30WoNoisyJets_JetTotalUp_branch and "jetVeto30WoNoisyJets_JetTotalUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetTotalUp_branch and "jetVeto30WoNoisyJets_JetTotalUp":
 */
  __pyx_v_self->jetVeto30WoNoisyJets_JetTotalUp_branch = __pyx_v_the_tree->GetBranch(((char *)"jetVeto30WoNoisyJets_JetTotalUp"));

  /* "EMTree.pyx":4279
 *         self.jetVeto30WoNoisyJets_JetTotalUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetTotalUp")
 *         #if not self.jetVeto30WoNoisyJets_JetTotalUp_branch and "jetVeto30WoNoisyJets_JetTotalUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetTotalUp_branch and "jetVeto30WoNoisyJets_JetTotalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetTotalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetTotalUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30WoNoisyJets_JetTotalUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L883_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L883_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4280
 *         #if not self.jetVeto30WoNoisyJets_JetTotalUp_branch and "jetVeto30WoNoisyJets_JetTotalUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetTotalUp_branch and "jetVeto30WoNoisyJets_JetTotalUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetTotalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetTotalUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4280, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4280, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__295, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4280, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4279
 *         self.jetVeto30WoNoisyJets_JetTotalUp_branch = the_tree.GetBranch("jetVeto30WoNoisyJets_JetTotalUp")
 *         #if not self.jetVeto30WoNoisyJets_JetTotalUp_branch and "jetVeto30WoNoisyJets_JetTotalUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetTotalUp_branch and "jetVeto30WoNoisyJets_JetTotalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetTotalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30WoNoisyJets_JetTotalUp")
 */
    goto __pyx_L882;
  }

  /* "EMTree.pyx":4283
 *             #self.complained.add("jetVeto30WoNoisyJets_JetTotalUp")
 *         else:
 *             self.jetVeto30WoNoisyJets_JetTotalUp_branch.SetAddress(<void*>&self.jetVeto30WoNoisyJets_JetTotalUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making lumi"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30WoNoisyJets_JetTotalUp_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30WoNoisyJets_JetTotalUp_value)));
  }
  __pyx_L882:;

  /* "EMTree.pyx":4286
 * 
 *         #print "making lumi"
 *         self.lumi_branch = the_tree.GetBranch("lumi")             # <<<<<<<<<<<<<<
 *         #if not self.lumi_branch and "lumi" not in self.complained:
 *         if not self.lumi_branch and "lumi":
 */
  __pyx_v_self->lumi_branch = __pyx_v_the_tree->GetBranch(((char *)"lumi"));

  /* "EMTree.pyx":4288
 *         self.lumi_branch = the_tree.GetBranch("lumi")
 *         #if not self.lumi_branch and "lumi" not in self.complained:
 *         if not self.lumi_branch and "lumi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch lumi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("lumi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->lumi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L886_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L886_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4289
 *         #if not self.lumi_branch and "lumi" not in self.complained:
 *         if not self.lumi_branch and "lumi":
 *             warnings.warn( "EMTree: Expected branch lumi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("lumi")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4289, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4289, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__296, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4289, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4288
 *         self.lumi_branch = the_tree.GetBranch("lumi")
 *         #if not self.lumi_branch and "lumi" not in self.complained:
 *         if not self.lumi_branch and "lumi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch lumi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("lumi")
 */
    goto __pyx_L885;
  }

  /* "EMTree.pyx":4292
 *             #self.complained.add("lumi")
 *         else:
 *             self.lumi_branch.SetAddress(<void*>&self.lumi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mCharge"
 */
  /*else*/ {
    __pyx_v_self->lumi_branch->SetAddress(((void *)(&__pyx_v_self->lumi_value)));
  }
  __pyx_L885:;

  /* "EMTree.pyx":4295
 * 
 *         #print "making mCharge"
 *         self.mCharge_branch = the_tree.GetBranch("mCharge")             # <<<<<<<<<<<<<<
 *         #if not self.mCharge_branch and "mCharge" not in self.complained:
 *         if not self.mCharge_branch and "mCharge":
 */
  __pyx_v_self->mCharge_branch = __pyx_v_the_tree->GetBranch(((char *)"mCharge"));

  /* "EMTree.pyx":4297
 *         self.mCharge_branch = the_tree.GetBranch("mCharge")
 *         #if not self.mCharge_branch and "mCharge" not in self.complained:
 *         if not self.mCharge_branch and "mCharge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mCharge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mCharge")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mCharge_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L889_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L889_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4298
 *         #if not self.mCharge_branch and "mCharge" not in self.complained:
 *         if not self.mCharge_branch and "mCharge":
 *             warnings.warn( "EMTree: Expected branch mCharge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mCharge")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4298, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4298, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__297, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4298, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4297
 *         self.mCharge_branch = the_tree.GetBranch("mCharge")
 *         #if not self.mCharge_branch and "mCharge" not in self.complained:
 *         if not self.mCharge_branch and "mCharge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mCharge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mCharge")
 */
    goto __pyx_L888;
  }

  /* "EMTree.pyx":4301
 *             #self.complained.add("mCharge")
 *         else:
 *             self.mCharge_branch.SetAddress(<void*>&self.mCharge_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mComesFromHiggs"
 */
  /*else*/ {
    __pyx_v_self->mCharge_branch->SetAddress(((void *)(&__pyx_v_self->mCharge_value)));
  }
  __pyx_L888:;

  /* "EMTree.pyx":4304
 * 
 *         #print "making mComesFromHiggs"
 *         self.mComesFromHiggs_branch = the_tree.GetBranch("mComesFromHiggs")             # <<<<<<<<<<<<<<
 *         #if not self.mComesFromHiggs_branch and "mComesFromHiggs" not in self.complained:
 *         if not self.mComesFromHiggs_branch and "mComesFromHiggs":
 */
  __pyx_v_self->mComesFromHiggs_branch = __pyx_v_the_tree->GetBranch(((char *)"mComesFromHiggs"));

  /* "EMTree.pyx":4306
 *         self.mComesFromHiggs_branch = the_tree.GetBranch("mComesFromHiggs")
 *         #if not self.mComesFromHiggs_branch and "mComesFromHiggs" not in self.complained:
 *         if not self.mComesFromHiggs_branch and "mComesFromHiggs":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mComesFromHiggs does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mComesFromHiggs")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mComesFromHiggs_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L892_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L892_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4307
 *         #if not self.mComesFromHiggs_branch and "mComesFromHiggs" not in self.complained:
 *         if not self.mComesFromHiggs_branch and "mComesFromHiggs":
 *             warnings.warn( "EMTree: Expected branch mComesFromHiggs does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mComesFromHiggs")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4307, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4307, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__298, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4307, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4306
 *         self.mComesFromHiggs_branch = the_tree.GetBranch("mComesFromHiggs")
 *         #if not self.mComesFromHiggs_branch and "mComesFromHiggs" not in self.complained:
 *         if not self.mComesFromHiggs_branch and "mComesFromHiggs":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mComesFromHiggs does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mComesFromHiggs")
 */
    goto __pyx_L891;
  }

  /* "EMTree.pyx":4310
 *             #self.complained.add("mComesFromHiggs")
 *         else:
 *             self.mComesFromHiggs_branch.SetAddress(<void*>&self.mComesFromHiggs_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mEta"
 */
  /*else*/ {
    __pyx_v_self->mComesFromHiggs_branch->SetAddress(((void *)(&__pyx_v_self->mComesFromHiggs_value)));
  }
  __pyx_L891:;

  /* "EMTree.pyx":4313
 * 
 *         #print "making mEta"
 *         self.mEta_branch = the_tree.GetBranch("mEta")             # <<<<<<<<<<<<<<
 *         #if not self.mEta_branch and "mEta" not in self.complained:
 *         if not self.mEta_branch and "mEta":
 */
  __pyx_v_self->mEta_branch = __pyx_v_the_tree->GetBranch(((char *)"mEta"));

  /* "EMTree.pyx":4315
 *         self.mEta_branch = the_tree.GetBranch("mEta")
 *         #if not self.mEta_branch and "mEta" not in self.complained:
 *         if not self.mEta_branch and "mEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mEta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L895_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L895_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4316
 *         #if not self.mEta_branch and "mEta" not in self.complained:
 *         if not self.mEta_branch and "mEta":
 *             warnings.warn( "EMTree: Expected branch mEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mEta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__299, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4315
 *         self.mEta_branch = the_tree.GetBranch("mEta")
 *         #if not self.mEta_branch and "mEta" not in self.complained:
 *         if not self.mEta_branch and "mEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEta")
 */
    goto __pyx_L894;
  }

  /* "EMTree.pyx":4319
 *             #self.complained.add("mEta")
 *         else:
 *             self.mEta_branch.SetAddress(<void*>&self.mEta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenCharge"
 */
  /*else*/ {
    __pyx_v_self->mEta_branch->SetAddress(((void *)(&__pyx_v_self->mEta_value)));
  }
  __pyx_L894:;

  /* "EMTree.pyx":4322
 * 
 *         #print "making mGenCharge"
 *         self.mGenCharge_branch = the_tree.GetBranch("mGenCharge")             # <<<<<<<<<<<<<<
 *         #if not self.mGenCharge_branch and "mGenCharge" not in self.complained:
 *         if not self.mGenCharge_branch and "mGenCharge":
 */
  __pyx_v_self->mGenCharge_branch = __pyx_v_the_tree->GetBranch(((char *)"mGenCharge"));

  /* "EMTree.pyx":4324
 *         self.mGenCharge_branch = the_tree.GetBranch("mGenCharge")
 *         #if not self.mGenCharge_branch and "mGenCharge" not in self.complained:
 *         if not self.mGenCharge_branch and "mGenCharge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenCharge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenCharge")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenCharge_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L898_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L898_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4325
 *         #if not self.mGenCharge_branch and "mGenCharge" not in self.complained:
 *         if not self.mGenCharge_branch and "mGenCharge":
 *             warnings.warn( "EMTree: Expected branch mGenCharge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenCharge")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4325, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4325, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__300, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4325, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4324
 *         self.mGenCharge_branch = the_tree.GetBranch("mGenCharge")
 *         #if not self.mGenCharge_branch and "mGenCharge" not in self.complained:
 *         if not self.mGenCharge_branch and "mGenCharge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenCharge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenCharge")
 */
    goto __pyx_L897;
  }

  /* "EMTree.pyx":4328
 *             #self.complained.add("mGenCharge")
 *         else:
 *             self.mGenCharge_branch.SetAddress(<void*>&self.mGenCharge_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenDirectPromptTauDecayFinalState"
 */
  /*else*/ {
    __pyx_v_self->mGenCharge_branch->SetAddress(((void *)(&__pyx_v_self->mGenCharge_value)));
  }
  __pyx_L897:;

  /* "EMTree.pyx":4331
 * 
 *         #print "making mGenDirectPromptTauDecayFinalState"
 *         self.mGenDirectPromptTauDecayFinalState_branch = the_tree.GetBranch("mGenDirectPromptTauDecayFinalState")             # <<<<<<<<<<<<<<
 *         #if not self.mGenDirectPromptTauDecayFinalState_branch and "mGenDirectPromptTauDecayFinalState" not in self.complained:
 *         if not self.mGenDirectPromptTauDecayFinalState_branch and "mGenDirectPromptTauDecayFinalState":
 */
  __pyx_v_self->mGenDirectPromptTauDecayFinalState_branch = __pyx_v_the_tree->GetBranch(((char *)"mGenDirectPromptTauDecayFinalState"));

  /* "EMTree.pyx":4333
 *         self.mGenDirectPromptTauDecayFinalState_branch = the_tree.GetBranch("mGenDirectPromptTauDecayFinalState")
 *         #if not self.mGenDirectPromptTauDecayFinalState_branch and "mGenDirectPromptTauDecayFinalState" not in self.complained:
 *         if not self.mGenDirectPromptTauDecayFinalState_branch and "mGenDirectPromptTauDecayFinalState":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenDirectPromptTauDecayFinalState does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenDirectPromptTauDecayFinalState")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenDirectPromptTauDecayFinalState_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L901_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L901_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4334
 *         #if not self.mGenDirectPromptTauDecayFinalState_branch and "mGenDirectPromptTauDecayFinalState" not in self.complained:
 *         if not self.mGenDirectPromptTauDecayFinalState_branch and "mGenDirectPromptTauDecayFinalState":
 *             warnings.warn( "EMTree: Expected branch mGenDirectPromptTauDecayFinalState does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenDirectPromptTauDecayFinalState")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4334, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4334, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__301, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4334, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4333
 *         self.mGenDirectPromptTauDecayFinalState_branch = the_tree.GetBranch("mGenDirectPromptTauDecayFinalState")
 *         #if not self.mGenDirectPromptTauDecayFinalState_branch and "mGenDirectPromptTauDecayFinalState" not in self.complained:
 *         if not self.mGenDirectPromptTauDecayFinalState_branch and "mGenDirectPromptTauDecayFinalState":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenDirectPromptTauDecayFinalState does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenDirectPromptTauDecayFinalState")
 */
    goto __pyx_L900;
  }

  /* "EMTree.pyx":4337
 *             #self.complained.add("mGenDirectPromptTauDecayFinalState")
 *         else:
 *             self.mGenDirectPromptTauDecayFinalState_branch.SetAddress(<void*>&self.mGenDirectPromptTauDecayFinalState_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenEnergy"
 */
  /*else*/ {
    __pyx_v_self->mGenDirectPromptTauDecayFinalState_branch->SetAddress(((void *)(&__pyx_v_self->mGenDirectPromptTauDecayFinalState_value)));
  }
  __pyx_L900:;

  /* "EMTree.pyx":4340
 * 
 *         #print "making mGenEnergy"
 *         self.mGenEnergy_branch = the_tree.GetBranch("mGenEnergy")             # <<<<<<<<<<<<<<
 *         #if not self.mGenEnergy_branch and "mGenEnergy" not in self.complained:
 *         if not self.mGenEnergy_branch and "mGenEnergy":
 */
  __pyx_v_self->mGenEnergy_branch = __pyx_v_the_tree->GetBranch(((char *)"mGenEnergy"));

  /* "EMTree.pyx":4342
 *         self.mGenEnergy_branch = the_tree.GetBranch("mGenEnergy")
 *         #if not self.mGenEnergy_branch and "mGenEnergy" not in self.complained:
 *         if not self.mGenEnergy_branch and "mGenEnergy":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenEnergy does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenEnergy")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenEnergy_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L904_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L904_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4343
 *         #if not self.mGenEnergy_branch and "mGenEnergy" not in self.complained:
 *         if not self.mGenEnergy_branch and "mGenEnergy":
 *             warnings.warn( "EMTree: Expected branch mGenEnergy does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenEnergy")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__302, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4342
 *         self.mGenEnergy_branch = the_tree.GetBranch("mGenEnergy")
 *         #if not self.mGenEnergy_branch and "mGenEnergy" not in self.complained:
 *         if not self.mGenEnergy_branch and "mGenEnergy":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenEnergy does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenEnergy")
 */
    goto __pyx_L903;
  }

  /* "EMTree.pyx":4346
 *             #self.complained.add("mGenEnergy")
 *         else:
 *             self.mGenEnergy_branch.SetAddress(<void*>&self.mGenEnergy_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenEta"
 */
  /*else*/ {
    __pyx_v_self->mGenEnergy_branch->SetAddress(((void *)(&__pyx_v_self->mGenEnergy_value)));
  }
  __pyx_L903:;

  /* "EMTree.pyx":4349
 * 
 *         #print "making mGenEta"
 *         self.mGenEta_branch = the_tree.GetBranch("mGenEta")             # <<<<<<<<<<<<<<
 *         #if not self.mGenEta_branch and "mGenEta" not in self.complained:
 *         if not self.mGenEta_branch and "mGenEta":
 */
  __pyx_v_self->mGenEta_branch = __pyx_v_the_tree->GetBranch(((char *)"mGenEta"));

  /* "EMTree.pyx":4351
 *         self.mGenEta_branch = the_tree.GetBranch("mGenEta")
 *         #if not self.mGenEta_branch and "mGenEta" not in self.complained:
 *         if not self.mGenEta_branch and "mGenEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenEta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenEta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L907_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L907_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4352
 *         #if not self.mGenEta_branch and "mGenEta" not in self.complained:
 *         if not self.mGenEta_branch and "mGenEta":
 *             warnings.warn( "EMTree: Expected branch mGenEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenEta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4352, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4352, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__303, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4352, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4351
 *         self.mGenEta_branch = the_tree.GetBranch("mGenEta")
 *         #if not self.mGenEta_branch and "mGenEta" not in self.complained:
 *         if not self.mGenEta_branch and "mGenEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenEta")
 */
    goto __pyx_L906;
  }

  /* "EMTree.pyx":4355
 *             #self.complained.add("mGenEta")
 *         else:
 *             self.mGenEta_branch.SetAddress(<void*>&self.mGenEta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenIsPrompt"
 */
  /*else*/ {
    __pyx_v_self->mGenEta_branch->SetAddress(((void *)(&__pyx_v_self->mGenEta_value)));
  }
  __pyx_L906:;

  /* "EMTree.pyx":4358
 * 
 *         #print "making mGenIsPrompt"
 *         self.mGenIsPrompt_branch = the_tree.GetBranch("mGenIsPrompt")             # <<<<<<<<<<<<<<
 *         #if not self.mGenIsPrompt_branch and "mGenIsPrompt" not in self.complained:
 *         if not self.mGenIsPrompt_branch and "mGenIsPrompt":
 */
  __pyx_v_self->mGenIsPrompt_branch = __pyx_v_the_tree->GetBranch(((char *)"mGenIsPrompt"));

  /* "EMTree.pyx":4360
 *         self.mGenIsPrompt_branch = the_tree.GetBranch("mGenIsPrompt")
 *         #if not self.mGenIsPrompt_branch and "mGenIsPrompt" not in self.complained:
 *         if not self.mGenIsPrompt_branch and "mGenIsPrompt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenIsPrompt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenIsPrompt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenIsPrompt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L910_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L910_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4361
 *         #if not self.mGenIsPrompt_branch and "mGenIsPrompt" not in self.complained:
 *         if not self.mGenIsPrompt_branch and "mGenIsPrompt":
 *             warnings.warn( "EMTree: Expected branch mGenIsPrompt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenIsPrompt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4361, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4361, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__304, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4361, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4360
 *         self.mGenIsPrompt_branch = the_tree.GetBranch("mGenIsPrompt")
 *         #if not self.mGenIsPrompt_branch and "mGenIsPrompt" not in self.complained:
 *         if not self.mGenIsPrompt_branch and "mGenIsPrompt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenIsPrompt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenIsPrompt")
 */
    goto __pyx_L909;
  }

  /* "EMTree.pyx":4364
 *             #self.complained.add("mGenIsPrompt")
 *         else:
 *             self.mGenIsPrompt_branch.SetAddress(<void*>&self.mGenIsPrompt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenMotherPdgId"
 */
  /*else*/ {
    __pyx_v_self->mGenIsPrompt_branch->SetAddress(((void *)(&__pyx_v_self->mGenIsPrompt_value)));
  }
  __pyx_L909:;

  /* "EMTree.pyx":4367
 * 
 *         #print "making mGenMotherPdgId"
 *         self.mGenMotherPdgId_branch = the_tree.GetBranch("mGenMotherPdgId")             # <<<<<<<<<<<<<<
 *         #if not self.mGenMotherPdgId_branch and "mGenMotherPdgId" not in self.complained:
 *         if not self.mGenMotherPdgId_branch and "mGenMotherPdgId":
 */
  __pyx_v_self->mGenMotherPdgId_branch = __pyx_v_the_tree->GetBranch(((char *)"mGenMotherPdgId"));

  /* "EMTree.pyx":4369
 *         self.mGenMotherPdgId_branch = the_tree.GetBranch("mGenMotherPdgId")
 *         #if not self.mGenMotherPdgId_branch and "mGenMotherPdgId" not in self.complained:
 *         if not self.mGenMotherPdgId_branch and "mGenMotherPdgId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenMotherPdgId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenMotherPdgId")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenMotherPdgId_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L913_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L913_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4370
 *         #if not self.mGenMotherPdgId_branch and "mGenMotherPdgId" not in self.complained:
 *         if not self.mGenMotherPdgId_branch and "mGenMotherPdgId":
 *             warnings.warn( "EMTree: Expected branch mGenMotherPdgId does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenMotherPdgId")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__305, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4369
 *         self.mGenMotherPdgId_branch = the_tree.GetBranch("mGenMotherPdgId")
 *         #if not self.mGenMotherPdgId_branch and "mGenMotherPdgId" not in self.complained:
 *         if not self.mGenMotherPdgId_branch and "mGenMotherPdgId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenMotherPdgId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenMotherPdgId")
 */
    goto __pyx_L912;
  }

  /* "EMTree.pyx":4373
 *             #self.complained.add("mGenMotherPdgId")
 *         else:
 *             self.mGenMotherPdgId_branch.SetAddress(<void*>&self.mGenMotherPdgId_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenParticle"
 */
  /*else*/ {
    __pyx_v_self->mGenMotherPdgId_branch->SetAddress(((void *)(&__pyx_v_self->mGenMotherPdgId_value)));
  }
  __pyx_L912:;

  /* "EMTree.pyx":4376
 * 
 *         #print "making mGenParticle"
 *         self.mGenParticle_branch = the_tree.GetBranch("mGenParticle")             # <<<<<<<<<<<<<<
 *         #if not self.mGenParticle_branch and "mGenParticle" not in self.complained:
 *         if not self.mGenParticle_branch and "mGenParticle":
 */
  __pyx_v_self->mGenParticle_branch = __pyx_v_the_tree->GetBranch(((char *)"mGenParticle"));

  /* "EMTree.pyx":4378
 *         self.mGenParticle_branch = the_tree.GetBranch("mGenParticle")
 *         #if not self.mGenParticle_branch and "mGenParticle" not in self.complained:
 *         if not self.mGenParticle_branch and "mGenParticle":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenParticle does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenParticle")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenParticle_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L916_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L916_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4379
 *         #if not self.mGenParticle_branch and "mGenParticle" not in self.complained:
 *         if not self.mGenParticle_branch and "mGenParticle":
 *             warnings.warn( "EMTree: Expected branch mGenParticle does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenParticle")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4379, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4379, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__306, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4379, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4378
 *         self.mGenParticle_branch = the_tree.GetBranch("mGenParticle")
 *         #if not self.mGenParticle_branch and "mGenParticle" not in self.complained:
 *         if not self.mGenParticle_branch and "mGenParticle":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenParticle does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenParticle")
 */
    goto __pyx_L915;
  }

  /* "EMTree.pyx":4382
 *             #self.complained.add("mGenParticle")
 *         else:
 *             self.mGenParticle_branch.SetAddress(<void*>&self.mGenParticle_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenPdgId"
 */
  /*else*/ {
    __pyx_v_self->mGenParticle_branch->SetAddress(((void *)(&__pyx_v_self->mGenParticle_value)));
  }
  __pyx_L915:;

  /* "EMTree.pyx":4385
 * 
 *         #print "making mGenPdgId"
 *         self.mGenPdgId_branch = the_tree.GetBranch("mGenPdgId")             # <<<<<<<<<<<<<<
 *         #if not self.mGenPdgId_branch and "mGenPdgId" not in self.complained:
 *         if not self.mGenPdgId_branch and "mGenPdgId":
 */
  __pyx_v_self->mGenPdgId_branch = __pyx_v_the_tree->GetBranch(((char *)"mGenPdgId"));

  /* "EMTree.pyx":4387
 *         self.mGenPdgId_branch = the_tree.GetBranch("mGenPdgId")
 *         #if not self.mGenPdgId_branch and "mGenPdgId" not in self.complained:
 *         if not self.mGenPdgId_branch and "mGenPdgId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenPdgId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPdgId")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenPdgId_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L919_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L919_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4388
 *         #if not self.mGenPdgId_branch and "mGenPdgId" not in self.complained:
 *         if not self.mGenPdgId_branch and "mGenPdgId":
 *             warnings.warn( "EMTree: Expected branch mGenPdgId does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenPdgId")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4388, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4388, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__307, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4388, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4387
 *         self.mGenPdgId_branch = the_tree.GetBranch("mGenPdgId")
 *         #if not self.mGenPdgId_branch and "mGenPdgId" not in self.complained:
 *         if not self.mGenPdgId_branch and "mGenPdgId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenPdgId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPdgId")
 */
    goto __pyx_L918;
  }

  /* "EMTree.pyx":4391
 *             #self.complained.add("mGenPdgId")
 *         else:
 *             self.mGenPdgId_branch.SetAddress(<void*>&self.mGenPdgId_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenPhi"
 */
  /*else*/ {
    __pyx_v_self->mGenPdgId_branch->SetAddress(((void *)(&__pyx_v_self->mGenPdgId_value)));
  }
  __pyx_L918:;

  /* "EMTree.pyx":4394
 * 
 *         #print "making mGenPhi"
 *         self.mGenPhi_branch = the_tree.GetBranch("mGenPhi")             # <<<<<<<<<<<<<<
 *         #if not self.mGenPhi_branch and "mGenPhi" not in self.complained:
 *         if not self.mGenPhi_branch and "mGenPhi":
 */
  __pyx_v_self->mGenPhi_branch = __pyx_v_the_tree->GetBranch(((char *)"mGenPhi"));

  /* "EMTree.pyx":4396
 *         self.mGenPhi_branch = the_tree.GetBranch("mGenPhi")
 *         #if not self.mGenPhi_branch and "mGenPhi" not in self.complained:
 *         if not self.mGenPhi_branch and "mGenPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPhi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenPhi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L922_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L922_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4397
 *         #if not self.mGenPhi_branch and "mGenPhi" not in self.complained:
 *         if not self.mGenPhi_branch and "mGenPhi":
 *             warnings.warn( "EMTree: Expected branch mGenPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenPhi")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4397, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4397, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__308, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4397, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4396
 *         self.mGenPhi_branch = the_tree.GetBranch("mGenPhi")
 *         #if not self.mGenPhi_branch and "mGenPhi" not in self.complained:
 *         if not self.mGenPhi_branch and "mGenPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPhi")
 */
    goto __pyx_L921;
  }

  /* "EMTree.pyx":4400
 *             #self.complained.add("mGenPhi")
 *         else:
 *             self.mGenPhi_branch.SetAddress(<void*>&self.mGenPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenPrompt"
 */
  /*else*/ {
    __pyx_v_self->mGenPhi_branch->SetAddress(((void *)(&__pyx_v_self->mGenPhi_value)));
  }
  __pyx_L921:;

  /* "EMTree.pyx":4403
 * 
 *         #print "making mGenPrompt"
 *         self.mGenPrompt_branch = the_tree.GetBranch("mGenPrompt")             # <<<<<<<<<<<<<<
 *         #if not self.mGenPrompt_branch and "mGenPrompt" not in self.complained:
 *         if not self.mGenPrompt_branch and "mGenPrompt":
 */
  __pyx_v_self->mGenPrompt_branch = __pyx_v_the_tree->GetBranch(((char *)"mGenPrompt"));

  /* "EMTree.pyx":4405
 *         self.mGenPrompt_branch = the_tree.GetBranch("mGenPrompt")
 *         #if not self.mGenPrompt_branch and "mGenPrompt" not in self.complained:
 *         if not self.mGenPrompt_branch and "mGenPrompt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenPrompt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPrompt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenPrompt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L925_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L925_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4406
 *         #if not self.mGenPrompt_branch and "mGenPrompt" not in self.complained:
 *         if not self.mGenPrompt_branch and "mGenPrompt":
 *             warnings.warn( "EMTree: Expected branch mGenPrompt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenPrompt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4406, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4406, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__309, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4406, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4405
 *         self.mGenPrompt_branch = the_tree.GetBranch("mGenPrompt")
 *         #if not self.mGenPrompt_branch and "mGenPrompt" not in self.complained:
 *         if not self.mGenPrompt_branch and "mGenPrompt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenPrompt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPrompt")
 */
    goto __pyx_L924;
  }

  /* "EMTree.pyx":4409
 *             #self.complained.add("mGenPrompt")
 *         else:
 *             self.mGenPrompt_branch.SetAddress(<void*>&self.mGenPrompt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenPromptFinalState"
 */
  /*else*/ {
    __pyx_v_self->mGenPrompt_branch->SetAddress(((void *)(&__pyx_v_self->mGenPrompt_value)));
  }
  __pyx_L924:;

  /* "EMTree.pyx":4412
 * 
 *         #print "making mGenPromptFinalState"
 *         self.mGenPromptFinalState_branch = the_tree.GetBranch("mGenPromptFinalState")             # <<<<<<<<<<<<<<
 *         #if not self.mGenPromptFinalState_branch and "mGenPromptFinalState" not in self.complained:
 *         if not self.mGenPromptFinalState_branch and "mGenPromptFinalState":
 */
  __pyx_v_self->mGenPromptFinalState_branch = __pyx_v_the_tree->GetBranch(((char *)"mGenPromptFinalState"));

  /* "EMTree.pyx":4414
 *         self.mGenPromptFinalState_branch = the_tree.GetBranch("mGenPromptFinalState")
 *         #if not self.mGenPromptFinalState_branch and "mGenPromptFinalState" not in self.complained:
 *         if not self.mGenPromptFinalState_branch and "mGenPromptFinalState":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenPromptFinalState does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPromptFinalState")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenPromptFinalState_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L928_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L928_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4415
 *         #if not self.mGenPromptFinalState_branch and "mGenPromptFinalState" not in self.complained:
 *         if not self.mGenPromptFinalState_branch and "mGenPromptFinalState":
 *             warnings.warn( "EMTree: Expected branch mGenPromptFinalState does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenPromptFinalState")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4415, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4415, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__310, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4415, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4414
 *         self.mGenPromptFinalState_branch = the_tree.GetBranch("mGenPromptFinalState")
 *         #if not self.mGenPromptFinalState_branch and "mGenPromptFinalState" not in self.complained:
 *         if not self.mGenPromptFinalState_branch and "mGenPromptFinalState":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenPromptFinalState does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPromptFinalState")
 */
    goto __pyx_L927;
  }

  /* "EMTree.pyx":4418
 *             #self.complained.add("mGenPromptFinalState")
 *         else:
 *             self.mGenPromptFinalState_branch.SetAddress(<void*>&self.mGenPromptFinalState_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenPromptTauDecay"
 */
  /*else*/ {
    __pyx_v_self->mGenPromptFinalState_branch->SetAddress(((void *)(&__pyx_v_self->mGenPromptFinalState_value)));
  }
  __pyx_L927:;

  /* "EMTree.pyx":4421
 * 
 *         #print "making mGenPromptTauDecay"
 *         self.mGenPromptTauDecay_branch = the_tree.GetBranch("mGenPromptTauDecay")             # <<<<<<<<<<<<<<
 *         #if not self.mGenPromptTauDecay_branch and "mGenPromptTauDecay" not in self.complained:
 *         if not self.mGenPromptTauDecay_branch and "mGenPromptTauDecay":
 */
  __pyx_v_self->mGenPromptTauDecay_branch = __pyx_v_the_tree->GetBranch(((char *)"mGenPromptTauDecay"));

  /* "EMTree.pyx":4423
 *         self.mGenPromptTauDecay_branch = the_tree.GetBranch("mGenPromptTauDecay")
 *         #if not self.mGenPromptTauDecay_branch and "mGenPromptTauDecay" not in self.complained:
 *         if not self.mGenPromptTauDecay_branch and "mGenPromptTauDecay":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenPromptTauDecay does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPromptTauDecay")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenPromptTauDecay_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L931_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L931_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4424
 *         #if not self.mGenPromptTauDecay_branch and "mGenPromptTauDecay" not in self.complained:
 *         if not self.mGenPromptTauDecay_branch and "mGenPromptTauDecay":
 *             warnings.warn( "EMTree: Expected branch mGenPromptTauDecay does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenPromptTauDecay")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4424, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4424, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__311, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4424, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4423
 *         self.mGenPromptTauDecay_branch = the_tree.GetBranch("mGenPromptTauDecay")
 *         #if not self.mGenPromptTauDecay_branch and "mGenPromptTauDecay" not in self.complained:
 *         if not self.mGenPromptTauDecay_branch and "mGenPromptTauDecay":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenPromptTauDecay does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPromptTauDecay")
 */
    goto __pyx_L930;
  }

  /* "EMTree.pyx":4427
 *             #self.complained.add("mGenPromptTauDecay")
 *         else:
 *             self.mGenPromptTauDecay_branch.SetAddress(<void*>&self.mGenPromptTauDecay_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenPt"
 */
  /*else*/ {
    __pyx_v_self->mGenPromptTauDecay_branch->SetAddress(((void *)(&__pyx_v_self->mGenPromptTauDecay_value)));
  }
  __pyx_L930:;

  /* "EMTree.pyx":4430
 * 
 *         #print "making mGenPt"
 *         self.mGenPt_branch = the_tree.GetBranch("mGenPt")             # <<<<<<<<<<<<<<
 *         #if not self.mGenPt_branch and "mGenPt" not in self.complained:
 *         if not self.mGenPt_branch and "mGenPt":
 */
  __pyx_v_self->mGenPt_branch = __pyx_v_the_tree->GetBranch(((char *)"mGenPt"));

  /* "EMTree.pyx":4432
 *         self.mGenPt_branch = the_tree.GetBranch("mGenPt")
 *         #if not self.mGenPt_branch and "mGenPt" not in self.complained:
 *         if not self.mGenPt_branch and "mGenPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenPt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L934_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L934_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4433
 *         #if not self.mGenPt_branch and "mGenPt" not in self.complained:
 *         if not self.mGenPt_branch and "mGenPt":
 *             warnings.warn( "EMTree: Expected branch mGenPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenPt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4433, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4433, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__312, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4433, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4432
 *         self.mGenPt_branch = the_tree.GetBranch("mGenPt")
 *         #if not self.mGenPt_branch and "mGenPt" not in self.complained:
 *         if not self.mGenPt_branch and "mGenPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPt")
 */
    goto __pyx_L933;
  }

  /* "EMTree.pyx":4436
 *             #self.complained.add("mGenPt")
 *         else:
 *             self.mGenPt_branch.SetAddress(<void*>&self.mGenPt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenTauDecay"
 */
  /*else*/ {
    __pyx_v_self->mGenPt_branch->SetAddress(((void *)(&__pyx_v_self->mGenPt_value)));
  }
  __pyx_L933:;

  /* "EMTree.pyx":4439
 * 
 *         #print "making mGenTauDecay"
 *         self.mGenTauDecay_branch = the_tree.GetBranch("mGenTauDecay")             # <<<<<<<<<<<<<<
 *         #if not self.mGenTauDecay_branch and "mGenTauDecay" not in self.complained:
 *         if not self.mGenTauDecay_branch and "mGenTauDecay":
 */
  __pyx_v_self->mGenTauDecay_branch = __pyx_v_the_tree->GetBranch(((char *)"mGenTauDecay"));

  /* "EMTree.pyx":4441
 *         self.mGenTauDecay_branch = the_tree.GetBranch("mGenTauDecay")
 *         #if not self.mGenTauDecay_branch and "mGenTauDecay" not in self.complained:
 *         if not self.mGenTauDecay_branch and "mGenTauDecay":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenTauDecay does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenTauDecay")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenTauDecay_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L937_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L937_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4442
 *         #if not self.mGenTauDecay_branch and "mGenTauDecay" not in self.complained:
 *         if not self.mGenTauDecay_branch and "mGenTauDecay":
 *             warnings.warn( "EMTree: Expected branch mGenTauDecay does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenTauDecay")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4442, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4442, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__313, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4442, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4441
 *         self.mGenTauDecay_branch = the_tree.GetBranch("mGenTauDecay")
 *         #if not self.mGenTauDecay_branch and "mGenTauDecay" not in self.complained:
 *         if not self.mGenTauDecay_branch and "mGenTauDecay":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenTauDecay does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenTauDecay")
 */
    goto __pyx_L936;
  }

  /* "EMTree.pyx":4445
 *             #self.complained.add("mGenTauDecay")
 *         else:
 *             self.mGenTauDecay_branch.SetAddress(<void*>&self.mGenTauDecay_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenVZ"
 */
  /*else*/ {
    __pyx_v_self->mGenTauDecay_branch->SetAddress(((void *)(&__pyx_v_self->mGenTauDecay_value)));
  }
  __pyx_L936:;

  /* "EMTree.pyx":4448
 * 
 *         #print "making mGenVZ"
 *         self.mGenVZ_branch = the_tree.GetBranch("mGenVZ")             # <<<<<<<<<<<<<<
 *         #if not self.mGenVZ_branch and "mGenVZ" not in self.complained:
 *         if not self.mGenVZ_branch and "mGenVZ":
 */
  __pyx_v_self->mGenVZ_branch = __pyx_v_the_tree->GetBranch(((char *)"mGenVZ"));

  /* "EMTree.pyx":4450
 *         self.mGenVZ_branch = the_tree.GetBranch("mGenVZ")
 *         #if not self.mGenVZ_branch and "mGenVZ" not in self.complained:
 *         if not self.mGenVZ_branch and "mGenVZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenVZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenVZ")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenVZ_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L940_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L940_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4451
 *         #if not self.mGenVZ_branch and "mGenVZ" not in self.complained:
 *         if not self.mGenVZ_branch and "mGenVZ":
 *             warnings.warn( "EMTree: Expected branch mGenVZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenVZ")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4451, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4451, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__314, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4451, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4450
 *         self.mGenVZ_branch = the_tree.GetBranch("mGenVZ")
 *         #if not self.mGenVZ_branch and "mGenVZ" not in self.complained:
 *         if not self.mGenVZ_branch and "mGenVZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenVZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenVZ")
 */
    goto __pyx_L939;
  }

  /* "EMTree.pyx":4454
 *             #self.complained.add("mGenVZ")
 *         else:
 *             self.mGenVZ_branch.SetAddress(<void*>&self.mGenVZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenVtxPVMatch"
 */
  /*else*/ {
    __pyx_v_self->mGenVZ_branch->SetAddress(((void *)(&__pyx_v_self->mGenVZ_value)));
  }
  __pyx_L939:;

  /* "EMTree.pyx":4457
 * 
 *         #print "making mGenVtxPVMatch"
 *         self.mGenVtxPVMatch_branch = the_tree.GetBranch("mGenVtxPVMatch")             # <<<<<<<<<<<<<<
 *         #if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch" not in self.complained:
 *         if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch":
 */
  __pyx_v_self->mGenVtxPVMatch_branch = __pyx_v_the_tree->GetBranch(((char *)"mGenVtxPVMatch"));

  /* "EMTree.pyx":4459
 *         self.mGenVtxPVMatch_branch = the_tree.GetBranch("mGenVtxPVMatch")
 *         #if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch" not in self.complained:
 *         if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenVtxPVMatch does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenVtxPVMatch")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenVtxPVMatch_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L943_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L943_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4460
 *         #if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch" not in self.complained:
 *         if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch":
 *             warnings.warn( "EMTree: Expected branch mGenVtxPVMatch does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenVtxPVMatch")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4460, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4460, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__315, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4460, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4459
 *         self.mGenVtxPVMatch_branch = the_tree.GetBranch("mGenVtxPVMatch")
 *         #if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch" not in self.complained:
 *         if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mGenVtxPVMatch does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenVtxPVMatch")
 */
    goto __pyx_L942;
  }

  /* "EMTree.pyx":4463
 *             #self.complained.add("mGenVtxPVMatch")
 *         else:
 *             self.mGenVtxPVMatch_branch.SetAddress(<void*>&self.mGenVtxPVMatch_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mIP3D"
 */
  /*else*/ {
    __pyx_v_self->mGenVtxPVMatch_branch->SetAddress(((void *)(&__pyx_v_self->mGenVtxPVMatch_value)));
  }
  __pyx_L942:;

  /* "EMTree.pyx":4466
 * 
 *         #print "making mIP3D"
 *         self.mIP3D_branch = the_tree.GetBranch("mIP3D")             # <<<<<<<<<<<<<<
 *         #if not self.mIP3D_branch and "mIP3D" not in self.complained:
 *         if not self.mIP3D_branch and "mIP3D":
 */
  __pyx_v_self->mIP3D_branch = __pyx_v_the_tree->GetBranch(((char *)"mIP3D"));

  /* "EMTree.pyx":4468
 *         self.mIP3D_branch = the_tree.GetBranch("mIP3D")
 *         #if not self.mIP3D_branch and "mIP3D" not in self.complained:
 *         if not self.mIP3D_branch and "mIP3D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mIP3D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIP3D")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mIP3D_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L946_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L946_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4469
 *         #if not self.mIP3D_branch and "mIP3D" not in self.complained:
 *         if not self.mIP3D_branch and "mIP3D":
 *             warnings.warn( "EMTree: Expected branch mIP3D does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIP3D")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4469, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4469, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__316, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4469, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4468
 *         self.mIP3D_branch = the_tree.GetBranch("mIP3D")
 *         #if not self.mIP3D_branch and "mIP3D" not in self.complained:
 *         if not self.mIP3D_branch and "mIP3D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mIP3D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIP3D")
 */
    goto __pyx_L945;
  }

  /* "EMTree.pyx":4472
 *             #self.complained.add("mIP3D")
 *         else:
 *             self.mIP3D_branch.SetAddress(<void*>&self.mIP3D_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mIP3DErr"
 */
  /*else*/ {
    __pyx_v_self->mIP3D_branch->SetAddress(((void *)(&__pyx_v_self->mIP3D_value)));
  }
  __pyx_L945:;

  /* "EMTree.pyx":4475
 * 
 *         #print "making mIP3DErr"
 *         self.mIP3DErr_branch = the_tree.GetBranch("mIP3DErr")             # <<<<<<<<<<<<<<
 *         #if not self.mIP3DErr_branch and "mIP3DErr" not in self.complained:
 *         if not self.mIP3DErr_branch and "mIP3DErr":
 */
  __pyx_v_self->mIP3DErr_branch = __pyx_v_the_tree->GetBranch(((char *)"mIP3DErr"));

  /* "EMTree.pyx":4477
 *         self.mIP3DErr_branch = the_tree.GetBranch("mIP3DErr")
 *         #if not self.mIP3DErr_branch and "mIP3DErr" not in self.complained:
 *         if not self.mIP3DErr_branch and "mIP3DErr":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mIP3DErr does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIP3DErr")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mIP3DErr_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L949_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L949_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4478
 *         #if not self.mIP3DErr_branch and "mIP3DErr" not in self.complained:
 *         if not self.mIP3DErr_branch and "mIP3DErr":
 *             warnings.warn( "EMTree: Expected branch mIP3DErr does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIP3DErr")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4478, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4478, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__317, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4478, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4477
 *         self.mIP3DErr_branch = the_tree.GetBranch("mIP3DErr")
 *         #if not self.mIP3DErr_branch and "mIP3DErr" not in self.complained:
 *         if not self.mIP3DErr_branch and "mIP3DErr":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mIP3DErr does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIP3DErr")
 */
    goto __pyx_L948;
  }

  /* "EMTree.pyx":4481
 *             #self.complained.add("mIP3DErr")
 *         else:
 *             self.mIP3DErr_branch.SetAddress(<void*>&self.mIP3DErr_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mIsGlobal"
 */
  /*else*/ {
    __pyx_v_self->mIP3DErr_branch->SetAddress(((void *)(&__pyx_v_self->mIP3DErr_value)));
  }
  __pyx_L948:;

  /* "EMTree.pyx":4484
 * 
 *         #print "making mIsGlobal"
 *         self.mIsGlobal_branch = the_tree.GetBranch("mIsGlobal")             # <<<<<<<<<<<<<<
 *         #if not self.mIsGlobal_branch and "mIsGlobal" not in self.complained:
 *         if not self.mIsGlobal_branch and "mIsGlobal":
 */
  __pyx_v_self->mIsGlobal_branch = __pyx_v_the_tree->GetBranch(((char *)"mIsGlobal"));

  /* "EMTree.pyx":4486
 *         self.mIsGlobal_branch = the_tree.GetBranch("mIsGlobal")
 *         #if not self.mIsGlobal_branch and "mIsGlobal" not in self.complained:
 *         if not self.mIsGlobal_branch and "mIsGlobal":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mIsGlobal does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIsGlobal")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mIsGlobal_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L952_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L952_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4487
 *         #if not self.mIsGlobal_branch and "mIsGlobal" not in self.complained:
 *         if not self.mIsGlobal_branch and "mIsGlobal":
 *             warnings.warn( "EMTree: Expected branch mIsGlobal does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIsGlobal")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4487, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4487, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__318, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4487, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4486
 *         self.mIsGlobal_branch = the_tree.GetBranch("mIsGlobal")
 *         #if not self.mIsGlobal_branch and "mIsGlobal" not in self.complained:
 *         if not self.mIsGlobal_branch and "mIsGlobal":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mIsGlobal does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIsGlobal")
 */
    goto __pyx_L951;
  }

  /* "EMTree.pyx":4490
 *             #self.complained.add("mIsGlobal")
 *         else:
 *             self.mIsGlobal_branch.SetAddress(<void*>&self.mIsGlobal_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mIsPFMuon"
 */
  /*else*/ {
    __pyx_v_self->mIsGlobal_branch->SetAddress(((void *)(&__pyx_v_self->mIsGlobal_value)));
  }
  __pyx_L951:;

  /* "EMTree.pyx":4493
 * 
 *         #print "making mIsPFMuon"
 *         self.mIsPFMuon_branch = the_tree.GetBranch("mIsPFMuon")             # <<<<<<<<<<<<<<
 *         #if not self.mIsPFMuon_branch and "mIsPFMuon" not in self.complained:
 *         if not self.mIsPFMuon_branch and "mIsPFMuon":
 */
  __pyx_v_self->mIsPFMuon_branch = __pyx_v_the_tree->GetBranch(((char *)"mIsPFMuon"));

  /* "EMTree.pyx":4495
 *         self.mIsPFMuon_branch = the_tree.GetBranch("mIsPFMuon")
 *         #if not self.mIsPFMuon_branch and "mIsPFMuon" not in self.complained:
 *         if not self.mIsPFMuon_branch and "mIsPFMuon":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mIsPFMuon does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIsPFMuon")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mIsPFMuon_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L955_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L955_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4496
 *         #if not self.mIsPFMuon_branch and "mIsPFMuon" not in self.complained:
 *         if not self.mIsPFMuon_branch and "mIsPFMuon":
 *             warnings.warn( "EMTree: Expected branch mIsPFMuon does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIsPFMuon")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4496, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4496, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__319, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4496, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4495
 *         self.mIsPFMuon_branch = the_tree.GetBranch("mIsPFMuon")
 *         #if not self.mIsPFMuon_branch and "mIsPFMuon" not in self.complained:
 *         if not self.mIsPFMuon_branch and "mIsPFMuon":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mIsPFMuon does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIsPFMuon")
 */
    goto __pyx_L954;
  }

  /* "EMTree.pyx":4499
 *             #self.complained.add("mIsPFMuon")
 *         else:
 *             self.mIsPFMuon_branch.SetAddress(<void*>&self.mIsPFMuon_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mIsTracker"
 */
  /*else*/ {
    __pyx_v_self->mIsPFMuon_branch->SetAddress(((void *)(&__pyx_v_self->mIsPFMuon_value)));
  }
  __pyx_L954:;

  /* "EMTree.pyx":4502
 * 
 *         #print "making mIsTracker"
 *         self.mIsTracker_branch = the_tree.GetBranch("mIsTracker")             # <<<<<<<<<<<<<<
 *         #if not self.mIsTracker_branch and "mIsTracker" not in self.complained:
 *         if not self.mIsTracker_branch and "mIsTracker":
 */
  __pyx_v_self->mIsTracker_branch = __pyx_v_the_tree->GetBranch(((char *)"mIsTracker"));

  /* "EMTree.pyx":4504
 *         self.mIsTracker_branch = the_tree.GetBranch("mIsTracker")
 *         #if not self.mIsTracker_branch and "mIsTracker" not in self.complained:
 *         if not self.mIsTracker_branch and "mIsTracker":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mIsTracker does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIsTracker")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mIsTracker_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L958_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L958_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4505
 *         #if not self.mIsTracker_branch and "mIsTracker" not in self.complained:
 *         if not self.mIsTracker_branch and "mIsTracker":
 *             warnings.warn( "EMTree: Expected branch mIsTracker does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIsTracker")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__320, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4504
 *         self.mIsTracker_branch = the_tree.GetBranch("mIsTracker")
 *         #if not self.mIsTracker_branch and "mIsTracker" not in self.complained:
 *         if not self.mIsTracker_branch and "mIsTracker":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mIsTracker does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIsTracker")
 */
    goto __pyx_L957;
  }

  /* "EMTree.pyx":4508
 *             #self.complained.add("mIsTracker")
 *         else:
 *             self.mIsTracker_branch.SetAddress(<void*>&self.mIsTracker_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetArea"
 */
  /*else*/ {
    __pyx_v_self->mIsTracker_branch->SetAddress(((void *)(&__pyx_v_self->mIsTracker_value)));
  }
  __pyx_L957:;

  /* "EMTree.pyx":4511
 * 
 *         #print "making mJetArea"
 *         self.mJetArea_branch = the_tree.GetBranch("mJetArea")             # <<<<<<<<<<<<<<
 *         #if not self.mJetArea_branch and "mJetArea" not in self.complained:
 *         if not self.mJetArea_branch and "mJetArea":
 */
  __pyx_v_self->mJetArea_branch = __pyx_v_the_tree->GetBranch(((char *)"mJetArea"));

  /* "EMTree.pyx":4513
 *         self.mJetArea_branch = the_tree.GetBranch("mJetArea")
 *         #if not self.mJetArea_branch and "mJetArea" not in self.complained:
 *         if not self.mJetArea_branch and "mJetArea":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetArea does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetArea")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetArea_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L961_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L961_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4514
 *         #if not self.mJetArea_branch and "mJetArea" not in self.complained:
 *         if not self.mJetArea_branch and "mJetArea":
 *             warnings.warn( "EMTree: Expected branch mJetArea does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetArea")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4514, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4514, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__321, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4514, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4513
 *         self.mJetArea_branch = the_tree.GetBranch("mJetArea")
 *         #if not self.mJetArea_branch and "mJetArea" not in self.complained:
 *         if not self.mJetArea_branch and "mJetArea":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetArea does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetArea")
 */
    goto __pyx_L960;
  }

  /* "EMTree.pyx":4517
 *             #self.complained.add("mJetArea")
 *         else:
 *             self.mJetArea_branch.SetAddress(<void*>&self.mJetArea_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetBtag"
 */
  /*else*/ {
    __pyx_v_self->mJetArea_branch->SetAddress(((void *)(&__pyx_v_self->mJetArea_value)));
  }
  __pyx_L960:;

  /* "EMTree.pyx":4520
 * 
 *         #print "making mJetBtag"
 *         self.mJetBtag_branch = the_tree.GetBranch("mJetBtag")             # <<<<<<<<<<<<<<
 *         #if not self.mJetBtag_branch and "mJetBtag" not in self.complained:
 *         if not self.mJetBtag_branch and "mJetBtag":
 */
  __pyx_v_self->mJetBtag_branch = __pyx_v_the_tree->GetBranch(((char *)"mJetBtag"));

  /* "EMTree.pyx":4522
 *         self.mJetBtag_branch = the_tree.GetBranch("mJetBtag")
 *         #if not self.mJetBtag_branch and "mJetBtag" not in self.complained:
 *         if not self.mJetBtag_branch and "mJetBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetBtag")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetBtag_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L964_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L964_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4523
 *         #if not self.mJetBtag_branch and "mJetBtag" not in self.complained:
 *         if not self.mJetBtag_branch and "mJetBtag":
 *             warnings.warn( "EMTree: Expected branch mJetBtag does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetBtag")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4523, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4523, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__322, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4523, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4522
 *         self.mJetBtag_branch = the_tree.GetBranch("mJetBtag")
 *         #if not self.mJetBtag_branch and "mJetBtag" not in self.complained:
 *         if not self.mJetBtag_branch and "mJetBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetBtag")
 */
    goto __pyx_L963;
  }

  /* "EMTree.pyx":4526
 *             #self.complained.add("mJetBtag")
 *         else:
 *             self.mJetBtag_branch.SetAddress(<void*>&self.mJetBtag_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetDR"
 */
  /*else*/ {
    __pyx_v_self->mJetBtag_branch->SetAddress(((void *)(&__pyx_v_self->mJetBtag_value)));
  }
  __pyx_L963:;

  /* "EMTree.pyx":4529
 * 
 *         #print "making mJetDR"
 *         self.mJetDR_branch = the_tree.GetBranch("mJetDR")             # <<<<<<<<<<<<<<
 *         #if not self.mJetDR_branch and "mJetDR" not in self.complained:
 *         if not self.mJetDR_branch and "mJetDR":
 */
  __pyx_v_self->mJetDR_branch = __pyx_v_the_tree->GetBranch(((char *)"mJetDR"));

  /* "EMTree.pyx":4531
 *         self.mJetDR_branch = the_tree.GetBranch("mJetDR")
 *         #if not self.mJetDR_branch and "mJetDR" not in self.complained:
 *         if not self.mJetDR_branch and "mJetDR":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetDR does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetDR")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetDR_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L967_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L967_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4532
 *         #if not self.mJetDR_branch and "mJetDR" not in self.complained:
 *         if not self.mJetDR_branch and "mJetDR":
 *             warnings.warn( "EMTree: Expected branch mJetDR does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetDR")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4532, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4532, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__323, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4532, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4531
 *         self.mJetDR_branch = the_tree.GetBranch("mJetDR")
 *         #if not self.mJetDR_branch and "mJetDR" not in self.complained:
 *         if not self.mJetDR_branch and "mJetDR":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetDR does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetDR")
 */
    goto __pyx_L966;
  }

  /* "EMTree.pyx":4535
 *             #self.complained.add("mJetDR")
 *         else:
 *             self.mJetDR_branch.SetAddress(<void*>&self.mJetDR_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetEtaEtaMoment"
 */
  /*else*/ {
    __pyx_v_self->mJetDR_branch->SetAddress(((void *)(&__pyx_v_self->mJetDR_value)));
  }
  __pyx_L966:;

  /* "EMTree.pyx":4538
 * 
 *         #print "making mJetEtaEtaMoment"
 *         self.mJetEtaEtaMoment_branch = the_tree.GetBranch("mJetEtaEtaMoment")             # <<<<<<<<<<<<<<
 *         #if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment" not in self.complained:
 *         if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment":
 */
  __pyx_v_self->mJetEtaEtaMoment_branch = __pyx_v_the_tree->GetBranch(((char *)"mJetEtaEtaMoment"));

  /* "EMTree.pyx":4540
 *         self.mJetEtaEtaMoment_branch = the_tree.GetBranch("mJetEtaEtaMoment")
 *         #if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment" not in self.complained:
 *         if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetEtaEtaMoment")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetEtaEtaMoment_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L970_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L970_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4541
 *         #if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment" not in self.complained:
 *         if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment":
 *             warnings.warn( "EMTree: Expected branch mJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetEtaEtaMoment")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4541, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4541, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__324, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4541, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4540
 *         self.mJetEtaEtaMoment_branch = the_tree.GetBranch("mJetEtaEtaMoment")
 *         #if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment" not in self.complained:
 *         if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetEtaEtaMoment")
 */
    goto __pyx_L969;
  }

  /* "EMTree.pyx":4544
 *             #self.complained.add("mJetEtaEtaMoment")
 *         else:
 *             self.mJetEtaEtaMoment_branch.SetAddress(<void*>&self.mJetEtaEtaMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetEtaPhiMoment"
 */
  /*else*/ {
    __pyx_v_self->mJetEtaEtaMoment_branch->SetAddress(((void *)(&__pyx_v_self->mJetEtaEtaMoment_value)));
  }
  __pyx_L969:;

  /* "EMTree.pyx":4547
 * 
 *         #print "making mJetEtaPhiMoment"
 *         self.mJetEtaPhiMoment_branch = the_tree.GetBranch("mJetEtaPhiMoment")             # <<<<<<<<<<<<<<
 *         #if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment" not in self.complained:
 *         if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment":
 */
  __pyx_v_self->mJetEtaPhiMoment_branch = __pyx_v_the_tree->GetBranch(((char *)"mJetEtaPhiMoment"));

  /* "EMTree.pyx":4549
 *         self.mJetEtaPhiMoment_branch = the_tree.GetBranch("mJetEtaPhiMoment")
 *         #if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment" not in self.complained:
 *         if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetEtaPhiMoment")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetEtaPhiMoment_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L973_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L973_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4550
 *         #if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment" not in self.complained:
 *         if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment":
 *             warnings.warn( "EMTree: Expected branch mJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetEtaPhiMoment")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4550, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4550, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__325, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4550, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4549
 *         self.mJetEtaPhiMoment_branch = the_tree.GetBranch("mJetEtaPhiMoment")
 *         #if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment" not in self.complained:
 *         if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetEtaPhiMoment")
 */
    goto __pyx_L972;
  }

  /* "EMTree.pyx":4553
 *             #self.complained.add("mJetEtaPhiMoment")
 *         else:
 *             self.mJetEtaPhiMoment_branch.SetAddress(<void*>&self.mJetEtaPhiMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetEtaPhiSpread"
 */
  /*else*/ {
    __pyx_v_self->mJetEtaPhiMoment_branch->SetAddress(((void *)(&__pyx_v_self->mJetEtaPhiMoment_value)));
  }
  __pyx_L972:;

  /* "EMTree.pyx":4556
 * 
 *         #print "making mJetEtaPhiSpread"
 *         self.mJetEtaPhiSpread_branch = the_tree.GetBranch("mJetEtaPhiSpread")             # <<<<<<<<<<<<<<
 *         #if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread" not in self.complained:
 *         if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread":
 */
  __pyx_v_self->mJetEtaPhiSpread_branch = __pyx_v_the_tree->GetBranch(((char *)"mJetEtaPhiSpread"));

  /* "EMTree.pyx":4558
 *         self.mJetEtaPhiSpread_branch = the_tree.GetBranch("mJetEtaPhiSpread")
 *         #if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread" not in self.complained:
 *         if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetEtaPhiSpread")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetEtaPhiSpread_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L976_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L976_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4559
 *         #if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread" not in self.complained:
 *         if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread":
 *             warnings.warn( "EMTree: Expected branch mJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetEtaPhiSpread")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4559, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4559, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__326, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4559, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4558
 *         self.mJetEtaPhiSpread_branch = the_tree.GetBranch("mJetEtaPhiSpread")
 *         #if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread" not in self.complained:
 *         if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetEtaPhiSpread")
 */
    goto __pyx_L975;
  }

  /* "EMTree.pyx":4562
 *             #self.complained.add("mJetEtaPhiSpread")
 *         else:
 *             self.mJetEtaPhiSpread_branch.SetAddress(<void*>&self.mJetEtaPhiSpread_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetHadronFlavour"
 */
  /*else*/ {
    __pyx_v_self->mJetEtaPhiSpread_branch->SetAddress(((void *)(&__pyx_v_self->mJetEtaPhiSpread_value)));
  }
  __pyx_L975:;

  /* "EMTree.pyx":4565
 * 
 *         #print "making mJetHadronFlavour"
 *         self.mJetHadronFlavour_branch = the_tree.GetBranch("mJetHadronFlavour")             # <<<<<<<<<<<<<<
 *         #if not self.mJetHadronFlavour_branch and "mJetHadronFlavour" not in self.complained:
 *         if not self.mJetHadronFlavour_branch and "mJetHadronFlavour":
 */
  __pyx_v_self->mJetHadronFlavour_branch = __pyx_v_the_tree->GetBranch(((char *)"mJetHadronFlavour"));

  /* "EMTree.pyx":4567
 *         self.mJetHadronFlavour_branch = the_tree.GetBranch("mJetHadronFlavour")
 *         #if not self.mJetHadronFlavour_branch and "mJetHadronFlavour" not in self.complained:
 *         if not self.mJetHadronFlavour_branch and "mJetHadronFlavour":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetHadronFlavour does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetHadronFlavour")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetHadronFlavour_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L979_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L979_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4568
 *         #if not self.mJetHadronFlavour_branch and "mJetHadronFlavour" not in self.complained:
 *         if not self.mJetHadronFlavour_branch and "mJetHadronFlavour":
 *             warnings.warn( "EMTree: Expected branch mJetHadronFlavour does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetHadronFlavour")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4568, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4568, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__327, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4568, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4567
 *         self.mJetHadronFlavour_branch = the_tree.GetBranch("mJetHadronFlavour")
 *         #if not self.mJetHadronFlavour_branch and "mJetHadronFlavour" not in self.complained:
 *         if not self.mJetHadronFlavour_branch and "mJetHadronFlavour":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetHadronFlavour does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetHadronFlavour")
 */
    goto __pyx_L978;
  }

  /* "EMTree.pyx":4571
 *             #self.complained.add("mJetHadronFlavour")
 *         else:
 *             self.mJetHadronFlavour_branch.SetAddress(<void*>&self.mJetHadronFlavour_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetPFCISVBtag"
 */
  /*else*/ {
    __pyx_v_self->mJetHadronFlavour_branch->SetAddress(((void *)(&__pyx_v_self->mJetHadronFlavour_value)));
  }
  __pyx_L978:;

  /* "EMTree.pyx":4574
 * 
 *         #print "making mJetPFCISVBtag"
 *         self.mJetPFCISVBtag_branch = the_tree.GetBranch("mJetPFCISVBtag")             # <<<<<<<<<<<<<<
 *         #if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag" not in self.complained:
 *         if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag":
 */
  __pyx_v_self->mJetPFCISVBtag_branch = __pyx_v_the_tree->GetBranch(((char *)"mJetPFCISVBtag"));

  /* "EMTree.pyx":4576
 *         self.mJetPFCISVBtag_branch = the_tree.GetBranch("mJetPFCISVBtag")
 *         #if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag" not in self.complained:
 *         if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetPFCISVBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPFCISVBtag")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetPFCISVBtag_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L982_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L982_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4577
 *         #if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag" not in self.complained:
 *         if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag":
 *             warnings.warn( "EMTree: Expected branch mJetPFCISVBtag does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetPFCISVBtag")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4577, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4577, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__328, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4577, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4576
 *         self.mJetPFCISVBtag_branch = the_tree.GetBranch("mJetPFCISVBtag")
 *         #if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag" not in self.complained:
 *         if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetPFCISVBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPFCISVBtag")
 */
    goto __pyx_L981;
  }

  /* "EMTree.pyx":4580
 *             #self.complained.add("mJetPFCISVBtag")
 *         else:
 *             self.mJetPFCISVBtag_branch.SetAddress(<void*>&self.mJetPFCISVBtag_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetPartonFlavour"
 */
  /*else*/ {
    __pyx_v_self->mJetPFCISVBtag_branch->SetAddress(((void *)(&__pyx_v_self->mJetPFCISVBtag_value)));
  }
  __pyx_L981:;

  /* "EMTree.pyx":4583
 * 
 *         #print "making mJetPartonFlavour"
 *         self.mJetPartonFlavour_branch = the_tree.GetBranch("mJetPartonFlavour")             # <<<<<<<<<<<<<<
 *         #if not self.mJetPartonFlavour_branch and "mJetPartonFlavour" not in self.complained:
 *         if not self.mJetPartonFlavour_branch and "mJetPartonFlavour":
 */
  __pyx_v_self->mJetPartonFlavour_branch = __pyx_v_the_tree->GetBranch(((char *)"mJetPartonFlavour"));

  /* "EMTree.pyx":4585
 *         self.mJetPartonFlavour_branch = the_tree.GetBranch("mJetPartonFlavour")
 *         #if not self.mJetPartonFlavour_branch and "mJetPartonFlavour" not in self.complained:
 *         if not self.mJetPartonFlavour_branch and "mJetPartonFlavour":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetPartonFlavour does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPartonFlavour")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetPartonFlavour_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L985_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L985_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4586
 *         #if not self.mJetPartonFlavour_branch and "mJetPartonFlavour" not in self.complained:
 *         if not self.mJetPartonFlavour_branch and "mJetPartonFlavour":
 *             warnings.warn( "EMTree: Expected branch mJetPartonFlavour does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetPartonFlavour")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4586, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4586, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__329, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4586, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4585
 *         self.mJetPartonFlavour_branch = the_tree.GetBranch("mJetPartonFlavour")
 *         #if not self.mJetPartonFlavour_branch and "mJetPartonFlavour" not in self.complained:
 *         if not self.mJetPartonFlavour_branch and "mJetPartonFlavour":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetPartonFlavour does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPartonFlavour")
 */
    goto __pyx_L984;
  }

  /* "EMTree.pyx":4589
 *             #self.complained.add("mJetPartonFlavour")
 *         else:
 *             self.mJetPartonFlavour_branch.SetAddress(<void*>&self.mJetPartonFlavour_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetPhiPhiMoment"
 */
  /*else*/ {
    __pyx_v_self->mJetPartonFlavour_branch->SetAddress(((void *)(&__pyx_v_self->mJetPartonFlavour_value)));
  }
  __pyx_L984:;

  /* "EMTree.pyx":4592
 * 
 *         #print "making mJetPhiPhiMoment"
 *         self.mJetPhiPhiMoment_branch = the_tree.GetBranch("mJetPhiPhiMoment")             # <<<<<<<<<<<<<<
 *         #if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment" not in self.complained:
 *         if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment":
 */
  __pyx_v_self->mJetPhiPhiMoment_branch = __pyx_v_the_tree->GetBranch(((char *)"mJetPhiPhiMoment"));

  /* "EMTree.pyx":4594
 *         self.mJetPhiPhiMoment_branch = the_tree.GetBranch("mJetPhiPhiMoment")
 *         #if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment" not in self.complained:
 *         if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPhiPhiMoment")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetPhiPhiMoment_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L988_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L988_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4595
 *         #if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment" not in self.complained:
 *         if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment":
 *             warnings.warn( "EMTree: Expected branch mJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetPhiPhiMoment")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4595, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4595, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__330, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4595, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4594
 *         self.mJetPhiPhiMoment_branch = the_tree.GetBranch("mJetPhiPhiMoment")
 *         #if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment" not in self.complained:
 *         if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPhiPhiMoment")
 */
    goto __pyx_L987;
  }

  /* "EMTree.pyx":4598
 *             #self.complained.add("mJetPhiPhiMoment")
 *         else:
 *             self.mJetPhiPhiMoment_branch.SetAddress(<void*>&self.mJetPhiPhiMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetPt"
 */
  /*else*/ {
    __pyx_v_self->mJetPhiPhiMoment_branch->SetAddress(((void *)(&__pyx_v_self->mJetPhiPhiMoment_value)));
  }
  __pyx_L987:;

  /* "EMTree.pyx":4601
 * 
 *         #print "making mJetPt"
 *         self.mJetPt_branch = the_tree.GetBranch("mJetPt")             # <<<<<<<<<<<<<<
 *         #if not self.mJetPt_branch and "mJetPt" not in self.complained:
 *         if not self.mJetPt_branch and "mJetPt":
 */
  __pyx_v_self->mJetPt_branch = __pyx_v_the_tree->GetBranch(((char *)"mJetPt"));

  /* "EMTree.pyx":4603
 *         self.mJetPt_branch = the_tree.GetBranch("mJetPt")
 *         #if not self.mJetPt_branch and "mJetPt" not in self.complained:
 *         if not self.mJetPt_branch and "mJetPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetPt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L991_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L991_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4604
 *         #if not self.mJetPt_branch and "mJetPt" not in self.complained:
 *         if not self.mJetPt_branch and "mJetPt":
 *             warnings.warn( "EMTree: Expected branch mJetPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetPt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4604, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4604, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__331, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4604, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4603
 *         self.mJetPt_branch = the_tree.GetBranch("mJetPt")
 *         #if not self.mJetPt_branch and "mJetPt" not in self.complained:
 *         if not self.mJetPt_branch and "mJetPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mJetPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPt")
 */
    goto __pyx_L990;
  }

  /* "EMTree.pyx":4607
 *             #self.complained.add("mJetPt")
 *         else:
 *             self.mJetPt_branch.SetAddress(<void*>&self.mJetPt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMass"
 */
  /*else*/ {
    __pyx_v_self->mJetPt_branch->SetAddress(((void *)(&__pyx_v_self->mJetPt_value)));
  }
  __pyx_L990:;

  /* "EMTree.pyx":4610
 * 
 *         #print "making mMass"
 *         self.mMass_branch = the_tree.GetBranch("mMass")             # <<<<<<<<<<<<<<
 *         #if not self.mMass_branch and "mMass" not in self.complained:
 *         if not self.mMass_branch and "mMass":
 */
  __pyx_v_self->mMass_branch = __pyx_v_the_tree->GetBranch(((char *)"mMass"));

  /* "EMTree.pyx":4612
 *         self.mMass_branch = the_tree.GetBranch("mMass")
 *         #if not self.mMass_branch and "mMass" not in self.complained:
 *         if not self.mMass_branch and "mMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L994_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L994_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4613
 *         #if not self.mMass_branch and "mMass" not in self.complained:
 *         if not self.mMass_branch and "mMass":
 *             warnings.warn( "EMTree: Expected branch mMass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__332, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4612
 *         self.mMass_branch = the_tree.GetBranch("mMass")
 *         #if not self.mMass_branch and "mMass" not in self.complained:
 *         if not self.mMass_branch and "mMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMass")
 */
    goto __pyx_L993;
  }

  /* "EMTree.pyx":4616
 *             #self.complained.add("mMass")
 *         else:
 *             self.mMass_branch.SetAddress(<void*>&self.mMass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchEmbeddedFilterMu24"
 */
  /*else*/ {
    __pyx_v_self->mMass_branch->SetAddress(((void *)(&__pyx_v_self->mMass_value)));
  }
  __pyx_L993:;

  /* "EMTree.pyx":4619
 * 
 *         #print "making mMatchEmbeddedFilterMu24"
 *         self.mMatchEmbeddedFilterMu24_branch = the_tree.GetBranch("mMatchEmbeddedFilterMu24")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchEmbeddedFilterMu24_branch and "mMatchEmbeddedFilterMu24" not in self.complained:
 *         if not self.mMatchEmbeddedFilterMu24_branch and "mMatchEmbeddedFilterMu24":
 */
  __pyx_v_self->mMatchEmbeddedFilterMu24_branch = __pyx_v_the_tree->GetBranch(((char *)"mMatchEmbeddedFilterMu24"));

  /* "EMTree.pyx":4621
 *         self.mMatchEmbeddedFilterMu24_branch = the_tree.GetBranch("mMatchEmbeddedFilterMu24")
 *         #if not self.mMatchEmbeddedFilterMu24_branch and "mMatchEmbeddedFilterMu24" not in self.complained:
 *         if not self.mMatchEmbeddedFilterMu24_branch and "mMatchEmbeddedFilterMu24":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchEmbeddedFilterMu24 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchEmbeddedFilterMu24")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchEmbeddedFilterMu24_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L997_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L997_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4622
 *         #if not self.mMatchEmbeddedFilterMu24_branch and "mMatchEmbeddedFilterMu24" not in self.complained:
 *         if not self.mMatchEmbeddedFilterMu24_branch and "mMatchEmbeddedFilterMu24":
 *             warnings.warn( "EMTree: Expected branch mMatchEmbeddedFilterMu24 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchEmbeddedFilterMu24")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4622, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4622, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__333, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4622, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4621
 *         self.mMatchEmbeddedFilterMu24_branch = the_tree.GetBranch("mMatchEmbeddedFilterMu24")
 *         #if not self.mMatchEmbeddedFilterMu24_branch and "mMatchEmbeddedFilterMu24" not in self.complained:
 *         if not self.mMatchEmbeddedFilterMu24_branch and "mMatchEmbeddedFilterMu24":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchEmbeddedFilterMu24 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchEmbeddedFilterMu24")
 */
    goto __pyx_L996;
  }

  /* "EMTree.pyx":4625
 *             #self.complained.add("mMatchEmbeddedFilterMu24")
 *         else:
 *             self.mMatchEmbeddedFilterMu24_branch.SetAddress(<void*>&self.mMatchEmbeddedFilterMu24_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchEmbeddedFilterMu27"
 */
  /*else*/ {
    __pyx_v_self->mMatchEmbeddedFilterMu24_branch->SetAddress(((void *)(&__pyx_v_self->mMatchEmbeddedFilterMu24_value)));
  }
  __pyx_L996:;

  /* "EMTree.pyx":4628
 * 
 *         #print "making mMatchEmbeddedFilterMu27"
 *         self.mMatchEmbeddedFilterMu27_branch = the_tree.GetBranch("mMatchEmbeddedFilterMu27")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchEmbeddedFilterMu27_branch and "mMatchEmbeddedFilterMu27" not in self.complained:
 *         if not self.mMatchEmbeddedFilterMu27_branch and "mMatchEmbeddedFilterMu27":
 */
  __pyx_v_self->mMatchEmbeddedFilterMu27_branch = __pyx_v_the_tree->GetBranch(((char *)"mMatchEmbeddedFilterMu27"));

  /* "EMTree.pyx":4630
 *         self.mMatchEmbeddedFilterMu27_branch = the_tree.GetBranch("mMatchEmbeddedFilterMu27")
 *         #if not self.mMatchEmbeddedFilterMu27_branch and "mMatchEmbeddedFilterMu27" not in self.complained:
 *         if not self.mMatchEmbeddedFilterMu27_branch and "mMatchEmbeddedFilterMu27":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchEmbeddedFilterMu27 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchEmbeddedFilterMu27")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchEmbeddedFilterMu27_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1000_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1000_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4631
 *         #if not self.mMatchEmbeddedFilterMu27_branch and "mMatchEmbeddedFilterMu27" not in self.complained:
 *         if not self.mMatchEmbeddedFilterMu27_branch and "mMatchEmbeddedFilterMu27":
 *             warnings.warn( "EMTree: Expected branch mMatchEmbeddedFilterMu27 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchEmbeddedFilterMu27")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4631, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4631, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__334, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4631, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4630
 *         self.mMatchEmbeddedFilterMu27_branch = the_tree.GetBranch("mMatchEmbeddedFilterMu27")
 *         #if not self.mMatchEmbeddedFilterMu27_branch and "mMatchEmbeddedFilterMu27" not in self.complained:
 *         if not self.mMatchEmbeddedFilterMu27_branch and "mMatchEmbeddedFilterMu27":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchEmbeddedFilterMu27 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchEmbeddedFilterMu27")
 */
    goto __pyx_L999;
  }

  /* "EMTree.pyx":4634
 *             #self.complained.add("mMatchEmbeddedFilterMu27")
 *         else:
 *             self.mMatchEmbeddedFilterMu27_branch.SetAddress(<void*>&self.mMatchEmbeddedFilterMu27_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesIsoMu24Filter"
 */
  /*else*/ {
    __pyx_v_self->mMatchEmbeddedFilterMu27_branch->SetAddress(((void *)(&__pyx_v_self->mMatchEmbeddedFilterMu27_value)));
  }
  __pyx_L999:;

  /* "EMTree.pyx":4637
 * 
 *         #print "making mMatchesIsoMu24Filter"
 *         self.mMatchesIsoMu24Filter_branch = the_tree.GetBranch("mMatchesIsoMu24Filter")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesIsoMu24Filter_branch and "mMatchesIsoMu24Filter" not in self.complained:
 *         if not self.mMatchesIsoMu24Filter_branch and "mMatchesIsoMu24Filter":
 */
  __pyx_v_self->mMatchesIsoMu24Filter_branch = __pyx_v_the_tree->GetBranch(((char *)"mMatchesIsoMu24Filter"));

  /* "EMTree.pyx":4639
 *         self.mMatchesIsoMu24Filter_branch = the_tree.GetBranch("mMatchesIsoMu24Filter")
 *         #if not self.mMatchesIsoMu24Filter_branch and "mMatchesIsoMu24Filter" not in self.complained:
 *         if not self.mMatchesIsoMu24Filter_branch and "mMatchesIsoMu24Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesIsoMu24Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesIsoMu24Filter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesIsoMu24Filter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1003_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1003_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4640
 *         #if not self.mMatchesIsoMu24Filter_branch and "mMatchesIsoMu24Filter" not in self.complained:
 *         if not self.mMatchesIsoMu24Filter_branch and "mMatchesIsoMu24Filter":
 *             warnings.warn( "EMTree: Expected branch mMatchesIsoMu24Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesIsoMu24Filter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4640, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4640, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__335, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4640, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4639
 *         self.mMatchesIsoMu24Filter_branch = the_tree.GetBranch("mMatchesIsoMu24Filter")
 *         #if not self.mMatchesIsoMu24Filter_branch and "mMatchesIsoMu24Filter" not in self.complained:
 *         if not self.mMatchesIsoMu24Filter_branch and "mMatchesIsoMu24Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesIsoMu24Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesIsoMu24Filter")
 */
    goto __pyx_L1002;
  }

  /* "EMTree.pyx":4643
 *             #self.complained.add("mMatchesIsoMu24Filter")
 *         else:
 *             self.mMatchesIsoMu24Filter_branch.SetAddress(<void*>&self.mMatchesIsoMu24Filter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesIsoMu24Path"
 */
  /*else*/ {
    __pyx_v_self->mMatchesIsoMu24Filter_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesIsoMu24Filter_value)));
  }
  __pyx_L1002:;

  /* "EMTree.pyx":4646
 * 
 *         #print "making mMatchesIsoMu24Path"
 *         self.mMatchesIsoMu24Path_branch = the_tree.GetBranch("mMatchesIsoMu24Path")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesIsoMu24Path_branch and "mMatchesIsoMu24Path" not in self.complained:
 *         if not self.mMatchesIsoMu24Path_branch and "mMatchesIsoMu24Path":
 */
  __pyx_v_self->mMatchesIsoMu24Path_branch = __pyx_v_the_tree->GetBranch(((char *)"mMatchesIsoMu24Path"));

  /* "EMTree.pyx":4648
 *         self.mMatchesIsoMu24Path_branch = the_tree.GetBranch("mMatchesIsoMu24Path")
 *         #if not self.mMatchesIsoMu24Path_branch and "mMatchesIsoMu24Path" not in self.complained:
 *         if not self.mMatchesIsoMu24Path_branch and "mMatchesIsoMu24Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesIsoMu24Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesIsoMu24Path")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesIsoMu24Path_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1006_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1006_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4649
 *         #if not self.mMatchesIsoMu24Path_branch and "mMatchesIsoMu24Path" not in self.complained:
 *         if not self.mMatchesIsoMu24Path_branch and "mMatchesIsoMu24Path":
 *             warnings.warn( "EMTree: Expected branch mMatchesIsoMu24Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesIsoMu24Path")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4649, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4649, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__336, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4649, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4648
 *         self.mMatchesIsoMu24Path_branch = the_tree.GetBranch("mMatchesIsoMu24Path")
 *         #if not self.mMatchesIsoMu24Path_branch and "mMatchesIsoMu24Path" not in self.complained:
 *         if not self.mMatchesIsoMu24Path_branch and "mMatchesIsoMu24Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesIsoMu24Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesIsoMu24Path")
 */
    goto __pyx_L1005;
  }

  /* "EMTree.pyx":4652
 *             #self.complained.add("mMatchesIsoMu24Path")
 *         else:
 *             self.mMatchesIsoMu24Path_branch.SetAddress(<void*>&self.mMatchesIsoMu24Path_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesIsoMu27Filter"
 */
  /*else*/ {
    __pyx_v_self->mMatchesIsoMu24Path_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesIsoMu24Path_value)));
  }
  __pyx_L1005:;

  /* "EMTree.pyx":4655
 * 
 *         #print "making mMatchesIsoMu27Filter"
 *         self.mMatchesIsoMu27Filter_branch = the_tree.GetBranch("mMatchesIsoMu27Filter")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesIsoMu27Filter_branch and "mMatchesIsoMu27Filter" not in self.complained:
 *         if not self.mMatchesIsoMu27Filter_branch and "mMatchesIsoMu27Filter":
 */
  __pyx_v_self->mMatchesIsoMu27Filter_branch = __pyx_v_the_tree->GetBranch(((char *)"mMatchesIsoMu27Filter"));

  /* "EMTree.pyx":4657
 *         self.mMatchesIsoMu27Filter_branch = the_tree.GetBranch("mMatchesIsoMu27Filter")
 *         #if not self.mMatchesIsoMu27Filter_branch and "mMatchesIsoMu27Filter" not in self.complained:
 *         if not self.mMatchesIsoMu27Filter_branch and "mMatchesIsoMu27Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesIsoMu27Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesIsoMu27Filter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesIsoMu27Filter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1009_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1009_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4658
 *         #if not self.mMatchesIsoMu27Filter_branch and "mMatchesIsoMu27Filter" not in self.complained:
 *         if not self.mMatchesIsoMu27Filter_branch and "mMatchesIsoMu27Filter":
 *             warnings.warn( "EMTree: Expected branch mMatchesIsoMu27Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesIsoMu27Filter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4658, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4658, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__337, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4658, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4657
 *         self.mMatchesIsoMu27Filter_branch = the_tree.GetBranch("mMatchesIsoMu27Filter")
 *         #if not self.mMatchesIsoMu27Filter_branch and "mMatchesIsoMu27Filter" not in self.complained:
 *         if not self.mMatchesIsoMu27Filter_branch and "mMatchesIsoMu27Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesIsoMu27Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesIsoMu27Filter")
 */
    goto __pyx_L1008;
  }

  /* "EMTree.pyx":4661
 *             #self.complained.add("mMatchesIsoMu27Filter")
 *         else:
 *             self.mMatchesIsoMu27Filter_branch.SetAddress(<void*>&self.mMatchesIsoMu27Filter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesIsoMu27Path"
 */
  /*else*/ {
    __pyx_v_self->mMatchesIsoMu27Filter_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesIsoMu27Filter_value)));
  }
  __pyx_L1008:;

  /* "EMTree.pyx":4664
 * 
 *         #print "making mMatchesIsoMu27Path"
 *         self.mMatchesIsoMu27Path_branch = the_tree.GetBranch("mMatchesIsoMu27Path")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesIsoMu27Path_branch and "mMatchesIsoMu27Path" not in self.complained:
 *         if not self.mMatchesIsoMu27Path_branch and "mMatchesIsoMu27Path":
 */
  __pyx_v_self->mMatchesIsoMu27Path_branch = __pyx_v_the_tree->GetBranch(((char *)"mMatchesIsoMu27Path"));

  /* "EMTree.pyx":4666
 *         self.mMatchesIsoMu27Path_branch = the_tree.GetBranch("mMatchesIsoMu27Path")
 *         #if not self.mMatchesIsoMu27Path_branch and "mMatchesIsoMu27Path" not in self.complained:
 *         if not self.mMatchesIsoMu27Path_branch and "mMatchesIsoMu27Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesIsoMu27Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesIsoMu27Path")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesIsoMu27Path_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1012_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1012_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4667
 *         #if not self.mMatchesIsoMu27Path_branch and "mMatchesIsoMu27Path" not in self.complained:
 *         if not self.mMatchesIsoMu27Path_branch and "mMatchesIsoMu27Path":
 *             warnings.warn( "EMTree: Expected branch mMatchesIsoMu27Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesIsoMu27Path")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4667, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4667, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__338, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4667, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4666
 *         self.mMatchesIsoMu27Path_branch = the_tree.GetBranch("mMatchesIsoMu27Path")
 *         #if not self.mMatchesIsoMu27Path_branch and "mMatchesIsoMu27Path" not in self.complained:
 *         if not self.mMatchesIsoMu27Path_branch and "mMatchesIsoMu27Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesIsoMu27Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesIsoMu27Path")
 */
    goto __pyx_L1011;
  }

  /* "EMTree.pyx":4670
 *             #self.complained.add("mMatchesIsoMu27Path")
 *         else:
 *             self.mMatchesIsoMu27Path_branch.SetAddress(<void*>&self.mMatchesIsoMu27Path_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesMu23e12DZFilter"
 */
  /*else*/ {
    __pyx_v_self->mMatchesIsoMu27Path_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesIsoMu27Path_value)));
  }
  __pyx_L1011:;

  /* "EMTree.pyx":4673
 * 
 *         #print "making mMatchesMu23e12DZFilter"
 *         self.mMatchesMu23e12DZFilter_branch = the_tree.GetBranch("mMatchesMu23e12DZFilter")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesMu23e12DZFilter_branch and "mMatchesMu23e12DZFilter" not in self.complained:
 *         if not self.mMatchesMu23e12DZFilter_branch and "mMatchesMu23e12DZFilter":
 */
  __pyx_v_self->mMatchesMu23e12DZFilter_branch = __pyx_v_the_tree->GetBranch(((char *)"mMatchesMu23e12DZFilter"));

  /* "EMTree.pyx":4675
 *         self.mMatchesMu23e12DZFilter_branch = the_tree.GetBranch("mMatchesMu23e12DZFilter")
 *         #if not self.mMatchesMu23e12DZFilter_branch and "mMatchesMu23e12DZFilter" not in self.complained:
 *         if not self.mMatchesMu23e12DZFilter_branch and "mMatchesMu23e12DZFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesMu23e12DZFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu23e12DZFilter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesMu23e12DZFilter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1015_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1015_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4676
 *         #if not self.mMatchesMu23e12DZFilter_branch and "mMatchesMu23e12DZFilter" not in self.complained:
 *         if not self.mMatchesMu23e12DZFilter_branch and "mMatchesMu23e12DZFilter":
 *             warnings.warn( "EMTree: Expected branch mMatchesMu23e12DZFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu23e12DZFilter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4676, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4676, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__339, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4676, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4675
 *         self.mMatchesMu23e12DZFilter_branch = the_tree.GetBranch("mMatchesMu23e12DZFilter")
 *         #if not self.mMatchesMu23e12DZFilter_branch and "mMatchesMu23e12DZFilter" not in self.complained:
 *         if not self.mMatchesMu23e12DZFilter_branch and "mMatchesMu23e12DZFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesMu23e12DZFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu23e12DZFilter")
 */
    goto __pyx_L1014;
  }

  /* "EMTree.pyx":4679
 *             #self.complained.add("mMatchesMu23e12DZFilter")
 *         else:
 *             self.mMatchesMu23e12DZFilter_branch.SetAddress(<void*>&self.mMatchesMu23e12DZFilter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesMu23e12DZPath"
 */
  /*else*/ {
    __pyx_v_self->mMatchesMu23e12DZFilter_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesMu23e12DZFilter_value)));
  }
  __pyx_L1014:;

  /* "EMTree.pyx":4682
 * 
 *         #print "making mMatchesMu23e12DZPath"
 *         self.mMatchesMu23e12DZPath_branch = the_tree.GetBranch("mMatchesMu23e12DZPath")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesMu23e12DZPath_branch and "mMatchesMu23e12DZPath" not in self.complained:
 *         if not self.mMatchesMu23e12DZPath_branch and "mMatchesMu23e12DZPath":
 */
  __pyx_v_self->mMatchesMu23e12DZPath_branch = __pyx_v_the_tree->GetBranch(((char *)"mMatchesMu23e12DZPath"));

  /* "EMTree.pyx":4684
 *         self.mMatchesMu23e12DZPath_branch = the_tree.GetBranch("mMatchesMu23e12DZPath")
 *         #if not self.mMatchesMu23e12DZPath_branch and "mMatchesMu23e12DZPath" not in self.complained:
 *         if not self.mMatchesMu23e12DZPath_branch and "mMatchesMu23e12DZPath":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesMu23e12DZPath does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu23e12DZPath")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesMu23e12DZPath_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1018_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1018_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4685
 *         #if not self.mMatchesMu23e12DZPath_branch and "mMatchesMu23e12DZPath" not in self.complained:
 *         if not self.mMatchesMu23e12DZPath_branch and "mMatchesMu23e12DZPath":
 *             warnings.warn( "EMTree: Expected branch mMatchesMu23e12DZPath does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu23e12DZPath")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4685, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4685, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__340, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4685, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4684
 *         self.mMatchesMu23e12DZPath_branch = the_tree.GetBranch("mMatchesMu23e12DZPath")
 *         #if not self.mMatchesMu23e12DZPath_branch and "mMatchesMu23e12DZPath" not in self.complained:
 *         if not self.mMatchesMu23e12DZPath_branch and "mMatchesMu23e12DZPath":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesMu23e12DZPath does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu23e12DZPath")
 */
    goto __pyx_L1017;
  }

  /* "EMTree.pyx":4688
 *             #self.complained.add("mMatchesMu23e12DZPath")
 *         else:
 *             self.mMatchesMu23e12DZPath_branch.SetAddress(<void*>&self.mMatchesMu23e12DZPath_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesMu23e12Filter"
 */
  /*else*/ {
    __pyx_v_self->mMatchesMu23e12DZPath_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesMu23e12DZPath_value)));
  }
  __pyx_L1017:;

  /* "EMTree.pyx":4691
 * 
 *         #print "making mMatchesMu23e12Filter"
 *         self.mMatchesMu23e12Filter_branch = the_tree.GetBranch("mMatchesMu23e12Filter")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesMu23e12Filter_branch and "mMatchesMu23e12Filter" not in self.complained:
 *         if not self.mMatchesMu23e12Filter_branch and "mMatchesMu23e12Filter":
 */
  __pyx_v_self->mMatchesMu23e12Filter_branch = __pyx_v_the_tree->GetBranch(((char *)"mMatchesMu23e12Filter"));

  /* "EMTree.pyx":4693
 *         self.mMatchesMu23e12Filter_branch = the_tree.GetBranch("mMatchesMu23e12Filter")
 *         #if not self.mMatchesMu23e12Filter_branch and "mMatchesMu23e12Filter" not in self.complained:
 *         if not self.mMatchesMu23e12Filter_branch and "mMatchesMu23e12Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesMu23e12Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu23e12Filter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesMu23e12Filter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1021_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1021_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4694
 *         #if not self.mMatchesMu23e12Filter_branch and "mMatchesMu23e12Filter" not in self.complained:
 *         if not self.mMatchesMu23e12Filter_branch and "mMatchesMu23e12Filter":
 *             warnings.warn( "EMTree: Expected branch mMatchesMu23e12Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu23e12Filter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4694, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4694, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__341, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4694, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4693
 *         self.mMatchesMu23e12Filter_branch = the_tree.GetBranch("mMatchesMu23e12Filter")
 *         #if not self.mMatchesMu23e12Filter_branch and "mMatchesMu23e12Filter" not in self.complained:
 *         if not self.mMatchesMu23e12Filter_branch and "mMatchesMu23e12Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesMu23e12Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu23e12Filter")
 */
    goto __pyx_L1020;
  }

  /* "EMTree.pyx":4697
 *             #self.complained.add("mMatchesMu23e12Filter")
 *         else:
 *             self.mMatchesMu23e12Filter_branch.SetAddress(<void*>&self.mMatchesMu23e12Filter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesMu23e12Path"
 */
  /*else*/ {
    __pyx_v_self->mMatchesMu23e12Filter_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesMu23e12Filter_value)));
  }
  __pyx_L1020:;

  /* "EMTree.pyx":4700
 * 
 *         #print "making mMatchesMu23e12Path"
 *         self.mMatchesMu23e12Path_branch = the_tree.GetBranch("mMatchesMu23e12Path")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesMu23e12Path_branch and "mMatchesMu23e12Path" not in self.complained:
 *         if not self.mMatchesMu23e12Path_branch and "mMatchesMu23e12Path":
 */
  __pyx_v_self->mMatchesMu23e12Path_branch = __pyx_v_the_tree->GetBranch(((char *)"mMatchesMu23e12Path"));

  /* "EMTree.pyx":4702
 *         self.mMatchesMu23e12Path_branch = the_tree.GetBranch("mMatchesMu23e12Path")
 *         #if not self.mMatchesMu23e12Path_branch and "mMatchesMu23e12Path" not in self.complained:
 *         if not self.mMatchesMu23e12Path_branch and "mMatchesMu23e12Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesMu23e12Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu23e12Path")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesMu23e12Path_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1024_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1024_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4703
 *         #if not self.mMatchesMu23e12Path_branch and "mMatchesMu23e12Path" not in self.complained:
 *         if not self.mMatchesMu23e12Path_branch and "mMatchesMu23e12Path":
 *             warnings.warn( "EMTree: Expected branch mMatchesMu23e12Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu23e12Path")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__342, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4702
 *         self.mMatchesMu23e12Path_branch = the_tree.GetBranch("mMatchesMu23e12Path")
 *         #if not self.mMatchesMu23e12Path_branch and "mMatchesMu23e12Path" not in self.complained:
 *         if not self.mMatchesMu23e12Path_branch and "mMatchesMu23e12Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesMu23e12Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu23e12Path")
 */
    goto __pyx_L1023;
  }

  /* "EMTree.pyx":4706
 *             #self.complained.add("mMatchesMu23e12Path")
 *         else:
 *             self.mMatchesMu23e12Path_branch.SetAddress(<void*>&self.mMatchesMu23e12Path_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesMu8e23DZFilter"
 */
  /*else*/ {
    __pyx_v_self->mMatchesMu23e12Path_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesMu23e12Path_value)));
  }
  __pyx_L1023:;

  /* "EMTree.pyx":4709
 * 
 *         #print "making mMatchesMu8e23DZFilter"
 *         self.mMatchesMu8e23DZFilter_branch = the_tree.GetBranch("mMatchesMu8e23DZFilter")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesMu8e23DZFilter_branch and "mMatchesMu8e23DZFilter" not in self.complained:
 *         if not self.mMatchesMu8e23DZFilter_branch and "mMatchesMu8e23DZFilter":
 */
  __pyx_v_self->mMatchesMu8e23DZFilter_branch = __pyx_v_the_tree->GetBranch(((char *)"mMatchesMu8e23DZFilter"));

  /* "EMTree.pyx":4711
 *         self.mMatchesMu8e23DZFilter_branch = the_tree.GetBranch("mMatchesMu8e23DZFilter")
 *         #if not self.mMatchesMu8e23DZFilter_branch and "mMatchesMu8e23DZFilter" not in self.complained:
 *         if not self.mMatchesMu8e23DZFilter_branch and "mMatchesMu8e23DZFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesMu8e23DZFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu8e23DZFilter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesMu8e23DZFilter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1027_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1027_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4712
 *         #if not self.mMatchesMu8e23DZFilter_branch and "mMatchesMu8e23DZFilter" not in self.complained:
 *         if not self.mMatchesMu8e23DZFilter_branch and "mMatchesMu8e23DZFilter":
 *             warnings.warn( "EMTree: Expected branch mMatchesMu8e23DZFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu8e23DZFilter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__343, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4711
 *         self.mMatchesMu8e23DZFilter_branch = the_tree.GetBranch("mMatchesMu8e23DZFilter")
 *         #if not self.mMatchesMu8e23DZFilter_branch and "mMatchesMu8e23DZFilter" not in self.complained:
 *         if not self.mMatchesMu8e23DZFilter_branch and "mMatchesMu8e23DZFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesMu8e23DZFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu8e23DZFilter")
 */
    goto __pyx_L1026;
  }

  /* "EMTree.pyx":4715
 *             #self.complained.add("mMatchesMu8e23DZFilter")
 *         else:
 *             self.mMatchesMu8e23DZFilter_branch.SetAddress(<void*>&self.mMatchesMu8e23DZFilter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesMu8e23DZPath"
 */
  /*else*/ {
    __pyx_v_self->mMatchesMu8e23DZFilter_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesMu8e23DZFilter_value)));
  }
  __pyx_L1026:;

  /* "EMTree.pyx":4718
 * 
 *         #print "making mMatchesMu8e23DZPath"
 *         self.mMatchesMu8e23DZPath_branch = the_tree.GetBranch("mMatchesMu8e23DZPath")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesMu8e23DZPath_branch and "mMatchesMu8e23DZPath" not in self.complained:
 *         if not self.mMatchesMu8e23DZPath_branch and "mMatchesMu8e23DZPath":
 */
  __pyx_v_self->mMatchesMu8e23DZPath_branch = __pyx_v_the_tree->GetBranch(((char *)"mMatchesMu8e23DZPath"));

  /* "EMTree.pyx":4720
 *         self.mMatchesMu8e23DZPath_branch = the_tree.GetBranch("mMatchesMu8e23DZPath")
 *         #if not self.mMatchesMu8e23DZPath_branch and "mMatchesMu8e23DZPath" not in self.complained:
 *         if not self.mMatchesMu8e23DZPath_branch and "mMatchesMu8e23DZPath":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesMu8e23DZPath does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu8e23DZPath")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesMu8e23DZPath_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1030_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1030_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4721
 *         #if not self.mMatchesMu8e23DZPath_branch and "mMatchesMu8e23DZPath" not in self.complained:
 *         if not self.mMatchesMu8e23DZPath_branch and "mMatchesMu8e23DZPath":
 *             warnings.warn( "EMTree: Expected branch mMatchesMu8e23DZPath does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu8e23DZPath")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4721, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4721, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__344, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4721, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4720
 *         self.mMatchesMu8e23DZPath_branch = the_tree.GetBranch("mMatchesMu8e23DZPath")
 *         #if not self.mMatchesMu8e23DZPath_branch and "mMatchesMu8e23DZPath" not in self.complained:
 *         if not self.mMatchesMu8e23DZPath_branch and "mMatchesMu8e23DZPath":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesMu8e23DZPath does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu8e23DZPath")
 */
    goto __pyx_L1029;
  }

  /* "EMTree.pyx":4724
 *             #self.complained.add("mMatchesMu8e23DZPath")
 *         else:
 *             self.mMatchesMu8e23DZPath_branch.SetAddress(<void*>&self.mMatchesMu8e23DZPath_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesMu8e23Filter"
 */
  /*else*/ {
    __pyx_v_self->mMatchesMu8e23DZPath_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesMu8e23DZPath_value)));
  }
  __pyx_L1029:;

  /* "EMTree.pyx":4727
 * 
 *         #print "making mMatchesMu8e23Filter"
 *         self.mMatchesMu8e23Filter_branch = the_tree.GetBranch("mMatchesMu8e23Filter")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesMu8e23Filter_branch and "mMatchesMu8e23Filter" not in self.complained:
 *         if not self.mMatchesMu8e23Filter_branch and "mMatchesMu8e23Filter":
 */
  __pyx_v_self->mMatchesMu8e23Filter_branch = __pyx_v_the_tree->GetBranch(((char *)"mMatchesMu8e23Filter"));

  /* "EMTree.pyx":4729
 *         self.mMatchesMu8e23Filter_branch = the_tree.GetBranch("mMatchesMu8e23Filter")
 *         #if not self.mMatchesMu8e23Filter_branch and "mMatchesMu8e23Filter" not in self.complained:
 *         if not self.mMatchesMu8e23Filter_branch and "mMatchesMu8e23Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesMu8e23Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu8e23Filter")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesMu8e23Filter_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1033_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1033_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4730
 *         #if not self.mMatchesMu8e23Filter_branch and "mMatchesMu8e23Filter" not in self.complained:
 *         if not self.mMatchesMu8e23Filter_branch and "mMatchesMu8e23Filter":
 *             warnings.warn( "EMTree: Expected branch mMatchesMu8e23Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu8e23Filter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4730, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4730, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__345, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4730, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4729
 *         self.mMatchesMu8e23Filter_branch = the_tree.GetBranch("mMatchesMu8e23Filter")
 *         #if not self.mMatchesMu8e23Filter_branch and "mMatchesMu8e23Filter" not in self.complained:
 *         if not self.mMatchesMu8e23Filter_branch and "mMatchesMu8e23Filter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesMu8e23Filter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu8e23Filter")
 */
    goto __pyx_L1032;
  }

  /* "EMTree.pyx":4733
 *             #self.complained.add("mMatchesMu8e23Filter")
 *         else:
 *             self.mMatchesMu8e23Filter_branch.SetAddress(<void*>&self.mMatchesMu8e23Filter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesMu8e23Path"
 */
  /*else*/ {
    __pyx_v_self->mMatchesMu8e23Filter_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesMu8e23Filter_value)));
  }
  __pyx_L1032:;

  /* "EMTree.pyx":4736
 * 
 *         #print "making mMatchesMu8e23Path"
 *         self.mMatchesMu8e23Path_branch = the_tree.GetBranch("mMatchesMu8e23Path")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesMu8e23Path_branch and "mMatchesMu8e23Path" not in self.complained:
 *         if not self.mMatchesMu8e23Path_branch and "mMatchesMu8e23Path":
 */
  __pyx_v_self->mMatchesMu8e23Path_branch = __pyx_v_the_tree->GetBranch(((char *)"mMatchesMu8e23Path"));

  /* "EMTree.pyx":4738
 *         self.mMatchesMu8e23Path_branch = the_tree.GetBranch("mMatchesMu8e23Path")
 *         #if not self.mMatchesMu8e23Path_branch and "mMatchesMu8e23Path" not in self.complained:
 *         if not self.mMatchesMu8e23Path_branch and "mMatchesMu8e23Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesMu8e23Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu8e23Path")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesMu8e23Path_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1036_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1036_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4739
 *         #if not self.mMatchesMu8e23Path_branch and "mMatchesMu8e23Path" not in self.complained:
 *         if not self.mMatchesMu8e23Path_branch and "mMatchesMu8e23Path":
 *             warnings.warn( "EMTree: Expected branch mMatchesMu8e23Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu8e23Path")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4739, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4739, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__346, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4739, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4738
 *         self.mMatchesMu8e23Path_branch = the_tree.GetBranch("mMatchesMu8e23Path")
 *         #if not self.mMatchesMu8e23Path_branch and "mMatchesMu8e23Path" not in self.complained:
 *         if not self.mMatchesMu8e23Path_branch and "mMatchesMu8e23Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mMatchesMu8e23Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu8e23Path")
 */
    goto __pyx_L1035;
  }

  /* "EMTree.pyx":4742
 *             #self.complained.add("mMatchesMu8e23Path")
 *         else:
 *             self.mMatchesMu8e23Path_branch.SetAddress(<void*>&self.mMatchesMu8e23Path_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPFIDLoose"
 */
  /*else*/ {
    __pyx_v_self->mMatchesMu8e23Path_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesMu8e23Path_value)));
  }
  __pyx_L1035:;

  /* "EMTree.pyx":4745
 * 
 *         #print "making mPFIDLoose"
 *         self.mPFIDLoose_branch = the_tree.GetBranch("mPFIDLoose")             # <<<<<<<<<<<<<<
 *         #if not self.mPFIDLoose_branch and "mPFIDLoose" not in self.complained:
 *         if not self.mPFIDLoose_branch and "mPFIDLoose":
 */
  __pyx_v_self->mPFIDLoose_branch = __pyx_v_the_tree->GetBranch(((char *)"mPFIDLoose"));

  /* "EMTree.pyx":4747
 *         self.mPFIDLoose_branch = the_tree.GetBranch("mPFIDLoose")
 *         #if not self.mPFIDLoose_branch and "mPFIDLoose" not in self.complained:
 *         if not self.mPFIDLoose_branch and "mPFIDLoose":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mPFIDLoose does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFIDLoose")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPFIDLoose_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1039_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1039_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4748
 *         #if not self.mPFIDLoose_branch and "mPFIDLoose" not in self.complained:
 *         if not self.mPFIDLoose_branch and "mPFIDLoose":
 *             warnings.warn( "EMTree: Expected branch mPFIDLoose does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFIDLoose")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4748, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4748, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__347, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4748, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4747
 *         self.mPFIDLoose_branch = the_tree.GetBranch("mPFIDLoose")
 *         #if not self.mPFIDLoose_branch and "mPFIDLoose" not in self.complained:
 *         if not self.mPFIDLoose_branch and "mPFIDLoose":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mPFIDLoose does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFIDLoose")
 */
    goto __pyx_L1038;
  }

  /* "EMTree.pyx":4751
 *             #self.complained.add("mPFIDLoose")
 *         else:
 *             self.mPFIDLoose_branch.SetAddress(<void*>&self.mPFIDLoose_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPFIDMedium"
 */
  /*else*/ {
    __pyx_v_self->mPFIDLoose_branch->SetAddress(((void *)(&__pyx_v_self->mPFIDLoose_value)));
  }
  __pyx_L1038:;

  /* "EMTree.pyx":4754
 * 
 *         #print "making mPFIDMedium"
 *         self.mPFIDMedium_branch = the_tree.GetBranch("mPFIDMedium")             # <<<<<<<<<<<<<<
 *         #if not self.mPFIDMedium_branch and "mPFIDMedium" not in self.complained:
 *         if not self.mPFIDMedium_branch and "mPFIDMedium":
 */
  __pyx_v_self->mPFIDMedium_branch = __pyx_v_the_tree->GetBranch(((char *)"mPFIDMedium"));

  /* "EMTree.pyx":4756
 *         self.mPFIDMedium_branch = the_tree.GetBranch("mPFIDMedium")
 *         #if not self.mPFIDMedium_branch and "mPFIDMedium" not in self.complained:
 *         if not self.mPFIDMedium_branch and "mPFIDMedium":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mPFIDMedium does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFIDMedium")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPFIDMedium_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1042_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1042_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4757
 *         #if not self.mPFIDMedium_branch and "mPFIDMedium" not in self.complained:
 *         if not self.mPFIDMedium_branch and "mPFIDMedium":
 *             warnings.warn( "EMTree: Expected branch mPFIDMedium does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFIDMedium")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4757, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4757, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__348, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4757, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4756
 *         self.mPFIDMedium_branch = the_tree.GetBranch("mPFIDMedium")
 *         #if not self.mPFIDMedium_branch and "mPFIDMedium" not in self.complained:
 *         if not self.mPFIDMedium_branch and "mPFIDMedium":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mPFIDMedium does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFIDMedium")
 */
    goto __pyx_L1041;
  }

  /* "EMTree.pyx":4760
 *             #self.complained.add("mPFIDMedium")
 *         else:
 *             self.mPFIDMedium_branch.SetAddress(<void*>&self.mPFIDMedium_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPFIDTight"
 */
  /*else*/ {
    __pyx_v_self->mPFIDMedium_branch->SetAddress(((void *)(&__pyx_v_self->mPFIDMedium_value)));
  }
  __pyx_L1041:;

  /* "EMTree.pyx":4763
 * 
 *         #print "making mPFIDTight"
 *         self.mPFIDTight_branch = the_tree.GetBranch("mPFIDTight")             # <<<<<<<<<<<<<<
 *         #if not self.mPFIDTight_branch and "mPFIDTight" not in self.complained:
 *         if not self.mPFIDTight_branch and "mPFIDTight":
 */
  __pyx_v_self->mPFIDTight_branch = __pyx_v_the_tree->GetBranch(((char *)"mPFIDTight"));

  /* "EMTree.pyx":4765
 *         self.mPFIDTight_branch = the_tree.GetBranch("mPFIDTight")
 *         #if not self.mPFIDTight_branch and "mPFIDTight" not in self.complained:
 *         if not self.mPFIDTight_branch and "mPFIDTight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mPFIDTight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFIDTight")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPFIDTight_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1045_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1045_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4766
 *         #if not self.mPFIDTight_branch and "mPFIDTight" not in self.complained:
 *         if not self.mPFIDTight_branch and "mPFIDTight":
 *             warnings.warn( "EMTree: Expected branch mPFIDTight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFIDTight")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4766, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4766, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__349, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4766, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4765
 *         self.mPFIDTight_branch = the_tree.GetBranch("mPFIDTight")
 *         #if not self.mPFIDTight_branch and "mPFIDTight" not in self.complained:
 *         if not self.mPFIDTight_branch and "mPFIDTight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mPFIDTight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFIDTight")
 */
    goto __pyx_L1044;
  }

  /* "EMTree.pyx":4769
 *             #self.complained.add("mPFIDTight")
 *         else:
 *             self.mPFIDTight_branch.SetAddress(<void*>&self.mPFIDTight_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPVDXY"
 */
  /*else*/ {
    __pyx_v_self->mPFIDTight_branch->SetAddress(((void *)(&__pyx_v_self->mPFIDTight_value)));
  }
  __pyx_L1044:;

  /* "EMTree.pyx":4772
 * 
 *         #print "making mPVDXY"
 *         self.mPVDXY_branch = the_tree.GetBranch("mPVDXY")             # <<<<<<<<<<<<<<
 *         #if not self.mPVDXY_branch and "mPVDXY" not in self.complained:
 *         if not self.mPVDXY_branch and "mPVDXY":
 */
  __pyx_v_self->mPVDXY_branch = __pyx_v_the_tree->GetBranch(((char *)"mPVDXY"));

  /* "EMTree.pyx":4774
 *         self.mPVDXY_branch = the_tree.GetBranch("mPVDXY")
 *         #if not self.mPVDXY_branch and "mPVDXY" not in self.complained:
 *         if not self.mPVDXY_branch and "mPVDXY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mPVDXY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPVDXY")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPVDXY_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1048_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1048_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4775
 *         #if not self.mPVDXY_branch and "mPVDXY" not in self.complained:
 *         if not self.mPVDXY_branch and "mPVDXY":
 *             warnings.warn( "EMTree: Expected branch mPVDXY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPVDXY")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4775, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4775, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__350, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4775, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4774
 *         self.mPVDXY_branch = the_tree.GetBranch("mPVDXY")
 *         #if not self.mPVDXY_branch and "mPVDXY" not in self.complained:
 *         if not self.mPVDXY_branch and "mPVDXY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mPVDXY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPVDXY")
 */
    goto __pyx_L1047;
  }

  /* "EMTree.pyx":4778
 *             #self.complained.add("mPVDXY")
 *         else:
 *             self.mPVDXY_branch.SetAddress(<void*>&self.mPVDXY_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPVDZ"
 */
  /*else*/ {
    __pyx_v_self->mPVDXY_branch->SetAddress(((void *)(&__pyx_v_self->mPVDXY_value)));
  }
  __pyx_L1047:;

  /* "EMTree.pyx":4781
 * 
 *         #print "making mPVDZ"
 *         self.mPVDZ_branch = the_tree.GetBranch("mPVDZ")             # <<<<<<<<<<<<<<
 *         #if not self.mPVDZ_branch and "mPVDZ" not in self.complained:
 *         if not self.mPVDZ_branch and "mPVDZ":
 */
  __pyx_v_self->mPVDZ_branch = __pyx_v_the_tree->GetBranch(((char *)"mPVDZ"));

  /* "EMTree.pyx":4783
 *         self.mPVDZ_branch = the_tree.GetBranch("mPVDZ")
 *         #if not self.mPVDZ_branch and "mPVDZ" not in self.complained:
 *         if not self.mPVDZ_branch and "mPVDZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mPVDZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPVDZ")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPVDZ_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1051_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1051_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4784
 *         #if not self.mPVDZ_branch and "mPVDZ" not in self.complained:
 *         if not self.mPVDZ_branch and "mPVDZ":
 *             warnings.warn( "EMTree: Expected branch mPVDZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPVDZ")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4784, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4784, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__351, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4784, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4783
 *         self.mPVDZ_branch = the_tree.GetBranch("mPVDZ")
 *         #if not self.mPVDZ_branch and "mPVDZ" not in self.complained:
 *         if not self.mPVDZ_branch and "mPVDZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mPVDZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPVDZ")
 */
    goto __pyx_L1050;
  }

  /* "EMTree.pyx":4787
 *             #self.complained.add("mPVDZ")
 *         else:
 *             self.mPVDZ_branch.SetAddress(<void*>&self.mPVDZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPhi"
 */
  /*else*/ {
    __pyx_v_self->mPVDZ_branch->SetAddress(((void *)(&__pyx_v_self->mPVDZ_value)));
  }
  __pyx_L1050:;

  /* "EMTree.pyx":4790
 * 
 *         #print "making mPhi"
 *         self.mPhi_branch = the_tree.GetBranch("mPhi")             # <<<<<<<<<<<<<<
 *         #if not self.mPhi_branch and "mPhi" not in self.complained:
 *         if not self.mPhi_branch and "mPhi":
 */
  __pyx_v_self->mPhi_branch = __pyx_v_the_tree->GetBranch(((char *)"mPhi"));

  /* "EMTree.pyx":4792
 *         self.mPhi_branch = the_tree.GetBranch("mPhi")
 *         #if not self.mPhi_branch and "mPhi" not in self.complained:
 *         if not self.mPhi_branch and "mPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPhi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPhi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1054_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1054_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4793
 *         #if not self.mPhi_branch and "mPhi" not in self.complained:
 *         if not self.mPhi_branch and "mPhi":
 *             warnings.warn( "EMTree: Expected branch mPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPhi")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4793, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4793, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__352, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4793, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4792
 *         self.mPhi_branch = the_tree.GetBranch("mPhi")
 *         #if not self.mPhi_branch and "mPhi" not in self.complained:
 *         if not self.mPhi_branch and "mPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPhi")
 */
    goto __pyx_L1053;
  }

  /* "EMTree.pyx":4796
 *             #self.complained.add("mPhi")
 *         else:
 *             self.mPhi_branch.SetAddress(<void*>&self.mPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPt"
 */
  /*else*/ {
    __pyx_v_self->mPhi_branch->SetAddress(((void *)(&__pyx_v_self->mPhi_value)));
  }
  __pyx_L1053:;

  /* "EMTree.pyx":4799
 * 
 *         #print "making mPt"
 *         self.mPt_branch = the_tree.GetBranch("mPt")             # <<<<<<<<<<<<<<
 *         #if not self.mPt_branch and "mPt" not in self.complained:
 *         if not self.mPt_branch and "mPt":
 */
  __pyx_v_self->mPt_branch = __pyx_v_the_tree->GetBranch(((char *)"mPt"));

  /* "EMTree.pyx":4801
 *         self.mPt_branch = the_tree.GetBranch("mPt")
 *         #if not self.mPt_branch and "mPt" not in self.complained:
 *         if not self.mPt_branch and "mPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1057_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1057_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4802
 *         #if not self.mPt_branch and "mPt" not in self.complained:
 *         if not self.mPt_branch and "mPt":
 *             warnings.warn( "EMTree: Expected branch mPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4802, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4802, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__353, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4802, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4801
 *         self.mPt_branch = the_tree.GetBranch("mPt")
 *         #if not self.mPt_branch and "mPt" not in self.complained:
 *         if not self.mPt_branch and "mPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPt")
 */
    goto __pyx_L1056;
  }

  /* "EMTree.pyx":4805
 *             #self.complained.add("mPt")
 *         else:
 *             self.mPt_branch.SetAddress(<void*>&self.mPt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mRelPFIsoDBDefaultR04"
 */
  /*else*/ {
    __pyx_v_self->mPt_branch->SetAddress(((void *)(&__pyx_v_self->mPt_value)));
  }
  __pyx_L1056:;

  /* "EMTree.pyx":4808
 * 
 *         #print "making mRelPFIsoDBDefaultR04"
 *         self.mRelPFIsoDBDefaultR04_branch = the_tree.GetBranch("mRelPFIsoDBDefaultR04")             # <<<<<<<<<<<<<<
 *         #if not self.mRelPFIsoDBDefaultR04_branch and "mRelPFIsoDBDefaultR04" not in self.complained:
 *         if not self.mRelPFIsoDBDefaultR04_branch and "mRelPFIsoDBDefaultR04":
 */
  __pyx_v_self->mRelPFIsoDBDefaultR04_branch = __pyx_v_the_tree->GetBranch(((char *)"mRelPFIsoDBDefaultR04"));

  /* "EMTree.pyx":4810
 *         self.mRelPFIsoDBDefaultR04_branch = the_tree.GetBranch("mRelPFIsoDBDefaultR04")
 *         #if not self.mRelPFIsoDBDefaultR04_branch and "mRelPFIsoDBDefaultR04" not in self.complained:
 *         if not self.mRelPFIsoDBDefaultR04_branch and "mRelPFIsoDBDefaultR04":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mRelPFIsoDBDefaultR04 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mRelPFIsoDBDefaultR04")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mRelPFIsoDBDefaultR04_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1060_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1060_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4811
 *         #if not self.mRelPFIsoDBDefaultR04_branch and "mRelPFIsoDBDefaultR04" not in self.complained:
 *         if not self.mRelPFIsoDBDefaultR04_branch and "mRelPFIsoDBDefaultR04":
 *             warnings.warn( "EMTree: Expected branch mRelPFIsoDBDefaultR04 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mRelPFIsoDBDefaultR04")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4811, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4811, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__354, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4811, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4810
 *         self.mRelPFIsoDBDefaultR04_branch = the_tree.GetBranch("mRelPFIsoDBDefaultR04")
 *         #if not self.mRelPFIsoDBDefaultR04_branch and "mRelPFIsoDBDefaultR04" not in self.complained:
 *         if not self.mRelPFIsoDBDefaultR04_branch and "mRelPFIsoDBDefaultR04":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mRelPFIsoDBDefaultR04 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mRelPFIsoDBDefaultR04")
 */
    goto __pyx_L1059;
  }

  /* "EMTree.pyx":4814
 *             #self.complained.add("mRelPFIsoDBDefaultR04")
 *         else:
 *             self.mRelPFIsoDBDefaultR04_branch.SetAddress(<void*>&self.mRelPFIsoDBDefaultR04_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mSIP2D"
 */
  /*else*/ {
    __pyx_v_self->mRelPFIsoDBDefaultR04_branch->SetAddress(((void *)(&__pyx_v_self->mRelPFIsoDBDefaultR04_value)));
  }
  __pyx_L1059:;

  /* "EMTree.pyx":4817
 * 
 *         #print "making mSIP2D"
 *         self.mSIP2D_branch = the_tree.GetBranch("mSIP2D")             # <<<<<<<<<<<<<<
 *         #if not self.mSIP2D_branch and "mSIP2D" not in self.complained:
 *         if not self.mSIP2D_branch and "mSIP2D":
 */
  __pyx_v_self->mSIP2D_branch = __pyx_v_the_tree->GetBranch(((char *)"mSIP2D"));

  /* "EMTree.pyx":4819
 *         self.mSIP2D_branch = the_tree.GetBranch("mSIP2D")
 *         #if not self.mSIP2D_branch and "mSIP2D" not in self.complained:
 *         if not self.mSIP2D_branch and "mSIP2D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mSIP2D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mSIP2D")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mSIP2D_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1063_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1063_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4820
 *         #if not self.mSIP2D_branch and "mSIP2D" not in self.complained:
 *         if not self.mSIP2D_branch and "mSIP2D":
 *             warnings.warn( "EMTree: Expected branch mSIP2D does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mSIP2D")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4820, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4820, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__355, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4820, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4819
 *         self.mSIP2D_branch = the_tree.GetBranch("mSIP2D")
 *         #if not self.mSIP2D_branch and "mSIP2D" not in self.complained:
 *         if not self.mSIP2D_branch and "mSIP2D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mSIP2D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mSIP2D")
 */
    goto __pyx_L1062;
  }

  /* "EMTree.pyx":4823
 *             #self.complained.add("mSIP2D")
 *         else:
 *             self.mSIP2D_branch.SetAddress(<void*>&self.mSIP2D_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mSIP3D"
 */
  /*else*/ {
    __pyx_v_self->mSIP2D_branch->SetAddress(((void *)(&__pyx_v_self->mSIP2D_value)));
  }
  __pyx_L1062:;

  /* "EMTree.pyx":4826
 * 
 *         #print "making mSIP3D"
 *         self.mSIP3D_branch = the_tree.GetBranch("mSIP3D")             # <<<<<<<<<<<<<<
 *         #if not self.mSIP3D_branch and "mSIP3D" not in self.complained:
 *         if not self.mSIP3D_branch and "mSIP3D":
 */
  __pyx_v_self->mSIP3D_branch = __pyx_v_the_tree->GetBranch(((char *)"mSIP3D"));

  /* "EMTree.pyx":4828
 *         self.mSIP3D_branch = the_tree.GetBranch("mSIP3D")
 *         #if not self.mSIP3D_branch and "mSIP3D" not in self.complained:
 *         if not self.mSIP3D_branch and "mSIP3D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mSIP3D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mSIP3D")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mSIP3D_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1066_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1066_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4829
 *         #if not self.mSIP3D_branch and "mSIP3D" not in self.complained:
 *         if not self.mSIP3D_branch and "mSIP3D":
 *             warnings.warn( "EMTree: Expected branch mSIP3D does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mSIP3D")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4829, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4829, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__356, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4829, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4828
 *         self.mSIP3D_branch = the_tree.GetBranch("mSIP3D")
 *         #if not self.mSIP3D_branch and "mSIP3D" not in self.complained:
 *         if not self.mSIP3D_branch and "mSIP3D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mSIP3D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mSIP3D")
 */
    goto __pyx_L1065;
  }

  /* "EMTree.pyx":4832
 *             #self.complained.add("mSIP3D")
 *         else:
 *             self.mSIP3D_branch.SetAddress(<void*>&self.mSIP3D_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mVZ"
 */
  /*else*/ {
    __pyx_v_self->mSIP3D_branch->SetAddress(((void *)(&__pyx_v_self->mSIP3D_value)));
  }
  __pyx_L1065:;

  /* "EMTree.pyx":4835
 * 
 *         #print "making mVZ"
 *         self.mVZ_branch = the_tree.GetBranch("mVZ")             # <<<<<<<<<<<<<<
 *         #if not self.mVZ_branch and "mVZ" not in self.complained:
 *         if not self.mVZ_branch and "mVZ":
 */
  __pyx_v_self->mVZ_branch = __pyx_v_the_tree->GetBranch(((char *)"mVZ"));

  /* "EMTree.pyx":4837
 *         self.mVZ_branch = the_tree.GetBranch("mVZ")
 *         #if not self.mVZ_branch and "mVZ" not in self.complained:
 *         if not self.mVZ_branch and "mVZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mVZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mVZ")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mVZ_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1069_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1069_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4838
 *         #if not self.mVZ_branch and "mVZ" not in self.complained:
 *         if not self.mVZ_branch and "mVZ":
 *             warnings.warn( "EMTree: Expected branch mVZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mVZ")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4838, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4838, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__357, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4838, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4837
 *         self.mVZ_branch = the_tree.GetBranch("mVZ")
 *         #if not self.mVZ_branch and "mVZ" not in self.complained:
 *         if not self.mVZ_branch and "mVZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mVZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mVZ")
 */
    goto __pyx_L1068;
  }

  /* "EMTree.pyx":4841
 *             #self.complained.add("mVZ")
 *         else:
 *             self.mVZ_branch.SetAddress(<void*>&self.mVZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mZTTGenMatching"
 */
  /*else*/ {
    __pyx_v_self->mVZ_branch->SetAddress(((void *)(&__pyx_v_self->mVZ_value)));
  }
  __pyx_L1068:;

  /* "EMTree.pyx":4844
 * 
 *         #print "making mZTTGenMatching"
 *         self.mZTTGenMatching_branch = the_tree.GetBranch("mZTTGenMatching")             # <<<<<<<<<<<<<<
 *         #if not self.mZTTGenMatching_branch and "mZTTGenMatching" not in self.complained:
 *         if not self.mZTTGenMatching_branch and "mZTTGenMatching":
 */
  __pyx_v_self->mZTTGenMatching_branch = __pyx_v_the_tree->GetBranch(((char *)"mZTTGenMatching"));

  /* "EMTree.pyx":4846
 *         self.mZTTGenMatching_branch = the_tree.GetBranch("mZTTGenMatching")
 *         #if not self.mZTTGenMatching_branch and "mZTTGenMatching" not in self.complained:
 *         if not self.mZTTGenMatching_branch and "mZTTGenMatching":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mZTTGenMatching does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mZTTGenMatching")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mZTTGenMatching_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1072_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1072_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4847
 *         #if not self.mZTTGenMatching_branch and "mZTTGenMatching" not in self.complained:
 *         if not self.mZTTGenMatching_branch and "mZTTGenMatching":
 *             warnings.warn( "EMTree: Expected branch mZTTGenMatching does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mZTTGenMatching")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4847, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4847, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__358, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4847, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4846
 *         self.mZTTGenMatching_branch = the_tree.GetBranch("mZTTGenMatching")
 *         #if not self.mZTTGenMatching_branch and "mZTTGenMatching" not in self.complained:
 *         if not self.mZTTGenMatching_branch and "mZTTGenMatching":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mZTTGenMatching does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mZTTGenMatching")
 */
    goto __pyx_L1071;
  }

  /* "EMTree.pyx":4850
 *             #self.complained.add("mZTTGenMatching")
 *         else:
 *             self.mZTTGenMatching_branch.SetAddress(<void*>&self.mZTTGenMatching_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu12e23DZPass"
 */
  /*else*/ {
    __pyx_v_self->mZTTGenMatching_branch->SetAddress(((void *)(&__pyx_v_self->mZTTGenMatching_value)));
  }
  __pyx_L1071:;

  /* "EMTree.pyx":4853
 * 
 *         #print "making mu12e23DZPass"
 *         self.mu12e23DZPass_branch = the_tree.GetBranch("mu12e23DZPass")             # <<<<<<<<<<<<<<
 *         #if not self.mu12e23DZPass_branch and "mu12e23DZPass" not in self.complained:
 *         if not self.mu12e23DZPass_branch and "mu12e23DZPass":
 */
  __pyx_v_self->mu12e23DZPass_branch = __pyx_v_the_tree->GetBranch(((char *)"mu12e23DZPass"));

  /* "EMTree.pyx":4855
 *         self.mu12e23DZPass_branch = the_tree.GetBranch("mu12e23DZPass")
 *         #if not self.mu12e23DZPass_branch and "mu12e23DZPass" not in self.complained:
 *         if not self.mu12e23DZPass_branch and "mu12e23DZPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mu12e23DZPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu12e23DZPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mu12e23DZPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1075_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1075_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4856
 *         #if not self.mu12e23DZPass_branch and "mu12e23DZPass" not in self.complained:
 *         if not self.mu12e23DZPass_branch and "mu12e23DZPass":
 *             warnings.warn( "EMTree: Expected branch mu12e23DZPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu12e23DZPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4856, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4856, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__359, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4856, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4855
 *         self.mu12e23DZPass_branch = the_tree.GetBranch("mu12e23DZPass")
 *         #if not self.mu12e23DZPass_branch and "mu12e23DZPass" not in self.complained:
 *         if not self.mu12e23DZPass_branch and "mu12e23DZPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mu12e23DZPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu12e23DZPass")
 */
    goto __pyx_L1074;
  }

  /* "EMTree.pyx":4859
 *             #self.complained.add("mu12e23DZPass")
 *         else:
 *             self.mu12e23DZPass_branch.SetAddress(<void*>&self.mu12e23DZPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu12e23Pass"
 */
  /*else*/ {
    __pyx_v_self->mu12e23DZPass_branch->SetAddress(((void *)(&__pyx_v_self->mu12e23DZPass_value)));
  }
  __pyx_L1074:;

  /* "EMTree.pyx":4862
 * 
 *         #print "making mu12e23Pass"
 *         self.mu12e23Pass_branch = the_tree.GetBranch("mu12e23Pass")             # <<<<<<<<<<<<<<
 *         #if not self.mu12e23Pass_branch and "mu12e23Pass" not in self.complained:
 *         if not self.mu12e23Pass_branch and "mu12e23Pass":
 */
  __pyx_v_self->mu12e23Pass_branch = __pyx_v_the_tree->GetBranch(((char *)"mu12e23Pass"));

  /* "EMTree.pyx":4864
 *         self.mu12e23Pass_branch = the_tree.GetBranch("mu12e23Pass")
 *         #if not self.mu12e23Pass_branch and "mu12e23Pass" not in self.complained:
 *         if not self.mu12e23Pass_branch and "mu12e23Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mu12e23Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu12e23Pass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mu12e23Pass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1078_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1078_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4865
 *         #if not self.mu12e23Pass_branch and "mu12e23Pass" not in self.complained:
 *         if not self.mu12e23Pass_branch and "mu12e23Pass":
 *             warnings.warn( "EMTree: Expected branch mu12e23Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu12e23Pass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4865, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4865, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__360, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4865, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4864
 *         self.mu12e23Pass_branch = the_tree.GetBranch("mu12e23Pass")
 *         #if not self.mu12e23Pass_branch and "mu12e23Pass" not in self.complained:
 *         if not self.mu12e23Pass_branch and "mu12e23Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mu12e23Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu12e23Pass")
 */
    goto __pyx_L1077;
  }

  /* "EMTree.pyx":4868
 *             #self.complained.add("mu12e23Pass")
 *         else:
 *             self.mu12e23Pass_branch.SetAddress(<void*>&self.mu12e23Pass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu23e12DZPass"
 */
  /*else*/ {
    __pyx_v_self->mu12e23Pass_branch->SetAddress(((void *)(&__pyx_v_self->mu12e23Pass_value)));
  }
  __pyx_L1077:;

  /* "EMTree.pyx":4871
 * 
 *         #print "making mu23e12DZPass"
 *         self.mu23e12DZPass_branch = the_tree.GetBranch("mu23e12DZPass")             # <<<<<<<<<<<<<<
 *         #if not self.mu23e12DZPass_branch and "mu23e12DZPass" not in self.complained:
 *         if not self.mu23e12DZPass_branch and "mu23e12DZPass":
 */
  __pyx_v_self->mu23e12DZPass_branch = __pyx_v_the_tree->GetBranch(((char *)"mu23e12DZPass"));

  /* "EMTree.pyx":4873
 *         self.mu23e12DZPass_branch = the_tree.GetBranch("mu23e12DZPass")
 *         #if not self.mu23e12DZPass_branch and "mu23e12DZPass" not in self.complained:
 *         if not self.mu23e12DZPass_branch and "mu23e12DZPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mu23e12DZPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu23e12DZPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mu23e12DZPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1081_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1081_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4874
 *         #if not self.mu23e12DZPass_branch and "mu23e12DZPass" not in self.complained:
 *         if not self.mu23e12DZPass_branch and "mu23e12DZPass":
 *             warnings.warn( "EMTree: Expected branch mu23e12DZPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu23e12DZPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4874, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4874, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__361, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4874, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4873
 *         self.mu23e12DZPass_branch = the_tree.GetBranch("mu23e12DZPass")
 *         #if not self.mu23e12DZPass_branch and "mu23e12DZPass" not in self.complained:
 *         if not self.mu23e12DZPass_branch and "mu23e12DZPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mu23e12DZPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu23e12DZPass")
 */
    goto __pyx_L1080;
  }

  /* "EMTree.pyx":4877
 *             #self.complained.add("mu23e12DZPass")
 *         else:
 *             self.mu23e12DZPass_branch.SetAddress(<void*>&self.mu23e12DZPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu23e12Pass"
 */
  /*else*/ {
    __pyx_v_self->mu23e12DZPass_branch->SetAddress(((void *)(&__pyx_v_self->mu23e12DZPass_value)));
  }
  __pyx_L1080:;

  /* "EMTree.pyx":4880
 * 
 *         #print "making mu23e12Pass"
 *         self.mu23e12Pass_branch = the_tree.GetBranch("mu23e12Pass")             # <<<<<<<<<<<<<<
 *         #if not self.mu23e12Pass_branch and "mu23e12Pass" not in self.complained:
 *         if not self.mu23e12Pass_branch and "mu23e12Pass":
 */
  __pyx_v_self->mu23e12Pass_branch = __pyx_v_the_tree->GetBranch(((char *)"mu23e12Pass"));

  /* "EMTree.pyx":4882
 *         self.mu23e12Pass_branch = the_tree.GetBranch("mu23e12Pass")
 *         #if not self.mu23e12Pass_branch and "mu23e12Pass" not in self.complained:
 *         if not self.mu23e12Pass_branch and "mu23e12Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mu23e12Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu23e12Pass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mu23e12Pass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1084_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1084_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4883
 *         #if not self.mu23e12Pass_branch and "mu23e12Pass" not in self.complained:
 *         if not self.mu23e12Pass_branch and "mu23e12Pass":
 *             warnings.warn( "EMTree: Expected branch mu23e12Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu23e12Pass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4883, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4883, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__362, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4883, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4882
 *         self.mu23e12Pass_branch = the_tree.GetBranch("mu23e12Pass")
 *         #if not self.mu23e12Pass_branch and "mu23e12Pass" not in self.complained:
 *         if not self.mu23e12Pass_branch and "mu23e12Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mu23e12Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu23e12Pass")
 */
    goto __pyx_L1083;
  }

  /* "EMTree.pyx":4886
 *             #self.complained.add("mu23e12Pass")
 *         else:
 *             self.mu23e12Pass_branch.SetAddress(<void*>&self.mu23e12Pass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu8e23DZPass"
 */
  /*else*/ {
    __pyx_v_self->mu23e12Pass_branch->SetAddress(((void *)(&__pyx_v_self->mu23e12Pass_value)));
  }
  __pyx_L1083:;

  /* "EMTree.pyx":4889
 * 
 *         #print "making mu8e23DZPass"
 *         self.mu8e23DZPass_branch = the_tree.GetBranch("mu8e23DZPass")             # <<<<<<<<<<<<<<
 *         #if not self.mu8e23DZPass_branch and "mu8e23DZPass" not in self.complained:
 *         if not self.mu8e23DZPass_branch and "mu8e23DZPass":
 */
  __pyx_v_self->mu8e23DZPass_branch = __pyx_v_the_tree->GetBranch(((char *)"mu8e23DZPass"));

  /* "EMTree.pyx":4891
 *         self.mu8e23DZPass_branch = the_tree.GetBranch("mu8e23DZPass")
 *         #if not self.mu8e23DZPass_branch and "mu8e23DZPass" not in self.complained:
 *         if not self.mu8e23DZPass_branch and "mu8e23DZPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mu8e23DZPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu8e23DZPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mu8e23DZPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1087_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1087_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4892
 *         #if not self.mu8e23DZPass_branch and "mu8e23DZPass" not in self.complained:
 *         if not self.mu8e23DZPass_branch and "mu8e23DZPass":
 *             warnings.warn( "EMTree: Expected branch mu8e23DZPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu8e23DZPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4892, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4892, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__363, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4892, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4891
 *         self.mu8e23DZPass_branch = the_tree.GetBranch("mu8e23DZPass")
 *         #if not self.mu8e23DZPass_branch and "mu8e23DZPass" not in self.complained:
 *         if not self.mu8e23DZPass_branch and "mu8e23DZPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mu8e23DZPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu8e23DZPass")
 */
    goto __pyx_L1086;
  }

  /* "EMTree.pyx":4895
 *             #self.complained.add("mu8e23DZPass")
 *         else:
 *             self.mu8e23DZPass_branch.SetAddress(<void*>&self.mu8e23DZPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu8e23Pass"
 */
  /*else*/ {
    __pyx_v_self->mu8e23DZPass_branch->SetAddress(((void *)(&__pyx_v_self->mu8e23DZPass_value)));
  }
  __pyx_L1086:;

  /* "EMTree.pyx":4898
 * 
 *         #print "making mu8e23Pass"
 *         self.mu8e23Pass_branch = the_tree.GetBranch("mu8e23Pass")             # <<<<<<<<<<<<<<
 *         #if not self.mu8e23Pass_branch and "mu8e23Pass" not in self.complained:
 *         if not self.mu8e23Pass_branch and "mu8e23Pass":
 */
  __pyx_v_self->mu8e23Pass_branch = __pyx_v_the_tree->GetBranch(((char *)"mu8e23Pass"));

  /* "EMTree.pyx":4900
 *         self.mu8e23Pass_branch = the_tree.GetBranch("mu8e23Pass")
 *         #if not self.mu8e23Pass_branch and "mu8e23Pass" not in self.complained:
 *         if not self.mu8e23Pass_branch and "mu8e23Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mu8e23Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu8e23Pass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mu8e23Pass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1090_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1090_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4901
 *         #if not self.mu8e23Pass_branch and "mu8e23Pass" not in self.complained:
 *         if not self.mu8e23Pass_branch and "mu8e23Pass":
 *             warnings.warn( "EMTree: Expected branch mu8e23Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu8e23Pass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4901, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4901, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__364, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4901, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4900
 *         self.mu8e23Pass_branch = the_tree.GetBranch("mu8e23Pass")
 *         #if not self.mu8e23Pass_branch and "mu8e23Pass" not in self.complained:
 *         if not self.mu8e23Pass_branch and "mu8e23Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch mu8e23Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu8e23Pass")
 */
    goto __pyx_L1089;
  }

  /* "EMTree.pyx":4904
 *             #self.complained.add("mu8e23Pass")
 *         else:
 *             self.mu8e23Pass_branch.SetAddress(<void*>&self.mu8e23Pass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making muGlbIsoVetoPt10"
 */
  /*else*/ {
    __pyx_v_self->mu8e23Pass_branch->SetAddress(((void *)(&__pyx_v_self->mu8e23Pass_value)));
  }
  __pyx_L1089:;

  /* "EMTree.pyx":4907
 * 
 *         #print "making muGlbIsoVetoPt10"
 *         self.muGlbIsoVetoPt10_branch = the_tree.GetBranch("muGlbIsoVetoPt10")             # <<<<<<<<<<<<<<
 *         #if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10" not in self.complained:
 *         if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10":
 */
  __pyx_v_self->muGlbIsoVetoPt10_branch = __pyx_v_the_tree->GetBranch(((char *)"muGlbIsoVetoPt10"));

  /* "EMTree.pyx":4909
 *         self.muGlbIsoVetoPt10_branch = the_tree.GetBranch("muGlbIsoVetoPt10")
 *         #if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10" not in self.complained:
 *         if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch muGlbIsoVetoPt10 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muGlbIsoVetoPt10")
 */
  __pyx_t_2 = ((!(__pyx_v_self->muGlbIsoVetoPt10_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1093_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1093_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4910
 *         #if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10" not in self.complained:
 *         if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10":
 *             warnings.warn( "EMTree: Expected branch muGlbIsoVetoPt10 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muGlbIsoVetoPt10")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4910, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4910, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__365, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4910, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4909
 *         self.muGlbIsoVetoPt10_branch = the_tree.GetBranch("muGlbIsoVetoPt10")
 *         #if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10" not in self.complained:
 *         if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch muGlbIsoVetoPt10 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muGlbIsoVetoPt10")
 */
    goto __pyx_L1092;
  }

  /* "EMTree.pyx":4913
 *             #self.complained.add("muGlbIsoVetoPt10")
 *         else:
 *             self.muGlbIsoVetoPt10_branch.SetAddress(<void*>&self.muGlbIsoVetoPt10_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making muVetoZTTp001dxyz"
 */
  /*else*/ {
    __pyx_v_self->muGlbIsoVetoPt10_branch->SetAddress(((void *)(&__pyx_v_self->muGlbIsoVetoPt10_value)));
  }
  __pyx_L1092:;

  /* "EMTree.pyx":4916
 * 
 *         #print "making muVetoZTTp001dxyz"
 *         self.muVetoZTTp001dxyz_branch = the_tree.GetBranch("muVetoZTTp001dxyz")             # <<<<<<<<<<<<<<
 *         #if not self.muVetoZTTp001dxyz_branch and "muVetoZTTp001dxyz" not in self.complained:
 *         if not self.muVetoZTTp001dxyz_branch and "muVetoZTTp001dxyz":
 */
  __pyx_v_self->muVetoZTTp001dxyz_branch = __pyx_v_the_tree->GetBranch(((char *)"muVetoZTTp001dxyz"));

  /* "EMTree.pyx":4918
 *         self.muVetoZTTp001dxyz_branch = the_tree.GetBranch("muVetoZTTp001dxyz")
 *         #if not self.muVetoZTTp001dxyz_branch and "muVetoZTTp001dxyz" not in self.complained:
 *         if not self.muVetoZTTp001dxyz_branch and "muVetoZTTp001dxyz":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch muVetoZTTp001dxyz does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muVetoZTTp001dxyz")
 */
  __pyx_t_2 = ((!(__pyx_v_self->muVetoZTTp001dxyz_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1096_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1096_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4919
 *         #if not self.muVetoZTTp001dxyz_branch and "muVetoZTTp001dxyz" not in self.complained:
 *         if not self.muVetoZTTp001dxyz_branch and "muVetoZTTp001dxyz":
 *             warnings.warn( "EMTree: Expected branch muVetoZTTp001dxyz does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muVetoZTTp001dxyz")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4919, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4919, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__366, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4919, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4918
 *         self.muVetoZTTp001dxyz_branch = the_tree.GetBranch("muVetoZTTp001dxyz")
 *         #if not self.muVetoZTTp001dxyz_branch and "muVetoZTTp001dxyz" not in self.complained:
 *         if not self.muVetoZTTp001dxyz_branch and "muVetoZTTp001dxyz":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch muVetoZTTp001dxyz does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muVetoZTTp001dxyz")
 */
    goto __pyx_L1095;
  }

  /* "EMTree.pyx":4922
 *             #self.complained.add("muVetoZTTp001dxyz")
 *         else:
 *             self.muVetoZTTp001dxyz_branch.SetAddress(<void*>&self.muVetoZTTp001dxyz_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making nTruePU"
 */
  /*else*/ {
    __pyx_v_self->muVetoZTTp001dxyz_branch->SetAddress(((void *)(&__pyx_v_self->muVetoZTTp001dxyz_value)));
  }
  __pyx_L1095:;

  /* "EMTree.pyx":4925
 * 
 *         #print "making nTruePU"
 *         self.nTruePU_branch = the_tree.GetBranch("nTruePU")             # <<<<<<<<<<<<<<
 *         #if not self.nTruePU_branch and "nTruePU" not in self.complained:
 *         if not self.nTruePU_branch and "nTruePU":
 */
  __pyx_v_self->nTruePU_branch = __pyx_v_the_tree->GetBranch(((char *)"nTruePU"));

  /* "EMTree.pyx":4927
 *         self.nTruePU_branch = the_tree.GetBranch("nTruePU")
 *         #if not self.nTruePU_branch and "nTruePU" not in self.complained:
 *         if not self.nTruePU_branch and "nTruePU":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch nTruePU does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("nTruePU")
 */
  __pyx_t_2 = ((!(__pyx_v_self->nTruePU_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1099_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1099_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4928
 *         #if not self.nTruePU_branch and "nTruePU" not in self.complained:
 *         if not self.nTruePU_branch and "nTruePU":
 *             warnings.warn( "EMTree: Expected branch nTruePU does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("nTruePU")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4928, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4928, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__367, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4928, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4927
 *         self.nTruePU_branch = the_tree.GetBranch("nTruePU")
 *         #if not self.nTruePU_branch and "nTruePU" not in self.complained:
 *         if not self.nTruePU_branch and "nTruePU":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch nTruePU does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("nTruePU")
 */
    goto __pyx_L1098;
  }

  /* "EMTree.pyx":4931
 *             #self.complained.add("nTruePU")
 *         else:
 *             self.nTruePU_branch.SetAddress(<void*>&self.nTruePU_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making npNLO"
 */
  /*else*/ {
    __pyx_v_self->nTruePU_branch->SetAddress(((void *)(&__pyx_v_self->nTruePU_value)));
  }
  __pyx_L1098:;

  /* "EMTree.pyx":4934
 * 
 *         #print "making npNLO"
 *         self.npNLO_branch = the_tree.GetBranch("npNLO")             # <<<<<<<<<<<<<<
 *         #if not self.npNLO_branch and "npNLO" not in self.complained:
 *         if not self.npNLO_branch and "npNLO":
 */
  __pyx_v_self->npNLO_branch = __pyx_v_the_tree->GetBranch(((char *)"npNLO"));

  /* "EMTree.pyx":4936
 *         self.npNLO_branch = the_tree.GetBranch("npNLO")
 *         #if not self.npNLO_branch and "npNLO" not in self.complained:
 *         if not self.npNLO_branch and "npNLO":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch npNLO does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("npNLO")
 */
  __pyx_t_2 = ((!(__pyx_v_self->npNLO_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1102_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1102_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4937
 *         #if not self.npNLO_branch and "npNLO" not in self.complained:
 *         if not self.npNLO_branch and "npNLO":
 *             warnings.warn( "EMTree: Expected branch npNLO does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("npNLO")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4937, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4937, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__368, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4937, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4936
 *         self.npNLO_branch = the_tree.GetBranch("npNLO")
 *         #if not self.npNLO_branch and "npNLO" not in self.complained:
 *         if not self.npNLO_branch and "npNLO":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch npNLO does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("npNLO")
 */
    goto __pyx_L1101;
  }

  /* "EMTree.pyx":4940
 *             #self.complained.add("npNLO")
 *         else:
 *             self.npNLO_branch.SetAddress(<void*>&self.npNLO_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making numGenJets"
 */
  /*else*/ {
    __pyx_v_self->npNLO_branch->SetAddress(((void *)(&__pyx_v_self->npNLO_value)));
  }
  __pyx_L1101:;

  /* "EMTree.pyx":4943
 * 
 *         #print "making numGenJets"
 *         self.numGenJets_branch = the_tree.GetBranch("numGenJets")             # <<<<<<<<<<<<<<
 *         #if not self.numGenJets_branch and "numGenJets" not in self.complained:
 *         if not self.numGenJets_branch and "numGenJets":
 */
  __pyx_v_self->numGenJets_branch = __pyx_v_the_tree->GetBranch(((char *)"numGenJets"));

  /* "EMTree.pyx":4945
 *         self.numGenJets_branch = the_tree.GetBranch("numGenJets")
 *         #if not self.numGenJets_branch and "numGenJets" not in self.complained:
 *         if not self.numGenJets_branch and "numGenJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch numGenJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("numGenJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->numGenJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1105_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1105_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4946
 *         #if not self.numGenJets_branch and "numGenJets" not in self.complained:
 *         if not self.numGenJets_branch and "numGenJets":
 *             warnings.warn( "EMTree: Expected branch numGenJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("numGenJets")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4946, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4946, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__369, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4946, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4945
 *         self.numGenJets_branch = the_tree.GetBranch("numGenJets")
 *         #if not self.numGenJets_branch and "numGenJets" not in self.complained:
 *         if not self.numGenJets_branch and "numGenJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch numGenJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("numGenJets")
 */
    goto __pyx_L1104;
  }

  /* "EMTree.pyx":4949
 *             #self.complained.add("numGenJets")
 *         else:
 *             self.numGenJets_branch.SetAddress(<void*>&self.numGenJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making nvtx"
 */
  /*else*/ {
    __pyx_v_self->numGenJets_branch->SetAddress(((void *)(&__pyx_v_self->numGenJets_value)));
  }
  __pyx_L1104:;

  /* "EMTree.pyx":4952
 * 
 *         #print "making nvtx"
 *         self.nvtx_branch = the_tree.GetBranch("nvtx")             # <<<<<<<<<<<<<<
 *         #if not self.nvtx_branch and "nvtx" not in self.complained:
 *         if not self.nvtx_branch and "nvtx":
 */
  __pyx_v_self->nvtx_branch = __pyx_v_the_tree->GetBranch(((char *)"nvtx"));

  /* "EMTree.pyx":4954
 *         self.nvtx_branch = the_tree.GetBranch("nvtx")
 *         #if not self.nvtx_branch and "nvtx" not in self.complained:
 *         if not self.nvtx_branch and "nvtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch nvtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("nvtx")
 */
  __pyx_t_2 = ((!(__pyx_v_self->nvtx_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1108_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1108_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4955
 *         #if not self.nvtx_branch and "nvtx" not in self.complained:
 *         if not self.nvtx_branch and "nvtx":
 *             warnings.warn( "EMTree: Expected branch nvtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("nvtx")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4955, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4955, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__370, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4955, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4954
 *         self.nvtx_branch = the_tree.GetBranch("nvtx")
 *         #if not self.nvtx_branch and "nvtx" not in self.complained:
 *         if not self.nvtx_branch and "nvtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch nvtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("nvtx")
 */
    goto __pyx_L1107;
  }

  /* "EMTree.pyx":4958
 *             #self.complained.add("nvtx")
 *         else:
 *             self.nvtx_branch.SetAddress(<void*>&self.nvtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making prefiring_weight"
 */
  /*else*/ {
    __pyx_v_self->nvtx_branch->SetAddress(((void *)(&__pyx_v_self->nvtx_value)));
  }
  __pyx_L1107:;

  /* "EMTree.pyx":4961
 * 
 *         #print "making prefiring_weight"
 *         self.prefiring_weight_branch = the_tree.GetBranch("prefiring_weight")             # <<<<<<<<<<<<<<
 *         #if not self.prefiring_weight_branch and "prefiring_weight" not in self.complained:
 *         if not self.prefiring_weight_branch and "prefiring_weight":
 */
  __pyx_v_self->prefiring_weight_branch = __pyx_v_the_tree->GetBranch(((char *)"prefiring_weight"));

  /* "EMTree.pyx":4963
 *         self.prefiring_weight_branch = the_tree.GetBranch("prefiring_weight")
 *         #if not self.prefiring_weight_branch and "prefiring_weight" not in self.complained:
 *         if not self.prefiring_weight_branch and "prefiring_weight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch prefiring_weight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("prefiring_weight")
 */
  __pyx_t_2 = ((!(__pyx_v_self->prefiring_weight_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1111_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1111_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4964
 *         #if not self.prefiring_weight_branch and "prefiring_weight" not in self.complained:
 *         if not self.prefiring_weight_branch and "prefiring_weight":
 *             warnings.warn( "EMTree: Expected branch prefiring_weight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("prefiring_weight")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__371, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4963
 *         self.prefiring_weight_branch = the_tree.GetBranch("prefiring_weight")
 *         #if not self.prefiring_weight_branch and "prefiring_weight" not in self.complained:
 *         if not self.prefiring_weight_branch and "prefiring_weight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch prefiring_weight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("prefiring_weight")
 */
    goto __pyx_L1110;
  }

  /* "EMTree.pyx":4967
 *             #self.complained.add("prefiring_weight")
 *         else:
 *             self.prefiring_weight_branch.SetAddress(<void*>&self.prefiring_weight_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making prefiring_weight_down"
 */
  /*else*/ {
    __pyx_v_self->prefiring_weight_branch->SetAddress(((void *)(&__pyx_v_self->prefiring_weight_value)));
  }
  __pyx_L1110:;

  /* "EMTree.pyx":4970
 * 
 *         #print "making prefiring_weight_down"
 *         self.prefiring_weight_down_branch = the_tree.GetBranch("prefiring_weight_down")             # <<<<<<<<<<<<<<
 *         #if not self.prefiring_weight_down_branch and "prefiring_weight_down" not in self.complained:
 *         if not self.prefiring_weight_down_branch and "prefiring_weight_down":
 */
  __pyx_v_self->prefiring_weight_down_branch = __pyx_v_the_tree->GetBranch(((char *)"prefiring_weight_down"));

  /* "EMTree.pyx":4972
 *         self.prefiring_weight_down_branch = the_tree.GetBranch("prefiring_weight_down")
 *         #if not self.prefiring_weight_down_branch and "prefiring_weight_down" not in self.complained:
 *         if not self.prefiring_weight_down_branch and "prefiring_weight_down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch prefiring_weight_down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("prefiring_weight_down")
 */
  __pyx_t_2 = ((!(__pyx_v_self->prefiring_weight_down_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1114_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1114_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4973
 *         #if not self.prefiring_weight_down_branch and "prefiring_weight_down" not in self.complained:
 *         if not self.prefiring_weight_down_branch and "prefiring_weight_down":
 *             warnings.warn( "EMTree: Expected branch prefiring_weight_down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("prefiring_weight_down")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4973, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4973, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__372, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4973, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4972
 *         self.prefiring_weight_down_branch = the_tree.GetBranch("prefiring_weight_down")
 *         #if not self.prefiring_weight_down_branch and "prefiring_weight_down" not in self.complained:
 *         if not self.prefiring_weight_down_branch and "prefiring_weight_down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch prefiring_weight_down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("prefiring_weight_down")
 */
    goto __pyx_L1113;
  }

  /* "EMTree.pyx":4976
 *             #self.complained.add("prefiring_weight_down")
 *         else:
 *             self.prefiring_weight_down_branch.SetAddress(<void*>&self.prefiring_weight_down_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making prefiring_weight_up"
 */
  /*else*/ {
    __pyx_v_self->prefiring_weight_down_branch->SetAddress(((void *)(&__pyx_v_self->prefiring_weight_down_value)));
  }
  __pyx_L1113:;

  /* "EMTree.pyx":4979
 * 
 *         #print "making prefiring_weight_up"
 *         self.prefiring_weight_up_branch = the_tree.GetBranch("prefiring_weight_up")             # <<<<<<<<<<<<<<
 *         #if not self.prefiring_weight_up_branch and "prefiring_weight_up" not in self.complained:
 *         if not self.prefiring_weight_up_branch and "prefiring_weight_up":
 */
  __pyx_v_self->prefiring_weight_up_branch = __pyx_v_the_tree->GetBranch(((char *)"prefiring_weight_up"));

  /* "EMTree.pyx":4981
 *         self.prefiring_weight_up_branch = the_tree.GetBranch("prefiring_weight_up")
 *         #if not self.prefiring_weight_up_branch and "prefiring_weight_up" not in self.complained:
 *         if not self.prefiring_weight_up_branch and "prefiring_weight_up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch prefiring_weight_up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("prefiring_weight_up")
 */
  __pyx_t_2 = ((!(__pyx_v_self->prefiring_weight_up_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1117_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1117_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4982
 *         #if not self.prefiring_weight_up_branch and "prefiring_weight_up" not in self.complained:
 *         if not self.prefiring_weight_up_branch and "prefiring_weight_up":
 *             warnings.warn( "EMTree: Expected branch prefiring_weight_up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("prefiring_weight_up")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4982, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4982, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__373, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4982, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4981
 *         self.prefiring_weight_up_branch = the_tree.GetBranch("prefiring_weight_up")
 *         #if not self.prefiring_weight_up_branch and "prefiring_weight_up" not in self.complained:
 *         if not self.prefiring_weight_up_branch and "prefiring_weight_up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch prefiring_weight_up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("prefiring_weight_up")
 */
    goto __pyx_L1116;
  }

  /* "EMTree.pyx":4985
 *             #self.complained.add("prefiring_weight_up")
 *         else:
 *             self.prefiring_weight_up_branch.SetAddress(<void*>&self.prefiring_weight_up_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making processID"
 */
  /*else*/ {
    __pyx_v_self->prefiring_weight_up_branch->SetAddress(((void *)(&__pyx_v_self->prefiring_weight_up_value)));
  }
  __pyx_L1116:;

  /* "EMTree.pyx":4988
 * 
 *         #print "making processID"
 *         self.processID_branch = the_tree.GetBranch("processID")             # <<<<<<<<<<<<<<
 *         #if not self.processID_branch and "processID" not in self.complained:
 *         if not self.processID_branch and "processID":
 */
  __pyx_v_self->processID_branch = __pyx_v_the_tree->GetBranch(((char *)"processID"));

  /* "EMTree.pyx":4990
 *         self.processID_branch = the_tree.GetBranch("processID")
 *         #if not self.processID_branch and "processID" not in self.complained:
 *         if not self.processID_branch and "processID":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch processID does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("processID")
 */
  __pyx_t_2 = ((!(__pyx_v_self->processID_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1120_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1120_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":4991
 *         #if not self.processID_branch and "processID" not in self.complained:
 *         if not self.processID_branch and "processID":
 *             warnings.warn( "EMTree: Expected branch processID does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("processID")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4991, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4991, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__374, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4991, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4990
 *         self.processID_branch = the_tree.GetBranch("processID")
 *         #if not self.processID_branch and "processID" not in self.complained:
 *         if not self.processID_branch and "processID":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch processID does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("processID")
 */
    goto __pyx_L1119;
  }

  /* "EMTree.pyx":4994
 *             #self.complained.add("processID")
 *         else:
 *             self.processID_branch.SetAddress(<void*>&self.processID_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making puppiMetEt"
 */
  /*else*/ {
    __pyx_v_self->processID_branch->SetAddress(((void *)(&__pyx_v_self->processID_value)));
  }
  __pyx_L1119:;

  /* "EMTree.pyx":4997
 * 
 *         #print "making puppiMetEt"
 *         self.puppiMetEt_branch = the_tree.GetBranch("puppiMetEt")             # <<<<<<<<<<<<<<
 *         #if not self.puppiMetEt_branch and "puppiMetEt" not in self.complained:
 *         if not self.puppiMetEt_branch and "puppiMetEt":
 */
  __pyx_v_self->puppiMetEt_branch = __pyx_v_the_tree->GetBranch(((char *)"puppiMetEt"));

  /* "EMTree.pyx":4999
 *         self.puppiMetEt_branch = the_tree.GetBranch("puppiMetEt")
 *         #if not self.puppiMetEt_branch and "puppiMetEt" not in self.complained:
 *         if not self.puppiMetEt_branch and "puppiMetEt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch puppiMetEt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("puppiMetEt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->puppiMetEt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1123_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1123_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5000
 *         #if not self.puppiMetEt_branch and "puppiMetEt" not in self.complained:
 *         if not self.puppiMetEt_branch and "puppiMetEt":
 *             warnings.warn( "EMTree: Expected branch puppiMetEt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("puppiMetEt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5000, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5000, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__375, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5000, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":4999
 *         self.puppiMetEt_branch = the_tree.GetBranch("puppiMetEt")
 *         #if not self.puppiMetEt_branch and "puppiMetEt" not in self.complained:
 *         if not self.puppiMetEt_branch and "puppiMetEt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch puppiMetEt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("puppiMetEt")
 */
    goto __pyx_L1122;
  }

  /* "EMTree.pyx":5003
 *             #self.complained.add("puppiMetEt")
 *         else:
 *             self.puppiMetEt_branch.SetAddress(<void*>&self.puppiMetEt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making puppiMetPhi"
 */
  /*else*/ {
    __pyx_v_self->puppiMetEt_branch->SetAddress(((void *)(&__pyx_v_self->puppiMetEt_value)));
  }
  __pyx_L1122:;

  /* "EMTree.pyx":5006
 * 
 *         #print "making puppiMetPhi"
 *         self.puppiMetPhi_branch = the_tree.GetBranch("puppiMetPhi")             # <<<<<<<<<<<<<<
 *         #if not self.puppiMetPhi_branch and "puppiMetPhi" not in self.complained:
 *         if not self.puppiMetPhi_branch and "puppiMetPhi":
 */
  __pyx_v_self->puppiMetPhi_branch = __pyx_v_the_tree->GetBranch(((char *)"puppiMetPhi"));

  /* "EMTree.pyx":5008
 *         self.puppiMetPhi_branch = the_tree.GetBranch("puppiMetPhi")
 *         #if not self.puppiMetPhi_branch and "puppiMetPhi" not in self.complained:
 *         if not self.puppiMetPhi_branch and "puppiMetPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch puppiMetPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("puppiMetPhi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->puppiMetPhi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1126_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1126_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5009
 *         #if not self.puppiMetPhi_branch and "puppiMetPhi" not in self.complained:
 *         if not self.puppiMetPhi_branch and "puppiMetPhi":
 *             warnings.warn( "EMTree: Expected branch puppiMetPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("puppiMetPhi")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5009, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5009, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__376, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5009, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5008
 *         self.puppiMetPhi_branch = the_tree.GetBranch("puppiMetPhi")
 *         #if not self.puppiMetPhi_branch and "puppiMetPhi" not in self.complained:
 *         if not self.puppiMetPhi_branch and "puppiMetPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch puppiMetPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("puppiMetPhi")
 */
    goto __pyx_L1125;
  }

  /* "EMTree.pyx":5012
 *             #self.complained.add("puppiMetPhi")
 *         else:
 *             self.puppiMetPhi_branch.SetAddress(<void*>&self.puppiMetPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvChi2"
 */
  /*else*/ {
    __pyx_v_self->puppiMetPhi_branch->SetAddress(((void *)(&__pyx_v_self->puppiMetPhi_value)));
  }
  __pyx_L1125:;

  /* "EMTree.pyx":5015
 * 
 *         #print "making pvChi2"
 *         self.pvChi2_branch = the_tree.GetBranch("pvChi2")             # <<<<<<<<<<<<<<
 *         #if not self.pvChi2_branch and "pvChi2" not in self.complained:
 *         if not self.pvChi2_branch and "pvChi2":
 */
  __pyx_v_self->pvChi2_branch = __pyx_v_the_tree->GetBranch(((char *)"pvChi2"));

  /* "EMTree.pyx":5017
 *         self.pvChi2_branch = the_tree.GetBranch("pvChi2")
 *         #if not self.pvChi2_branch and "pvChi2" not in self.complained:
 *         if not self.pvChi2_branch and "pvChi2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvChi2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvChi2")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvChi2_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1129_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1129_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5018
 *         #if not self.pvChi2_branch and "pvChi2" not in self.complained:
 *         if not self.pvChi2_branch and "pvChi2":
 *             warnings.warn( "EMTree: Expected branch pvChi2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvChi2")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5018, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5018, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__377, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5018, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5017
 *         self.pvChi2_branch = the_tree.GetBranch("pvChi2")
 *         #if not self.pvChi2_branch and "pvChi2" not in self.complained:
 *         if not self.pvChi2_branch and "pvChi2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvChi2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvChi2")
 */
    goto __pyx_L1128;
  }

  /* "EMTree.pyx":5021
 *             #self.complained.add("pvChi2")
 *         else:
 *             self.pvChi2_branch.SetAddress(<void*>&self.pvChi2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvDX"
 */
  /*else*/ {
    __pyx_v_self->pvChi2_branch->SetAddress(((void *)(&__pyx_v_self->pvChi2_value)));
  }
  __pyx_L1128:;

  /* "EMTree.pyx":5024
 * 
 *         #print "making pvDX"
 *         self.pvDX_branch = the_tree.GetBranch("pvDX")             # <<<<<<<<<<<<<<
 *         #if not self.pvDX_branch and "pvDX" not in self.complained:
 *         if not self.pvDX_branch and "pvDX":
 */
  __pyx_v_self->pvDX_branch = __pyx_v_the_tree->GetBranch(((char *)"pvDX"));

  /* "EMTree.pyx":5026
 *         self.pvDX_branch = the_tree.GetBranch("pvDX")
 *         #if not self.pvDX_branch and "pvDX" not in self.complained:
 *         if not self.pvDX_branch and "pvDX":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvDX does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvDX")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvDX_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1132_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1132_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5027
 *         #if not self.pvDX_branch and "pvDX" not in self.complained:
 *         if not self.pvDX_branch and "pvDX":
 *             warnings.warn( "EMTree: Expected branch pvDX does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvDX")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5027, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5027, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__378, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5027, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5026
 *         self.pvDX_branch = the_tree.GetBranch("pvDX")
 *         #if not self.pvDX_branch and "pvDX" not in self.complained:
 *         if not self.pvDX_branch and "pvDX":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvDX does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvDX")
 */
    goto __pyx_L1131;
  }

  /* "EMTree.pyx":5030
 *             #self.complained.add("pvDX")
 *         else:
 *             self.pvDX_branch.SetAddress(<void*>&self.pvDX_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvDY"
 */
  /*else*/ {
    __pyx_v_self->pvDX_branch->SetAddress(((void *)(&__pyx_v_self->pvDX_value)));
  }
  __pyx_L1131:;

  /* "EMTree.pyx":5033
 * 
 *         #print "making pvDY"
 *         self.pvDY_branch = the_tree.GetBranch("pvDY")             # <<<<<<<<<<<<<<
 *         #if not self.pvDY_branch and "pvDY" not in self.complained:
 *         if not self.pvDY_branch and "pvDY":
 */
  __pyx_v_self->pvDY_branch = __pyx_v_the_tree->GetBranch(((char *)"pvDY"));

  /* "EMTree.pyx":5035
 *         self.pvDY_branch = the_tree.GetBranch("pvDY")
 *         #if not self.pvDY_branch and "pvDY" not in self.complained:
 *         if not self.pvDY_branch and "pvDY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvDY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvDY")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvDY_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1135_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1135_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5036
 *         #if not self.pvDY_branch and "pvDY" not in self.complained:
 *         if not self.pvDY_branch and "pvDY":
 *             warnings.warn( "EMTree: Expected branch pvDY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvDY")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5036, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5036, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__379, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5036, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5035
 *         self.pvDY_branch = the_tree.GetBranch("pvDY")
 *         #if not self.pvDY_branch and "pvDY" not in self.complained:
 *         if not self.pvDY_branch and "pvDY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvDY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvDY")
 */
    goto __pyx_L1134;
  }

  /* "EMTree.pyx":5039
 *             #self.complained.add("pvDY")
 *         else:
 *             self.pvDY_branch.SetAddress(<void*>&self.pvDY_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvDZ"
 */
  /*else*/ {
    __pyx_v_self->pvDY_branch->SetAddress(((void *)(&__pyx_v_self->pvDY_value)));
  }
  __pyx_L1134:;

  /* "EMTree.pyx":5042
 * 
 *         #print "making pvDZ"
 *         self.pvDZ_branch = the_tree.GetBranch("pvDZ")             # <<<<<<<<<<<<<<
 *         #if not self.pvDZ_branch and "pvDZ" not in self.complained:
 *         if not self.pvDZ_branch and "pvDZ":
 */
  __pyx_v_self->pvDZ_branch = __pyx_v_the_tree->GetBranch(((char *)"pvDZ"));

  /* "EMTree.pyx":5044
 *         self.pvDZ_branch = the_tree.GetBranch("pvDZ")
 *         #if not self.pvDZ_branch and "pvDZ" not in self.complained:
 *         if not self.pvDZ_branch and "pvDZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvDZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvDZ")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvDZ_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1138_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1138_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5045
 *         #if not self.pvDZ_branch and "pvDZ" not in self.complained:
 *         if not self.pvDZ_branch and "pvDZ":
 *             warnings.warn( "EMTree: Expected branch pvDZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvDZ")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5045, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5045, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__380, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5045, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5044
 *         self.pvDZ_branch = the_tree.GetBranch("pvDZ")
 *         #if not self.pvDZ_branch and "pvDZ" not in self.complained:
 *         if not self.pvDZ_branch and "pvDZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvDZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvDZ")
 */
    goto __pyx_L1137;
  }

  /* "EMTree.pyx":5048
 *             #self.complained.add("pvDZ")
 *         else:
 *             self.pvDZ_branch.SetAddress(<void*>&self.pvDZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvIsFake"
 */
  /*else*/ {
    __pyx_v_self->pvDZ_branch->SetAddress(((void *)(&__pyx_v_self->pvDZ_value)));
  }
  __pyx_L1137:;

  /* "EMTree.pyx":5051
 * 
 *         #print "making pvIsFake"
 *         self.pvIsFake_branch = the_tree.GetBranch("pvIsFake")             # <<<<<<<<<<<<<<
 *         #if not self.pvIsFake_branch and "pvIsFake" not in self.complained:
 *         if not self.pvIsFake_branch and "pvIsFake":
 */
  __pyx_v_self->pvIsFake_branch = __pyx_v_the_tree->GetBranch(((char *)"pvIsFake"));

  /* "EMTree.pyx":5053
 *         self.pvIsFake_branch = the_tree.GetBranch("pvIsFake")
 *         #if not self.pvIsFake_branch and "pvIsFake" not in self.complained:
 *         if not self.pvIsFake_branch and "pvIsFake":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvIsFake does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvIsFake")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvIsFake_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1141_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1141_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5054
 *         #if not self.pvIsFake_branch and "pvIsFake" not in self.complained:
 *         if not self.pvIsFake_branch and "pvIsFake":
 *             warnings.warn( "EMTree: Expected branch pvIsFake does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvIsFake")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5054, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5054, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__381, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5054, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5053
 *         self.pvIsFake_branch = the_tree.GetBranch("pvIsFake")
 *         #if not self.pvIsFake_branch and "pvIsFake" not in self.complained:
 *         if not self.pvIsFake_branch and "pvIsFake":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvIsFake does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvIsFake")
 */
    goto __pyx_L1140;
  }

  /* "EMTree.pyx":5057
 *             #self.complained.add("pvIsFake")
 *         else:
 *             self.pvIsFake_branch.SetAddress(<void*>&self.pvIsFake_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvIsValid"
 */
  /*else*/ {
    __pyx_v_self->pvIsFake_branch->SetAddress(((void *)(&__pyx_v_self->pvIsFake_value)));
  }
  __pyx_L1140:;

  /* "EMTree.pyx":5060
 * 
 *         #print "making pvIsValid"
 *         self.pvIsValid_branch = the_tree.GetBranch("pvIsValid")             # <<<<<<<<<<<<<<
 *         #if not self.pvIsValid_branch and "pvIsValid" not in self.complained:
 *         if not self.pvIsValid_branch and "pvIsValid":
 */
  __pyx_v_self->pvIsValid_branch = __pyx_v_the_tree->GetBranch(((char *)"pvIsValid"));

  /* "EMTree.pyx":5062
 *         self.pvIsValid_branch = the_tree.GetBranch("pvIsValid")
 *         #if not self.pvIsValid_branch and "pvIsValid" not in self.complained:
 *         if not self.pvIsValid_branch and "pvIsValid":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvIsValid does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvIsValid")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvIsValid_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1144_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1144_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5063
 *         #if not self.pvIsValid_branch and "pvIsValid" not in self.complained:
 *         if not self.pvIsValid_branch and "pvIsValid":
 *             warnings.warn( "EMTree: Expected branch pvIsValid does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvIsValid")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5063, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5063, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__382, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5063, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5062
 *         self.pvIsValid_branch = the_tree.GetBranch("pvIsValid")
 *         #if not self.pvIsValid_branch and "pvIsValid" not in self.complained:
 *         if not self.pvIsValid_branch and "pvIsValid":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvIsValid does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvIsValid")
 */
    goto __pyx_L1143;
  }

  /* "EMTree.pyx":5066
 *             #self.complained.add("pvIsValid")
 *         else:
 *             self.pvIsValid_branch.SetAddress(<void*>&self.pvIsValid_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvNormChi2"
 */
  /*else*/ {
    __pyx_v_self->pvIsValid_branch->SetAddress(((void *)(&__pyx_v_self->pvIsValid_value)));
  }
  __pyx_L1143:;

  /* "EMTree.pyx":5069
 * 
 *         #print "making pvNormChi2"
 *         self.pvNormChi2_branch = the_tree.GetBranch("pvNormChi2")             # <<<<<<<<<<<<<<
 *         #if not self.pvNormChi2_branch and "pvNormChi2" not in self.complained:
 *         if not self.pvNormChi2_branch and "pvNormChi2":
 */
  __pyx_v_self->pvNormChi2_branch = __pyx_v_the_tree->GetBranch(((char *)"pvNormChi2"));

  /* "EMTree.pyx":5071
 *         self.pvNormChi2_branch = the_tree.GetBranch("pvNormChi2")
 *         #if not self.pvNormChi2_branch and "pvNormChi2" not in self.complained:
 *         if not self.pvNormChi2_branch and "pvNormChi2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvNormChi2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvNormChi2")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvNormChi2_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1147_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1147_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5072
 *         #if not self.pvNormChi2_branch and "pvNormChi2" not in self.complained:
 *         if not self.pvNormChi2_branch and "pvNormChi2":
 *             warnings.warn( "EMTree: Expected branch pvNormChi2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvNormChi2")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5072, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5072, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__383, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5072, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5071
 *         self.pvNormChi2_branch = the_tree.GetBranch("pvNormChi2")
 *         #if not self.pvNormChi2_branch and "pvNormChi2" not in self.complained:
 *         if not self.pvNormChi2_branch and "pvNormChi2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvNormChi2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvNormChi2")
 */
    goto __pyx_L1146;
  }

  /* "EMTree.pyx":5075
 *             #self.complained.add("pvNormChi2")
 *         else:
 *             self.pvNormChi2_branch.SetAddress(<void*>&self.pvNormChi2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvRho"
 */
  /*else*/ {
    __pyx_v_self->pvNormChi2_branch->SetAddress(((void *)(&__pyx_v_self->pvNormChi2_value)));
  }
  __pyx_L1146:;

  /* "EMTree.pyx":5078
 * 
 *         #print "making pvRho"
 *         self.pvRho_branch = the_tree.GetBranch("pvRho")             # <<<<<<<<<<<<<<
 *         #if not self.pvRho_branch and "pvRho" not in self.complained:
 *         if not self.pvRho_branch and "pvRho":
 */
  __pyx_v_self->pvRho_branch = __pyx_v_the_tree->GetBranch(((char *)"pvRho"));

  /* "EMTree.pyx":5080
 *         self.pvRho_branch = the_tree.GetBranch("pvRho")
 *         #if not self.pvRho_branch and "pvRho" not in self.complained:
 *         if not self.pvRho_branch and "pvRho":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvRho does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvRho")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvRho_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1150_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1150_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5081
 *         #if not self.pvRho_branch and "pvRho" not in self.complained:
 *         if not self.pvRho_branch and "pvRho":
 *             warnings.warn( "EMTree: Expected branch pvRho does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvRho")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5081, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5081, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__384, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5081, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5080
 *         self.pvRho_branch = the_tree.GetBranch("pvRho")
 *         #if not self.pvRho_branch and "pvRho" not in self.complained:
 *         if not self.pvRho_branch and "pvRho":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvRho does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvRho")
 */
    goto __pyx_L1149;
  }

  /* "EMTree.pyx":5084
 *             #self.complained.add("pvRho")
 *         else:
 *             self.pvRho_branch.SetAddress(<void*>&self.pvRho_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvX"
 */
  /*else*/ {
    __pyx_v_self->pvRho_branch->SetAddress(((void *)(&__pyx_v_self->pvRho_value)));
  }
  __pyx_L1149:;

  /* "EMTree.pyx":5087
 * 
 *         #print "making pvX"
 *         self.pvX_branch = the_tree.GetBranch("pvX")             # <<<<<<<<<<<<<<
 *         #if not self.pvX_branch and "pvX" not in self.complained:
 *         if not self.pvX_branch and "pvX":
 */
  __pyx_v_self->pvX_branch = __pyx_v_the_tree->GetBranch(((char *)"pvX"));

  /* "EMTree.pyx":5089
 *         self.pvX_branch = the_tree.GetBranch("pvX")
 *         #if not self.pvX_branch and "pvX" not in self.complained:
 *         if not self.pvX_branch and "pvX":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvX does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvX")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvX_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1153_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1153_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5090
 *         #if not self.pvX_branch and "pvX" not in self.complained:
 *         if not self.pvX_branch and "pvX":
 *             warnings.warn( "EMTree: Expected branch pvX does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvX")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5090, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5090, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__385, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5090, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5089
 *         self.pvX_branch = the_tree.GetBranch("pvX")
 *         #if not self.pvX_branch and "pvX" not in self.complained:
 *         if not self.pvX_branch and "pvX":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvX does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvX")
 */
    goto __pyx_L1152;
  }

  /* "EMTree.pyx":5093
 *             #self.complained.add("pvX")
 *         else:
 *             self.pvX_branch.SetAddress(<void*>&self.pvX_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvY"
 */
  /*else*/ {
    __pyx_v_self->pvX_branch->SetAddress(((void *)(&__pyx_v_self->pvX_value)));
  }
  __pyx_L1152:;

  /* "EMTree.pyx":5096
 * 
 *         #print "making pvY"
 *         self.pvY_branch = the_tree.GetBranch("pvY")             # <<<<<<<<<<<<<<
 *         #if not self.pvY_branch and "pvY" not in self.complained:
 *         if not self.pvY_branch and "pvY":
 */
  __pyx_v_self->pvY_branch = __pyx_v_the_tree->GetBranch(((char *)"pvY"));

  /* "EMTree.pyx":5098
 *         self.pvY_branch = the_tree.GetBranch("pvY")
 *         #if not self.pvY_branch and "pvY" not in self.complained:
 *         if not self.pvY_branch and "pvY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvY")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvY_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1156_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1156_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5099
 *         #if not self.pvY_branch and "pvY" not in self.complained:
 *         if not self.pvY_branch and "pvY":
 *             warnings.warn( "EMTree: Expected branch pvY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvY")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5099, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5099, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__386, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5099, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5098
 *         self.pvY_branch = the_tree.GetBranch("pvY")
 *         #if not self.pvY_branch and "pvY" not in self.complained:
 *         if not self.pvY_branch and "pvY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvY")
 */
    goto __pyx_L1155;
  }

  /* "EMTree.pyx":5102
 *             #self.complained.add("pvY")
 *         else:
 *             self.pvY_branch.SetAddress(<void*>&self.pvY_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvZ"
 */
  /*else*/ {
    __pyx_v_self->pvY_branch->SetAddress(((void *)(&__pyx_v_self->pvY_value)));
  }
  __pyx_L1155:;

  /* "EMTree.pyx":5105
 * 
 *         #print "making pvZ"
 *         self.pvZ_branch = the_tree.GetBranch("pvZ")             # <<<<<<<<<<<<<<
 *         #if not self.pvZ_branch and "pvZ" not in self.complained:
 *         if not self.pvZ_branch and "pvZ":
 */
  __pyx_v_self->pvZ_branch = __pyx_v_the_tree->GetBranch(((char *)"pvZ"));

  /* "EMTree.pyx":5107
 *         self.pvZ_branch = the_tree.GetBranch("pvZ")
 *         #if not self.pvZ_branch and "pvZ" not in self.complained:
 *         if not self.pvZ_branch and "pvZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvZ")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvZ_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1159_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1159_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5108
 *         #if not self.pvZ_branch and "pvZ" not in self.complained:
 *         if not self.pvZ_branch and "pvZ":
 *             warnings.warn( "EMTree: Expected branch pvZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvZ")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5108, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5108, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__387, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5108, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5107
 *         self.pvZ_branch = the_tree.GetBranch("pvZ")
 *         #if not self.pvZ_branch and "pvZ" not in self.complained:
 *         if not self.pvZ_branch and "pvZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvZ")
 */
    goto __pyx_L1158;
  }

  /* "EMTree.pyx":5111
 *             #self.complained.add("pvZ")
 *         else:
 *             self.pvZ_branch.SetAddress(<void*>&self.pvZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvndof"
 */
  /*else*/ {
    __pyx_v_self->pvZ_branch->SetAddress(((void *)(&__pyx_v_self->pvZ_value)));
  }
  __pyx_L1158:;

  /* "EMTree.pyx":5114
 * 
 *         #print "making pvndof"
 *         self.pvndof_branch = the_tree.GetBranch("pvndof")             # <<<<<<<<<<<<<<
 *         #if not self.pvndof_branch and "pvndof" not in self.complained:
 *         if not self.pvndof_branch and "pvndof":
 */
  __pyx_v_self->pvndof_branch = __pyx_v_the_tree->GetBranch(((char *)"pvndof"));

  /* "EMTree.pyx":5116
 *         self.pvndof_branch = the_tree.GetBranch("pvndof")
 *         #if not self.pvndof_branch and "pvndof" not in self.complained:
 *         if not self.pvndof_branch and "pvndof":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvndof does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvndof")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvndof_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1162_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1162_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5117
 *         #if not self.pvndof_branch and "pvndof" not in self.complained:
 *         if not self.pvndof_branch and "pvndof":
 *             warnings.warn( "EMTree: Expected branch pvndof does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvndof")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5117, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5117, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__388, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5117, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5116
 *         self.pvndof_branch = the_tree.GetBranch("pvndof")
 *         #if not self.pvndof_branch and "pvndof" not in self.complained:
 *         if not self.pvndof_branch and "pvndof":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch pvndof does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvndof")
 */
    goto __pyx_L1161;
  }

  /* "EMTree.pyx":5120
 *             #self.complained.add("pvndof")
 *         else:
 *             self.pvndof_branch.SetAddress(<void*>&self.pvndof_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making recoilDaught"
 */
  /*else*/ {
    __pyx_v_self->pvndof_branch->SetAddress(((void *)(&__pyx_v_self->pvndof_value)));
  }
  __pyx_L1161:;

  /* "EMTree.pyx":5123
 * 
 *         #print "making recoilDaught"
 *         self.recoilDaught_branch = the_tree.GetBranch("recoilDaught")             # <<<<<<<<<<<<<<
 *         #if not self.recoilDaught_branch and "recoilDaught" not in self.complained:
 *         if not self.recoilDaught_branch and "recoilDaught":
 */
  __pyx_v_self->recoilDaught_branch = __pyx_v_the_tree->GetBranch(((char *)"recoilDaught"));

  /* "EMTree.pyx":5125
 *         self.recoilDaught_branch = the_tree.GetBranch("recoilDaught")
 *         #if not self.recoilDaught_branch and "recoilDaught" not in self.complained:
 *         if not self.recoilDaught_branch and "recoilDaught":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch recoilDaught does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("recoilDaught")
 */
  __pyx_t_2 = ((!(__pyx_v_self->recoilDaught_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1165_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1165_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5126
 *         #if not self.recoilDaught_branch and "recoilDaught" not in self.complained:
 *         if not self.recoilDaught_branch and "recoilDaught":
 *             warnings.warn( "EMTree: Expected branch recoilDaught does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("recoilDaught")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__389, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5125
 *         self.recoilDaught_branch = the_tree.GetBranch("recoilDaught")
 *         #if not self.recoilDaught_branch and "recoilDaught" not in self.complained:
 *         if not self.recoilDaught_branch and "recoilDaught":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch recoilDaught does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("recoilDaught")
 */
    goto __pyx_L1164;
  }

  /* "EMTree.pyx":5129
 *             #self.complained.add("recoilDaught")
 *         else:
 *             self.recoilDaught_branch.SetAddress(<void*>&self.recoilDaught_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making recoilWithMet"
 */
  /*else*/ {
    __pyx_v_self->recoilDaught_branch->SetAddress(((void *)(&__pyx_v_self->recoilDaught_value)));
  }
  __pyx_L1164:;

  /* "EMTree.pyx":5132
 * 
 *         #print "making recoilWithMet"
 *         self.recoilWithMet_branch = the_tree.GetBranch("recoilWithMet")             # <<<<<<<<<<<<<<
 *         #if not self.recoilWithMet_branch and "recoilWithMet" not in self.complained:
 *         if not self.recoilWithMet_branch and "recoilWithMet":
 */
  __pyx_v_self->recoilWithMet_branch = __pyx_v_the_tree->GetBranch(((char *)"recoilWithMet"));

  /* "EMTree.pyx":5134
 *         self.recoilWithMet_branch = the_tree.GetBranch("recoilWithMet")
 *         #if not self.recoilWithMet_branch and "recoilWithMet" not in self.complained:
 *         if not self.recoilWithMet_branch and "recoilWithMet":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch recoilWithMet does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("recoilWithMet")
 */
  __pyx_t_2 = ((!(__pyx_v_self->recoilWithMet_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1168_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1168_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5135
 *         #if not self.recoilWithMet_branch and "recoilWithMet" not in self.complained:
 *         if not self.recoilWithMet_branch and "recoilWithMet":
 *             warnings.warn( "EMTree: Expected branch recoilWithMet does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("recoilWithMet")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__390, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5134
 *         self.recoilWithMet_branch = the_tree.GetBranch("recoilWithMet")
 *         #if not self.recoilWithMet_branch and "recoilWithMet" not in self.complained:
 *         if not self.recoilWithMet_branch and "recoilWithMet":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch recoilWithMet does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("recoilWithMet")
 */
    goto __pyx_L1167;
  }

  /* "EMTree.pyx":5138
 *             #self.complained.add("recoilWithMet")
 *         else:
 *             self.recoilWithMet_branch.SetAddress(<void*>&self.recoilWithMet_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making rho"
 */
  /*else*/ {
    __pyx_v_self->recoilWithMet_branch->SetAddress(((void *)(&__pyx_v_self->recoilWithMet_value)));
  }
  __pyx_L1167:;

  /* "EMTree.pyx":5141
 * 
 *         #print "making rho"
 *         self.rho_branch = the_tree.GetBranch("rho")             # <<<<<<<<<<<<<<
 *         #if not self.rho_branch and "rho" not in self.complained:
 *         if not self.rho_branch and "rho":
 */
  __pyx_v_self->rho_branch = __pyx_v_the_tree->GetBranch(((char *)"rho"));

  /* "EMTree.pyx":5143
 *         self.rho_branch = the_tree.GetBranch("rho")
 *         #if not self.rho_branch and "rho" not in self.complained:
 *         if not self.rho_branch and "rho":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch rho does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("rho")
 */
  __pyx_t_2 = ((!(__pyx_v_self->rho_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1171_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1171_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5144
 *         #if not self.rho_branch and "rho" not in self.complained:
 *         if not self.rho_branch and "rho":
 *             warnings.warn( "EMTree: Expected branch rho does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("rho")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5144, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5144, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__391, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5144, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5143
 *         self.rho_branch = the_tree.GetBranch("rho")
 *         #if not self.rho_branch and "rho" not in self.complained:
 *         if not self.rho_branch and "rho":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch rho does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("rho")
 */
    goto __pyx_L1170;
  }

  /* "EMTree.pyx":5147
 *             #self.complained.add("rho")
 *         else:
 *             self.rho_branch.SetAddress(<void*>&self.rho_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making run"
 */
  /*else*/ {
    __pyx_v_self->rho_branch->SetAddress(((void *)(&__pyx_v_self->rho_value)));
  }
  __pyx_L1170:;

  /* "EMTree.pyx":5150
 * 
 *         #print "making run"
 *         self.run_branch = the_tree.GetBranch("run")             # <<<<<<<<<<<<<<
 *         #if not self.run_branch and "run" not in self.complained:
 *         if not self.run_branch and "run":
 */
  __pyx_v_self->run_branch = __pyx_v_the_tree->GetBranch(((char *)"run"));

  /* "EMTree.pyx":5152
 *         self.run_branch = the_tree.GetBranch("run")
 *         #if not self.run_branch and "run" not in self.complained:
 *         if not self.run_branch and "run":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch run does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("run")
 */
  __pyx_t_2 = ((!(__pyx_v_self->run_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1174_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1174_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5153
 *         #if not self.run_branch and "run" not in self.complained:
 *         if not self.run_branch and "run":
 *             warnings.warn( "EMTree: Expected branch run does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("run")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5153, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5153, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__392, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5153, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5152
 *         self.run_branch = the_tree.GetBranch("run")
 *         #if not self.run_branch and "run" not in self.complained:
 *         if not self.run_branch and "run":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch run does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("run")
 */
    goto __pyx_L1173;
  }

  /* "EMTree.pyx":5156
 *             #self.complained.add("run")
 *         else:
 *             self.run_branch.SetAddress(<void*>&self.run_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleE25eta2p1TightPass"
 */
  /*else*/ {
    __pyx_v_self->run_branch->SetAddress(((void *)(&__pyx_v_self->run_value)));
  }
  __pyx_L1173:;

  /* "EMTree.pyx":5159
 * 
 *         #print "making singleE25eta2p1TightPass"
 *         self.singleE25eta2p1TightPass_branch = the_tree.GetBranch("singleE25eta2p1TightPass")             # <<<<<<<<<<<<<<
 *         #if not self.singleE25eta2p1TightPass_branch and "singleE25eta2p1TightPass" not in self.complained:
 *         if not self.singleE25eta2p1TightPass_branch and "singleE25eta2p1TightPass":
 */
  __pyx_v_self->singleE25eta2p1TightPass_branch = __pyx_v_the_tree->GetBranch(((char *)"singleE25eta2p1TightPass"));

  /* "EMTree.pyx":5161
 *         self.singleE25eta2p1TightPass_branch = the_tree.GetBranch("singleE25eta2p1TightPass")
 *         #if not self.singleE25eta2p1TightPass_branch and "singleE25eta2p1TightPass" not in self.complained:
 *         if not self.singleE25eta2p1TightPass_branch and "singleE25eta2p1TightPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch singleE25eta2p1TightPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleE25eta2p1TightPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleE25eta2p1TightPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1177_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1177_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5162
 *         #if not self.singleE25eta2p1TightPass_branch and "singleE25eta2p1TightPass" not in self.complained:
 *         if not self.singleE25eta2p1TightPass_branch and "singleE25eta2p1TightPass":
 *             warnings.warn( "EMTree: Expected branch singleE25eta2p1TightPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleE25eta2p1TightPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__393, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5161
 *         self.singleE25eta2p1TightPass_branch = the_tree.GetBranch("singleE25eta2p1TightPass")
 *         #if not self.singleE25eta2p1TightPass_branch and "singleE25eta2p1TightPass" not in self.complained:
 *         if not self.singleE25eta2p1TightPass_branch and "singleE25eta2p1TightPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch singleE25eta2p1TightPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleE25eta2p1TightPass")
 */
    goto __pyx_L1176;
  }

  /* "EMTree.pyx":5165
 *             #self.complained.add("singleE25eta2p1TightPass")
 *         else:
 *             self.singleE25eta2p1TightPass_branch.SetAddress(<void*>&self.singleE25eta2p1TightPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tauVetoPt20LooseMVALTVtx"
 */
  /*else*/ {
    __pyx_v_self->singleE25eta2p1TightPass_branch->SetAddress(((void *)(&__pyx_v_self->singleE25eta2p1TightPass_value)));
  }
  __pyx_L1176:;

  /* "EMTree.pyx":5168
 * 
 *         #print "making tauVetoPt20LooseMVALTVtx"
 *         self.tauVetoPt20LooseMVALTVtx_branch = the_tree.GetBranch("tauVetoPt20LooseMVALTVtx")             # <<<<<<<<<<<<<<
 *         #if not self.tauVetoPt20LooseMVALTVtx_branch and "tauVetoPt20LooseMVALTVtx" not in self.complained:
 *         if not self.tauVetoPt20LooseMVALTVtx_branch and "tauVetoPt20LooseMVALTVtx":
 */
  __pyx_v_self->tauVetoPt20LooseMVALTVtx_branch = __pyx_v_the_tree->GetBranch(((char *)"tauVetoPt20LooseMVALTVtx"));

  /* "EMTree.pyx":5170
 *         self.tauVetoPt20LooseMVALTVtx_branch = the_tree.GetBranch("tauVetoPt20LooseMVALTVtx")
 *         #if not self.tauVetoPt20LooseMVALTVtx_branch and "tauVetoPt20LooseMVALTVtx" not in self.complained:
 *         if not self.tauVetoPt20LooseMVALTVtx_branch and "tauVetoPt20LooseMVALTVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch tauVetoPt20LooseMVALTVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20LooseMVALTVtx")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tauVetoPt20LooseMVALTVtx_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1180_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1180_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5171
 *         #if not self.tauVetoPt20LooseMVALTVtx_branch and "tauVetoPt20LooseMVALTVtx" not in self.complained:
 *         if not self.tauVetoPt20LooseMVALTVtx_branch and "tauVetoPt20LooseMVALTVtx":
 *             warnings.warn( "EMTree: Expected branch tauVetoPt20LooseMVALTVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tauVetoPt20LooseMVALTVtx")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5171, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5171, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__394, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5171, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5170
 *         self.tauVetoPt20LooseMVALTVtx_branch = the_tree.GetBranch("tauVetoPt20LooseMVALTVtx")
 *         #if not self.tauVetoPt20LooseMVALTVtx_branch and "tauVetoPt20LooseMVALTVtx" not in self.complained:
 *         if not self.tauVetoPt20LooseMVALTVtx_branch and "tauVetoPt20LooseMVALTVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch tauVetoPt20LooseMVALTVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20LooseMVALTVtx")
 */
    goto __pyx_L1179;
  }

  /* "EMTree.pyx":5174
 *             #self.complained.add("tauVetoPt20LooseMVALTVtx")
 *         else:
 *             self.tauVetoPt20LooseMVALTVtx_branch.SetAddress(<void*>&self.tauVetoPt20LooseMVALTVtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tauVetoPtDeepVtx"
 */
  /*else*/ {
    __pyx_v_self->tauVetoPt20LooseMVALTVtx_branch->SetAddress(((void *)(&__pyx_v_self->tauVetoPt20LooseMVALTVtx_value)));
  }
  __pyx_L1179:;

  /* "EMTree.pyx":5177
 * 
 *         #print "making tauVetoPtDeepVtx"
 *         self.tauVetoPtDeepVtx_branch = the_tree.GetBranch("tauVetoPtDeepVtx")             # <<<<<<<<<<<<<<
 *         #if not self.tauVetoPtDeepVtx_branch and "tauVetoPtDeepVtx" not in self.complained:
 *         if not self.tauVetoPtDeepVtx_branch and "tauVetoPtDeepVtx":
 */
  __pyx_v_self->tauVetoPtDeepVtx_branch = __pyx_v_the_tree->GetBranch(((char *)"tauVetoPtDeepVtx"));

  /* "EMTree.pyx":5179
 *         self.tauVetoPtDeepVtx_branch = the_tree.GetBranch("tauVetoPtDeepVtx")
 *         #if not self.tauVetoPtDeepVtx_branch and "tauVetoPtDeepVtx" not in self.complained:
 *         if not self.tauVetoPtDeepVtx_branch and "tauVetoPtDeepVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch tauVetoPtDeepVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPtDeepVtx")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tauVetoPtDeepVtx_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1183_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1183_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5180
 *         #if not self.tauVetoPtDeepVtx_branch and "tauVetoPtDeepVtx" not in self.complained:
 *         if not self.tauVetoPtDeepVtx_branch and "tauVetoPtDeepVtx":
 *             warnings.warn( "EMTree: Expected branch tauVetoPtDeepVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tauVetoPtDeepVtx")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__395, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5179
 *         self.tauVetoPtDeepVtx_branch = the_tree.GetBranch("tauVetoPtDeepVtx")
 *         #if not self.tauVetoPtDeepVtx_branch and "tauVetoPtDeepVtx" not in self.complained:
 *         if not self.tauVetoPtDeepVtx_branch and "tauVetoPtDeepVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch tauVetoPtDeepVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPtDeepVtx")
 */
    goto __pyx_L1182;
  }

  /* "EMTree.pyx":5183
 *             #self.complained.add("tauVetoPtDeepVtx")
 *         else:
 *             self.tauVetoPtDeepVtx_branch.SetAddress(<void*>&self.tauVetoPtDeepVtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making topQuarkPt1"
 */
  /*else*/ {
    __pyx_v_self->tauVetoPtDeepVtx_branch->SetAddress(((void *)(&__pyx_v_self->tauVetoPtDeepVtx_value)));
  }
  __pyx_L1182:;

  /* "EMTree.pyx":5186
 * 
 *         #print "making topQuarkPt1"
 *         self.topQuarkPt1_branch = the_tree.GetBranch("topQuarkPt1")             # <<<<<<<<<<<<<<
 *         #if not self.topQuarkPt1_branch and "topQuarkPt1" not in self.complained:
 *         if not self.topQuarkPt1_branch and "topQuarkPt1":
 */
  __pyx_v_self->topQuarkPt1_branch = __pyx_v_the_tree->GetBranch(((char *)"topQuarkPt1"));

  /* "EMTree.pyx":5188
 *         self.topQuarkPt1_branch = the_tree.GetBranch("topQuarkPt1")
 *         #if not self.topQuarkPt1_branch and "topQuarkPt1" not in self.complained:
 *         if not self.topQuarkPt1_branch and "topQuarkPt1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch topQuarkPt1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("topQuarkPt1")
 */
  __pyx_t_2 = ((!(__pyx_v_self->topQuarkPt1_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1186_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1186_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5189
 *         #if not self.topQuarkPt1_branch and "topQuarkPt1" not in self.complained:
 *         if not self.topQuarkPt1_branch and "topQuarkPt1":
 *             warnings.warn( "EMTree: Expected branch topQuarkPt1 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("topQuarkPt1")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5189, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5189, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__396, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5189, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5188
 *         self.topQuarkPt1_branch = the_tree.GetBranch("topQuarkPt1")
 *         #if not self.topQuarkPt1_branch and "topQuarkPt1" not in self.complained:
 *         if not self.topQuarkPt1_branch and "topQuarkPt1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch topQuarkPt1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("topQuarkPt1")
 */
    goto __pyx_L1185;
  }

  /* "EMTree.pyx":5192
 *             #self.complained.add("topQuarkPt1")
 *         else:
 *             self.topQuarkPt1_branch.SetAddress(<void*>&self.topQuarkPt1_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making topQuarkPt2"
 */
  /*else*/ {
    __pyx_v_self->topQuarkPt1_branch->SetAddress(((void *)(&__pyx_v_self->topQuarkPt1_value)));
  }
  __pyx_L1185:;

  /* "EMTree.pyx":5195
 * 
 *         #print "making topQuarkPt2"
 *         self.topQuarkPt2_branch = the_tree.GetBranch("topQuarkPt2")             # <<<<<<<<<<<<<<
 *         #if not self.topQuarkPt2_branch and "topQuarkPt2" not in self.complained:
 *         if not self.topQuarkPt2_branch and "topQuarkPt2":
 */
  __pyx_v_self->topQuarkPt2_branch = __pyx_v_the_tree->GetBranch(((char *)"topQuarkPt2"));

  /* "EMTree.pyx":5197
 *         self.topQuarkPt2_branch = the_tree.GetBranch("topQuarkPt2")
 *         #if not self.topQuarkPt2_branch and "topQuarkPt2" not in self.complained:
 *         if not self.topQuarkPt2_branch and "topQuarkPt2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch topQuarkPt2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("topQuarkPt2")
 */
  __pyx_t_2 = ((!(__pyx_v_self->topQuarkPt2_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1189_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1189_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5198
 *         #if not self.topQuarkPt2_branch and "topQuarkPt2" not in self.complained:
 *         if not self.topQuarkPt2_branch and "topQuarkPt2":
 *             warnings.warn( "EMTree: Expected branch topQuarkPt2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("topQuarkPt2")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5198, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5198, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__397, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5198, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5197
 *         self.topQuarkPt2_branch = the_tree.GetBranch("topQuarkPt2")
 *         #if not self.topQuarkPt2_branch and "topQuarkPt2" not in self.complained:
 *         if not self.topQuarkPt2_branch and "topQuarkPt2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch topQuarkPt2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("topQuarkPt2")
 */
    goto __pyx_L1188;
  }

  /* "EMTree.pyx":5201
 *             #self.complained.add("topQuarkPt2")
 *         else:
 *             self.topQuarkPt2_branch.SetAddress(<void*>&self.topQuarkPt2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMetEt"
 */
  /*else*/ {
    __pyx_v_self->topQuarkPt2_branch->SetAddress(((void *)(&__pyx_v_self->topQuarkPt2_value)));
  }
  __pyx_L1188:;

  /* "EMTree.pyx":5204
 * 
 *         #print "making type1_pfMetEt"
 *         self.type1_pfMetEt_branch = the_tree.GetBranch("type1_pfMetEt")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMetEt_branch and "type1_pfMetEt" not in self.complained:
 *         if not self.type1_pfMetEt_branch and "type1_pfMetEt":
 */
  __pyx_v_self->type1_pfMetEt_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMetEt"));

  /* "EMTree.pyx":5206
 *         self.type1_pfMetEt_branch = the_tree.GetBranch("type1_pfMetEt")
 *         #if not self.type1_pfMetEt_branch and "type1_pfMetEt" not in self.complained:
 *         if not self.type1_pfMetEt_branch and "type1_pfMetEt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMetEt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMetEt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMetEt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1192_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1192_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5207
 *         #if not self.type1_pfMetEt_branch and "type1_pfMetEt" not in self.complained:
 *         if not self.type1_pfMetEt_branch and "type1_pfMetEt":
 *             warnings.warn( "EMTree: Expected branch type1_pfMetEt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMetEt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__398, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5206
 *         self.type1_pfMetEt_branch = the_tree.GetBranch("type1_pfMetEt")
 *         #if not self.type1_pfMetEt_branch and "type1_pfMetEt" not in self.complained:
 *         if not self.type1_pfMetEt_branch and "type1_pfMetEt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMetEt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMetEt")
 */
    goto __pyx_L1191;
  }

  /* "EMTree.pyx":5210
 *             #self.complained.add("type1_pfMetEt")
 *         else:
 *             self.type1_pfMetEt_branch.SetAddress(<void*>&self.type1_pfMetEt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMetPhi"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMetEt_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMetEt_value)));
  }
  __pyx_L1191:;

  /* "EMTree.pyx":5213
 * 
 *         #print "making type1_pfMetPhi"
 *         self.type1_pfMetPhi_branch = the_tree.GetBranch("type1_pfMetPhi")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMetPhi_branch and "type1_pfMetPhi" not in self.complained:
 *         if not self.type1_pfMetPhi_branch and "type1_pfMetPhi":
 */
  __pyx_v_self->type1_pfMetPhi_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMetPhi"));

  /* "EMTree.pyx":5215
 *         self.type1_pfMetPhi_branch = the_tree.GetBranch("type1_pfMetPhi")
 *         #if not self.type1_pfMetPhi_branch and "type1_pfMetPhi" not in self.complained:
 *         if not self.type1_pfMetPhi_branch and "type1_pfMetPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMetPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMetPhi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMetPhi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1195_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1195_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5216
 *         #if not self.type1_pfMetPhi_branch and "type1_pfMetPhi" not in self.complained:
 *         if not self.type1_pfMetPhi_branch and "type1_pfMetPhi":
 *             warnings.warn( "EMTree: Expected branch type1_pfMetPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMetPhi")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5216, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5216, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__399, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5216, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5215
 *         self.type1_pfMetPhi_branch = the_tree.GetBranch("type1_pfMetPhi")
 *         #if not self.type1_pfMetPhi_branch and "type1_pfMetPhi" not in self.complained:
 *         if not self.type1_pfMetPhi_branch and "type1_pfMetPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMetPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMetPhi")
 */
    goto __pyx_L1194;
  }

  /* "EMTree.pyx":5219
 *             #self.complained.add("type1_pfMetPhi")
 *         else:
 *             self.type1_pfMetPhi_branch.SetAddress(<void*>&self.type1_pfMetPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JERDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMetPhi_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMetPhi_value)));
  }
  __pyx_L1194:;

  /* "EMTree.pyx":5222
 * 
 *         #print "making type1_pfMet_shiftedPhi_JERDown"
 *         self.type1_pfMet_shiftedPhi_JERDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JERDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JERDown_branch and "type1_pfMet_shiftedPhi_JERDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JERDown_branch and "type1_pfMet_shiftedPhi_JERDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JERDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JERDown"));

  /* "EMTree.pyx":5224
 *         self.type1_pfMet_shiftedPhi_JERDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JERDown")
 *         #if not self.type1_pfMet_shiftedPhi_JERDown_branch and "type1_pfMet_shiftedPhi_JERDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JERDown_branch and "type1_pfMet_shiftedPhi_JERDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JERDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JERDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JERDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1198_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1198_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5225
 *         #if not self.type1_pfMet_shiftedPhi_JERDown_branch and "type1_pfMet_shiftedPhi_JERDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JERDown_branch and "type1_pfMet_shiftedPhi_JERDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JERDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JERDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5225, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5225, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__400, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5225, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5224
 *         self.type1_pfMet_shiftedPhi_JERDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JERDown")
 *         #if not self.type1_pfMet_shiftedPhi_JERDown_branch and "type1_pfMet_shiftedPhi_JERDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JERDown_branch and "type1_pfMet_shiftedPhi_JERDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JERDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JERDown")
 */
    goto __pyx_L1197;
  }

  /* "EMTree.pyx":5228
 *             #self.complained.add("type1_pfMet_shiftedPhi_JERDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JERDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JERDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JERUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JERDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JERDown_value)));
  }
  __pyx_L1197:;

  /* "EMTree.pyx":5231
 * 
 *         #print "making type1_pfMet_shiftedPhi_JERUp"
 *         self.type1_pfMet_shiftedPhi_JERUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JERUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JERUp_branch and "type1_pfMet_shiftedPhi_JERUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JERUp_branch and "type1_pfMet_shiftedPhi_JERUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JERUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JERUp"));

  /* "EMTree.pyx":5233
 *         self.type1_pfMet_shiftedPhi_JERUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JERUp")
 *         #if not self.type1_pfMet_shiftedPhi_JERUp_branch and "type1_pfMet_shiftedPhi_JERUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JERUp_branch and "type1_pfMet_shiftedPhi_JERUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JERUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JERUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JERUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1201_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1201_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5234
 *         #if not self.type1_pfMet_shiftedPhi_JERUp_branch and "type1_pfMet_shiftedPhi_JERUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JERUp_branch and "type1_pfMet_shiftedPhi_JERUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JERUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JERUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5234, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5234, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__401, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5234, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5233
 *         self.type1_pfMet_shiftedPhi_JERUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JERUp")
 *         #if not self.type1_pfMet_shiftedPhi_JERUp_branch and "type1_pfMet_shiftedPhi_JERUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JERUp_branch and "type1_pfMet_shiftedPhi_JERUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JERUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JERUp")
 */
    goto __pyx_L1200;
  }

  /* "EMTree.pyx":5237
 *             #self.complained.add("type1_pfMet_shiftedPhi_JERUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JERUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JERUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetAbsoluteDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JERUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JERUp_value)));
  }
  __pyx_L1200:;

  /* "EMTree.pyx":5240
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetAbsoluteDown"
 *         self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetAbsoluteDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetAbsoluteDown"));

  /* "EMTree.pyx":5242
 *         self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetAbsoluteDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1204_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1204_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5243
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5243, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5243, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__402, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5243, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5242
 *         self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetAbsoluteDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteDown")
 */
    goto __pyx_L1203;
  }

  /* "EMTree.pyx":5246
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetAbsoluteDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetAbsoluteUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteDown_value)));
  }
  __pyx_L1203:;

  /* "EMTree.pyx":5249
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetAbsoluteUp"
 *         self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetAbsoluteUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetAbsoluteUp"));

  /* "EMTree.pyx":5251
 *         self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetAbsoluteUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1207_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1207_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5252
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__403, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5251
 *         self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetAbsoluteUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteUp")
 */
    goto __pyx_L1206;
  }

  /* "EMTree.pyx":5255
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetAbsoluteUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetAbsoluteyearDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteUp_value)));
  }
  __pyx_L1206:;

  /* "EMTree.pyx":5258
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetAbsoluteyearDown"
 *         self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetAbsoluteyearDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetAbsoluteyearDown"));

  /* "EMTree.pyx":5260
 *         self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetAbsoluteyearDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteyearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1210_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1210_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5261
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteyearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5261, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5261, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__404, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5261, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5260
 *         self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetAbsoluteyearDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteyearDown")
 */
    goto __pyx_L1209;
  }

  /* "EMTree.pyx":5264
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteyearDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetAbsoluteyearUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteyearDown_value)));
  }
  __pyx_L1209:;

  /* "EMTree.pyx":5267
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetAbsoluteyearUp"
 *         self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetAbsoluteyearUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetAbsoluteyearUp"));

  /* "EMTree.pyx":5269
 *         self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetAbsoluteyearUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteyearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1213_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1213_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5270
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteyearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5270, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5270, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__405, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5270, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5269
 *         self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetAbsoluteyearUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteyearUp")
 */
    goto __pyx_L1212;
  }

  /* "EMTree.pyx":5273
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteyearUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetBBEC1Down"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteyearUp_value)));
  }
  __pyx_L1212:;

  /* "EMTree.pyx":5276
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetBBEC1Down"
 *         self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetBBEC1Down")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch and "type1_pfMet_shiftedPhi_JetBBEC1Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch and "type1_pfMet_shiftedPhi_JetBBEC1Down":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1Down_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetBBEC1Down"));

  /* "EMTree.pyx":5278
 *         self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetBBEC1Down")
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch and "type1_pfMet_shiftedPhi_JetBBEC1Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch and "type1_pfMet_shiftedPhi_JetBBEC1Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1Down")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1Down_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1216_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1216_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5279
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch and "type1_pfMet_shiftedPhi_JetBBEC1Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch and "type1_pfMet_shiftedPhi_JetBBEC1Down":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1Down")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__406, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5278
 *         self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetBBEC1Down")
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch and "type1_pfMet_shiftedPhi_JetBBEC1Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch and "type1_pfMet_shiftedPhi_JetBBEC1Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1Down")
 */
    goto __pyx_L1215;
  }

  /* "EMTree.pyx":5282
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1Down")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetBBEC1Down_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetBBEC1Up"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1Down_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1Down_value)));
  }
  __pyx_L1215:;

  /* "EMTree.pyx":5285
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetBBEC1Up"
 *         self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetBBEC1Up")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch and "type1_pfMet_shiftedPhi_JetBBEC1Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch and "type1_pfMet_shiftedPhi_JetBBEC1Up":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1Up_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetBBEC1Up"));

  /* "EMTree.pyx":5287
 *         self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetBBEC1Up")
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch and "type1_pfMet_shiftedPhi_JetBBEC1Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch and "type1_pfMet_shiftedPhi_JetBBEC1Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1Up")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1Up_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1219_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1219_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5288
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch and "type1_pfMet_shiftedPhi_JetBBEC1Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch and "type1_pfMet_shiftedPhi_JetBBEC1Up":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1Up")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5288, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5288, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__407, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5288, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5287
 *         self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetBBEC1Up")
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch and "type1_pfMet_shiftedPhi_JetBBEC1Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch and "type1_pfMet_shiftedPhi_JetBBEC1Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1Up")
 */
    goto __pyx_L1218;
  }

  /* "EMTree.pyx":5291
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1Up")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetBBEC1Up_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetBBEC1yearDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1Up_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1Up_value)));
  }
  __pyx_L1218:;

  /* "EMTree.pyx":5294
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetBBEC1yearDown"
 *         self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetBBEC1yearDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetBBEC1yearDown"));

  /* "EMTree.pyx":5296
 *         self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetBBEC1yearDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1yearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1222_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1222_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5297
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1yearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5297, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5297, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__408, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5297, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5296
 *         self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetBBEC1yearDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1yearDown")
 */
    goto __pyx_L1221;
  }

  /* "EMTree.pyx":5300
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1yearDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetBBEC1yearUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1yearDown_value)));
  }
  __pyx_L1221:;

  /* "EMTree.pyx":5303
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetBBEC1yearUp"
 *         self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetBBEC1yearUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetBBEC1yearUp"));

  /* "EMTree.pyx":5305
 *         self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetBBEC1yearUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1yearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1225_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1225_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5306
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1yearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__409, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5305
 *         self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetBBEC1yearUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1yearUp")
 */
    goto __pyx_L1224;
  }

  /* "EMTree.pyx":5309
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1yearUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetEC2Down"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1yearUp_value)));
  }
  __pyx_L1224:;

  /* "EMTree.pyx":5312
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetEC2Down"
 *         self.type1_pfMet_shiftedPhi_JetEC2Down_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEC2Down")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2Down_branch and "type1_pfMet_shiftedPhi_JetEC2Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2Down_branch and "type1_pfMet_shiftedPhi_JetEC2Down":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetEC2Down_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetEC2Down"));

  /* "EMTree.pyx":5314
 *         self.type1_pfMet_shiftedPhi_JetEC2Down_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEC2Down")
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2Down_branch and "type1_pfMet_shiftedPhi_JetEC2Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2Down_branch and "type1_pfMet_shiftedPhi_JetEC2Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2Down")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetEC2Down_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1228_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1228_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5315
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2Down_branch and "type1_pfMet_shiftedPhi_JetEC2Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2Down_branch and "type1_pfMet_shiftedPhi_JetEC2Down":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2Down")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__410, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5314
 *         self.type1_pfMet_shiftedPhi_JetEC2Down_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEC2Down")
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2Down_branch and "type1_pfMet_shiftedPhi_JetEC2Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2Down_branch and "type1_pfMet_shiftedPhi_JetEC2Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2Down")
 */
    goto __pyx_L1227;
  }

  /* "EMTree.pyx":5318
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2Down")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetEC2Down_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetEC2Down_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetEC2Up"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetEC2Down_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetEC2Down_value)));
  }
  __pyx_L1227:;

  /* "EMTree.pyx":5321
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetEC2Up"
 *         self.type1_pfMet_shiftedPhi_JetEC2Up_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEC2Up")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2Up_branch and "type1_pfMet_shiftedPhi_JetEC2Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2Up_branch and "type1_pfMet_shiftedPhi_JetEC2Up":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetEC2Up_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetEC2Up"));

  /* "EMTree.pyx":5323
 *         self.type1_pfMet_shiftedPhi_JetEC2Up_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEC2Up")
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2Up_branch and "type1_pfMet_shiftedPhi_JetEC2Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2Up_branch and "type1_pfMet_shiftedPhi_JetEC2Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2Up")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetEC2Up_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1231_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1231_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5324
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2Up_branch and "type1_pfMet_shiftedPhi_JetEC2Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2Up_branch and "type1_pfMet_shiftedPhi_JetEC2Up":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2Up")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5324, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5324, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__411, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5324, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5323
 *         self.type1_pfMet_shiftedPhi_JetEC2Up_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEC2Up")
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2Up_branch and "type1_pfMet_shiftedPhi_JetEC2Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2Up_branch and "type1_pfMet_shiftedPhi_JetEC2Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2Up")
 */
    goto __pyx_L1230;
  }

  /* "EMTree.pyx":5327
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2Up")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetEC2Up_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetEC2Up_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetEC2yearDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetEC2Up_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetEC2Up_value)));
  }
  __pyx_L1230:;

  /* "EMTree.pyx":5330
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetEC2yearDown"
 *         self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEC2yearDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch and "type1_pfMet_shiftedPhi_JetEC2yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch and "type1_pfMet_shiftedPhi_JetEC2yearDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetEC2yearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetEC2yearDown"));

  /* "EMTree.pyx":5332
 *         self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEC2yearDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch and "type1_pfMet_shiftedPhi_JetEC2yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch and "type1_pfMet_shiftedPhi_JetEC2yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2yearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetEC2yearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1234_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1234_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5333
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch and "type1_pfMet_shiftedPhi_JetEC2yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch and "type1_pfMet_shiftedPhi_JetEC2yearDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2yearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5333, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5333, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__412, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5333, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5332
 *         self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEC2yearDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch and "type1_pfMet_shiftedPhi_JetEC2yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch and "type1_pfMet_shiftedPhi_JetEC2yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2yearDown")
 */
    goto __pyx_L1233;
  }

  /* "EMTree.pyx":5336
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2yearDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetEC2yearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetEC2yearUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetEC2yearDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetEC2yearDown_value)));
  }
  __pyx_L1233:;

  /* "EMTree.pyx":5339
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetEC2yearUp"
 *         self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEC2yearUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch and "type1_pfMet_shiftedPhi_JetEC2yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch and "type1_pfMet_shiftedPhi_JetEC2yearUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetEC2yearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetEC2yearUp"));

  /* "EMTree.pyx":5341
 *         self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEC2yearUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch and "type1_pfMet_shiftedPhi_JetEC2yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch and "type1_pfMet_shiftedPhi_JetEC2yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2yearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetEC2yearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1237_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1237_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5342
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch and "type1_pfMet_shiftedPhi_JetEC2yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch and "type1_pfMet_shiftedPhi_JetEC2yearUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2yearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__413, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5341
 *         self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEC2yearUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch and "type1_pfMet_shiftedPhi_JetEC2yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch and "type1_pfMet_shiftedPhi_JetEC2yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2yearUp")
 */
    goto __pyx_L1236;
  }

  /* "EMTree.pyx":5345
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2yearUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetEC2yearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetEnDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetEC2yearUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetEC2yearUp_value)));
  }
  __pyx_L1236:;

  /* "EMTree.pyx":5348
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetEnDown"
 *         self.type1_pfMet_shiftedPhi_JetEnDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEnDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetEnDown_branch and "type1_pfMet_shiftedPhi_JetEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEnDown_branch and "type1_pfMet_shiftedPhi_JetEnDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetEnDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetEnDown"));

  /* "EMTree.pyx":5350
 *         self.type1_pfMet_shiftedPhi_JetEnDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEnDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetEnDown_branch and "type1_pfMet_shiftedPhi_JetEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEnDown_branch and "type1_pfMet_shiftedPhi_JetEnDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEnDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEnDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetEnDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1240_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1240_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5351
 *         #if not self.type1_pfMet_shiftedPhi_JetEnDown_branch and "type1_pfMet_shiftedPhi_JetEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEnDown_branch and "type1_pfMet_shiftedPhi_JetEnDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEnDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEnDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5351, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5351, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__414, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5351, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5350
 *         self.type1_pfMet_shiftedPhi_JetEnDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEnDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetEnDown_branch and "type1_pfMet_shiftedPhi_JetEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEnDown_branch and "type1_pfMet_shiftedPhi_JetEnDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEnDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEnDown")
 */
    goto __pyx_L1239;
  }

  /* "EMTree.pyx":5354
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEnDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetEnDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetEnDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetEnUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetEnDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetEnDown_value)));
  }
  __pyx_L1239:;

  /* "EMTree.pyx":5357
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetEnUp"
 *         self.type1_pfMet_shiftedPhi_JetEnUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEnUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetEnUp_branch and "type1_pfMet_shiftedPhi_JetEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEnUp_branch and "type1_pfMet_shiftedPhi_JetEnUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetEnUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetEnUp"));

  /* "EMTree.pyx":5359
 *         self.type1_pfMet_shiftedPhi_JetEnUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEnUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetEnUp_branch and "type1_pfMet_shiftedPhi_JetEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEnUp_branch and "type1_pfMet_shiftedPhi_JetEnUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEnUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEnUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetEnUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1243_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1243_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5360
 *         #if not self.type1_pfMet_shiftedPhi_JetEnUp_branch and "type1_pfMet_shiftedPhi_JetEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEnUp_branch and "type1_pfMet_shiftedPhi_JetEnUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEnUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEnUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5360, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5360, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__415, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5360, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5359
 *         self.type1_pfMet_shiftedPhi_JetEnUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetEnUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetEnUp_branch and "type1_pfMet_shiftedPhi_JetEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEnUp_branch and "type1_pfMet_shiftedPhi_JetEnUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEnUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEnUp")
 */
    goto __pyx_L1242;
  }

  /* "EMTree.pyx":5363
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEnUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetEnUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetEnUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetFlavorQCDDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetEnUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetEnUp_value)));
  }
  __pyx_L1242:;

  /* "EMTree.pyx":5366
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetFlavorQCDDown"
 *         self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetFlavorQCDDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetFlavorQCDDown"));

  /* "EMTree.pyx":5368
 *         self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetFlavorQCDDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetFlavorQCDDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1246_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1246_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5369
 *         #if not self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetFlavorQCDDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5369, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5369, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__416, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5369, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5368
 *         self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetFlavorQCDDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetFlavorQCDDown")
 */
    goto __pyx_L1245;
  }

  /* "EMTree.pyx":5372
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetFlavorQCDDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetFlavorQCDUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetFlavorQCDDown_value)));
  }
  __pyx_L1245:;

  /* "EMTree.pyx":5375
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetFlavorQCDUp"
 *         self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetFlavorQCDUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetFlavorQCDUp"));

  /* "EMTree.pyx":5377
 *         self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetFlavorQCDUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetFlavorQCDUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1249_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1249_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5378
 *         #if not self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetFlavorQCDUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5378, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5378, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__417, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5378, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5377
 *         self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetFlavorQCDUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetFlavorQCDUp")
 */
    goto __pyx_L1248;
  }

  /* "EMTree.pyx":5381
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetFlavorQCDUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetHFDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetFlavorQCDUp_value)));
  }
  __pyx_L1248:;

  /* "EMTree.pyx":5384
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetHFDown"
 *         self.type1_pfMet_shiftedPhi_JetHFDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetHFDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetHFDown_branch and "type1_pfMet_shiftedPhi_JetHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFDown_branch and "type1_pfMet_shiftedPhi_JetHFDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetHFDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetHFDown"));

  /* "EMTree.pyx":5386
 *         self.type1_pfMet_shiftedPhi_JetHFDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetHFDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetHFDown_branch and "type1_pfMet_shiftedPhi_JetHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFDown_branch and "type1_pfMet_shiftedPhi_JetHFDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetHFDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1252_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1252_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5387
 *         #if not self.type1_pfMet_shiftedPhi_JetHFDown_branch and "type1_pfMet_shiftedPhi_JetHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFDown_branch and "type1_pfMet_shiftedPhi_JetHFDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__418, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5386
 *         self.type1_pfMet_shiftedPhi_JetHFDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetHFDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetHFDown_branch and "type1_pfMet_shiftedPhi_JetHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFDown_branch and "type1_pfMet_shiftedPhi_JetHFDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFDown")
 */
    goto __pyx_L1251;
  }

  /* "EMTree.pyx":5390
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetHFDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetHFDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetHFUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetHFDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetHFDown_value)));
  }
  __pyx_L1251:;

  /* "EMTree.pyx":5393
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetHFUp"
 *         self.type1_pfMet_shiftedPhi_JetHFUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetHFUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetHFUp_branch and "type1_pfMet_shiftedPhi_JetHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFUp_branch and "type1_pfMet_shiftedPhi_JetHFUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetHFUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetHFUp"));

  /* "EMTree.pyx":5395
 *         self.type1_pfMet_shiftedPhi_JetHFUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetHFUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetHFUp_branch and "type1_pfMet_shiftedPhi_JetHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFUp_branch and "type1_pfMet_shiftedPhi_JetHFUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetHFUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1255_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1255_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5396
 *         #if not self.type1_pfMet_shiftedPhi_JetHFUp_branch and "type1_pfMet_shiftedPhi_JetHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFUp_branch and "type1_pfMet_shiftedPhi_JetHFUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5396, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5396, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__419, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5396, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5395
 *         self.type1_pfMet_shiftedPhi_JetHFUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetHFUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetHFUp_branch and "type1_pfMet_shiftedPhi_JetHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFUp_branch and "type1_pfMet_shiftedPhi_JetHFUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFUp")
 */
    goto __pyx_L1254;
  }

  /* "EMTree.pyx":5399
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetHFUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetHFUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetHFyearDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetHFUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetHFUp_value)));
  }
  __pyx_L1254:;

  /* "EMTree.pyx":5402
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetHFyearDown"
 *         self.type1_pfMet_shiftedPhi_JetHFyearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetHFyearDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetHFyearDown_branch and "type1_pfMet_shiftedPhi_JetHFyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFyearDown_branch and "type1_pfMet_shiftedPhi_JetHFyearDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetHFyearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetHFyearDown"));

  /* "EMTree.pyx":5404
 *         self.type1_pfMet_shiftedPhi_JetHFyearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetHFyearDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetHFyearDown_branch and "type1_pfMet_shiftedPhi_JetHFyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFyearDown_branch and "type1_pfMet_shiftedPhi_JetHFyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFyearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetHFyearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1258_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1258_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5405
 *         #if not self.type1_pfMet_shiftedPhi_JetHFyearDown_branch and "type1_pfMet_shiftedPhi_JetHFyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFyearDown_branch and "type1_pfMet_shiftedPhi_JetHFyearDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFyearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5405, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5405, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__420, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5405, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5404
 *         self.type1_pfMet_shiftedPhi_JetHFyearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetHFyearDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetHFyearDown_branch and "type1_pfMet_shiftedPhi_JetHFyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFyearDown_branch and "type1_pfMet_shiftedPhi_JetHFyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFyearDown")
 */
    goto __pyx_L1257;
  }

  /* "EMTree.pyx":5408
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFyearDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetHFyearDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetHFyearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetHFyearUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetHFyearDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetHFyearDown_value)));
  }
  __pyx_L1257:;

  /* "EMTree.pyx":5411
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetHFyearUp"
 *         self.type1_pfMet_shiftedPhi_JetHFyearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetHFyearUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetHFyearUp_branch and "type1_pfMet_shiftedPhi_JetHFyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFyearUp_branch and "type1_pfMet_shiftedPhi_JetHFyearUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetHFyearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetHFyearUp"));

  /* "EMTree.pyx":5413
 *         self.type1_pfMet_shiftedPhi_JetHFyearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetHFyearUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetHFyearUp_branch and "type1_pfMet_shiftedPhi_JetHFyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFyearUp_branch and "type1_pfMet_shiftedPhi_JetHFyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFyearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetHFyearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1261_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1261_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5414
 *         #if not self.type1_pfMet_shiftedPhi_JetHFyearUp_branch and "type1_pfMet_shiftedPhi_JetHFyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFyearUp_branch and "type1_pfMet_shiftedPhi_JetHFyearUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFyearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5414, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5414, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__421, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5414, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5413
 *         self.type1_pfMet_shiftedPhi_JetHFyearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetHFyearUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetHFyearUp_branch and "type1_pfMet_shiftedPhi_JetHFyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFyearUp_branch and "type1_pfMet_shiftedPhi_JetHFyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFyearUp")
 */
    goto __pyx_L1260;
  }

  /* "EMTree.pyx":5417
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFyearUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetHFyearUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetHFyearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetRelativeBalDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetHFyearUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetHFyearUp_value)));
  }
  __pyx_L1260:;

  /* "EMTree.pyx":5420
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetRelativeBalDown"
 *         self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetRelativeBalDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch and "type1_pfMet_shiftedPhi_JetRelativeBalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch and "type1_pfMet_shiftedPhi_JetRelativeBalDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeBalDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetRelativeBalDown"));

  /* "EMTree.pyx":5422
 *         self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetRelativeBalDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch and "type1_pfMet_shiftedPhi_JetRelativeBalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch and "type1_pfMet_shiftedPhi_JetRelativeBalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeBalDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeBalDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1264_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1264_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5423
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch and "type1_pfMet_shiftedPhi_JetRelativeBalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch and "type1_pfMet_shiftedPhi_JetRelativeBalDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeBalDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5423, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5423, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__422, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5423, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5422
 *         self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetRelativeBalDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch and "type1_pfMet_shiftedPhi_JetRelativeBalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch and "type1_pfMet_shiftedPhi_JetRelativeBalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeBalDown")
 */
    goto __pyx_L1263;
  }

  /* "EMTree.pyx":5426
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeBalDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetRelativeBalDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetRelativeBalUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeBalDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeBalDown_value)));
  }
  __pyx_L1263:;

  /* "EMTree.pyx":5429
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetRelativeBalUp"
 *         self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetRelativeBalUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch and "type1_pfMet_shiftedPhi_JetRelativeBalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch and "type1_pfMet_shiftedPhi_JetRelativeBalUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeBalUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetRelativeBalUp"));

  /* "EMTree.pyx":5431
 *         self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetRelativeBalUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch and "type1_pfMet_shiftedPhi_JetRelativeBalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch and "type1_pfMet_shiftedPhi_JetRelativeBalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeBalUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeBalUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1267_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1267_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5432
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch and "type1_pfMet_shiftedPhi_JetRelativeBalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch and "type1_pfMet_shiftedPhi_JetRelativeBalUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeBalUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5432, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5432, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__423, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5432, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5431
 *         self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetRelativeBalUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch and "type1_pfMet_shiftedPhi_JetRelativeBalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch and "type1_pfMet_shiftedPhi_JetRelativeBalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeBalUp")
 */
    goto __pyx_L1266;
  }

  /* "EMTree.pyx":5435
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeBalUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetRelativeBalUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetRelativeSampleDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeBalUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeBalUp_value)));
  }
  __pyx_L1266:;

  /* "EMTree.pyx":5438
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetRelativeSampleDown"
 *         self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetRelativeSampleDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetRelativeSampleDown"));

  /* "EMTree.pyx":5440
 *         self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetRelativeSampleDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeSampleDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1270_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1270_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5441
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeSampleDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5441, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5441, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__424, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5441, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5440
 *         self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetRelativeSampleDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeSampleDown")
 */
    goto __pyx_L1269;
  }

  /* "EMTree.pyx":5444
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeSampleDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetRelativeSampleUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeSampleDown_value)));
  }
  __pyx_L1269:;

  /* "EMTree.pyx":5447
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetRelativeSampleUp"
 *         self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetRelativeSampleUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetRelativeSampleUp"));

  /* "EMTree.pyx":5449
 *         self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetRelativeSampleUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeSampleUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1273_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1273_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5450
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeSampleUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5450, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5450, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__425, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5450, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5449
 *         self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetRelativeSampleUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeSampleUp")
 */
    goto __pyx_L1272;
  }

  /* "EMTree.pyx":5453
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeSampleUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetResDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeSampleUp_value)));
  }
  __pyx_L1272:;

  /* "EMTree.pyx":5456
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetResDown"
 *         self.type1_pfMet_shiftedPhi_JetResDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetResDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetResDown_branch and "type1_pfMet_shiftedPhi_JetResDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetResDown_branch and "type1_pfMet_shiftedPhi_JetResDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetResDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetResDown"));

  /* "EMTree.pyx":5458
 *         self.type1_pfMet_shiftedPhi_JetResDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetResDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetResDown_branch and "type1_pfMet_shiftedPhi_JetResDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetResDown_branch and "type1_pfMet_shiftedPhi_JetResDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetResDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetResDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetResDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1276_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1276_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5459
 *         #if not self.type1_pfMet_shiftedPhi_JetResDown_branch and "type1_pfMet_shiftedPhi_JetResDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetResDown_branch and "type1_pfMet_shiftedPhi_JetResDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetResDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetResDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5459, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5459, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__426, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5459, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5458
 *         self.type1_pfMet_shiftedPhi_JetResDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetResDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetResDown_branch and "type1_pfMet_shiftedPhi_JetResDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetResDown_branch and "type1_pfMet_shiftedPhi_JetResDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetResDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetResDown")
 */
    goto __pyx_L1275;
  }

  /* "EMTree.pyx":5462
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetResDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetResDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetResDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetResUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetResDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetResDown_value)));
  }
  __pyx_L1275:;

  /* "EMTree.pyx":5465
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetResUp"
 *         self.type1_pfMet_shiftedPhi_JetResUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetResUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetResUp_branch and "type1_pfMet_shiftedPhi_JetResUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetResUp_branch and "type1_pfMet_shiftedPhi_JetResUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetResUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetResUp"));

  /* "EMTree.pyx":5467
 *         self.type1_pfMet_shiftedPhi_JetResUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetResUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetResUp_branch and "type1_pfMet_shiftedPhi_JetResUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetResUp_branch and "type1_pfMet_shiftedPhi_JetResUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetResUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetResUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetResUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1279_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1279_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5468
 *         #if not self.type1_pfMet_shiftedPhi_JetResUp_branch and "type1_pfMet_shiftedPhi_JetResUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetResUp_branch and "type1_pfMet_shiftedPhi_JetResUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetResUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetResUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5468, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5468, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__427, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5468, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5467
 *         self.type1_pfMet_shiftedPhi_JetResUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetResUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetResUp_branch and "type1_pfMet_shiftedPhi_JetResUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetResUp_branch and "type1_pfMet_shiftedPhi_JetResUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetResUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetResUp")
 */
    goto __pyx_L1278;
  }

  /* "EMTree.pyx":5471
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetResUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetResUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetResUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetTotalDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetResUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetResUp_value)));
  }
  __pyx_L1278:;

  /* "EMTree.pyx":5474
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetTotalDown"
 *         self.type1_pfMet_shiftedPhi_JetTotalDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetTotalDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetTotalDown_branch and "type1_pfMet_shiftedPhi_JetTotalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetTotalDown_branch and "type1_pfMet_shiftedPhi_JetTotalDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetTotalDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetTotalDown"));

  /* "EMTree.pyx":5476
 *         self.type1_pfMet_shiftedPhi_JetTotalDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetTotalDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetTotalDown_branch and "type1_pfMet_shiftedPhi_JetTotalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetTotalDown_branch and "type1_pfMet_shiftedPhi_JetTotalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetTotalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetTotalDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetTotalDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1282_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1282_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5477
 *         #if not self.type1_pfMet_shiftedPhi_JetTotalDown_branch and "type1_pfMet_shiftedPhi_JetTotalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetTotalDown_branch and "type1_pfMet_shiftedPhi_JetTotalDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetTotalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetTotalDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5477, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5477, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__428, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5477, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5476
 *         self.type1_pfMet_shiftedPhi_JetTotalDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetTotalDown")
 *         #if not self.type1_pfMet_shiftedPhi_JetTotalDown_branch and "type1_pfMet_shiftedPhi_JetTotalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetTotalDown_branch and "type1_pfMet_shiftedPhi_JetTotalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetTotalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetTotalDown")
 */
    goto __pyx_L1281;
  }

  /* "EMTree.pyx":5480
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetTotalDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetTotalDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetTotalDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetTotalUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetTotalDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetTotalDown_value)));
  }
  __pyx_L1281:;

  /* "EMTree.pyx":5483
 * 
 *         #print "making type1_pfMet_shiftedPhi_JetTotalUp"
 *         self.type1_pfMet_shiftedPhi_JetTotalUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetTotalUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_JetTotalUp_branch and "type1_pfMet_shiftedPhi_JetTotalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetTotalUp_branch and "type1_pfMet_shiftedPhi_JetTotalUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_JetTotalUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_JetTotalUp"));

  /* "EMTree.pyx":5485
 *         self.type1_pfMet_shiftedPhi_JetTotalUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetTotalUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetTotalUp_branch and "type1_pfMet_shiftedPhi_JetTotalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetTotalUp_branch and "type1_pfMet_shiftedPhi_JetTotalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetTotalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetTotalUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_JetTotalUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1285_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1285_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5486
 *         #if not self.type1_pfMet_shiftedPhi_JetTotalUp_branch and "type1_pfMet_shiftedPhi_JetTotalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetTotalUp_branch and "type1_pfMet_shiftedPhi_JetTotalUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetTotalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetTotalUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5486, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5486, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__429, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5486, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5485
 *         self.type1_pfMet_shiftedPhi_JetTotalUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_JetTotalUp")
 *         #if not self.type1_pfMet_shiftedPhi_JetTotalUp_branch and "type1_pfMet_shiftedPhi_JetTotalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetTotalUp_branch and "type1_pfMet_shiftedPhi_JetTotalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetTotalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetTotalUp")
 */
    goto __pyx_L1284;
  }

  /* "EMTree.pyx":5489
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetTotalUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_JetTotalUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_JetTotalUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_UesCHARGEDDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_JetTotalUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_JetTotalUp_value)));
  }
  __pyx_L1284:;

  /* "EMTree.pyx":5492
 * 
 *         #print "making type1_pfMet_shiftedPhi_UesCHARGEDDown"
 *         self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesCHARGEDDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch and "type1_pfMet_shiftedPhi_UesCHARGEDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch and "type1_pfMet_shiftedPhi_UesCHARGEDDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_UesCHARGEDDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_UesCHARGEDDown"));

  /* "EMTree.pyx":5494
 *         self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesCHARGEDDown")
 *         #if not self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch and "type1_pfMet_shiftedPhi_UesCHARGEDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch and "type1_pfMet_shiftedPhi_UesCHARGEDDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesCHARGEDDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesCHARGEDDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_UesCHARGEDDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1288_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1288_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5495
 *         #if not self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch and "type1_pfMet_shiftedPhi_UesCHARGEDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch and "type1_pfMet_shiftedPhi_UesCHARGEDDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesCHARGEDDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesCHARGEDDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5495, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5495, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__430, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5495, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5494
 *         self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesCHARGEDDown")
 *         #if not self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch and "type1_pfMet_shiftedPhi_UesCHARGEDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch and "type1_pfMet_shiftedPhi_UesCHARGEDDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesCHARGEDDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesCHARGEDDown")
 */
    goto __pyx_L1287;
  }

  /* "EMTree.pyx":5498
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesCHARGEDDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_UesCHARGEDDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_UesCHARGEDUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_UesCHARGEDDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_UesCHARGEDDown_value)));
  }
  __pyx_L1287:;

  /* "EMTree.pyx":5501
 * 
 *         #print "making type1_pfMet_shiftedPhi_UesCHARGEDUp"
 *         self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesCHARGEDUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch and "type1_pfMet_shiftedPhi_UesCHARGEDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch and "type1_pfMet_shiftedPhi_UesCHARGEDUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_UesCHARGEDUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_UesCHARGEDUp"));

  /* "EMTree.pyx":5503
 *         self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesCHARGEDUp")
 *         #if not self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch and "type1_pfMet_shiftedPhi_UesCHARGEDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch and "type1_pfMet_shiftedPhi_UesCHARGEDUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesCHARGEDUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesCHARGEDUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_UesCHARGEDUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1291_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1291_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5504
 *         #if not self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch and "type1_pfMet_shiftedPhi_UesCHARGEDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch and "type1_pfMet_shiftedPhi_UesCHARGEDUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesCHARGEDUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesCHARGEDUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__431, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5503
 *         self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesCHARGEDUp")
 *         #if not self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch and "type1_pfMet_shiftedPhi_UesCHARGEDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch and "type1_pfMet_shiftedPhi_UesCHARGEDUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesCHARGEDUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesCHARGEDUp")
 */
    goto __pyx_L1290;
  }

  /* "EMTree.pyx":5507
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesCHARGEDUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_UesCHARGEDUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_UesECALDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_UesCHARGEDUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_UesCHARGEDUp_value)));
  }
  __pyx_L1290:;

  /* "EMTree.pyx":5510
 * 
 *         #print "making type1_pfMet_shiftedPhi_UesECALDown"
 *         self.type1_pfMet_shiftedPhi_UesECALDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesECALDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_UesECALDown_branch and "type1_pfMet_shiftedPhi_UesECALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesECALDown_branch and "type1_pfMet_shiftedPhi_UesECALDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_UesECALDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_UesECALDown"));

  /* "EMTree.pyx":5512
 *         self.type1_pfMet_shiftedPhi_UesECALDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesECALDown")
 *         #if not self.type1_pfMet_shiftedPhi_UesECALDown_branch and "type1_pfMet_shiftedPhi_UesECALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesECALDown_branch and "type1_pfMet_shiftedPhi_UesECALDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesECALDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesECALDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_UesECALDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1294_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1294_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5513
 *         #if not self.type1_pfMet_shiftedPhi_UesECALDown_branch and "type1_pfMet_shiftedPhi_UesECALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesECALDown_branch and "type1_pfMet_shiftedPhi_UesECALDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesECALDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesECALDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5513, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5513, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__432, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5513, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5512
 *         self.type1_pfMet_shiftedPhi_UesECALDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesECALDown")
 *         #if not self.type1_pfMet_shiftedPhi_UesECALDown_branch and "type1_pfMet_shiftedPhi_UesECALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesECALDown_branch and "type1_pfMet_shiftedPhi_UesECALDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesECALDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesECALDown")
 */
    goto __pyx_L1293;
  }

  /* "EMTree.pyx":5516
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesECALDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_UesECALDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_UesECALDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_UesECALUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_UesECALDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_UesECALDown_value)));
  }
  __pyx_L1293:;

  /* "EMTree.pyx":5519
 * 
 *         #print "making type1_pfMet_shiftedPhi_UesECALUp"
 *         self.type1_pfMet_shiftedPhi_UesECALUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesECALUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_UesECALUp_branch and "type1_pfMet_shiftedPhi_UesECALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesECALUp_branch and "type1_pfMet_shiftedPhi_UesECALUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_UesECALUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_UesECALUp"));

  /* "EMTree.pyx":5521
 *         self.type1_pfMet_shiftedPhi_UesECALUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesECALUp")
 *         #if not self.type1_pfMet_shiftedPhi_UesECALUp_branch and "type1_pfMet_shiftedPhi_UesECALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesECALUp_branch and "type1_pfMet_shiftedPhi_UesECALUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesECALUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesECALUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_UesECALUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1297_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1297_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5522
 *         #if not self.type1_pfMet_shiftedPhi_UesECALUp_branch and "type1_pfMet_shiftedPhi_UesECALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesECALUp_branch and "type1_pfMet_shiftedPhi_UesECALUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesECALUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesECALUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5522, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5522, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__433, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5522, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5521
 *         self.type1_pfMet_shiftedPhi_UesECALUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesECALUp")
 *         #if not self.type1_pfMet_shiftedPhi_UesECALUp_branch and "type1_pfMet_shiftedPhi_UesECALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesECALUp_branch and "type1_pfMet_shiftedPhi_UesECALUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesECALUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesECALUp")
 */
    goto __pyx_L1296;
  }

  /* "EMTree.pyx":5525
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesECALUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_UesECALUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_UesECALUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_UesHCALDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_UesECALUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_UesECALUp_value)));
  }
  __pyx_L1296:;

  /* "EMTree.pyx":5528
 * 
 *         #print "making type1_pfMet_shiftedPhi_UesHCALDown"
 *         self.type1_pfMet_shiftedPhi_UesHCALDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesHCALDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_UesHCALDown_branch and "type1_pfMet_shiftedPhi_UesHCALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHCALDown_branch and "type1_pfMet_shiftedPhi_UesHCALDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_UesHCALDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_UesHCALDown"));

  /* "EMTree.pyx":5530
 *         self.type1_pfMet_shiftedPhi_UesHCALDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesHCALDown")
 *         #if not self.type1_pfMet_shiftedPhi_UesHCALDown_branch and "type1_pfMet_shiftedPhi_UesHCALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHCALDown_branch and "type1_pfMet_shiftedPhi_UesHCALDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHCALDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHCALDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_UesHCALDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1300_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1300_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5531
 *         #if not self.type1_pfMet_shiftedPhi_UesHCALDown_branch and "type1_pfMet_shiftedPhi_UesHCALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHCALDown_branch and "type1_pfMet_shiftedPhi_UesHCALDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHCALDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHCALDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5531, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5531, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__434, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5531, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5530
 *         self.type1_pfMet_shiftedPhi_UesHCALDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesHCALDown")
 *         #if not self.type1_pfMet_shiftedPhi_UesHCALDown_branch and "type1_pfMet_shiftedPhi_UesHCALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHCALDown_branch and "type1_pfMet_shiftedPhi_UesHCALDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHCALDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHCALDown")
 */
    goto __pyx_L1299;
  }

  /* "EMTree.pyx":5534
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHCALDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_UesHCALDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_UesHCALDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_UesHCALUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_UesHCALDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_UesHCALDown_value)));
  }
  __pyx_L1299:;

  /* "EMTree.pyx":5537
 * 
 *         #print "making type1_pfMet_shiftedPhi_UesHCALUp"
 *         self.type1_pfMet_shiftedPhi_UesHCALUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesHCALUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_UesHCALUp_branch and "type1_pfMet_shiftedPhi_UesHCALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHCALUp_branch and "type1_pfMet_shiftedPhi_UesHCALUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_UesHCALUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_UesHCALUp"));

  /* "EMTree.pyx":5539
 *         self.type1_pfMet_shiftedPhi_UesHCALUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesHCALUp")
 *         #if not self.type1_pfMet_shiftedPhi_UesHCALUp_branch and "type1_pfMet_shiftedPhi_UesHCALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHCALUp_branch and "type1_pfMet_shiftedPhi_UesHCALUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHCALUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHCALUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_UesHCALUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1303_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1303_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5540
 *         #if not self.type1_pfMet_shiftedPhi_UesHCALUp_branch and "type1_pfMet_shiftedPhi_UesHCALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHCALUp_branch and "type1_pfMet_shiftedPhi_UesHCALUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHCALUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHCALUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5540, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5540, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__435, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5540, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5539
 *         self.type1_pfMet_shiftedPhi_UesHCALUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesHCALUp")
 *         #if not self.type1_pfMet_shiftedPhi_UesHCALUp_branch and "type1_pfMet_shiftedPhi_UesHCALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHCALUp_branch and "type1_pfMet_shiftedPhi_UesHCALUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHCALUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHCALUp")
 */
    goto __pyx_L1302;
  }

  /* "EMTree.pyx":5543
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHCALUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_UesHCALUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_UesHCALUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_UesHFDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_UesHCALUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_UesHCALUp_value)));
  }
  __pyx_L1302:;

  /* "EMTree.pyx":5546
 * 
 *         #print "making type1_pfMet_shiftedPhi_UesHFDown"
 *         self.type1_pfMet_shiftedPhi_UesHFDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesHFDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_UesHFDown_branch and "type1_pfMet_shiftedPhi_UesHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHFDown_branch and "type1_pfMet_shiftedPhi_UesHFDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_UesHFDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_UesHFDown"));

  /* "EMTree.pyx":5548
 *         self.type1_pfMet_shiftedPhi_UesHFDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesHFDown")
 *         #if not self.type1_pfMet_shiftedPhi_UesHFDown_branch and "type1_pfMet_shiftedPhi_UesHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHFDown_branch and "type1_pfMet_shiftedPhi_UesHFDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHFDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHFDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_UesHFDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1306_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1306_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5549
 *         #if not self.type1_pfMet_shiftedPhi_UesHFDown_branch and "type1_pfMet_shiftedPhi_UesHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHFDown_branch and "type1_pfMet_shiftedPhi_UesHFDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHFDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHFDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5549, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5549, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__436, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5549, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5548
 *         self.type1_pfMet_shiftedPhi_UesHFDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesHFDown")
 *         #if not self.type1_pfMet_shiftedPhi_UesHFDown_branch and "type1_pfMet_shiftedPhi_UesHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHFDown_branch and "type1_pfMet_shiftedPhi_UesHFDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHFDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHFDown")
 */
    goto __pyx_L1305;
  }

  /* "EMTree.pyx":5552
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHFDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_UesHFDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_UesHFDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_UesHFUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_UesHFDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_UesHFDown_value)));
  }
  __pyx_L1305:;

  /* "EMTree.pyx":5555
 * 
 *         #print "making type1_pfMet_shiftedPhi_UesHFUp"
 *         self.type1_pfMet_shiftedPhi_UesHFUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesHFUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_UesHFUp_branch and "type1_pfMet_shiftedPhi_UesHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHFUp_branch and "type1_pfMet_shiftedPhi_UesHFUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_UesHFUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_UesHFUp"));

  /* "EMTree.pyx":5557
 *         self.type1_pfMet_shiftedPhi_UesHFUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesHFUp")
 *         #if not self.type1_pfMet_shiftedPhi_UesHFUp_branch and "type1_pfMet_shiftedPhi_UesHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHFUp_branch and "type1_pfMet_shiftedPhi_UesHFUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHFUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHFUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_UesHFUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1309_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1309_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5558
 *         #if not self.type1_pfMet_shiftedPhi_UesHFUp_branch and "type1_pfMet_shiftedPhi_UesHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHFUp_branch and "type1_pfMet_shiftedPhi_UesHFUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHFUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHFUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5558, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5558, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__437, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5558, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5557
 *         self.type1_pfMet_shiftedPhi_UesHFUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UesHFUp")
 *         #if not self.type1_pfMet_shiftedPhi_UesHFUp_branch and "type1_pfMet_shiftedPhi_UesHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHFUp_branch and "type1_pfMet_shiftedPhi_UesHFUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHFUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHFUp")
 */
    goto __pyx_L1308;
  }

  /* "EMTree.pyx":5561
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHFUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_UesHFUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_UesHFUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_UnclusteredEnDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_UesHFUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_UesHFUp_value)));
  }
  __pyx_L1308:;

  /* "EMTree.pyx":5564
 * 
 *         #print "making type1_pfMet_shiftedPhi_UnclusteredEnDown"
 *         self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UnclusteredEnDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch and "type1_pfMet_shiftedPhi_UnclusteredEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch and "type1_pfMet_shiftedPhi_UnclusteredEnDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_UnclusteredEnDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_UnclusteredEnDown"));

  /* "EMTree.pyx":5566
 *         self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UnclusteredEnDown")
 *         #if not self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch and "type1_pfMet_shiftedPhi_UnclusteredEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch and "type1_pfMet_shiftedPhi_UnclusteredEnDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UnclusteredEnDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UnclusteredEnDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_UnclusteredEnDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1312_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1312_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5567
 *         #if not self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch and "type1_pfMet_shiftedPhi_UnclusteredEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch and "type1_pfMet_shiftedPhi_UnclusteredEnDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UnclusteredEnDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UnclusteredEnDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5567, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5567, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__438, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5567, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5566
 *         self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UnclusteredEnDown")
 *         #if not self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch and "type1_pfMet_shiftedPhi_UnclusteredEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch and "type1_pfMet_shiftedPhi_UnclusteredEnDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UnclusteredEnDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UnclusteredEnDown")
 */
    goto __pyx_L1311;
  }

  /* "EMTree.pyx":5570
 *             #self.complained.add("type1_pfMet_shiftedPhi_UnclusteredEnDown")
 *         else:
 *             self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_UnclusteredEnDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPhi_UnclusteredEnUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_UnclusteredEnDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_UnclusteredEnDown_value)));
  }
  __pyx_L1311:;

  /* "EMTree.pyx":5573
 * 
 *         #print "making type1_pfMet_shiftedPhi_UnclusteredEnUp"
 *         self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UnclusteredEnUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch and "type1_pfMet_shiftedPhi_UnclusteredEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch and "type1_pfMet_shiftedPhi_UnclusteredEnUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPhi_UnclusteredEnUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPhi_UnclusteredEnUp"));

  /* "EMTree.pyx":5575
 *         self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UnclusteredEnUp")
 *         #if not self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch and "type1_pfMet_shiftedPhi_UnclusteredEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch and "type1_pfMet_shiftedPhi_UnclusteredEnUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UnclusteredEnUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UnclusteredEnUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPhi_UnclusteredEnUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1315_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1315_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5576
 *         #if not self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch and "type1_pfMet_shiftedPhi_UnclusteredEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch and "type1_pfMet_shiftedPhi_UnclusteredEnUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UnclusteredEnUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UnclusteredEnUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5576, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5576, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__439, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5576, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5575
 *         self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPhi_UnclusteredEnUp")
 *         #if not self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch and "type1_pfMet_shiftedPhi_UnclusteredEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch and "type1_pfMet_shiftedPhi_UnclusteredEnUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UnclusteredEnUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPhi_UnclusteredEnUp")
 */
    goto __pyx_L1314;
  }

  /* "EMTree.pyx":5579
 *             #self.complained.add("type1_pfMet_shiftedPhi_UnclusteredEnUp")
 *         else:
 *             self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPhi_UnclusteredEnUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JERDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPhi_UnclusteredEnUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPhi_UnclusteredEnUp_value)));
  }
  __pyx_L1314:;

  /* "EMTree.pyx":5582
 * 
 *         #print "making type1_pfMet_shiftedPt_JERDown"
 *         self.type1_pfMet_shiftedPt_JERDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JERDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JERDown_branch and "type1_pfMet_shiftedPt_JERDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JERDown_branch and "type1_pfMet_shiftedPt_JERDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JERDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JERDown"));

  /* "EMTree.pyx":5584
 *         self.type1_pfMet_shiftedPt_JERDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JERDown")
 *         #if not self.type1_pfMet_shiftedPt_JERDown_branch and "type1_pfMet_shiftedPt_JERDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JERDown_branch and "type1_pfMet_shiftedPt_JERDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JERDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JERDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JERDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1318_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1318_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5585
 *         #if not self.type1_pfMet_shiftedPt_JERDown_branch and "type1_pfMet_shiftedPt_JERDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JERDown_branch and "type1_pfMet_shiftedPt_JERDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JERDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JERDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5585, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5585, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__440, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5585, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5584
 *         self.type1_pfMet_shiftedPt_JERDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JERDown")
 *         #if not self.type1_pfMet_shiftedPt_JERDown_branch and "type1_pfMet_shiftedPt_JERDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JERDown_branch and "type1_pfMet_shiftedPt_JERDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JERDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JERDown")
 */
    goto __pyx_L1317;
  }

  /* "EMTree.pyx":5588
 *             #self.complained.add("type1_pfMet_shiftedPt_JERDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_JERDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JERDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JERUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JERDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JERDown_value)));
  }
  __pyx_L1317:;

  /* "EMTree.pyx":5591
 * 
 *         #print "making type1_pfMet_shiftedPt_JERUp"
 *         self.type1_pfMet_shiftedPt_JERUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JERUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JERUp_branch and "type1_pfMet_shiftedPt_JERUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JERUp_branch and "type1_pfMet_shiftedPt_JERUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JERUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JERUp"));

  /* "EMTree.pyx":5593
 *         self.type1_pfMet_shiftedPt_JERUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JERUp")
 *         #if not self.type1_pfMet_shiftedPt_JERUp_branch and "type1_pfMet_shiftedPt_JERUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JERUp_branch and "type1_pfMet_shiftedPt_JERUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JERUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JERUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JERUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1321_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1321_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5594
 *         #if not self.type1_pfMet_shiftedPt_JERUp_branch and "type1_pfMet_shiftedPt_JERUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JERUp_branch and "type1_pfMet_shiftedPt_JERUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JERUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JERUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5594, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5594, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__441, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5594, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5593
 *         self.type1_pfMet_shiftedPt_JERUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JERUp")
 *         #if not self.type1_pfMet_shiftedPt_JERUp_branch and "type1_pfMet_shiftedPt_JERUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JERUp_branch and "type1_pfMet_shiftedPt_JERUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JERUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JERUp")
 */
    goto __pyx_L1320;
  }

  /* "EMTree.pyx":5597
 *             #self.complained.add("type1_pfMet_shiftedPt_JERUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_JERUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JERUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetAbsoluteDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JERUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JERUp_value)));
  }
  __pyx_L1320:;

  /* "EMTree.pyx":5600
 * 
 *         #print "making type1_pfMet_shiftedPt_JetAbsoluteDown"
 *         self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetAbsoluteDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetAbsoluteDown"));

  /* "EMTree.pyx":5602
 *         self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetAbsoluteDown")
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1324_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1324_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5603
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5603, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5603, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__442, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5603, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5602
 *         self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetAbsoluteDown")
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteDown")
 */
    goto __pyx_L1323;
  }

  /* "EMTree.pyx":5606
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetAbsoluteDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetAbsoluteUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteDown_value)));
  }
  __pyx_L1323:;

  /* "EMTree.pyx":5609
 * 
 *         #print "making type1_pfMet_shiftedPt_JetAbsoluteUp"
 *         self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetAbsoluteUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetAbsoluteUp"));

  /* "EMTree.pyx":5611
 *         self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetAbsoluteUp")
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1327_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1327_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5612
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5612, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5612, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__443, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5612, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5611
 *         self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetAbsoluteUp")
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteUp")
 */
    goto __pyx_L1326;
  }

  /* "EMTree.pyx":5615
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetAbsoluteUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetAbsoluteyearDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteUp_value)));
  }
  __pyx_L1326:;

  /* "EMTree.pyx":5618
 * 
 *         #print "making type1_pfMet_shiftedPt_JetAbsoluteyearDown"
 *         self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetAbsoluteyearDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetAbsoluteyearDown"));

  /* "EMTree.pyx":5620
 *         self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetAbsoluteyearDown")
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteyearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1330_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1330_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5621
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteyearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5621, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5621, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__444, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5621, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5620
 *         self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetAbsoluteyearDown")
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteyearDown")
 */
    goto __pyx_L1329;
  }

  /* "EMTree.pyx":5624
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteyearDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetAbsoluteyearUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteyearDown_value)));
  }
  __pyx_L1329:;

  /* "EMTree.pyx":5627
 * 
 *         #print "making type1_pfMet_shiftedPt_JetAbsoluteyearUp"
 *         self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetAbsoluteyearUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetAbsoluteyearUp"));

  /* "EMTree.pyx":5629
 *         self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetAbsoluteyearUp")
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteyearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1333_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1333_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5630
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteyearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5630, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5630, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__445, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5630, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5629
 *         self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetAbsoluteyearUp")
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteyearUp")
 */
    goto __pyx_L1332;
  }

  /* "EMTree.pyx":5633
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteyearUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetBBEC1Down"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteyearUp_value)));
  }
  __pyx_L1332:;

  /* "EMTree.pyx":5636
 * 
 *         #print "making type1_pfMet_shiftedPt_JetBBEC1Down"
 *         self.type1_pfMet_shiftedPt_JetBBEC1Down_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetBBEC1Down")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1Down_branch and "type1_pfMet_shiftedPt_JetBBEC1Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1Down_branch and "type1_pfMet_shiftedPt_JetBBEC1Down":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1Down_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetBBEC1Down"));

  /* "EMTree.pyx":5638
 *         self.type1_pfMet_shiftedPt_JetBBEC1Down_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetBBEC1Down")
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1Down_branch and "type1_pfMet_shiftedPt_JetBBEC1Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1Down_branch and "type1_pfMet_shiftedPt_JetBBEC1Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1Down")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1Down_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1336_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1336_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5639
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1Down_branch and "type1_pfMet_shiftedPt_JetBBEC1Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1Down_branch and "type1_pfMet_shiftedPt_JetBBEC1Down":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1Down")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5639, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5639, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__446, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5639, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5638
 *         self.type1_pfMet_shiftedPt_JetBBEC1Down_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetBBEC1Down")
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1Down_branch and "type1_pfMet_shiftedPt_JetBBEC1Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1Down_branch and "type1_pfMet_shiftedPt_JetBBEC1Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1Down")
 */
    goto __pyx_L1335;
  }

  /* "EMTree.pyx":5642
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1Down")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetBBEC1Down_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetBBEC1Down_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetBBEC1Up"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1Down_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1Down_value)));
  }
  __pyx_L1335:;

  /* "EMTree.pyx":5645
 * 
 *         #print "making type1_pfMet_shiftedPt_JetBBEC1Up"
 *         self.type1_pfMet_shiftedPt_JetBBEC1Up_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetBBEC1Up")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1Up_branch and "type1_pfMet_shiftedPt_JetBBEC1Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1Up_branch and "type1_pfMet_shiftedPt_JetBBEC1Up":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1Up_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetBBEC1Up"));

  /* "EMTree.pyx":5647
 *         self.type1_pfMet_shiftedPt_JetBBEC1Up_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetBBEC1Up")
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1Up_branch and "type1_pfMet_shiftedPt_JetBBEC1Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1Up_branch and "type1_pfMet_shiftedPt_JetBBEC1Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1Up")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1Up_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1339_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1339_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5648
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1Up_branch and "type1_pfMet_shiftedPt_JetBBEC1Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1Up_branch and "type1_pfMet_shiftedPt_JetBBEC1Up":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1Up")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5648, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5648, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__447, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5648, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5647
 *         self.type1_pfMet_shiftedPt_JetBBEC1Up_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetBBEC1Up")
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1Up_branch and "type1_pfMet_shiftedPt_JetBBEC1Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1Up_branch and "type1_pfMet_shiftedPt_JetBBEC1Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1Up")
 */
    goto __pyx_L1338;
  }

  /* "EMTree.pyx":5651
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1Up")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetBBEC1Up_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetBBEC1Up_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetBBEC1yearDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1Up_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1Up_value)));
  }
  __pyx_L1338:;

  /* "EMTree.pyx":5654
 * 
 *         #print "making type1_pfMet_shiftedPt_JetBBEC1yearDown"
 *         self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetBBEC1yearDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPt_JetBBEC1yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPt_JetBBEC1yearDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1yearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetBBEC1yearDown"));

  /* "EMTree.pyx":5656
 *         self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetBBEC1yearDown")
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPt_JetBBEC1yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPt_JetBBEC1yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1yearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1yearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1342_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1342_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5657
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPt_JetBBEC1yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPt_JetBBEC1yearDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1yearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5657, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5657, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__448, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5657, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5656
 *         self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetBBEC1yearDown")
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPt_JetBBEC1yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPt_JetBBEC1yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1yearDown")
 */
    goto __pyx_L1341;
  }

  /* "EMTree.pyx":5660
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1yearDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetBBEC1yearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetBBEC1yearUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1yearDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1yearDown_value)));
  }
  __pyx_L1341:;

  /* "EMTree.pyx":5663
 * 
 *         #print "making type1_pfMet_shiftedPt_JetBBEC1yearUp"
 *         self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetBBEC1yearUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPt_JetBBEC1yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPt_JetBBEC1yearUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1yearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetBBEC1yearUp"));

  /* "EMTree.pyx":5665
 *         self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetBBEC1yearUp")
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPt_JetBBEC1yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPt_JetBBEC1yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1yearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1yearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1345_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1345_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5666
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPt_JetBBEC1yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPt_JetBBEC1yearUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1yearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5666, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5666, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__449, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5666, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5665
 *         self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetBBEC1yearUp")
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPt_JetBBEC1yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPt_JetBBEC1yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1yearUp")
 */
    goto __pyx_L1344;
  }

  /* "EMTree.pyx":5669
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1yearUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetBBEC1yearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetEC2Down"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1yearUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1yearUp_value)));
  }
  __pyx_L1344:;

  /* "EMTree.pyx":5672
 * 
 *         #print "making type1_pfMet_shiftedPt_JetEC2Down"
 *         self.type1_pfMet_shiftedPt_JetEC2Down_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEC2Down")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetEC2Down_branch and "type1_pfMet_shiftedPt_JetEC2Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2Down_branch and "type1_pfMet_shiftedPt_JetEC2Down":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetEC2Down_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetEC2Down"));

  /* "EMTree.pyx":5674
 *         self.type1_pfMet_shiftedPt_JetEC2Down_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEC2Down")
 *         #if not self.type1_pfMet_shiftedPt_JetEC2Down_branch and "type1_pfMet_shiftedPt_JetEC2Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2Down_branch and "type1_pfMet_shiftedPt_JetEC2Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2Down")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetEC2Down_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1348_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1348_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5675
 *         #if not self.type1_pfMet_shiftedPt_JetEC2Down_branch and "type1_pfMet_shiftedPt_JetEC2Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2Down_branch and "type1_pfMet_shiftedPt_JetEC2Down":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2Down")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5675, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5675, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__450, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5675, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5674
 *         self.type1_pfMet_shiftedPt_JetEC2Down_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEC2Down")
 *         #if not self.type1_pfMet_shiftedPt_JetEC2Down_branch and "type1_pfMet_shiftedPt_JetEC2Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2Down_branch and "type1_pfMet_shiftedPt_JetEC2Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2Down")
 */
    goto __pyx_L1347;
  }

  /* "EMTree.pyx":5678
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2Down")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetEC2Down_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetEC2Down_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetEC2Up"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetEC2Down_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetEC2Down_value)));
  }
  __pyx_L1347:;

  /* "EMTree.pyx":5681
 * 
 *         #print "making type1_pfMet_shiftedPt_JetEC2Up"
 *         self.type1_pfMet_shiftedPt_JetEC2Up_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEC2Up")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetEC2Up_branch and "type1_pfMet_shiftedPt_JetEC2Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2Up_branch and "type1_pfMet_shiftedPt_JetEC2Up":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetEC2Up_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetEC2Up"));

  /* "EMTree.pyx":5683
 *         self.type1_pfMet_shiftedPt_JetEC2Up_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEC2Up")
 *         #if not self.type1_pfMet_shiftedPt_JetEC2Up_branch and "type1_pfMet_shiftedPt_JetEC2Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2Up_branch and "type1_pfMet_shiftedPt_JetEC2Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2Up")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetEC2Up_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1351_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1351_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5684
 *         #if not self.type1_pfMet_shiftedPt_JetEC2Up_branch and "type1_pfMet_shiftedPt_JetEC2Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2Up_branch and "type1_pfMet_shiftedPt_JetEC2Up":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2Up")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5684, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5684, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__451, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5684, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5683
 *         self.type1_pfMet_shiftedPt_JetEC2Up_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEC2Up")
 *         #if not self.type1_pfMet_shiftedPt_JetEC2Up_branch and "type1_pfMet_shiftedPt_JetEC2Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2Up_branch and "type1_pfMet_shiftedPt_JetEC2Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2Up")
 */
    goto __pyx_L1350;
  }

  /* "EMTree.pyx":5687
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2Up")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetEC2Up_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetEC2Up_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetEC2yearDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetEC2Up_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetEC2Up_value)));
  }
  __pyx_L1350:;

  /* "EMTree.pyx":5690
 * 
 *         #print "making type1_pfMet_shiftedPt_JetEC2yearDown"
 *         self.type1_pfMet_shiftedPt_JetEC2yearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEC2yearDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetEC2yearDown_branch and "type1_pfMet_shiftedPt_JetEC2yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2yearDown_branch and "type1_pfMet_shiftedPt_JetEC2yearDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetEC2yearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetEC2yearDown"));

  /* "EMTree.pyx":5692
 *         self.type1_pfMet_shiftedPt_JetEC2yearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEC2yearDown")
 *         #if not self.type1_pfMet_shiftedPt_JetEC2yearDown_branch and "type1_pfMet_shiftedPt_JetEC2yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2yearDown_branch and "type1_pfMet_shiftedPt_JetEC2yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2yearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetEC2yearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1354_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1354_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5693
 *         #if not self.type1_pfMet_shiftedPt_JetEC2yearDown_branch and "type1_pfMet_shiftedPt_JetEC2yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2yearDown_branch and "type1_pfMet_shiftedPt_JetEC2yearDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2yearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5693, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5693, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__452, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5693, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5692
 *         self.type1_pfMet_shiftedPt_JetEC2yearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEC2yearDown")
 *         #if not self.type1_pfMet_shiftedPt_JetEC2yearDown_branch and "type1_pfMet_shiftedPt_JetEC2yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2yearDown_branch and "type1_pfMet_shiftedPt_JetEC2yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2yearDown")
 */
    goto __pyx_L1353;
  }

  /* "EMTree.pyx":5696
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2yearDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetEC2yearDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetEC2yearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetEC2yearUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetEC2yearDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetEC2yearDown_value)));
  }
  __pyx_L1353:;

  /* "EMTree.pyx":5699
 * 
 *         #print "making type1_pfMet_shiftedPt_JetEC2yearUp"
 *         self.type1_pfMet_shiftedPt_JetEC2yearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEC2yearUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetEC2yearUp_branch and "type1_pfMet_shiftedPt_JetEC2yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2yearUp_branch and "type1_pfMet_shiftedPt_JetEC2yearUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetEC2yearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetEC2yearUp"));

  /* "EMTree.pyx":5701
 *         self.type1_pfMet_shiftedPt_JetEC2yearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEC2yearUp")
 *         #if not self.type1_pfMet_shiftedPt_JetEC2yearUp_branch and "type1_pfMet_shiftedPt_JetEC2yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2yearUp_branch and "type1_pfMet_shiftedPt_JetEC2yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2yearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetEC2yearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1357_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1357_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5702
 *         #if not self.type1_pfMet_shiftedPt_JetEC2yearUp_branch and "type1_pfMet_shiftedPt_JetEC2yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2yearUp_branch and "type1_pfMet_shiftedPt_JetEC2yearUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2yearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__453, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5702, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5701
 *         self.type1_pfMet_shiftedPt_JetEC2yearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEC2yearUp")
 *         #if not self.type1_pfMet_shiftedPt_JetEC2yearUp_branch and "type1_pfMet_shiftedPt_JetEC2yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2yearUp_branch and "type1_pfMet_shiftedPt_JetEC2yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2yearUp")
 */
    goto __pyx_L1356;
  }

  /* "EMTree.pyx":5705
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2yearUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetEC2yearUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetEC2yearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetEnDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetEC2yearUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetEC2yearUp_value)));
  }
  __pyx_L1356:;

  /* "EMTree.pyx":5708
 * 
 *         #print "making type1_pfMet_shiftedPt_JetEnDown"
 *         self.type1_pfMet_shiftedPt_JetEnDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEnDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetEnDown_branch and "type1_pfMet_shiftedPt_JetEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEnDown_branch and "type1_pfMet_shiftedPt_JetEnDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetEnDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetEnDown"));

  /* "EMTree.pyx":5710
 *         self.type1_pfMet_shiftedPt_JetEnDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEnDown")
 *         #if not self.type1_pfMet_shiftedPt_JetEnDown_branch and "type1_pfMet_shiftedPt_JetEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEnDown_branch and "type1_pfMet_shiftedPt_JetEnDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEnDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEnDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetEnDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1360_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1360_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5711
 *         #if not self.type1_pfMet_shiftedPt_JetEnDown_branch and "type1_pfMet_shiftedPt_JetEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEnDown_branch and "type1_pfMet_shiftedPt_JetEnDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEnDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEnDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5711, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5711, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__454, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5711, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5710
 *         self.type1_pfMet_shiftedPt_JetEnDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEnDown")
 *         #if not self.type1_pfMet_shiftedPt_JetEnDown_branch and "type1_pfMet_shiftedPt_JetEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEnDown_branch and "type1_pfMet_shiftedPt_JetEnDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEnDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEnDown")
 */
    goto __pyx_L1359;
  }

  /* "EMTree.pyx":5714
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEnDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetEnDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetEnDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetEnUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetEnDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetEnDown_value)));
  }
  __pyx_L1359:;

  /* "EMTree.pyx":5717
 * 
 *         #print "making type1_pfMet_shiftedPt_JetEnUp"
 *         self.type1_pfMet_shiftedPt_JetEnUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEnUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetEnUp_branch and "type1_pfMet_shiftedPt_JetEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEnUp_branch and "type1_pfMet_shiftedPt_JetEnUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetEnUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetEnUp"));

  /* "EMTree.pyx":5719
 *         self.type1_pfMet_shiftedPt_JetEnUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEnUp")
 *         #if not self.type1_pfMet_shiftedPt_JetEnUp_branch and "type1_pfMet_shiftedPt_JetEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEnUp_branch and "type1_pfMet_shiftedPt_JetEnUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEnUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEnUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetEnUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1363_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1363_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5720
 *         #if not self.type1_pfMet_shiftedPt_JetEnUp_branch and "type1_pfMet_shiftedPt_JetEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEnUp_branch and "type1_pfMet_shiftedPt_JetEnUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEnUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEnUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5720, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5720, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__455, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5720, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5719
 *         self.type1_pfMet_shiftedPt_JetEnUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetEnUp")
 *         #if not self.type1_pfMet_shiftedPt_JetEnUp_branch and "type1_pfMet_shiftedPt_JetEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEnUp_branch and "type1_pfMet_shiftedPt_JetEnUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEnUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEnUp")
 */
    goto __pyx_L1362;
  }

  /* "EMTree.pyx":5723
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEnUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetEnUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetEnUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetFlavorQCDDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetEnUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetEnUp_value)));
  }
  __pyx_L1362:;

  /* "EMTree.pyx":5726
 * 
 *         #print "making type1_pfMet_shiftedPt_JetFlavorQCDDown"
 *         self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetFlavorQCDDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPt_JetFlavorQCDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPt_JetFlavorQCDDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetFlavorQCDDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetFlavorQCDDown"));

  /* "EMTree.pyx":5728
 *         self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetFlavorQCDDown")
 *         #if not self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPt_JetFlavorQCDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPt_JetFlavorQCDDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetFlavorQCDDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetFlavorQCDDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1366_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1366_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5729
 *         #if not self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPt_JetFlavorQCDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPt_JetFlavorQCDDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetFlavorQCDDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5729, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5729, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__456, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5729, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5728
 *         self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetFlavorQCDDown")
 *         #if not self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPt_JetFlavorQCDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPt_JetFlavorQCDDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetFlavorQCDDown")
 */
    goto __pyx_L1365;
  }

  /* "EMTree.pyx":5732
 *             #self.complained.add("type1_pfMet_shiftedPt_JetFlavorQCDDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetFlavorQCDDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetFlavorQCDUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetFlavorQCDDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetFlavorQCDDown_value)));
  }
  __pyx_L1365:;

  /* "EMTree.pyx":5735
 * 
 *         #print "making type1_pfMet_shiftedPt_JetFlavorQCDUp"
 *         self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetFlavorQCDUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPt_JetFlavorQCDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPt_JetFlavorQCDUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetFlavorQCDUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetFlavorQCDUp"));

  /* "EMTree.pyx":5737
 *         self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetFlavorQCDUp")
 *         #if not self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPt_JetFlavorQCDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPt_JetFlavorQCDUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetFlavorQCDUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetFlavorQCDUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1369_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1369_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5738
 *         #if not self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPt_JetFlavorQCDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPt_JetFlavorQCDUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetFlavorQCDUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5738, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5738, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__457, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5738, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5737
 *         self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetFlavorQCDUp")
 *         #if not self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPt_JetFlavorQCDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPt_JetFlavorQCDUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetFlavorQCDUp")
 */
    goto __pyx_L1368;
  }

  /* "EMTree.pyx":5741
 *             #self.complained.add("type1_pfMet_shiftedPt_JetFlavorQCDUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetFlavorQCDUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetHFDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetFlavorQCDUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetFlavorQCDUp_value)));
  }
  __pyx_L1368:;

  /* "EMTree.pyx":5744
 * 
 *         #print "making type1_pfMet_shiftedPt_JetHFDown"
 *         self.type1_pfMet_shiftedPt_JetHFDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetHFDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetHFDown_branch and "type1_pfMet_shiftedPt_JetHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFDown_branch and "type1_pfMet_shiftedPt_JetHFDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetHFDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetHFDown"));

  /* "EMTree.pyx":5746
 *         self.type1_pfMet_shiftedPt_JetHFDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetHFDown")
 *         #if not self.type1_pfMet_shiftedPt_JetHFDown_branch and "type1_pfMet_shiftedPt_JetHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFDown_branch and "type1_pfMet_shiftedPt_JetHFDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetHFDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1372_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1372_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5747
 *         #if not self.type1_pfMet_shiftedPt_JetHFDown_branch and "type1_pfMet_shiftedPt_JetHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFDown_branch and "type1_pfMet_shiftedPt_JetHFDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5747, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5747, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__458, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5747, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5746
 *         self.type1_pfMet_shiftedPt_JetHFDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetHFDown")
 *         #if not self.type1_pfMet_shiftedPt_JetHFDown_branch and "type1_pfMet_shiftedPt_JetHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFDown_branch and "type1_pfMet_shiftedPt_JetHFDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFDown")
 */
    goto __pyx_L1371;
  }

  /* "EMTree.pyx":5750
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetHFDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetHFDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetHFUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetHFDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetHFDown_value)));
  }
  __pyx_L1371:;

  /* "EMTree.pyx":5753
 * 
 *         #print "making type1_pfMet_shiftedPt_JetHFUp"
 *         self.type1_pfMet_shiftedPt_JetHFUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetHFUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetHFUp_branch and "type1_pfMet_shiftedPt_JetHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFUp_branch and "type1_pfMet_shiftedPt_JetHFUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetHFUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetHFUp"));

  /* "EMTree.pyx":5755
 *         self.type1_pfMet_shiftedPt_JetHFUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetHFUp")
 *         #if not self.type1_pfMet_shiftedPt_JetHFUp_branch and "type1_pfMet_shiftedPt_JetHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFUp_branch and "type1_pfMet_shiftedPt_JetHFUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetHFUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1375_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1375_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5756
 *         #if not self.type1_pfMet_shiftedPt_JetHFUp_branch and "type1_pfMet_shiftedPt_JetHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFUp_branch and "type1_pfMet_shiftedPt_JetHFUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5756, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5756, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__459, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5756, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5755
 *         self.type1_pfMet_shiftedPt_JetHFUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetHFUp")
 *         #if not self.type1_pfMet_shiftedPt_JetHFUp_branch and "type1_pfMet_shiftedPt_JetHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFUp_branch and "type1_pfMet_shiftedPt_JetHFUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFUp")
 */
    goto __pyx_L1374;
  }

  /* "EMTree.pyx":5759
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetHFUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetHFUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetHFyearDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetHFUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetHFUp_value)));
  }
  __pyx_L1374:;

  /* "EMTree.pyx":5762
 * 
 *         #print "making type1_pfMet_shiftedPt_JetHFyearDown"
 *         self.type1_pfMet_shiftedPt_JetHFyearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetHFyearDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetHFyearDown_branch and "type1_pfMet_shiftedPt_JetHFyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFyearDown_branch and "type1_pfMet_shiftedPt_JetHFyearDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetHFyearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetHFyearDown"));

  /* "EMTree.pyx":5764
 *         self.type1_pfMet_shiftedPt_JetHFyearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetHFyearDown")
 *         #if not self.type1_pfMet_shiftedPt_JetHFyearDown_branch and "type1_pfMet_shiftedPt_JetHFyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFyearDown_branch and "type1_pfMet_shiftedPt_JetHFyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFyearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetHFyearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1378_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1378_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5765
 *         #if not self.type1_pfMet_shiftedPt_JetHFyearDown_branch and "type1_pfMet_shiftedPt_JetHFyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFyearDown_branch and "type1_pfMet_shiftedPt_JetHFyearDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFyearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5765, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5765, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__460, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5765, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5764
 *         self.type1_pfMet_shiftedPt_JetHFyearDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetHFyearDown")
 *         #if not self.type1_pfMet_shiftedPt_JetHFyearDown_branch and "type1_pfMet_shiftedPt_JetHFyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFyearDown_branch and "type1_pfMet_shiftedPt_JetHFyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFyearDown")
 */
    goto __pyx_L1377;
  }

  /* "EMTree.pyx":5768
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFyearDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetHFyearDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetHFyearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetHFyearUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetHFyearDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetHFyearDown_value)));
  }
  __pyx_L1377:;

  /* "EMTree.pyx":5771
 * 
 *         #print "making type1_pfMet_shiftedPt_JetHFyearUp"
 *         self.type1_pfMet_shiftedPt_JetHFyearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetHFyearUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetHFyearUp_branch and "type1_pfMet_shiftedPt_JetHFyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFyearUp_branch and "type1_pfMet_shiftedPt_JetHFyearUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetHFyearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetHFyearUp"));

  /* "EMTree.pyx":5773
 *         self.type1_pfMet_shiftedPt_JetHFyearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetHFyearUp")
 *         #if not self.type1_pfMet_shiftedPt_JetHFyearUp_branch and "type1_pfMet_shiftedPt_JetHFyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFyearUp_branch and "type1_pfMet_shiftedPt_JetHFyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFyearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetHFyearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1381_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1381_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5774
 *         #if not self.type1_pfMet_shiftedPt_JetHFyearUp_branch and "type1_pfMet_shiftedPt_JetHFyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFyearUp_branch and "type1_pfMet_shiftedPt_JetHFyearUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFyearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5774, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5774, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__461, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5774, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5773
 *         self.type1_pfMet_shiftedPt_JetHFyearUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetHFyearUp")
 *         #if not self.type1_pfMet_shiftedPt_JetHFyearUp_branch and "type1_pfMet_shiftedPt_JetHFyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFyearUp_branch and "type1_pfMet_shiftedPt_JetHFyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFyearUp")
 */
    goto __pyx_L1380;
  }

  /* "EMTree.pyx":5777
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFyearUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetHFyearUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetHFyearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetRelativeBalDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetHFyearUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetHFyearUp_value)));
  }
  __pyx_L1380:;

  /* "EMTree.pyx":5780
 * 
 *         #print "making type1_pfMet_shiftedPt_JetRelativeBalDown"
 *         self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetRelativeBalDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch and "type1_pfMet_shiftedPt_JetRelativeBalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch and "type1_pfMet_shiftedPt_JetRelativeBalDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetRelativeBalDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetRelativeBalDown"));

  /* "EMTree.pyx":5782
 *         self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetRelativeBalDown")
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch and "type1_pfMet_shiftedPt_JetRelativeBalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch and "type1_pfMet_shiftedPt_JetRelativeBalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeBalDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetRelativeBalDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1384_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1384_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5783
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch and "type1_pfMet_shiftedPt_JetRelativeBalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch and "type1_pfMet_shiftedPt_JetRelativeBalDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeBalDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5783, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5783, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__462, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5783, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5782
 *         self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetRelativeBalDown")
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch and "type1_pfMet_shiftedPt_JetRelativeBalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch and "type1_pfMet_shiftedPt_JetRelativeBalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeBalDown")
 */
    goto __pyx_L1383;
  }

  /* "EMTree.pyx":5786
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeBalDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetRelativeBalDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetRelativeBalUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetRelativeBalDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetRelativeBalDown_value)));
  }
  __pyx_L1383:;

  /* "EMTree.pyx":5789
 * 
 *         #print "making type1_pfMet_shiftedPt_JetRelativeBalUp"
 *         self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetRelativeBalUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch and "type1_pfMet_shiftedPt_JetRelativeBalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch and "type1_pfMet_shiftedPt_JetRelativeBalUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetRelativeBalUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetRelativeBalUp"));

  /* "EMTree.pyx":5791
 *         self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetRelativeBalUp")
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch and "type1_pfMet_shiftedPt_JetRelativeBalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch and "type1_pfMet_shiftedPt_JetRelativeBalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeBalUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetRelativeBalUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1387_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1387_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5792
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch and "type1_pfMet_shiftedPt_JetRelativeBalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch and "type1_pfMet_shiftedPt_JetRelativeBalUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeBalUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5792, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5792, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__463, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5792, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5791
 *         self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetRelativeBalUp")
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch and "type1_pfMet_shiftedPt_JetRelativeBalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch and "type1_pfMet_shiftedPt_JetRelativeBalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeBalUp")
 */
    goto __pyx_L1386;
  }

  /* "EMTree.pyx":5795
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeBalUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetRelativeBalUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetRelativeSampleDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetRelativeBalUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetRelativeBalUp_value)));
  }
  __pyx_L1386:;

  /* "EMTree.pyx":5798
 * 
 *         #print "making type1_pfMet_shiftedPt_JetRelativeSampleDown"
 *         self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetRelativeSampleDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPt_JetRelativeSampleDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPt_JetRelativeSampleDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetRelativeSampleDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetRelativeSampleDown"));

  /* "EMTree.pyx":5800
 *         self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetRelativeSampleDown")
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPt_JetRelativeSampleDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPt_JetRelativeSampleDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeSampleDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetRelativeSampleDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1390_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1390_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5801
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPt_JetRelativeSampleDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPt_JetRelativeSampleDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeSampleDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5801, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5801, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__464, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5801, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5800
 *         self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetRelativeSampleDown")
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPt_JetRelativeSampleDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPt_JetRelativeSampleDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeSampleDown")
 */
    goto __pyx_L1389;
  }

  /* "EMTree.pyx":5804
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeSampleDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetRelativeSampleDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetRelativeSampleUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetRelativeSampleDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetRelativeSampleDown_value)));
  }
  __pyx_L1389:;

  /* "EMTree.pyx":5807
 * 
 *         #print "making type1_pfMet_shiftedPt_JetRelativeSampleUp"
 *         self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetRelativeSampleUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPt_JetRelativeSampleUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPt_JetRelativeSampleUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetRelativeSampleUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetRelativeSampleUp"));

  /* "EMTree.pyx":5809
 *         self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetRelativeSampleUp")
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPt_JetRelativeSampleUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPt_JetRelativeSampleUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeSampleUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetRelativeSampleUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1393_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1393_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5810
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPt_JetRelativeSampleUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPt_JetRelativeSampleUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeSampleUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5810, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5810, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__465, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5810, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5809
 *         self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetRelativeSampleUp")
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPt_JetRelativeSampleUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPt_JetRelativeSampleUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeSampleUp")
 */
    goto __pyx_L1392;
  }

  /* "EMTree.pyx":5813
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeSampleUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetRelativeSampleUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetResDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetRelativeSampleUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetRelativeSampleUp_value)));
  }
  __pyx_L1392:;

  /* "EMTree.pyx":5816
 * 
 *         #print "making type1_pfMet_shiftedPt_JetResDown"
 *         self.type1_pfMet_shiftedPt_JetResDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetResDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetResDown_branch and "type1_pfMet_shiftedPt_JetResDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetResDown_branch and "type1_pfMet_shiftedPt_JetResDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetResDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetResDown"));

  /* "EMTree.pyx":5818
 *         self.type1_pfMet_shiftedPt_JetResDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetResDown")
 *         #if not self.type1_pfMet_shiftedPt_JetResDown_branch and "type1_pfMet_shiftedPt_JetResDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetResDown_branch and "type1_pfMet_shiftedPt_JetResDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetResDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetResDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetResDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1396_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1396_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5819
 *         #if not self.type1_pfMet_shiftedPt_JetResDown_branch and "type1_pfMet_shiftedPt_JetResDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetResDown_branch and "type1_pfMet_shiftedPt_JetResDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetResDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetResDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5819, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5819, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__466, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5819, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5818
 *         self.type1_pfMet_shiftedPt_JetResDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetResDown")
 *         #if not self.type1_pfMet_shiftedPt_JetResDown_branch and "type1_pfMet_shiftedPt_JetResDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetResDown_branch and "type1_pfMet_shiftedPt_JetResDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetResDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetResDown")
 */
    goto __pyx_L1395;
  }

  /* "EMTree.pyx":5822
 *             #self.complained.add("type1_pfMet_shiftedPt_JetResDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetResDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetResDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetResUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetResDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetResDown_value)));
  }
  __pyx_L1395:;

  /* "EMTree.pyx":5825
 * 
 *         #print "making type1_pfMet_shiftedPt_JetResUp"
 *         self.type1_pfMet_shiftedPt_JetResUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetResUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetResUp_branch and "type1_pfMet_shiftedPt_JetResUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetResUp_branch and "type1_pfMet_shiftedPt_JetResUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetResUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetResUp"));

  /* "EMTree.pyx":5827
 *         self.type1_pfMet_shiftedPt_JetResUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetResUp")
 *         #if not self.type1_pfMet_shiftedPt_JetResUp_branch and "type1_pfMet_shiftedPt_JetResUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetResUp_branch and "type1_pfMet_shiftedPt_JetResUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetResUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetResUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetResUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1399_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1399_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5828
 *         #if not self.type1_pfMet_shiftedPt_JetResUp_branch and "type1_pfMet_shiftedPt_JetResUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetResUp_branch and "type1_pfMet_shiftedPt_JetResUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetResUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetResUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5828, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5828, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__467, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5828, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5827
 *         self.type1_pfMet_shiftedPt_JetResUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetResUp")
 *         #if not self.type1_pfMet_shiftedPt_JetResUp_branch and "type1_pfMet_shiftedPt_JetResUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetResUp_branch and "type1_pfMet_shiftedPt_JetResUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetResUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetResUp")
 */
    goto __pyx_L1398;
  }

  /* "EMTree.pyx":5831
 *             #self.complained.add("type1_pfMet_shiftedPt_JetResUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetResUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetResUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetTotalDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetResUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetResUp_value)));
  }
  __pyx_L1398:;

  /* "EMTree.pyx":5834
 * 
 *         #print "making type1_pfMet_shiftedPt_JetTotalDown"
 *         self.type1_pfMet_shiftedPt_JetTotalDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetTotalDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetTotalDown_branch and "type1_pfMet_shiftedPt_JetTotalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetTotalDown_branch and "type1_pfMet_shiftedPt_JetTotalDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetTotalDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetTotalDown"));

  /* "EMTree.pyx":5836
 *         self.type1_pfMet_shiftedPt_JetTotalDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetTotalDown")
 *         #if not self.type1_pfMet_shiftedPt_JetTotalDown_branch and "type1_pfMet_shiftedPt_JetTotalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetTotalDown_branch and "type1_pfMet_shiftedPt_JetTotalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetTotalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetTotalDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetTotalDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1402_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1402_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5837
 *         #if not self.type1_pfMet_shiftedPt_JetTotalDown_branch and "type1_pfMet_shiftedPt_JetTotalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetTotalDown_branch and "type1_pfMet_shiftedPt_JetTotalDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetTotalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetTotalDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5837, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5837, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__468, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5837, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5836
 *         self.type1_pfMet_shiftedPt_JetTotalDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetTotalDown")
 *         #if not self.type1_pfMet_shiftedPt_JetTotalDown_branch and "type1_pfMet_shiftedPt_JetTotalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetTotalDown_branch and "type1_pfMet_shiftedPt_JetTotalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetTotalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetTotalDown")
 */
    goto __pyx_L1401;
  }

  /* "EMTree.pyx":5840
 *             #self.complained.add("type1_pfMet_shiftedPt_JetTotalDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetTotalDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetTotalDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_JetTotalUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetTotalDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetTotalDown_value)));
  }
  __pyx_L1401:;

  /* "EMTree.pyx":5843
 * 
 *         #print "making type1_pfMet_shiftedPt_JetTotalUp"
 *         self.type1_pfMet_shiftedPt_JetTotalUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetTotalUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_JetTotalUp_branch and "type1_pfMet_shiftedPt_JetTotalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetTotalUp_branch and "type1_pfMet_shiftedPt_JetTotalUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_JetTotalUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_JetTotalUp"));

  /* "EMTree.pyx":5845
 *         self.type1_pfMet_shiftedPt_JetTotalUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetTotalUp")
 *         #if not self.type1_pfMet_shiftedPt_JetTotalUp_branch and "type1_pfMet_shiftedPt_JetTotalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetTotalUp_branch and "type1_pfMet_shiftedPt_JetTotalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetTotalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetTotalUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_JetTotalUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1405_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1405_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5846
 *         #if not self.type1_pfMet_shiftedPt_JetTotalUp_branch and "type1_pfMet_shiftedPt_JetTotalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetTotalUp_branch and "type1_pfMet_shiftedPt_JetTotalUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetTotalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetTotalUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5846, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5846, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__469, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5846, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5845
 *         self.type1_pfMet_shiftedPt_JetTotalUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_JetTotalUp")
 *         #if not self.type1_pfMet_shiftedPt_JetTotalUp_branch and "type1_pfMet_shiftedPt_JetTotalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetTotalUp_branch and "type1_pfMet_shiftedPt_JetTotalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetTotalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_JetTotalUp")
 */
    goto __pyx_L1404;
  }

  /* "EMTree.pyx":5849
 *             #self.complained.add("type1_pfMet_shiftedPt_JetTotalUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_JetTotalUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_JetTotalUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_UesCHARGEDDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_JetTotalUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_JetTotalUp_value)));
  }
  __pyx_L1404:;

  /* "EMTree.pyx":5852
 * 
 *         #print "making type1_pfMet_shiftedPt_UesCHARGEDDown"
 *         self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesCHARGEDDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch and "type1_pfMet_shiftedPt_UesCHARGEDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch and "type1_pfMet_shiftedPt_UesCHARGEDDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_UesCHARGEDDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_UesCHARGEDDown"));

  /* "EMTree.pyx":5854
 *         self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesCHARGEDDown")
 *         #if not self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch and "type1_pfMet_shiftedPt_UesCHARGEDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch and "type1_pfMet_shiftedPt_UesCHARGEDDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesCHARGEDDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UesCHARGEDDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_UesCHARGEDDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1408_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1408_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5855
 *         #if not self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch and "type1_pfMet_shiftedPt_UesCHARGEDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch and "type1_pfMet_shiftedPt_UesCHARGEDDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesCHARGEDDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UesCHARGEDDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5855, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5855, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__470, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5855, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5854
 *         self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesCHARGEDDown")
 *         #if not self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch and "type1_pfMet_shiftedPt_UesCHARGEDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch and "type1_pfMet_shiftedPt_UesCHARGEDDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesCHARGEDDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UesCHARGEDDown")
 */
    goto __pyx_L1407;
  }

  /* "EMTree.pyx":5858
 *             #self.complained.add("type1_pfMet_shiftedPt_UesCHARGEDDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_UesCHARGEDDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_UesCHARGEDUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_UesCHARGEDDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_UesCHARGEDDown_value)));
  }
  __pyx_L1407:;

  /* "EMTree.pyx":5861
 * 
 *         #print "making type1_pfMet_shiftedPt_UesCHARGEDUp"
 *         self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesCHARGEDUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch and "type1_pfMet_shiftedPt_UesCHARGEDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch and "type1_pfMet_shiftedPt_UesCHARGEDUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_UesCHARGEDUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_UesCHARGEDUp"));

  /* "EMTree.pyx":5863
 *         self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesCHARGEDUp")
 *         #if not self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch and "type1_pfMet_shiftedPt_UesCHARGEDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch and "type1_pfMet_shiftedPt_UesCHARGEDUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesCHARGEDUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UesCHARGEDUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_UesCHARGEDUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1411_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1411_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5864
 *         #if not self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch and "type1_pfMet_shiftedPt_UesCHARGEDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch and "type1_pfMet_shiftedPt_UesCHARGEDUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesCHARGEDUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UesCHARGEDUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5864, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5864, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__471, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5864, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5863
 *         self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesCHARGEDUp")
 *         #if not self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch and "type1_pfMet_shiftedPt_UesCHARGEDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch and "type1_pfMet_shiftedPt_UesCHARGEDUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesCHARGEDUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UesCHARGEDUp")
 */
    goto __pyx_L1410;
  }

  /* "EMTree.pyx":5867
 *             #self.complained.add("type1_pfMet_shiftedPt_UesCHARGEDUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_UesCHARGEDUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_UesECALDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_UesCHARGEDUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_UesCHARGEDUp_value)));
  }
  __pyx_L1410:;

  /* "EMTree.pyx":5870
 * 
 *         #print "making type1_pfMet_shiftedPt_UesECALDown"
 *         self.type1_pfMet_shiftedPt_UesECALDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesECALDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_UesECALDown_branch and "type1_pfMet_shiftedPt_UesECALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesECALDown_branch and "type1_pfMet_shiftedPt_UesECALDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_UesECALDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_UesECALDown"));

  /* "EMTree.pyx":5872
 *         self.type1_pfMet_shiftedPt_UesECALDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesECALDown")
 *         #if not self.type1_pfMet_shiftedPt_UesECALDown_branch and "type1_pfMet_shiftedPt_UesECALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesECALDown_branch and "type1_pfMet_shiftedPt_UesECALDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesECALDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UesECALDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_UesECALDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1414_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1414_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5873
 *         #if not self.type1_pfMet_shiftedPt_UesECALDown_branch and "type1_pfMet_shiftedPt_UesECALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesECALDown_branch and "type1_pfMet_shiftedPt_UesECALDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesECALDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UesECALDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5873, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5873, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__472, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5873, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5872
 *         self.type1_pfMet_shiftedPt_UesECALDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesECALDown")
 *         #if not self.type1_pfMet_shiftedPt_UesECALDown_branch and "type1_pfMet_shiftedPt_UesECALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesECALDown_branch and "type1_pfMet_shiftedPt_UesECALDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesECALDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UesECALDown")
 */
    goto __pyx_L1413;
  }

  /* "EMTree.pyx":5876
 *             #self.complained.add("type1_pfMet_shiftedPt_UesECALDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_UesECALDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_UesECALDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_UesECALUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_UesECALDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_UesECALDown_value)));
  }
  __pyx_L1413:;

  /* "EMTree.pyx":5879
 * 
 *         #print "making type1_pfMet_shiftedPt_UesECALUp"
 *         self.type1_pfMet_shiftedPt_UesECALUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesECALUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_UesECALUp_branch and "type1_pfMet_shiftedPt_UesECALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesECALUp_branch and "type1_pfMet_shiftedPt_UesECALUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_UesECALUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_UesECALUp"));

  /* "EMTree.pyx":5881
 *         self.type1_pfMet_shiftedPt_UesECALUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesECALUp")
 *         #if not self.type1_pfMet_shiftedPt_UesECALUp_branch and "type1_pfMet_shiftedPt_UesECALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesECALUp_branch and "type1_pfMet_shiftedPt_UesECALUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesECALUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UesECALUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_UesECALUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1417_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1417_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5882
 *         #if not self.type1_pfMet_shiftedPt_UesECALUp_branch and "type1_pfMet_shiftedPt_UesECALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesECALUp_branch and "type1_pfMet_shiftedPt_UesECALUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesECALUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UesECALUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5882, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5882, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__473, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5882, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5881
 *         self.type1_pfMet_shiftedPt_UesECALUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesECALUp")
 *         #if not self.type1_pfMet_shiftedPt_UesECALUp_branch and "type1_pfMet_shiftedPt_UesECALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesECALUp_branch and "type1_pfMet_shiftedPt_UesECALUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesECALUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UesECALUp")
 */
    goto __pyx_L1416;
  }

  /* "EMTree.pyx":5885
 *             #self.complained.add("type1_pfMet_shiftedPt_UesECALUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_UesECALUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_UesECALUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_UesHCALDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_UesECALUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_UesECALUp_value)));
  }
  __pyx_L1416:;

  /* "EMTree.pyx":5888
 * 
 *         #print "making type1_pfMet_shiftedPt_UesHCALDown"
 *         self.type1_pfMet_shiftedPt_UesHCALDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesHCALDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_UesHCALDown_branch and "type1_pfMet_shiftedPt_UesHCALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHCALDown_branch and "type1_pfMet_shiftedPt_UesHCALDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_UesHCALDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_UesHCALDown"));

  /* "EMTree.pyx":5890
 *         self.type1_pfMet_shiftedPt_UesHCALDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesHCALDown")
 *         #if not self.type1_pfMet_shiftedPt_UesHCALDown_branch and "type1_pfMet_shiftedPt_UesHCALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHCALDown_branch and "type1_pfMet_shiftedPt_UesHCALDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesHCALDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHCALDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_UesHCALDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1420_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1420_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5891
 *         #if not self.type1_pfMet_shiftedPt_UesHCALDown_branch and "type1_pfMet_shiftedPt_UesHCALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHCALDown_branch and "type1_pfMet_shiftedPt_UesHCALDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesHCALDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHCALDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5891, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5891, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__474, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5891, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5890
 *         self.type1_pfMet_shiftedPt_UesHCALDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesHCALDown")
 *         #if not self.type1_pfMet_shiftedPt_UesHCALDown_branch and "type1_pfMet_shiftedPt_UesHCALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHCALDown_branch and "type1_pfMet_shiftedPt_UesHCALDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesHCALDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHCALDown")
 */
    goto __pyx_L1419;
  }

  /* "EMTree.pyx":5894
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHCALDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_UesHCALDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_UesHCALDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_UesHCALUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_UesHCALDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_UesHCALDown_value)));
  }
  __pyx_L1419:;

  /* "EMTree.pyx":5897
 * 
 *         #print "making type1_pfMet_shiftedPt_UesHCALUp"
 *         self.type1_pfMet_shiftedPt_UesHCALUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesHCALUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_UesHCALUp_branch and "type1_pfMet_shiftedPt_UesHCALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHCALUp_branch and "type1_pfMet_shiftedPt_UesHCALUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_UesHCALUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_UesHCALUp"));

  /* "EMTree.pyx":5899
 *         self.type1_pfMet_shiftedPt_UesHCALUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesHCALUp")
 *         #if not self.type1_pfMet_shiftedPt_UesHCALUp_branch and "type1_pfMet_shiftedPt_UesHCALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHCALUp_branch and "type1_pfMet_shiftedPt_UesHCALUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesHCALUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHCALUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_UesHCALUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1423_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1423_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5900
 *         #if not self.type1_pfMet_shiftedPt_UesHCALUp_branch and "type1_pfMet_shiftedPt_UesHCALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHCALUp_branch and "type1_pfMet_shiftedPt_UesHCALUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesHCALUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHCALUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5900, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5900, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__475, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5900, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5899
 *         self.type1_pfMet_shiftedPt_UesHCALUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesHCALUp")
 *         #if not self.type1_pfMet_shiftedPt_UesHCALUp_branch and "type1_pfMet_shiftedPt_UesHCALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHCALUp_branch and "type1_pfMet_shiftedPt_UesHCALUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesHCALUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHCALUp")
 */
    goto __pyx_L1422;
  }

  /* "EMTree.pyx":5903
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHCALUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_UesHCALUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_UesHCALUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_UesHFDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_UesHCALUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_UesHCALUp_value)));
  }
  __pyx_L1422:;

  /* "EMTree.pyx":5906
 * 
 *         #print "making type1_pfMet_shiftedPt_UesHFDown"
 *         self.type1_pfMet_shiftedPt_UesHFDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesHFDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_UesHFDown_branch and "type1_pfMet_shiftedPt_UesHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHFDown_branch and "type1_pfMet_shiftedPt_UesHFDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_UesHFDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_UesHFDown"));

  /* "EMTree.pyx":5908
 *         self.type1_pfMet_shiftedPt_UesHFDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesHFDown")
 *         #if not self.type1_pfMet_shiftedPt_UesHFDown_branch and "type1_pfMet_shiftedPt_UesHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHFDown_branch and "type1_pfMet_shiftedPt_UesHFDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesHFDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHFDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_UesHFDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1426_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1426_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5909
 *         #if not self.type1_pfMet_shiftedPt_UesHFDown_branch and "type1_pfMet_shiftedPt_UesHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHFDown_branch and "type1_pfMet_shiftedPt_UesHFDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesHFDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHFDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5909, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5909, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__476, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5909, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5908
 *         self.type1_pfMet_shiftedPt_UesHFDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesHFDown")
 *         #if not self.type1_pfMet_shiftedPt_UesHFDown_branch and "type1_pfMet_shiftedPt_UesHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHFDown_branch and "type1_pfMet_shiftedPt_UesHFDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesHFDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHFDown")
 */
    goto __pyx_L1425;
  }

  /* "EMTree.pyx":5912
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHFDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_UesHFDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_UesHFDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_UesHFUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_UesHFDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_UesHFDown_value)));
  }
  __pyx_L1425:;

  /* "EMTree.pyx":5915
 * 
 *         #print "making type1_pfMet_shiftedPt_UesHFUp"
 *         self.type1_pfMet_shiftedPt_UesHFUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesHFUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_UesHFUp_branch and "type1_pfMet_shiftedPt_UesHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHFUp_branch and "type1_pfMet_shiftedPt_UesHFUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_UesHFUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_UesHFUp"));

  /* "EMTree.pyx":5917
 *         self.type1_pfMet_shiftedPt_UesHFUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesHFUp")
 *         #if not self.type1_pfMet_shiftedPt_UesHFUp_branch and "type1_pfMet_shiftedPt_UesHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHFUp_branch and "type1_pfMet_shiftedPt_UesHFUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesHFUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHFUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_UesHFUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1429_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1429_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5918
 *         #if not self.type1_pfMet_shiftedPt_UesHFUp_branch and "type1_pfMet_shiftedPt_UesHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHFUp_branch and "type1_pfMet_shiftedPt_UesHFUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesHFUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHFUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5918, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5918, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__477, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5918, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5917
 *         self.type1_pfMet_shiftedPt_UesHFUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UesHFUp")
 *         #if not self.type1_pfMet_shiftedPt_UesHFUp_branch and "type1_pfMet_shiftedPt_UesHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHFUp_branch and "type1_pfMet_shiftedPt_UesHFUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesHFUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHFUp")
 */
    goto __pyx_L1428;
  }

  /* "EMTree.pyx":5921
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHFUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_UesHFUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_UesHFUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_UnclusteredEnDown"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_UesHFUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_UesHFUp_value)));
  }
  __pyx_L1428:;

  /* "EMTree.pyx":5924
 * 
 *         #print "making type1_pfMet_shiftedPt_UnclusteredEnDown"
 *         self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UnclusteredEnDown")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch and "type1_pfMet_shiftedPt_UnclusteredEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch and "type1_pfMet_shiftedPt_UnclusteredEnDown":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_UnclusteredEnDown_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_UnclusteredEnDown"));

  /* "EMTree.pyx":5926
 *         self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UnclusteredEnDown")
 *         #if not self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch and "type1_pfMet_shiftedPt_UnclusteredEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch and "type1_pfMet_shiftedPt_UnclusteredEnDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UnclusteredEnDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UnclusteredEnDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_UnclusteredEnDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1432_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1432_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5927
 *         #if not self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch and "type1_pfMet_shiftedPt_UnclusteredEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch and "type1_pfMet_shiftedPt_UnclusteredEnDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UnclusteredEnDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UnclusteredEnDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5927, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5927, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__478, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5927, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5926
 *         self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UnclusteredEnDown")
 *         #if not self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch and "type1_pfMet_shiftedPt_UnclusteredEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch and "type1_pfMet_shiftedPt_UnclusteredEnDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UnclusteredEnDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UnclusteredEnDown")
 */
    goto __pyx_L1431;
  }

  /* "EMTree.pyx":5930
 *             #self.complained.add("type1_pfMet_shiftedPt_UnclusteredEnDown")
 *         else:
 *             self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_UnclusteredEnDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMet_shiftedPt_UnclusteredEnUp"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_UnclusteredEnDown_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_UnclusteredEnDown_value)));
  }
  __pyx_L1431:;

  /* "EMTree.pyx":5933
 * 
 *         #print "making type1_pfMet_shiftedPt_UnclusteredEnUp"
 *         self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UnclusteredEnUp")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch and "type1_pfMet_shiftedPt_UnclusteredEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch and "type1_pfMet_shiftedPt_UnclusteredEnUp":
 */
  __pyx_v_self->type1_pfMet_shiftedPt_UnclusteredEnUp_branch = __pyx_v_the_tree->GetBranch(((char *)"type1_pfMet_shiftedPt_UnclusteredEnUp"));

  /* "EMTree.pyx":5935
 *         self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UnclusteredEnUp")
 *         #if not self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch and "type1_pfMet_shiftedPt_UnclusteredEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch and "type1_pfMet_shiftedPt_UnclusteredEnUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UnclusteredEnUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UnclusteredEnUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMet_shiftedPt_UnclusteredEnUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1435_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1435_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5936
 *         #if not self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch and "type1_pfMet_shiftedPt_UnclusteredEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch and "type1_pfMet_shiftedPt_UnclusteredEnUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UnclusteredEnUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UnclusteredEnUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5936, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5936, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__479, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5936, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5935
 *         self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch = the_tree.GetBranch("type1_pfMet_shiftedPt_UnclusteredEnUp")
 *         #if not self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch and "type1_pfMet_shiftedPt_UnclusteredEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch and "type1_pfMet_shiftedPt_UnclusteredEnUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UnclusteredEnUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMet_shiftedPt_UnclusteredEnUp")
 */
    goto __pyx_L1434;
  }

  /* "EMTree.pyx":5939
 *             #self.complained.add("type1_pfMet_shiftedPt_UnclusteredEnUp")
 *         else:
 *             self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch.SetAddress(<void*>&self.type1_pfMet_shiftedPt_UnclusteredEnUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfDeta"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMet_shiftedPt_UnclusteredEnUp_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMet_shiftedPt_UnclusteredEnUp_value)));
  }
  __pyx_L1434:;

  /* "EMTree.pyx":5942
 * 
 *         #print "making vbfDeta"
 *         self.vbfDeta_branch = the_tree.GetBranch("vbfDeta")             # <<<<<<<<<<<<<<
 *         #if not self.vbfDeta_branch and "vbfDeta" not in self.complained:
 *         if not self.vbfDeta_branch and "vbfDeta":
 */
  __pyx_v_self->vbfDeta_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfDeta"));

  /* "EMTree.pyx":5944
 *         self.vbfDeta_branch = the_tree.GetBranch("vbfDeta")
 *         #if not self.vbfDeta_branch and "vbfDeta" not in self.complained:
 *         if not self.vbfDeta_branch and "vbfDeta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfDeta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfDeta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfDeta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1438_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1438_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5945
 *         #if not self.vbfDeta_branch and "vbfDeta" not in self.complained:
 *         if not self.vbfDeta_branch and "vbfDeta":
 *             warnings.warn( "EMTree: Expected branch vbfDeta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfDeta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5945, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5945, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__480, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5945, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5944
 *         self.vbfDeta_branch = the_tree.GetBranch("vbfDeta")
 *         #if not self.vbfDeta_branch and "vbfDeta" not in self.complained:
 *         if not self.vbfDeta_branch and "vbfDeta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfDeta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfDeta")
 */
    goto __pyx_L1437;
  }

  /* "EMTree.pyx":5948
 *             #self.complained.add("vbfDeta")
 *         else:
 *             self.vbfDeta_branch.SetAddress(<void*>&self.vbfDeta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfJetVeto20"
 */
  /*else*/ {
    __pyx_v_self->vbfDeta_branch->SetAddress(((void *)(&__pyx_v_self->vbfDeta_value)));
  }
  __pyx_L1437:;

  /* "EMTree.pyx":5951
 * 
 *         #print "making vbfJetVeto20"
 *         self.vbfJetVeto20_branch = the_tree.GetBranch("vbfJetVeto20")             # <<<<<<<<<<<<<<
 *         #if not self.vbfJetVeto20_branch and "vbfJetVeto20" not in self.complained:
 *         if not self.vbfJetVeto20_branch and "vbfJetVeto20":
 */
  __pyx_v_self->vbfJetVeto20_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfJetVeto20"));

  /* "EMTree.pyx":5953
 *         self.vbfJetVeto20_branch = the_tree.GetBranch("vbfJetVeto20")
 *         #if not self.vbfJetVeto20_branch and "vbfJetVeto20" not in self.complained:
 *         if not self.vbfJetVeto20_branch and "vbfJetVeto20":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfJetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfJetVeto20")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfJetVeto20_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1441_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1441_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5954
 *         #if not self.vbfJetVeto20_branch and "vbfJetVeto20" not in self.complained:
 *         if not self.vbfJetVeto20_branch and "vbfJetVeto20":
 *             warnings.warn( "EMTree: Expected branch vbfJetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfJetVeto20")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5954, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5954, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__481, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5954, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5953
 *         self.vbfJetVeto20_branch = the_tree.GetBranch("vbfJetVeto20")
 *         #if not self.vbfJetVeto20_branch and "vbfJetVeto20" not in self.complained:
 *         if not self.vbfJetVeto20_branch and "vbfJetVeto20":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfJetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfJetVeto20")
 */
    goto __pyx_L1440;
  }

  /* "EMTree.pyx":5957
 *             #self.complained.add("vbfJetVeto20")
 *         else:
 *             self.vbfJetVeto20_branch.SetAddress(<void*>&self.vbfJetVeto20_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfJetVeto30"
 */
  /*else*/ {
    __pyx_v_self->vbfJetVeto20_branch->SetAddress(((void *)(&__pyx_v_self->vbfJetVeto20_value)));
  }
  __pyx_L1440:;

  /* "EMTree.pyx":5960
 * 
 *         #print "making vbfJetVeto30"
 *         self.vbfJetVeto30_branch = the_tree.GetBranch("vbfJetVeto30")             # <<<<<<<<<<<<<<
 *         #if not self.vbfJetVeto30_branch and "vbfJetVeto30" not in self.complained:
 *         if not self.vbfJetVeto30_branch and "vbfJetVeto30":
 */
  __pyx_v_self->vbfJetVeto30_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfJetVeto30"));

  /* "EMTree.pyx":5962
 *         self.vbfJetVeto30_branch = the_tree.GetBranch("vbfJetVeto30")
 *         #if not self.vbfJetVeto30_branch and "vbfJetVeto30" not in self.complained:
 *         if not self.vbfJetVeto30_branch and "vbfJetVeto30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfJetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfJetVeto30")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfJetVeto30_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1444_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1444_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5963
 *         #if not self.vbfJetVeto30_branch and "vbfJetVeto30" not in self.complained:
 *         if not self.vbfJetVeto30_branch and "vbfJetVeto30":
 *             warnings.warn( "EMTree: Expected branch vbfJetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfJetVeto30")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__482, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5962
 *         self.vbfJetVeto30_branch = the_tree.GetBranch("vbfJetVeto30")
 *         #if not self.vbfJetVeto30_branch and "vbfJetVeto30" not in self.complained:
 *         if not self.vbfJetVeto30_branch and "vbfJetVeto30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfJetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfJetVeto30")
 */
    goto __pyx_L1443;
  }

  /* "EMTree.pyx":5966
 *             #self.complained.add("vbfJetVeto30")
 *         else:
 *             self.vbfJetVeto30_branch.SetAddress(<void*>&self.vbfJetVeto30_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMass"
 */
  /*else*/ {
    __pyx_v_self->vbfJetVeto30_branch->SetAddress(((void *)(&__pyx_v_self->vbfJetVeto30_value)));
  }
  __pyx_L1443:;

  /* "EMTree.pyx":5969
 * 
 *         #print "making vbfMass"
 *         self.vbfMass_branch = the_tree.GetBranch("vbfMass")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMass_branch and "vbfMass" not in self.complained:
 *         if not self.vbfMass_branch and "vbfMass":
 */
  __pyx_v_self->vbfMass_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMass"));

  /* "EMTree.pyx":5971
 *         self.vbfMass_branch = the_tree.GetBranch("vbfMass")
 *         #if not self.vbfMass_branch and "vbfMass" not in self.complained:
 *         if not self.vbfMass_branch and "vbfMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1447_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1447_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5972
 *         #if not self.vbfMass_branch and "vbfMass" not in self.complained:
 *         if not self.vbfMass_branch and "vbfMass":
 *             warnings.warn( "EMTree: Expected branch vbfMass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5972, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5972, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__483, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5972, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5971
 *         self.vbfMass_branch = the_tree.GetBranch("vbfMass")
 *         #if not self.vbfMass_branch and "vbfMass" not in self.complained:
 *         if not self.vbfMass_branch and "vbfMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMass")
 */
    goto __pyx_L1446;
  }

  /* "EMTree.pyx":5975
 *             #self.complained.add("vbfMass")
 *         else:
 *             self.vbfMass_branch.SetAddress(<void*>&self.vbfMass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets"
 */
  /*else*/ {
    __pyx_v_self->vbfMass_branch->SetAddress(((void *)(&__pyx_v_self->vbfMass_value)));
  }
  __pyx_L1446:;

  /* "EMTree.pyx":5978
 * 
 *         #print "making vbfMassWoNoisyJets"
 *         self.vbfMassWoNoisyJets_branch = the_tree.GetBranch("vbfMassWoNoisyJets")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_branch and "vbfMassWoNoisyJets" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_branch and "vbfMassWoNoisyJets":
 */
  __pyx_v_self->vbfMassWoNoisyJets_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets"));

  /* "EMTree.pyx":5980
 *         self.vbfMassWoNoisyJets_branch = the_tree.GetBranch("vbfMassWoNoisyJets")
 *         #if not self.vbfMassWoNoisyJets_branch and "vbfMassWoNoisyJets" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_branch and "vbfMassWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1450_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1450_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5981
 *         #if not self.vbfMassWoNoisyJets_branch and "vbfMassWoNoisyJets" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_branch and "vbfMassWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5981, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5981, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__484, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5981, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5980
 *         self.vbfMassWoNoisyJets_branch = the_tree.GetBranch("vbfMassWoNoisyJets")
 *         #if not self.vbfMassWoNoisyJets_branch and "vbfMassWoNoisyJets" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_branch and "vbfMassWoNoisyJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets")
 */
    goto __pyx_L1449;
  }

  /* "EMTree.pyx":5984
 *             #self.complained.add("vbfMassWoNoisyJets")
 *         else:
 *             self.vbfMassWoNoisyJets_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JERDown"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_value)));
  }
  __pyx_L1449:;

  /* "EMTree.pyx":5987
 * 
 *         #print "making vbfMassWoNoisyJets_JERDown"
 *         self.vbfMassWoNoisyJets_JERDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JERDown")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JERDown_branch and "vbfMassWoNoisyJets_JERDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JERDown_branch and "vbfMassWoNoisyJets_JERDown":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JERDown_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JERDown"));

  /* "EMTree.pyx":5989
 *         self.vbfMassWoNoisyJets_JERDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JERDown")
 *         #if not self.vbfMassWoNoisyJets_JERDown_branch and "vbfMassWoNoisyJets_JERDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JERDown_branch and "vbfMassWoNoisyJets_JERDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JERDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JERDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JERDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1453_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1453_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5990
 *         #if not self.vbfMassWoNoisyJets_JERDown_branch and "vbfMassWoNoisyJets_JERDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JERDown_branch and "vbfMassWoNoisyJets_JERDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JERDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JERDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5990, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5990, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__485, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5990, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5989
 *         self.vbfMassWoNoisyJets_JERDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JERDown")
 *         #if not self.vbfMassWoNoisyJets_JERDown_branch and "vbfMassWoNoisyJets_JERDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JERDown_branch and "vbfMassWoNoisyJets_JERDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JERDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JERDown")
 */
    goto __pyx_L1452;
  }

  /* "EMTree.pyx":5993
 *             #self.complained.add("vbfMassWoNoisyJets_JERDown")
 *         else:
 *             self.vbfMassWoNoisyJets_JERDown_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JERDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JERUp"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JERDown_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JERDown_value)));
  }
  __pyx_L1452:;

  /* "EMTree.pyx":5996
 * 
 *         #print "making vbfMassWoNoisyJets_JERUp"
 *         self.vbfMassWoNoisyJets_JERUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JERUp")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JERUp_branch and "vbfMassWoNoisyJets_JERUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JERUp_branch and "vbfMassWoNoisyJets_JERUp":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JERUp_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JERUp"));

  /* "EMTree.pyx":5998
 *         self.vbfMassWoNoisyJets_JERUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JERUp")
 *         #if not self.vbfMassWoNoisyJets_JERUp_branch and "vbfMassWoNoisyJets_JERUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JERUp_branch and "vbfMassWoNoisyJets_JERUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JERUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JERUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JERUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1456_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1456_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":5999
 *         #if not self.vbfMassWoNoisyJets_JERUp_branch and "vbfMassWoNoisyJets_JERUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JERUp_branch and "vbfMassWoNoisyJets_JERUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JERUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JERUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5999, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5999, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__486, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5999, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":5998
 *         self.vbfMassWoNoisyJets_JERUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JERUp")
 *         #if not self.vbfMassWoNoisyJets_JERUp_branch and "vbfMassWoNoisyJets_JERUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JERUp_branch and "vbfMassWoNoisyJets_JERUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JERUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JERUp")
 */
    goto __pyx_L1455;
  }

  /* "EMTree.pyx":6002
 *             #self.complained.add("vbfMassWoNoisyJets_JERUp")
 *         else:
 *             self.vbfMassWoNoisyJets_JERUp_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JERUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetAbsoluteDown"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JERUp_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JERUp_value)));
  }
  __pyx_L1455:;

  /* "EMTree.pyx":6005
 * 
 *         #print "making vbfMassWoNoisyJets_JetAbsoluteDown"
 *         self.vbfMassWoNoisyJets_JetAbsoluteDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetAbsoluteDown")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteDown_branch and "vbfMassWoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteDown_branch and "vbfMassWoNoisyJets_JetAbsoluteDown":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteDown_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetAbsoluteDown"));

  /* "EMTree.pyx":6007
 *         self.vbfMassWoNoisyJets_JetAbsoluteDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetAbsoluteDown")
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteDown_branch and "vbfMassWoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteDown_branch and "vbfMassWoNoisyJets_JetAbsoluteDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1459_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1459_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6008
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteDown_branch and "vbfMassWoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteDown_branch and "vbfMassWoNoisyJets_JetAbsoluteDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6008, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6008, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__487, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6008, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6007
 *         self.vbfMassWoNoisyJets_JetAbsoluteDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetAbsoluteDown")
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteDown_branch and "vbfMassWoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteDown_branch and "vbfMassWoNoisyJets_JetAbsoluteDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteDown")
 */
    goto __pyx_L1458;
  }

  /* "EMTree.pyx":6011
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteDown")
 *         else:
 *             self.vbfMassWoNoisyJets_JetAbsoluteDown_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetAbsoluteDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetAbsoluteUp"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteDown_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteDown_value)));
  }
  __pyx_L1458:;

  /* "EMTree.pyx":6014
 * 
 *         #print "making vbfMassWoNoisyJets_JetAbsoluteUp"
 *         self.vbfMassWoNoisyJets_JetAbsoluteUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetAbsoluteUp")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteUp_branch and "vbfMassWoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteUp_branch and "vbfMassWoNoisyJets_JetAbsoluteUp":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteUp_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetAbsoluteUp"));

  /* "EMTree.pyx":6016
 *         self.vbfMassWoNoisyJets_JetAbsoluteUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetAbsoluteUp")
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteUp_branch and "vbfMassWoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteUp_branch and "vbfMassWoNoisyJets_JetAbsoluteUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1462_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1462_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6017
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteUp_branch and "vbfMassWoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteUp_branch and "vbfMassWoNoisyJets_JetAbsoluteUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6017, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6017, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__488, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6017, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6016
 *         self.vbfMassWoNoisyJets_JetAbsoluteUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetAbsoluteUp")
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteUp_branch and "vbfMassWoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteUp_branch and "vbfMassWoNoisyJets_JetAbsoluteUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteUp")
 */
    goto __pyx_L1461;
  }

  /* "EMTree.pyx":6020
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteUp")
 *         else:
 *             self.vbfMassWoNoisyJets_JetAbsoluteUp_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetAbsoluteUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetAbsoluteyearDown"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteUp_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteUp_value)));
  }
  __pyx_L1461:;

  /* "EMTree.pyx":6023
 * 
 *         #print "making vbfMassWoNoisyJets_JetAbsoluteyearDown"
 *         self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetAbsoluteyearDown")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch and "vbfMassWoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch and "vbfMassWoNoisyJets_JetAbsoluteyearDown":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteyearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetAbsoluteyearDown"));

  /* "EMTree.pyx":6025
 *         self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetAbsoluteyearDown")
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch and "vbfMassWoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch and "vbfMassWoNoisyJets_JetAbsoluteyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteyearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteyearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1465_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1465_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6026
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch and "vbfMassWoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch and "vbfMassWoNoisyJets_JetAbsoluteyearDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteyearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6026, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6026, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__489, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6026, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6025
 *         self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetAbsoluteyearDown")
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch and "vbfMassWoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch and "vbfMassWoNoisyJets_JetAbsoluteyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteyearDown")
 */
    goto __pyx_L1464;
  }

  /* "EMTree.pyx":6029
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteyearDown")
 *         else:
 *             self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetAbsoluteyearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetAbsoluteyearUp"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteyearDown_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteyearDown_value)));
  }
  __pyx_L1464:;

  /* "EMTree.pyx":6032
 * 
 *         #print "making vbfMassWoNoisyJets_JetAbsoluteyearUp"
 *         self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetAbsoluteyearUp")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch and "vbfMassWoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch and "vbfMassWoNoisyJets_JetAbsoluteyearUp":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteyearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetAbsoluteyearUp"));

  /* "EMTree.pyx":6034
 *         self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetAbsoluteyearUp")
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch and "vbfMassWoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch and "vbfMassWoNoisyJets_JetAbsoluteyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteyearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteyearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1468_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1468_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6035
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch and "vbfMassWoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch and "vbfMassWoNoisyJets_JetAbsoluteyearUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteyearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6035, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6035, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__490, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6035, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6034
 *         self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetAbsoluteyearUp")
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch and "vbfMassWoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch and "vbfMassWoNoisyJets_JetAbsoluteyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteyearUp")
 */
    goto __pyx_L1467;
  }

  /* "EMTree.pyx":6038
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteyearUp")
 *         else:
 *             self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetAbsoluteyearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetBBEC1Down"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteyearUp_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteyearUp_value)));
  }
  __pyx_L1467:;

  /* "EMTree.pyx":6041
 * 
 *         #print "making vbfMassWoNoisyJets_JetBBEC1Down"
 *         self.vbfMassWoNoisyJets_JetBBEC1Down_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetBBEC1Down")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1Down_branch and "vbfMassWoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1Down_branch and "vbfMassWoNoisyJets_JetBBEC1Down":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetBBEC1Down_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetBBEC1Down"));

  /* "EMTree.pyx":6043
 *         self.vbfMassWoNoisyJets_JetBBEC1Down_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetBBEC1Down")
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1Down_branch and "vbfMassWoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1Down_branch and "vbfMassWoNoisyJets_JetBBEC1Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1Down")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetBBEC1Down_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1471_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1471_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6044
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1Down_branch and "vbfMassWoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1Down_branch and "vbfMassWoNoisyJets_JetBBEC1Down":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1Down")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6044, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6044, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__491, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6044, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6043
 *         self.vbfMassWoNoisyJets_JetBBEC1Down_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetBBEC1Down")
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1Down_branch and "vbfMassWoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1Down_branch and "vbfMassWoNoisyJets_JetBBEC1Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1Down")
 */
    goto __pyx_L1470;
  }

  /* "EMTree.pyx":6047
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1Down")
 *         else:
 *             self.vbfMassWoNoisyJets_JetBBEC1Down_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetBBEC1Down_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetBBEC1Up"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetBBEC1Down_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetBBEC1Down_value)));
  }
  __pyx_L1470:;

  /* "EMTree.pyx":6050
 * 
 *         #print "making vbfMassWoNoisyJets_JetBBEC1Up"
 *         self.vbfMassWoNoisyJets_JetBBEC1Up_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetBBEC1Up")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1Up_branch and "vbfMassWoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1Up_branch and "vbfMassWoNoisyJets_JetBBEC1Up":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetBBEC1Up_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetBBEC1Up"));

  /* "EMTree.pyx":6052
 *         self.vbfMassWoNoisyJets_JetBBEC1Up_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetBBEC1Up")
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1Up_branch and "vbfMassWoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1Up_branch and "vbfMassWoNoisyJets_JetBBEC1Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1Up")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetBBEC1Up_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1474_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1474_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6053
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1Up_branch and "vbfMassWoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1Up_branch and "vbfMassWoNoisyJets_JetBBEC1Up":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1Up")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6053, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6053, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__492, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6053, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6052
 *         self.vbfMassWoNoisyJets_JetBBEC1Up_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetBBEC1Up")
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1Up_branch and "vbfMassWoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1Up_branch and "vbfMassWoNoisyJets_JetBBEC1Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1Up")
 */
    goto __pyx_L1473;
  }

  /* "EMTree.pyx":6056
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1Up")
 *         else:
 *             self.vbfMassWoNoisyJets_JetBBEC1Up_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetBBEC1Up_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetBBEC1yearDown"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetBBEC1Up_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetBBEC1Up_value)));
  }
  __pyx_L1473:;

  /* "EMTree.pyx":6059
 * 
 *         #print "making vbfMassWoNoisyJets_JetBBEC1yearDown"
 *         self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetBBEC1yearDown")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch and "vbfMassWoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch and "vbfMassWoNoisyJets_JetBBEC1yearDown":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetBBEC1yearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetBBEC1yearDown"));

  /* "EMTree.pyx":6061
 *         self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetBBEC1yearDown")
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch and "vbfMassWoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch and "vbfMassWoNoisyJets_JetBBEC1yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1yearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetBBEC1yearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1477_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1477_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6062
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch and "vbfMassWoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch and "vbfMassWoNoisyJets_JetBBEC1yearDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1yearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6062, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6062, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__493, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6062, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6061
 *         self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetBBEC1yearDown")
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch and "vbfMassWoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch and "vbfMassWoNoisyJets_JetBBEC1yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1yearDown")
 */
    goto __pyx_L1476;
  }

  /* "EMTree.pyx":6065
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1yearDown")
 *         else:
 *             self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetBBEC1yearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetBBEC1yearUp"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetBBEC1yearDown_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetBBEC1yearDown_value)));
  }
  __pyx_L1476:;

  /* "EMTree.pyx":6068
 * 
 *         #print "making vbfMassWoNoisyJets_JetBBEC1yearUp"
 *         self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetBBEC1yearUp")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch and "vbfMassWoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch and "vbfMassWoNoisyJets_JetBBEC1yearUp":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetBBEC1yearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetBBEC1yearUp"));

  /* "EMTree.pyx":6070
 *         self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetBBEC1yearUp")
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch and "vbfMassWoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch and "vbfMassWoNoisyJets_JetBBEC1yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1yearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetBBEC1yearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1480_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1480_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6071
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch and "vbfMassWoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch and "vbfMassWoNoisyJets_JetBBEC1yearUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1yearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6071, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6071, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__494, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6071, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6070
 *         self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetBBEC1yearUp")
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch and "vbfMassWoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch and "vbfMassWoNoisyJets_JetBBEC1yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1yearUp")
 */
    goto __pyx_L1479;
  }

  /* "EMTree.pyx":6074
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1yearUp")
 *         else:
 *             self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetBBEC1yearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetEC2Down"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetBBEC1yearUp_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetBBEC1yearUp_value)));
  }
  __pyx_L1479:;

  /* "EMTree.pyx":6077
 * 
 *         #print "making vbfMassWoNoisyJets_JetEC2Down"
 *         self.vbfMassWoNoisyJets_JetEC2Down_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetEC2Down")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetEC2Down_branch and "vbfMassWoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2Down_branch and "vbfMassWoNoisyJets_JetEC2Down":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetEC2Down_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetEC2Down"));

  /* "EMTree.pyx":6079
 *         self.vbfMassWoNoisyJets_JetEC2Down_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetEC2Down")
 *         #if not self.vbfMassWoNoisyJets_JetEC2Down_branch and "vbfMassWoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2Down_branch and "vbfMassWoNoisyJets_JetEC2Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2Down")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetEC2Down_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1483_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1483_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6080
 *         #if not self.vbfMassWoNoisyJets_JetEC2Down_branch and "vbfMassWoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2Down_branch and "vbfMassWoNoisyJets_JetEC2Down":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2Down")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6080, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6080, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__495, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6080, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6079
 *         self.vbfMassWoNoisyJets_JetEC2Down_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetEC2Down")
 *         #if not self.vbfMassWoNoisyJets_JetEC2Down_branch and "vbfMassWoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2Down_branch and "vbfMassWoNoisyJets_JetEC2Down":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2Down")
 */
    goto __pyx_L1482;
  }

  /* "EMTree.pyx":6083
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2Down")
 *         else:
 *             self.vbfMassWoNoisyJets_JetEC2Down_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetEC2Down_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetEC2Up"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetEC2Down_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetEC2Down_value)));
  }
  __pyx_L1482:;

  /* "EMTree.pyx":6086
 * 
 *         #print "making vbfMassWoNoisyJets_JetEC2Up"
 *         self.vbfMassWoNoisyJets_JetEC2Up_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetEC2Up")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetEC2Up_branch and "vbfMassWoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2Up_branch and "vbfMassWoNoisyJets_JetEC2Up":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetEC2Up_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetEC2Up"));

  /* "EMTree.pyx":6088
 *         self.vbfMassWoNoisyJets_JetEC2Up_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetEC2Up")
 *         #if not self.vbfMassWoNoisyJets_JetEC2Up_branch and "vbfMassWoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2Up_branch and "vbfMassWoNoisyJets_JetEC2Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2Up")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetEC2Up_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1486_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1486_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6089
 *         #if not self.vbfMassWoNoisyJets_JetEC2Up_branch and "vbfMassWoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2Up_branch and "vbfMassWoNoisyJets_JetEC2Up":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2Up")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6089, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6089, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__496, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6089, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6088
 *         self.vbfMassWoNoisyJets_JetEC2Up_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetEC2Up")
 *         #if not self.vbfMassWoNoisyJets_JetEC2Up_branch and "vbfMassWoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2Up_branch and "vbfMassWoNoisyJets_JetEC2Up":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2Up")
 */
    goto __pyx_L1485;
  }

  /* "EMTree.pyx":6092
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2Up")
 *         else:
 *             self.vbfMassWoNoisyJets_JetEC2Up_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetEC2Up_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetEC2yearDown"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetEC2Up_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetEC2Up_value)));
  }
  __pyx_L1485:;

  /* "EMTree.pyx":6095
 * 
 *         #print "making vbfMassWoNoisyJets_JetEC2yearDown"
 *         self.vbfMassWoNoisyJets_JetEC2yearDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetEC2yearDown")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetEC2yearDown_branch and "vbfMassWoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2yearDown_branch and "vbfMassWoNoisyJets_JetEC2yearDown":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetEC2yearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetEC2yearDown"));

  /* "EMTree.pyx":6097
 *         self.vbfMassWoNoisyJets_JetEC2yearDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetEC2yearDown")
 *         #if not self.vbfMassWoNoisyJets_JetEC2yearDown_branch and "vbfMassWoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2yearDown_branch and "vbfMassWoNoisyJets_JetEC2yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2yearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetEC2yearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1489_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1489_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6098
 *         #if not self.vbfMassWoNoisyJets_JetEC2yearDown_branch and "vbfMassWoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2yearDown_branch and "vbfMassWoNoisyJets_JetEC2yearDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2yearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6098, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6098, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__497, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6098, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6097
 *         self.vbfMassWoNoisyJets_JetEC2yearDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetEC2yearDown")
 *         #if not self.vbfMassWoNoisyJets_JetEC2yearDown_branch and "vbfMassWoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2yearDown_branch and "vbfMassWoNoisyJets_JetEC2yearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2yearDown")
 */
    goto __pyx_L1488;
  }

  /* "EMTree.pyx":6101
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2yearDown")
 *         else:
 *             self.vbfMassWoNoisyJets_JetEC2yearDown_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetEC2yearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetEC2yearUp"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetEC2yearDown_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetEC2yearDown_value)));
  }
  __pyx_L1488:;

  /* "EMTree.pyx":6104
 * 
 *         #print "making vbfMassWoNoisyJets_JetEC2yearUp"
 *         self.vbfMassWoNoisyJets_JetEC2yearUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetEC2yearUp")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetEC2yearUp_branch and "vbfMassWoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2yearUp_branch and "vbfMassWoNoisyJets_JetEC2yearUp":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetEC2yearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetEC2yearUp"));

  /* "EMTree.pyx":6106
 *         self.vbfMassWoNoisyJets_JetEC2yearUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetEC2yearUp")
 *         #if not self.vbfMassWoNoisyJets_JetEC2yearUp_branch and "vbfMassWoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2yearUp_branch and "vbfMassWoNoisyJets_JetEC2yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2yearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetEC2yearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1492_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1492_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6107
 *         #if not self.vbfMassWoNoisyJets_JetEC2yearUp_branch and "vbfMassWoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2yearUp_branch and "vbfMassWoNoisyJets_JetEC2yearUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2yearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6107, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6107, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__498, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6107, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6106
 *         self.vbfMassWoNoisyJets_JetEC2yearUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetEC2yearUp")
 *         #if not self.vbfMassWoNoisyJets_JetEC2yearUp_branch and "vbfMassWoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2yearUp_branch and "vbfMassWoNoisyJets_JetEC2yearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2yearUp")
 */
    goto __pyx_L1491;
  }

  /* "EMTree.pyx":6110
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2yearUp")
 *         else:
 *             self.vbfMassWoNoisyJets_JetEC2yearUp_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetEC2yearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetFlavorQCDDown"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetEC2yearUp_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetEC2yearUp_value)));
  }
  __pyx_L1491:;

  /* "EMTree.pyx":6113
 * 
 *         #print "making vbfMassWoNoisyJets_JetFlavorQCDDown"
 *         self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetFlavorQCDDown")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch and "vbfMassWoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch and "vbfMassWoNoisyJets_JetFlavorQCDDown":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetFlavorQCDDown_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetFlavorQCDDown"));

  /* "EMTree.pyx":6115
 *         self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetFlavorQCDDown")
 *         #if not self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch and "vbfMassWoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch and "vbfMassWoNoisyJets_JetFlavorQCDDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetFlavorQCDDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetFlavorQCDDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1495_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1495_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6116
 *         #if not self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch and "vbfMassWoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch and "vbfMassWoNoisyJets_JetFlavorQCDDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetFlavorQCDDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__499, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6115
 *         self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetFlavorQCDDown")
 *         #if not self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch and "vbfMassWoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch and "vbfMassWoNoisyJets_JetFlavorQCDDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetFlavorQCDDown")
 */
    goto __pyx_L1494;
  }

  /* "EMTree.pyx":6119
 *             #self.complained.add("vbfMassWoNoisyJets_JetFlavorQCDDown")
 *         else:
 *             self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetFlavorQCDDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetFlavorQCDUp"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetFlavorQCDDown_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetFlavorQCDDown_value)));
  }
  __pyx_L1494:;

  /* "EMTree.pyx":6122
 * 
 *         #print "making vbfMassWoNoisyJets_JetFlavorQCDUp"
 *         self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetFlavorQCDUp")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch and "vbfMassWoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch and "vbfMassWoNoisyJets_JetFlavorQCDUp":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetFlavorQCDUp_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetFlavorQCDUp"));

  /* "EMTree.pyx":6124
 *         self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetFlavorQCDUp")
 *         #if not self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch and "vbfMassWoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch and "vbfMassWoNoisyJets_JetFlavorQCDUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetFlavorQCDUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetFlavorQCDUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1498_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1498_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6125
 *         #if not self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch and "vbfMassWoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch and "vbfMassWoNoisyJets_JetFlavorQCDUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetFlavorQCDUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6125, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6125, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__500, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6125, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6124
 *         self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetFlavorQCDUp")
 *         #if not self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch and "vbfMassWoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch and "vbfMassWoNoisyJets_JetFlavorQCDUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetFlavorQCDUp")
 */
    goto __pyx_L1497;
  }

  /* "EMTree.pyx":6128
 *             #self.complained.add("vbfMassWoNoisyJets_JetFlavorQCDUp")
 *         else:
 *             self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetFlavorQCDUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetHFDown"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetFlavorQCDUp_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetFlavorQCDUp_value)));
  }
  __pyx_L1497:;

  /* "EMTree.pyx":6131
 * 
 *         #print "making vbfMassWoNoisyJets_JetHFDown"
 *         self.vbfMassWoNoisyJets_JetHFDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetHFDown")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetHFDown_branch and "vbfMassWoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFDown_branch and "vbfMassWoNoisyJets_JetHFDown":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetHFDown_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetHFDown"));

  /* "EMTree.pyx":6133
 *         self.vbfMassWoNoisyJets_JetHFDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetHFDown")
 *         #if not self.vbfMassWoNoisyJets_JetHFDown_branch and "vbfMassWoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFDown_branch and "vbfMassWoNoisyJets_JetHFDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetHFDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1501_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1501_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6134
 *         #if not self.vbfMassWoNoisyJets_JetHFDown_branch and "vbfMassWoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFDown_branch and "vbfMassWoNoisyJets_JetHFDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6134, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6134, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__501, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6134, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6133
 *         self.vbfMassWoNoisyJets_JetHFDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetHFDown")
 *         #if not self.vbfMassWoNoisyJets_JetHFDown_branch and "vbfMassWoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFDown_branch and "vbfMassWoNoisyJets_JetHFDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFDown")
 */
    goto __pyx_L1500;
  }

  /* "EMTree.pyx":6137
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFDown")
 *         else:
 *             self.vbfMassWoNoisyJets_JetHFDown_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetHFDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetHFUp"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetHFDown_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetHFDown_value)));
  }
  __pyx_L1500:;

  /* "EMTree.pyx":6140
 * 
 *         #print "making vbfMassWoNoisyJets_JetHFUp"
 *         self.vbfMassWoNoisyJets_JetHFUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetHFUp")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetHFUp_branch and "vbfMassWoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFUp_branch and "vbfMassWoNoisyJets_JetHFUp":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetHFUp_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetHFUp"));

  /* "EMTree.pyx":6142
 *         self.vbfMassWoNoisyJets_JetHFUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetHFUp")
 *         #if not self.vbfMassWoNoisyJets_JetHFUp_branch and "vbfMassWoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFUp_branch and "vbfMassWoNoisyJets_JetHFUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetHFUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1504_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1504_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6143
 *         #if not self.vbfMassWoNoisyJets_JetHFUp_branch and "vbfMassWoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFUp_branch and "vbfMassWoNoisyJets_JetHFUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__502, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6142
 *         self.vbfMassWoNoisyJets_JetHFUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetHFUp")
 *         #if not self.vbfMassWoNoisyJets_JetHFUp_branch and "vbfMassWoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFUp_branch and "vbfMassWoNoisyJets_JetHFUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFUp")
 */
    goto __pyx_L1503;
  }

  /* "EMTree.pyx":6146
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFUp")
 *         else:
 *             self.vbfMassWoNoisyJets_JetHFUp_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetHFUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetHFyearDown"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetHFUp_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetHFUp_value)));
  }
  __pyx_L1503:;

  /* "EMTree.pyx":6149
 * 
 *         #print "making vbfMassWoNoisyJets_JetHFyearDown"
 *         self.vbfMassWoNoisyJets_JetHFyearDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetHFyearDown")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetHFyearDown_branch and "vbfMassWoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFyearDown_branch and "vbfMassWoNoisyJets_JetHFyearDown":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetHFyearDown_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetHFyearDown"));

  /* "EMTree.pyx":6151
 *         self.vbfMassWoNoisyJets_JetHFyearDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetHFyearDown")
 *         #if not self.vbfMassWoNoisyJets_JetHFyearDown_branch and "vbfMassWoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFyearDown_branch and "vbfMassWoNoisyJets_JetHFyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFyearDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetHFyearDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1507_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1507_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6152
 *         #if not self.vbfMassWoNoisyJets_JetHFyearDown_branch and "vbfMassWoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFyearDown_branch and "vbfMassWoNoisyJets_JetHFyearDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFyearDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__503, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6151
 *         self.vbfMassWoNoisyJets_JetHFyearDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetHFyearDown")
 *         #if not self.vbfMassWoNoisyJets_JetHFyearDown_branch and "vbfMassWoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFyearDown_branch and "vbfMassWoNoisyJets_JetHFyearDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFyearDown")
 */
    goto __pyx_L1506;
  }

  /* "EMTree.pyx":6155
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFyearDown")
 *         else:
 *             self.vbfMassWoNoisyJets_JetHFyearDown_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetHFyearDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetHFyearUp"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetHFyearDown_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetHFyearDown_value)));
  }
  __pyx_L1506:;

  /* "EMTree.pyx":6158
 * 
 *         #print "making vbfMassWoNoisyJets_JetHFyearUp"
 *         self.vbfMassWoNoisyJets_JetHFyearUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetHFyearUp")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetHFyearUp_branch and "vbfMassWoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFyearUp_branch and "vbfMassWoNoisyJets_JetHFyearUp":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetHFyearUp_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetHFyearUp"));

  /* "EMTree.pyx":6160
 *         self.vbfMassWoNoisyJets_JetHFyearUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetHFyearUp")
 *         #if not self.vbfMassWoNoisyJets_JetHFyearUp_branch and "vbfMassWoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFyearUp_branch and "vbfMassWoNoisyJets_JetHFyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFyearUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetHFyearUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1510_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1510_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6161
 *         #if not self.vbfMassWoNoisyJets_JetHFyearUp_branch and "vbfMassWoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFyearUp_branch and "vbfMassWoNoisyJets_JetHFyearUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFyearUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6161, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6161, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__504, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6161, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6160
 *         self.vbfMassWoNoisyJets_JetHFyearUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetHFyearUp")
 *         #if not self.vbfMassWoNoisyJets_JetHFyearUp_branch and "vbfMassWoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFyearUp_branch and "vbfMassWoNoisyJets_JetHFyearUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFyearUp")
 */
    goto __pyx_L1509;
  }

  /* "EMTree.pyx":6164
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFyearUp")
 *         else:
 *             self.vbfMassWoNoisyJets_JetHFyearUp_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetHFyearUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetRelativeBalDown"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetHFyearUp_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetHFyearUp_value)));
  }
  __pyx_L1509:;

  /* "EMTree.pyx":6167
 * 
 *         #print "making vbfMassWoNoisyJets_JetRelativeBalDown"
 *         self.vbfMassWoNoisyJets_JetRelativeBalDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetRelativeBalDown")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetRelativeBalDown_branch and "vbfMassWoNoisyJets_JetRelativeBalDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeBalDown_branch and "vbfMassWoNoisyJets_JetRelativeBalDown":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetRelativeBalDown_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetRelativeBalDown"));

  /* "EMTree.pyx":6169
 *         self.vbfMassWoNoisyJets_JetRelativeBalDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetRelativeBalDown")
 *         #if not self.vbfMassWoNoisyJets_JetRelativeBalDown_branch and "vbfMassWoNoisyJets_JetRelativeBalDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeBalDown_branch and "vbfMassWoNoisyJets_JetRelativeBalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeBalDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetRelativeBalDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1513_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1513_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6170
 *         #if not self.vbfMassWoNoisyJets_JetRelativeBalDown_branch and "vbfMassWoNoisyJets_JetRelativeBalDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeBalDown_branch and "vbfMassWoNoisyJets_JetRelativeBalDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeBalDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__505, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6169
 *         self.vbfMassWoNoisyJets_JetRelativeBalDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetRelativeBalDown")
 *         #if not self.vbfMassWoNoisyJets_JetRelativeBalDown_branch and "vbfMassWoNoisyJets_JetRelativeBalDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeBalDown_branch and "vbfMassWoNoisyJets_JetRelativeBalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeBalDown")
 */
    goto __pyx_L1512;
  }

  /* "EMTree.pyx":6173
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeBalDown")
 *         else:
 *             self.vbfMassWoNoisyJets_JetRelativeBalDown_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetRelativeBalDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetRelativeBalUp"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetRelativeBalDown_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetRelativeBalDown_value)));
  }
  __pyx_L1512:;

  /* "EMTree.pyx":6176
 * 
 *         #print "making vbfMassWoNoisyJets_JetRelativeBalUp"
 *         self.vbfMassWoNoisyJets_JetRelativeBalUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetRelativeBalUp")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetRelativeBalUp_branch and "vbfMassWoNoisyJets_JetRelativeBalUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeBalUp_branch and "vbfMassWoNoisyJets_JetRelativeBalUp":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetRelativeBalUp_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetRelativeBalUp"));

  /* "EMTree.pyx":6178
 *         self.vbfMassWoNoisyJets_JetRelativeBalUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetRelativeBalUp")
 *         #if not self.vbfMassWoNoisyJets_JetRelativeBalUp_branch and "vbfMassWoNoisyJets_JetRelativeBalUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeBalUp_branch and "vbfMassWoNoisyJets_JetRelativeBalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeBalUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetRelativeBalUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1516_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1516_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6179
 *         #if not self.vbfMassWoNoisyJets_JetRelativeBalUp_branch and "vbfMassWoNoisyJets_JetRelativeBalUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeBalUp_branch and "vbfMassWoNoisyJets_JetRelativeBalUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeBalUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__506, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6178
 *         self.vbfMassWoNoisyJets_JetRelativeBalUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetRelativeBalUp")
 *         #if not self.vbfMassWoNoisyJets_JetRelativeBalUp_branch and "vbfMassWoNoisyJets_JetRelativeBalUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeBalUp_branch and "vbfMassWoNoisyJets_JetRelativeBalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeBalUp")
 */
    goto __pyx_L1515;
  }

  /* "EMTree.pyx":6182
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeBalUp")
 *         else:
 *             self.vbfMassWoNoisyJets_JetRelativeBalUp_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetRelativeBalUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetRelativeSampleDown"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetRelativeBalUp_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetRelativeBalUp_value)));
  }
  __pyx_L1515:;

  /* "EMTree.pyx":6185
 * 
 *         #print "making vbfMassWoNoisyJets_JetRelativeSampleDown"
 *         self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetRelativeSampleDown")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch and "vbfMassWoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch and "vbfMassWoNoisyJets_JetRelativeSampleDown":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetRelativeSampleDown_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetRelativeSampleDown"));

  /* "EMTree.pyx":6187
 *         self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetRelativeSampleDown")
 *         #if not self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch and "vbfMassWoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch and "vbfMassWoNoisyJets_JetRelativeSampleDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeSampleDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetRelativeSampleDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1519_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1519_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6188
 *         #if not self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch and "vbfMassWoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch and "vbfMassWoNoisyJets_JetRelativeSampleDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeSampleDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6188, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6188, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__507, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6188, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6187
 *         self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetRelativeSampleDown")
 *         #if not self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch and "vbfMassWoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch and "vbfMassWoNoisyJets_JetRelativeSampleDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeSampleDown")
 */
    goto __pyx_L1518;
  }

  /* "EMTree.pyx":6191
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeSampleDown")
 *         else:
 *             self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetRelativeSampleDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetRelativeSampleUp"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetRelativeSampleDown_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetRelativeSampleDown_value)));
  }
  __pyx_L1518:;

  /* "EMTree.pyx":6194
 * 
 *         #print "making vbfMassWoNoisyJets_JetRelativeSampleUp"
 *         self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetRelativeSampleUp")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch and "vbfMassWoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch and "vbfMassWoNoisyJets_JetRelativeSampleUp":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetRelativeSampleUp_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetRelativeSampleUp"));

  /* "EMTree.pyx":6196
 *         self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetRelativeSampleUp")
 *         #if not self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch and "vbfMassWoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch and "vbfMassWoNoisyJets_JetRelativeSampleUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeSampleUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetRelativeSampleUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1522_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1522_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6197
 *         #if not self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch and "vbfMassWoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch and "vbfMassWoNoisyJets_JetRelativeSampleUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeSampleUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6197, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6197, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__508, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6197, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6196
 *         self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetRelativeSampleUp")
 *         #if not self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch and "vbfMassWoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch and "vbfMassWoNoisyJets_JetRelativeSampleUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeSampleUp")
 */
    goto __pyx_L1521;
  }

  /* "EMTree.pyx":6200
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeSampleUp")
 *         else:
 *             self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetRelativeSampleUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetTotalDown"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetRelativeSampleUp_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetRelativeSampleUp_value)));
  }
  __pyx_L1521:;

  /* "EMTree.pyx":6203
 * 
 *         #print "making vbfMassWoNoisyJets_JetTotalDown"
 *         self.vbfMassWoNoisyJets_JetTotalDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetTotalDown")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetTotalDown_branch and "vbfMassWoNoisyJets_JetTotalDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetTotalDown_branch and "vbfMassWoNoisyJets_JetTotalDown":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetTotalDown_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetTotalDown"));

  /* "EMTree.pyx":6205
 *         self.vbfMassWoNoisyJets_JetTotalDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetTotalDown")
 *         #if not self.vbfMassWoNoisyJets_JetTotalDown_branch and "vbfMassWoNoisyJets_JetTotalDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetTotalDown_branch and "vbfMassWoNoisyJets_JetTotalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetTotalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetTotalDown")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetTotalDown_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1525_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1525_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6206
 *         #if not self.vbfMassWoNoisyJets_JetTotalDown_branch and "vbfMassWoNoisyJets_JetTotalDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetTotalDown_branch and "vbfMassWoNoisyJets_JetTotalDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetTotalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetTotalDown")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6206, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6206, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__509, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6206, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6205
 *         self.vbfMassWoNoisyJets_JetTotalDown_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetTotalDown")
 *         #if not self.vbfMassWoNoisyJets_JetTotalDown_branch and "vbfMassWoNoisyJets_JetTotalDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetTotalDown_branch and "vbfMassWoNoisyJets_JetTotalDown":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetTotalDown does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetTotalDown")
 */
    goto __pyx_L1524;
  }

  /* "EMTree.pyx":6209
 *             #self.complained.add("vbfMassWoNoisyJets_JetTotalDown")
 *         else:
 *             self.vbfMassWoNoisyJets_JetTotalDown_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetTotalDown_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMassWoNoisyJets_JetTotalUp"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetTotalDown_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetTotalDown_value)));
  }
  __pyx_L1524:;

  /* "EMTree.pyx":6212
 * 
 *         #print "making vbfMassWoNoisyJets_JetTotalUp"
 *         self.vbfMassWoNoisyJets_JetTotalUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetTotalUp")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMassWoNoisyJets_JetTotalUp_branch and "vbfMassWoNoisyJets_JetTotalUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetTotalUp_branch and "vbfMassWoNoisyJets_JetTotalUp":
 */
  __pyx_v_self->vbfMassWoNoisyJets_JetTotalUp_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfMassWoNoisyJets_JetTotalUp"));

  /* "EMTree.pyx":6214
 *         self.vbfMassWoNoisyJets_JetTotalUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetTotalUp")
 *         #if not self.vbfMassWoNoisyJets_JetTotalUp_branch and "vbfMassWoNoisyJets_JetTotalUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetTotalUp_branch and "vbfMassWoNoisyJets_JetTotalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetTotalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetTotalUp")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMassWoNoisyJets_JetTotalUp_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1528_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1528_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6215
 *         #if not self.vbfMassWoNoisyJets_JetTotalUp_branch and "vbfMassWoNoisyJets_JetTotalUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetTotalUp_branch and "vbfMassWoNoisyJets_JetTotalUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetTotalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetTotalUp")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6215, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6215, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__510, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6215, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6214
 *         self.vbfMassWoNoisyJets_JetTotalUp_branch = the_tree.GetBranch("vbfMassWoNoisyJets_JetTotalUp")
 *         #if not self.vbfMassWoNoisyJets_JetTotalUp_branch and "vbfMassWoNoisyJets_JetTotalUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetTotalUp_branch and "vbfMassWoNoisyJets_JetTotalUp":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetTotalUp does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMassWoNoisyJets_JetTotalUp")
 */
    goto __pyx_L1527;
  }

  /* "EMTree.pyx":6218
 *             #self.complained.add("vbfMassWoNoisyJets_JetTotalUp")
 *         else:
 *             self.vbfMassWoNoisyJets_JetTotalUp_branch.SetAddress(<void*>&self.vbfMassWoNoisyJets_JetTotalUp_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfNJets20"
 */
  /*else*/ {
    __pyx_v_self->vbfMassWoNoisyJets_JetTotalUp_branch->SetAddress(((void *)(&__pyx_v_self->vbfMassWoNoisyJets_JetTotalUp_value)));
  }
  __pyx_L1527:;

  /* "EMTree.pyx":6221
 * 
 *         #print "making vbfNJets20"
 *         self.vbfNJets20_branch = the_tree.GetBranch("vbfNJets20")             # <<<<<<<<<<<<<<
 *         #if not self.vbfNJets20_branch and "vbfNJets20" not in self.complained:
 *         if not self.vbfNJets20_branch and "vbfNJets20":
 */
  __pyx_v_self->vbfNJets20_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfNJets20"));

  /* "EMTree.pyx":6223
 *         self.vbfNJets20_branch = the_tree.GetBranch("vbfNJets20")
 *         #if not self.vbfNJets20_branch and "vbfNJets20" not in self.complained:
 *         if not self.vbfNJets20_branch and "vbfNJets20":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfNJets20 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfNJets20")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfNJets20_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1531_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1531_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6224
 *         #if not self.vbfNJets20_branch and "vbfNJets20" not in self.complained:
 *         if not self.vbfNJets20_branch and "vbfNJets20":
 *             warnings.warn( "EMTree: Expected branch vbfNJets20 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfNJets20")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__511, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6223
 *         self.vbfNJets20_branch = the_tree.GetBranch("vbfNJets20")
 *         #if not self.vbfNJets20_branch and "vbfNJets20" not in self.complained:
 *         if not self.vbfNJets20_branch and "vbfNJets20":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfNJets20 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfNJets20")
 */
    goto __pyx_L1530;
  }

  /* "EMTree.pyx":6227
 *             #self.complained.add("vbfNJets20")
 *         else:
 *             self.vbfNJets20_branch.SetAddress(<void*>&self.vbfNJets20_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfNJets30"
 */
  /*else*/ {
    __pyx_v_self->vbfNJets20_branch->SetAddress(((void *)(&__pyx_v_self->vbfNJets20_value)));
  }
  __pyx_L1530:;

  /* "EMTree.pyx":6230
 * 
 *         #print "making vbfNJets30"
 *         self.vbfNJets30_branch = the_tree.GetBranch("vbfNJets30")             # <<<<<<<<<<<<<<
 *         #if not self.vbfNJets30_branch and "vbfNJets30" not in self.complained:
 *         if not self.vbfNJets30_branch and "vbfNJets30":
 */
  __pyx_v_self->vbfNJets30_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfNJets30"));

  /* "EMTree.pyx":6232
 *         self.vbfNJets30_branch = the_tree.GetBranch("vbfNJets30")
 *         #if not self.vbfNJets30_branch and "vbfNJets30" not in self.complained:
 *         if not self.vbfNJets30_branch and "vbfNJets30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfNJets30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfNJets30")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfNJets30_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1534_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1534_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6233
 *         #if not self.vbfNJets30_branch and "vbfNJets30" not in self.complained:
 *         if not self.vbfNJets30_branch and "vbfNJets30":
 *             warnings.warn( "EMTree: Expected branch vbfNJets30 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfNJets30")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__512, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6232
 *         self.vbfNJets30_branch = the_tree.GetBranch("vbfNJets30")
 *         #if not self.vbfNJets30_branch and "vbfNJets30" not in self.complained:
 *         if not self.vbfNJets30_branch and "vbfNJets30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfNJets30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfNJets30")
 */
    goto __pyx_L1533;
  }

  /* "EMTree.pyx":6236
 *             #self.complained.add("vbfNJets30")
 *         else:
 *             self.vbfNJets30_branch.SetAddress(<void*>&self.vbfNJets30_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfj1eta"
 */
  /*else*/ {
    __pyx_v_self->vbfNJets30_branch->SetAddress(((void *)(&__pyx_v_self->vbfNJets30_value)));
  }
  __pyx_L1533:;

  /* "EMTree.pyx":6239
 * 
 *         #print "making vbfj1eta"
 *         self.vbfj1eta_branch = the_tree.GetBranch("vbfj1eta")             # <<<<<<<<<<<<<<
 *         #if not self.vbfj1eta_branch and "vbfj1eta" not in self.complained:
 *         if not self.vbfj1eta_branch and "vbfj1eta":
 */
  __pyx_v_self->vbfj1eta_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfj1eta"));

  /* "EMTree.pyx":6241
 *         self.vbfj1eta_branch = the_tree.GetBranch("vbfj1eta")
 *         #if not self.vbfj1eta_branch and "vbfj1eta" not in self.complained:
 *         if not self.vbfj1eta_branch and "vbfj1eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfj1eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj1eta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfj1eta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1537_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1537_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6242
 *         #if not self.vbfj1eta_branch and "vbfj1eta" not in self.complained:
 *         if not self.vbfj1eta_branch and "vbfj1eta":
 *             warnings.warn( "EMTree: Expected branch vbfj1eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfj1eta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6242, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6242, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__513, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6242, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6241
 *         self.vbfj1eta_branch = the_tree.GetBranch("vbfj1eta")
 *         #if not self.vbfj1eta_branch and "vbfj1eta" not in self.complained:
 *         if not self.vbfj1eta_branch and "vbfj1eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfj1eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj1eta")
 */
    goto __pyx_L1536;
  }

  /* "EMTree.pyx":6245
 *             #self.complained.add("vbfj1eta")
 *         else:
 *             self.vbfj1eta_branch.SetAddress(<void*>&self.vbfj1eta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfj1pt"
 */
  /*else*/ {
    __pyx_v_self->vbfj1eta_branch->SetAddress(((void *)(&__pyx_v_self->vbfj1eta_value)));
  }
  __pyx_L1536:;

  /* "EMTree.pyx":6248
 * 
 *         #print "making vbfj1pt"
 *         self.vbfj1pt_branch = the_tree.GetBranch("vbfj1pt")             # <<<<<<<<<<<<<<
 *         #if not self.vbfj1pt_branch and "vbfj1pt" not in self.complained:
 *         if not self.vbfj1pt_branch and "vbfj1pt":
 */
  __pyx_v_self->vbfj1pt_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfj1pt"));

  /* "EMTree.pyx":6250
 *         self.vbfj1pt_branch = the_tree.GetBranch("vbfj1pt")
 *         #if not self.vbfj1pt_branch and "vbfj1pt" not in self.complained:
 *         if not self.vbfj1pt_branch and "vbfj1pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfj1pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj1pt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfj1pt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1540_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1540_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6251
 *         #if not self.vbfj1pt_branch and "vbfj1pt" not in self.complained:
 *         if not self.vbfj1pt_branch and "vbfj1pt":
 *             warnings.warn( "EMTree: Expected branch vbfj1pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfj1pt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6251, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6251, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__514, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6251, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6250
 *         self.vbfj1pt_branch = the_tree.GetBranch("vbfj1pt")
 *         #if not self.vbfj1pt_branch and "vbfj1pt" not in self.complained:
 *         if not self.vbfj1pt_branch and "vbfj1pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfj1pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj1pt")
 */
    goto __pyx_L1539;
  }

  /* "EMTree.pyx":6254
 *             #self.complained.add("vbfj1pt")
 *         else:
 *             self.vbfj1pt_branch.SetAddress(<void*>&self.vbfj1pt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfj2eta"
 */
  /*else*/ {
    __pyx_v_self->vbfj1pt_branch->SetAddress(((void *)(&__pyx_v_self->vbfj1pt_value)));
  }
  __pyx_L1539:;

  /* "EMTree.pyx":6257
 * 
 *         #print "making vbfj2eta"
 *         self.vbfj2eta_branch = the_tree.GetBranch("vbfj2eta")             # <<<<<<<<<<<<<<
 *         #if not self.vbfj2eta_branch and "vbfj2eta" not in self.complained:
 *         if not self.vbfj2eta_branch and "vbfj2eta":
 */
  __pyx_v_self->vbfj2eta_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfj2eta"));

  /* "EMTree.pyx":6259
 *         self.vbfj2eta_branch = the_tree.GetBranch("vbfj2eta")
 *         #if not self.vbfj2eta_branch and "vbfj2eta" not in self.complained:
 *         if not self.vbfj2eta_branch and "vbfj2eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfj2eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj2eta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfj2eta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1543_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1543_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6260
 *         #if not self.vbfj2eta_branch and "vbfj2eta" not in self.complained:
 *         if not self.vbfj2eta_branch and "vbfj2eta":
 *             warnings.warn( "EMTree: Expected branch vbfj2eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfj2eta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6260, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6260, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__515, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6260, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6259
 *         self.vbfj2eta_branch = the_tree.GetBranch("vbfj2eta")
 *         #if not self.vbfj2eta_branch and "vbfj2eta" not in self.complained:
 *         if not self.vbfj2eta_branch and "vbfj2eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfj2eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj2eta")
 */
    goto __pyx_L1542;
  }

  /* "EMTree.pyx":6263
 *             #self.complained.add("vbfj2eta")
 *         else:
 *             self.vbfj2eta_branch.SetAddress(<void*>&self.vbfj2eta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfj2pt"
 */
  /*else*/ {
    __pyx_v_self->vbfj2eta_branch->SetAddress(((void *)(&__pyx_v_self->vbfj2eta_value)));
  }
  __pyx_L1542:;

  /* "EMTree.pyx":6266
 * 
 *         #print "making vbfj2pt"
 *         self.vbfj2pt_branch = the_tree.GetBranch("vbfj2pt")             # <<<<<<<<<<<<<<
 *         #if not self.vbfj2pt_branch and "vbfj2pt" not in self.complained:
 *         if not self.vbfj2pt_branch and "vbfj2pt":
 */
  __pyx_v_self->vbfj2pt_branch = __pyx_v_the_tree->GetBranch(((char *)"vbfj2pt"));

  /* "EMTree.pyx":6268
 *         self.vbfj2pt_branch = the_tree.GetBranch("vbfj2pt")
 *         #if not self.vbfj2pt_branch and "vbfj2pt" not in self.complained:
 *         if not self.vbfj2pt_branch and "vbfj2pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfj2pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj2pt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfj2pt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1546_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1546_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6269
 *         #if not self.vbfj2pt_branch and "vbfj2pt" not in self.complained:
 *         if not self.vbfj2pt_branch and "vbfj2pt":
 *             warnings.warn( "EMTree: Expected branch vbfj2pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfj2pt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6269, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6269, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__516, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6269, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6268
 *         self.vbfj2pt_branch = the_tree.GetBranch("vbfj2pt")
 *         #if not self.vbfj2pt_branch and "vbfj2pt" not in self.complained:
 *         if not self.vbfj2pt_branch and "vbfj2pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vbfj2pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj2pt")
 */
    goto __pyx_L1545;
  }

  /* "EMTree.pyx":6272
 *             #self.complained.add("vbfj2pt")
 *         else:
 *             self.vbfj2pt_branch.SetAddress(<void*>&self.vbfj2pt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vispX"
 */
  /*else*/ {
    __pyx_v_self->vbfj2pt_branch->SetAddress(((void *)(&__pyx_v_self->vbfj2pt_value)));
  }
  __pyx_L1545:;

  /* "EMTree.pyx":6275
 * 
 *         #print "making vispX"
 *         self.vispX_branch = the_tree.GetBranch("vispX")             # <<<<<<<<<<<<<<
 *         #if not self.vispX_branch and "vispX" not in self.complained:
 *         if not self.vispX_branch and "vispX":
 */
  __pyx_v_self->vispX_branch = __pyx_v_the_tree->GetBranch(((char *)"vispX"));

  /* "EMTree.pyx":6277
 *         self.vispX_branch = the_tree.GetBranch("vispX")
 *         #if not self.vispX_branch and "vispX" not in self.complained:
 *         if not self.vispX_branch and "vispX":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vispX does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vispX")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vispX_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1549_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1549_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6278
 *         #if not self.vispX_branch and "vispX" not in self.complained:
 *         if not self.vispX_branch and "vispX":
 *             warnings.warn( "EMTree: Expected branch vispX does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vispX")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6278, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6278, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__517, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6278, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6277
 *         self.vispX_branch = the_tree.GetBranch("vispX")
 *         #if not self.vispX_branch and "vispX" not in self.complained:
 *         if not self.vispX_branch and "vispX":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vispX does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vispX")
 */
    goto __pyx_L1548;
  }

  /* "EMTree.pyx":6281
 *             #self.complained.add("vispX")
 *         else:
 *             self.vispX_branch.SetAddress(<void*>&self.vispX_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vispY"
 */
  /*else*/ {
    __pyx_v_self->vispX_branch->SetAddress(((void *)(&__pyx_v_self->vispX_value)));
  }
  __pyx_L1548:;

  /* "EMTree.pyx":6284
 * 
 *         #print "making vispY"
 *         self.vispY_branch = the_tree.GetBranch("vispY")             # <<<<<<<<<<<<<<
 *         #if not self.vispY_branch and "vispY" not in self.complained:
 *         if not self.vispY_branch and "vispY":
 */
  __pyx_v_self->vispY_branch = __pyx_v_the_tree->GetBranch(((char *)"vispY"));

  /* "EMTree.pyx":6286
 *         self.vispY_branch = the_tree.GetBranch("vispY")
 *         #if not self.vispY_branch and "vispY" not in self.complained:
 *         if not self.vispY_branch and "vispY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vispY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vispY")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vispY_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1552_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1552_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6287
 *         #if not self.vispY_branch and "vispY" not in self.complained:
 *         if not self.vispY_branch and "vispY":
 *             warnings.warn( "EMTree: Expected branch vispY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vispY")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6287, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6287, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__518, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6287, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6286
 *         self.vispY_branch = the_tree.GetBranch("vispY")
 *         #if not self.vispY_branch and "vispY" not in self.complained:
 *         if not self.vispY_branch and "vispY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch vispY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vispY")
 */
    goto __pyx_L1551;
  }

  /* "EMTree.pyx":6290
 *             #self.complained.add("vispY")
 *         else:
 *             self.vispY_branch.SetAddress(<void*>&self.vispY_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making idx"
 */
  /*else*/ {
    __pyx_v_self->vispY_branch->SetAddress(((void *)(&__pyx_v_self->vispY_value)));
  }
  __pyx_L1551:;

  /* "EMTree.pyx":6293
 * 
 *         #print "making idx"
 *         self.idx_branch = the_tree.GetBranch("idx")             # <<<<<<<<<<<<<<
 *         #if not self.idx_branch and "idx" not in self.complained:
 *         if not self.idx_branch and "idx":
 */
  __pyx_v_self->idx_branch = __pyx_v_the_tree->GetBranch(((char *)"idx"));

  /* "EMTree.pyx":6295
 *         self.idx_branch = the_tree.GetBranch("idx")
 *         #if not self.idx_branch and "idx" not in self.complained:
 *         if not self.idx_branch and "idx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch idx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("idx")
 */
  __pyx_t_2 = ((!(__pyx_v_self->idx_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L1555_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L1555_bool_binop_done:;
  if (__pyx_t_1) {

    /* "EMTree.pyx":6296
 *         #if not self.idx_branch and "idx" not in self.complained:
 *         if not self.idx_branch and "idx":
 *             warnings.warn( "EMTree: Expected branch idx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("idx")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6296, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 6296, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__519, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6296, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "EMTree.pyx":6295
 *         self.idx_branch = the_tree.GetBranch("idx")
 *         #if not self.idx_branch and "idx" not in self.complained:
 *         if not self.idx_branch and "idx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "EMTree: Expected branch idx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("idx")
 */
    goto __pyx_L1554;
  }

  /* "EMTree.pyx":6299
 *             #self.complained.add("idx")
 *         else:
 *             self.idx_branch.SetAddress(<void*>&self.idx_value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __pyx_v_self->idx_branch->SetAddress(((void *)(&__pyx_v_self->idx_value)));
  }
  __pyx_L1554:;

  /* "EMTree.pyx":1636
 *             self.setup_branches(new_tree)
 * 
 *     cdef setup_branches(self, TTree* the_tree):             # <<<<<<<<<<<<<<
 *         #print "setup"
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("EMTree.EMTree.setup_branches", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_6EMTree_6EMTree_4generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "EMTree.pyx":6303
 * 
 *     # Iterating over the tree
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         self.ientry = 0
 *         while self.ientry < self.tree.GetEntries():
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_3__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_3__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_2__iter__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_2__iter__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  struct __pyx_obj_6EMTree___pyx_scope_struct____iter__ *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__", 0);
  __pyx_cur_scope = (struct __pyx_obj_6EMTree___pyx_scope_struct____iter__ *)__pyx_tp_new_6EMTree___pyx_scope_struct____iter__(__pyx_ptype_6EMTree___pyx_scope_struct____iter__, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_6EMTree___pyx_scope_struct____iter__ *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 6303, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_6EMTree_6EMTree_4generator, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_iter, __pyx_n_s_EMTree___iter, __pyx_n_s_EMTree); if (unlikely(!gen)) __PYX_ERR(0, 6303, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("EMTree.EMTree.__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_6EMTree_6EMTree_4generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_6EMTree___pyx_scope_struct____iter__ *__pyx_cur_scope = ((struct __pyx_obj_6EMTree___pyx_scope_struct____iter__ *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 6303, __pyx_L1_error)

  /* "EMTree.pyx":6304
 *     # Iterating over the tree
 *     def __iter__(self):
 *         self.ientry = 0             # <<<<<<<<<<<<<<
 *         while self.ientry < self.tree.GetEntries():
 *             self.load_entry(self.ientry)
 */
  __pyx_cur_scope->__pyx_v_self->ientry = 0;

  /* "EMTree.pyx":6305
 *     def __iter__(self):
 *         self.ientry = 0
 *         while self.ientry < self.tree.GetEntries():             # <<<<<<<<<<<<<<
 *             self.load_entry(self.ientry)
 *             yield self
 */
  while (1) {
    __pyx_t_1 = ((__pyx_cur_scope->__pyx_v_self->ientry < __pyx_cur_scope->__pyx_v_self->tree->GetEntries()) != 0);
    if (!__pyx_t_1) break;

    /* "EMTree.pyx":6306
 *         self.ientry = 0
 *         while self.ientry < self.tree.GetEntries():
 *             self.load_entry(self.ientry)             # <<<<<<<<<<<<<<
 *             yield self
 *             self.ientry += 1
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_6EMTree_EMTree *)__pyx_cur_scope->__pyx_v_self->__pyx_vtab)->load_entry(__pyx_cur_scope->__pyx_v_self, __pyx_cur_scope->__pyx_v_self->ientry); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 6306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "EMTree.pyx":6307
 *         while self.ientry < self.tree.GetEntries():
 *             self.load_entry(self.ientry)
 *             yield self             # <<<<<<<<<<<<<<
 *             self.ientry += 1
 * 
 */
    __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_v_self));
    __pyx_r = ((PyObject *)__pyx_cur_scope->__pyx_v_self);
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 6307, __pyx_L1_error)

    /* "EMTree.pyx":6308
 *             self.load_entry(self.ientry)
 *             yield self
 *             self.ientry += 1             # <<<<<<<<<<<<<<
 * 
 *     # Iterate over rows which pass the filter
 */
    __pyx_cur_scope->__pyx_v_self->ientry = (__pyx_cur_scope->__pyx_v_self->ientry + 1);
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "EMTree.pyx":6303
 * 
 *     # Iterating over the tree
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         self.ientry = 0
 *         while self.ientry < self.tree.GetEntries():
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_6EMTree_6EMTree_7generator1(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "EMTree.pyx":6311
 * 
 *     # Iterate over rows which pass the filter
 *     def where(self, filter):             # <<<<<<<<<<<<<<
 *         print "where"
 *         cdef TTreeFormula* formula = new TTreeFormula(
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6where(PyObject *__pyx_v_self, PyObject *__pyx_v_filter); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6where(PyObject *__pyx_v_self, PyObject *__pyx_v_filter) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("where (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5where(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self), ((PyObject *)__pyx_v_filter));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5where(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self, PyObject *__pyx_v_filter) {
  struct __pyx_obj_6EMTree___pyx_scope_struct_1_where *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("where", 0);
  __pyx_cur_scope = (struct __pyx_obj_6EMTree___pyx_scope_struct_1_where *)__pyx_tp_new_6EMTree___pyx_scope_struct_1_where(__pyx_ptype_6EMTree___pyx_scope_struct_1_where, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_6EMTree___pyx_scope_struct_1_where *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 6311, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_filter = __pyx_v_filter;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_filter);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_filter);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_6EMTree_6EMTree_7generator1, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_where, __pyx_n_s_EMTree_where, __pyx_n_s_EMTree); if (unlikely(!gen)) __PYX_ERR(0, 6311, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("EMTree.EMTree.where", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_6EMTree_6EMTree_7generator1(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_6EMTree___pyx_scope_struct_1_where *__pyx_cur_scope = ((struct __pyx_obj_6EMTree___pyx_scope_struct_1_where *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  char *__pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("where", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L8_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 6311, __pyx_L1_error)

  /* "EMTree.pyx":6312
 *     # Iterate over rows which pass the filter
 *     def where(self, filter):
 *         print "where"             # <<<<<<<<<<<<<<
 *         cdef TTreeFormula* formula = new TTreeFormula(
 *             "cyiter", filter, self.tree)
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_where) < 0) __PYX_ERR(0, 6312, __pyx_L1_error)

  /* "EMTree.pyx":6314
 *         print "where"
 *         cdef TTreeFormula* formula = new TTreeFormula(
 *             "cyiter", filter, self.tree)             # <<<<<<<<<<<<<<
 *         self.ientry = 0
 *         cdef TTree* currentTree = self.tree.GetTree()
 */
  __pyx_t_1 = __Pyx_PyObject_AsWritableString(__pyx_cur_scope->__pyx_v_filter); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) __PYX_ERR(0, 6314, __pyx_L1_error)

  /* "EMTree.pyx":6313
 *     def where(self, filter):
 *         print "where"
 *         cdef TTreeFormula* formula = new TTreeFormula(             # <<<<<<<<<<<<<<
 *             "cyiter", filter, self.tree)
 *         self.ientry = 0
 */
  __pyx_cur_scope->__pyx_v_formula = new TTreeFormula(((char *)"cyiter"), __pyx_t_1, __pyx_cur_scope->__pyx_v_self->tree);

  /* "EMTree.pyx":6315
 *         cdef TTreeFormula* formula = new TTreeFormula(
 *             "cyiter", filter, self.tree)
 *         self.ientry = 0             # <<<<<<<<<<<<<<
 *         cdef TTree* currentTree = self.tree.GetTree()
 *         while self.ientry < self.tree.GetEntries():
 */
  __pyx_cur_scope->__pyx_v_self->ientry = 0;

  /* "EMTree.pyx":6316
 *             "cyiter", filter, self.tree)
 *         self.ientry = 0
 *         cdef TTree* currentTree = self.tree.GetTree()             # <<<<<<<<<<<<<<
 *         while self.ientry < self.tree.GetEntries():
 *             self.tree.LoadTree(self.ientry)
 */
  __pyx_cur_scope->__pyx_v_currentTree = __pyx_cur_scope->__pyx_v_self->tree->GetTree();

  /* "EMTree.pyx":6317
 *         self.ientry = 0
 *         cdef TTree* currentTree = self.tree.GetTree()
 *         while self.ientry < self.tree.GetEntries():             # <<<<<<<<<<<<<<
 *             self.tree.LoadTree(self.ientry)
 *             if currentTree != self.tree.GetTree():
 */
  while (1) {
    __pyx_t_2 = ((__pyx_cur_scope->__pyx_v_self->ientry < __pyx_cur_scope->__pyx_v_self->tree->GetEntries()) != 0);
    if (!__pyx_t_2) break;

    /* "EMTree.pyx":6318
 *         cdef TTree* currentTree = self.tree.GetTree()
 *         while self.ientry < self.tree.GetEntries():
 *             self.tree.LoadTree(self.ientry)             # <<<<<<<<<<<<<<
 *             if currentTree != self.tree.GetTree():
 *                 currentTree = self.tree.GetTree()
 */
    (void)(__pyx_cur_scope->__pyx_v_self->tree->LoadTree(__pyx_cur_scope->__pyx_v_self->ientry));

    /* "EMTree.pyx":6319
 *         while self.ientry < self.tree.GetEntries():
 *             self.tree.LoadTree(self.ientry)
 *             if currentTree != self.tree.GetTree():             # <<<<<<<<<<<<<<
 *                 currentTree = self.tree.GetTree()
 *                 formula.SetTree(currentTree)
 */
    __pyx_t_2 = ((__pyx_cur_scope->__pyx_v_currentTree != __pyx_cur_scope->__pyx_v_self->tree->GetTree()) != 0);
    if (__pyx_t_2) {

      /* "EMTree.pyx":6320
 *             self.tree.LoadTree(self.ientry)
 *             if currentTree != self.tree.GetTree():
 *                 currentTree = self.tree.GetTree()             # <<<<<<<<<<<<<<
 *                 formula.SetTree(currentTree)
 *                 formula.UpdateFormulaLeaves()
 */
      __pyx_cur_scope->__pyx_v_currentTree = __pyx_cur_scope->__pyx_v_self->tree->GetTree();

      /* "EMTree.pyx":6321
 *             if currentTree != self.tree.GetTree():
 *                 currentTree = self.tree.GetTree()
 *                 formula.SetTree(currentTree)             # <<<<<<<<<<<<<<
 *                 formula.UpdateFormulaLeaves()
 *             if formula.EvalInstance(0, NULL):
 */
      __pyx_cur_scope->__pyx_v_formula->SetTree(__pyx_cur_scope->__pyx_v_currentTree);

      /* "EMTree.pyx":6322
 *                 currentTree = self.tree.GetTree()
 *                 formula.SetTree(currentTree)
 *                 formula.UpdateFormulaLeaves()             # <<<<<<<<<<<<<<
 *             if formula.EvalInstance(0, NULL):
 *                 yield self
 */
      __pyx_cur_scope->__pyx_v_formula->UpdateFormulaLeaves();

      /* "EMTree.pyx":6319
 *         while self.ientry < self.tree.GetEntries():
 *             self.tree.LoadTree(self.ientry)
 *             if currentTree != self.tree.GetTree():             # <<<<<<<<<<<<<<
 *                 currentTree = self.tree.GetTree()
 *                 formula.SetTree(currentTree)
 */
    }

    /* "EMTree.pyx":6323
 *                 formula.SetTree(currentTree)
 *                 formula.UpdateFormulaLeaves()
 *             if formula.EvalInstance(0, NULL):             # <<<<<<<<<<<<<<
 *                 yield self
 *             self.ientry += 1
 */
    __pyx_t_2 = (__pyx_cur_scope->__pyx_v_formula->EvalInstance(0, NULL) != 0);
    if (__pyx_t_2) {

      /* "EMTree.pyx":6324
 *                 formula.UpdateFormulaLeaves()
 *             if formula.EvalInstance(0, NULL):
 *                 yield self             # <<<<<<<<<<<<<<
 *             self.ientry += 1
 *         del formula
 */
      __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_v_self));
      __pyx_r = ((PyObject *)__pyx_cur_scope->__pyx_v_self);
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L8_resume_from_yield:;
      if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 6324, __pyx_L1_error)

      /* "EMTree.pyx":6323
 *                 formula.SetTree(currentTree)
 *                 formula.UpdateFormulaLeaves()
 *             if formula.EvalInstance(0, NULL):             # <<<<<<<<<<<<<<
 *                 yield self
 *             self.ientry += 1
 */
    }

    /* "EMTree.pyx":6325
 *             if formula.EvalInstance(0, NULL):
 *                 yield self
 *             self.ientry += 1             # <<<<<<<<<<<<<<
 *         del formula
 * 
 */
    __pyx_cur_scope->__pyx_v_self->ientry = (__pyx_cur_scope->__pyx_v_self->ientry + 1);
  }

  /* "EMTree.pyx":6326
 *                 yield self
 *             self.ientry += 1
 *         del formula             # <<<<<<<<<<<<<<
 * 
 *     # Getting/setting the Tree entry number
 */
  delete __pyx_cur_scope->__pyx_v_formula;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "EMTree.pyx":6311
 * 
 *     # Iterate over rows which pass the filter
 *     def where(self, filter):             # <<<<<<<<<<<<<<
 *         print "where"
 *         cdef TTreeFormula* formula = new TTreeFormula(
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("where", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6330
 *     # Getting/setting the Tree entry number
 *     property entry:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.ientry
 *         def __set__(self, int i):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5entry_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5entry_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5entry___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5entry___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6331
 *     property entry:
 *         def __get__(self):
 *             return self.ientry             # <<<<<<<<<<<<<<
 *         def __set__(self, int i):
 *             print i
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v_self->ientry); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6330
 *     # Getting/setting the Tree entry number
 *     property entry:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.ientry
 *         def __set__(self, int i):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.entry.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6332
 *         def __get__(self):
 *             return self.ientry
 *         def __set__(self, int i):             # <<<<<<<<<<<<<<
 *             print i
 *             self.ientry = i
 */

/* Python wrapper */
static int __pyx_pw_6EMTree_6EMTree_5entry_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static int __pyx_pw_6EMTree_6EMTree_5entry_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  int __pyx_v_i;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_As_int(__pyx_arg_i); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 6332, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("EMTree.EMTree.entry.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5entry_2__set__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self), ((int)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6EMTree_6EMTree_5entry_2__set__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self, int __pyx_v_i) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "EMTree.pyx":6333
 *             return self.ientry
 *         def __set__(self, int i):
 *             print i             # <<<<<<<<<<<<<<
 *             self.ientry = i
 *             self.load_entry(i)
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PrintOne(0, __pyx_t_1) < 0) __PYX_ERR(0, 6333, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "EMTree.pyx":6334
 *         def __set__(self, int i):
 *             print i
 *             self.ientry = i             # <<<<<<<<<<<<<<
 *             self.load_entry(i)
 * 
 */
  __pyx_v_self->ientry = __pyx_v_i;

  /* "EMTree.pyx":6335
 *             print i
 *             self.ientry = i
 *             self.load_entry(i)             # <<<<<<<<<<<<<<
 * 
 *     # Access to the current branch values
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_6EMTree_EMTree *)__pyx_v_self->__pyx_vtab)->load_entry(__pyx_v_self, __pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "EMTree.pyx":6332
 *         def __get__(self):
 *             return self.ientry
 *         def __set__(self, int i):             # <<<<<<<<<<<<<<
 *             print i
 *             self.ientry = i
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.entry.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6340
 * 
 *     property Ele24LooseHPSTau30Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ele24LooseHPSTau30Pass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele24LooseHPSTau30Pass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_22Ele24LooseHPSTau30Pass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_22Ele24LooseHPSTau30Pass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_22Ele24LooseHPSTau30Pass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_22Ele24LooseHPSTau30Pass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6341
 *     property Ele24LooseHPSTau30Pass:
 *         def __get__(self):
 *             self.Ele24LooseHPSTau30Pass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Ele24LooseHPSTau30Pass_value
 * 
 */
  (void)(__pyx_v_self->Ele24LooseHPSTau30Pass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6342
 *         def __get__(self):
 *             self.Ele24LooseHPSTau30Pass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele24LooseHPSTau30Pass_value             # <<<<<<<<<<<<<<
 * 
 *     property Ele24LooseHPSTau30TightIDPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Ele24LooseHPSTau30Pass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6340
 * 
 *     property Ele24LooseHPSTau30Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ele24LooseHPSTau30Pass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele24LooseHPSTau30Pass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Ele24LooseHPSTau30Pass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6345
 * 
 *     property Ele24LooseHPSTau30TightIDPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ele24LooseHPSTau30TightIDPass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele24LooseHPSTau30TightIDPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_29Ele24LooseHPSTau30TightIDPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_29Ele24LooseHPSTau30TightIDPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_29Ele24LooseHPSTau30TightIDPass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_29Ele24LooseHPSTau30TightIDPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6346
 *     property Ele24LooseHPSTau30TightIDPass:
 *         def __get__(self):
 *             self.Ele24LooseHPSTau30TightIDPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Ele24LooseHPSTau30TightIDPass_value
 * 
 */
  (void)(__pyx_v_self->Ele24LooseHPSTau30TightIDPass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6347
 *         def __get__(self):
 *             self.Ele24LooseHPSTau30TightIDPass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele24LooseHPSTau30TightIDPass_value             # <<<<<<<<<<<<<<
 * 
 *     property Ele24LooseTau30Pass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Ele24LooseHPSTau30TightIDPass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6345
 * 
 *     property Ele24LooseHPSTau30TightIDPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ele24LooseHPSTau30TightIDPass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele24LooseHPSTau30TightIDPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Ele24LooseHPSTau30TightIDPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6350
 * 
 *     property Ele24LooseTau30Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ele24LooseTau30Pass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele24LooseTau30Pass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_19Ele24LooseTau30Pass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_19Ele24LooseTau30Pass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_19Ele24LooseTau30Pass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_19Ele24LooseTau30Pass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6351
 *     property Ele24LooseTau30Pass:
 *         def __get__(self):
 *             self.Ele24LooseTau30Pass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Ele24LooseTau30Pass_value
 * 
 */
  (void)(__pyx_v_self->Ele24LooseTau30Pass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6352
 *         def __get__(self):
 *             self.Ele24LooseTau30Pass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele24LooseTau30Pass_value             # <<<<<<<<<<<<<<
 * 
 *     property Ele24LooseTau30TightIDPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Ele24LooseTau30Pass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6350
 * 
 *     property Ele24LooseTau30Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ele24LooseTau30Pass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele24LooseTau30Pass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Ele24LooseTau30Pass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6355
 * 
 *     property Ele24LooseTau30TightIDPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ele24LooseTau30TightIDPass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele24LooseTau30TightIDPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_26Ele24LooseTau30TightIDPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_26Ele24LooseTau30TightIDPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_26Ele24LooseTau30TightIDPass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_26Ele24LooseTau30TightIDPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6356
 *     property Ele24LooseTau30TightIDPass:
 *         def __get__(self):
 *             self.Ele24LooseTau30TightIDPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Ele24LooseTau30TightIDPass_value
 * 
 */
  (void)(__pyx_v_self->Ele24LooseTau30TightIDPass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6357
 *         def __get__(self):
 *             self.Ele24LooseTau30TightIDPass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele24LooseTau30TightIDPass_value             # <<<<<<<<<<<<<<
 * 
 *     property Ele27WPTightPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Ele24LooseTau30TightIDPass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6355
 * 
 *     property Ele24LooseTau30TightIDPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ele24LooseTau30TightIDPass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele24LooseTau30TightIDPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Ele24LooseTau30TightIDPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6360
 * 
 *     property Ele27WPTightPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ele27WPTightPass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele27WPTightPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16Ele27WPTightPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16Ele27WPTightPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16Ele27WPTightPass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16Ele27WPTightPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6361
 *     property Ele27WPTightPass:
 *         def __get__(self):
 *             self.Ele27WPTightPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Ele27WPTightPass_value
 * 
 */
  (void)(__pyx_v_self->Ele27WPTightPass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6362
 *         def __get__(self):
 *             self.Ele27WPTightPass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele27WPTightPass_value             # <<<<<<<<<<<<<<
 * 
 *     property Ele32WPTightPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Ele27WPTightPass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6360
 * 
 *     property Ele27WPTightPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ele27WPTightPass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele27WPTightPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Ele27WPTightPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6365
 * 
 *     property Ele32WPTightPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ele32WPTightPass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele32WPTightPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16Ele32WPTightPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16Ele32WPTightPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16Ele32WPTightPass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16Ele32WPTightPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6366
 *     property Ele32WPTightPass:
 *         def __get__(self):
 *             self.Ele32WPTightPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Ele32WPTightPass_value
 * 
 */
  (void)(__pyx_v_self->Ele32WPTightPass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6367
 *         def __get__(self):
 *             self.Ele32WPTightPass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele32WPTightPass_value             # <<<<<<<<<<<<<<
 * 
 *     property Ele35WPTightPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Ele32WPTightPass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6367, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6365
 * 
 *     property Ele32WPTightPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ele32WPTightPass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele32WPTightPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Ele32WPTightPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6370
 * 
 *     property Ele35WPTightPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ele35WPTightPass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele35WPTightPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16Ele35WPTightPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16Ele35WPTightPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16Ele35WPTightPass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16Ele35WPTightPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6371
 *     property Ele35WPTightPass:
 *         def __get__(self):
 *             self.Ele35WPTightPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Ele35WPTightPass_value
 * 
 */
  (void)(__pyx_v_self->Ele35WPTightPass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6372
 *         def __get__(self):
 *             self.Ele35WPTightPass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele35WPTightPass_value             # <<<<<<<<<<<<<<
 * 
 *     property EmbPtWeight:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Ele35WPTightPass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6370
 * 
 *     property Ele35WPTightPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ele35WPTightPass_branch.GetEntry(self.localentry, 0)
 *             return self.Ele35WPTightPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Ele35WPTightPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6375
 * 
 *     property EmbPtWeight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.EmbPtWeight_branch.GetEntry(self.localentry, 0)
 *             return self.EmbPtWeight_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11EmbPtWeight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11EmbPtWeight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11EmbPtWeight___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11EmbPtWeight___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6376
 *     property EmbPtWeight:
 *         def __get__(self):
 *             self.EmbPtWeight_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.EmbPtWeight_value
 * 
 */
  (void)(__pyx_v_self->EmbPtWeight_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6377
 *         def __get__(self):
 *             self.EmbPtWeight_branch.GetEntry(self.localentry, 0)
 *             return self.EmbPtWeight_value             # <<<<<<<<<<<<<<
 * 
 *     property Eta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->EmbPtWeight_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6377, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6375
 * 
 *     property EmbPtWeight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.EmbPtWeight_branch.GetEntry(self.localentry, 0)
 *             return self.EmbPtWeight_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.EmbPtWeight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6380
 * 
 *     property Eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Eta_branch.GetEntry(self.localentry, 0)
 *             return self.Eta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_3Eta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_3Eta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_3Eta___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_3Eta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6381
 *     property Eta:
 *         def __get__(self):
 *             self.Eta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Eta_value
 * 
 */
  (void)(__pyx_v_self->Eta_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6382
 *         def __get__(self):
 *             self.Eta_branch.GetEntry(self.localentry, 0)
 *             return self.Eta_value             # <<<<<<<<<<<<<<
 * 
 *     property Flag_BadChargedCandidateFilter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Eta_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6382, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6380
 * 
 *     property Eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Eta_branch.GetEntry(self.localentry, 0)
 *             return self.Eta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Eta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6385
 * 
 *     property Flag_BadChargedCandidateFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_BadChargedCandidateFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_BadChargedCandidateFilter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_30Flag_BadChargedCandidateFilter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_30Flag_BadChargedCandidateFilter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_30Flag_BadChargedCandidateFilter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_30Flag_BadChargedCandidateFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6386
 *     property Flag_BadChargedCandidateFilter:
 *         def __get__(self):
 *             self.Flag_BadChargedCandidateFilter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Flag_BadChargedCandidateFilter_value
 * 
 */
  (void)(__pyx_v_self->Flag_BadChargedCandidateFilter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6387
 *         def __get__(self):
 *             self.Flag_BadChargedCandidateFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_BadChargedCandidateFilter_value             # <<<<<<<<<<<<<<
 * 
 *     property Flag_BadPFMuonFilter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Flag_BadChargedCandidateFilter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6385
 * 
 *     property Flag_BadChargedCandidateFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_BadChargedCandidateFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_BadChargedCandidateFilter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Flag_BadChargedCandidateFilter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6390
 * 
 *     property Flag_BadPFMuonFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_BadPFMuonFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_BadPFMuonFilter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20Flag_BadPFMuonFilter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20Flag_BadPFMuonFilter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20Flag_BadPFMuonFilter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20Flag_BadPFMuonFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6391
 *     property Flag_BadPFMuonFilter:
 *         def __get__(self):
 *             self.Flag_BadPFMuonFilter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Flag_BadPFMuonFilter_value
 * 
 */
  (void)(__pyx_v_self->Flag_BadPFMuonFilter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6392
 *         def __get__(self):
 *             self.Flag_BadPFMuonFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_BadPFMuonFilter_value             # <<<<<<<<<<<<<<
 * 
 *     property Flag_EcalDeadCellTriggerPrimitiveFilter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Flag_BadPFMuonFilter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6390
 * 
 *     property Flag_BadPFMuonFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_BadPFMuonFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_BadPFMuonFilter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Flag_BadPFMuonFilter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6395
 * 
 *     property Flag_EcalDeadCellTriggerPrimitiveFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_EcalDeadCellTriggerPrimitiveFilter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_39Flag_EcalDeadCellTriggerPrimitiveFilter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_39Flag_EcalDeadCellTriggerPrimitiveFilter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_39Flag_EcalDeadCellTriggerPrimitiveFilter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_39Flag_EcalDeadCellTriggerPrimitiveFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6396
 *     property Flag_EcalDeadCellTriggerPrimitiveFilter:
 *         def __get__(self):
 *             self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Flag_EcalDeadCellTriggerPrimitiveFilter_value
 * 
 */
  (void)(__pyx_v_self->Flag_EcalDeadCellTriggerPrimitiveFilter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6397
 *         def __get__(self):
 *             self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_EcalDeadCellTriggerPrimitiveFilter_value             # <<<<<<<<<<<<<<
 * 
 *     property Flag_HBHENoiseFilter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Flag_EcalDeadCellTriggerPrimitiveFilter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6395
 * 
 *     property Flag_EcalDeadCellTriggerPrimitiveFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_EcalDeadCellTriggerPrimitiveFilter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Flag_EcalDeadCellTriggerPrimitiveFilter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6400
 * 
 *     property Flag_HBHENoiseFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_HBHENoiseFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_HBHENoiseFilter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20Flag_HBHENoiseFilter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20Flag_HBHENoiseFilter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20Flag_HBHENoiseFilter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20Flag_HBHENoiseFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6401
 *     property Flag_HBHENoiseFilter:
 *         def __get__(self):
 *             self.Flag_HBHENoiseFilter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Flag_HBHENoiseFilter_value
 * 
 */
  (void)(__pyx_v_self->Flag_HBHENoiseFilter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6402
 *         def __get__(self):
 *             self.Flag_HBHENoiseFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_HBHENoiseFilter_value             # <<<<<<<<<<<<<<
 * 
 *     property Flag_HBHENoiseIsoFilter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Flag_HBHENoiseFilter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6400
 * 
 *     property Flag_HBHENoiseFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_HBHENoiseFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_HBHENoiseFilter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Flag_HBHENoiseFilter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6405
 * 
 *     property Flag_HBHENoiseIsoFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_HBHENoiseIsoFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_HBHENoiseIsoFilter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_23Flag_HBHENoiseIsoFilter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_23Flag_HBHENoiseIsoFilter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_23Flag_HBHENoiseIsoFilter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_23Flag_HBHENoiseIsoFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6406
 *     property Flag_HBHENoiseIsoFilter:
 *         def __get__(self):
 *             self.Flag_HBHENoiseIsoFilter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Flag_HBHENoiseIsoFilter_value
 * 
 */
  (void)(__pyx_v_self->Flag_HBHENoiseIsoFilter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6407
 *         def __get__(self):
 *             self.Flag_HBHENoiseIsoFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_HBHENoiseIsoFilter_value             # <<<<<<<<<<<<<<
 * 
 *     property Flag_ecalBadCalibReducedMINIAODFilter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Flag_HBHENoiseIsoFilter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6405
 * 
 *     property Flag_HBHENoiseIsoFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_HBHENoiseIsoFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_HBHENoiseIsoFilter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Flag_HBHENoiseIsoFilter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6410
 * 
 *     property Flag_ecalBadCalibReducedMINIAODFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_ecalBadCalibReducedMINIAODFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_ecalBadCalibReducedMINIAODFilter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_37Flag_ecalBadCalibReducedMINIAODFilter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_37Flag_ecalBadCalibReducedMINIAODFilter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_37Flag_ecalBadCalibReducedMINIAODFilter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_37Flag_ecalBadCalibReducedMINIAODFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6411
 *     property Flag_ecalBadCalibReducedMINIAODFilter:
 *         def __get__(self):
 *             self.Flag_ecalBadCalibReducedMINIAODFilter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Flag_ecalBadCalibReducedMINIAODFilter_value
 * 
 */
  (void)(__pyx_v_self->Flag_ecalBadCalibReducedMINIAODFilter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6412
 *         def __get__(self):
 *             self.Flag_ecalBadCalibReducedMINIAODFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_ecalBadCalibReducedMINIAODFilter_value             # <<<<<<<<<<<<<<
 * 
 *     property Flag_eeBadScFilter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Flag_ecalBadCalibReducedMINIAODFilter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6412, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6410
 * 
 *     property Flag_ecalBadCalibReducedMINIAODFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_ecalBadCalibReducedMINIAODFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_ecalBadCalibReducedMINIAODFilter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Flag_ecalBadCalibReducedMINIAODFilter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6415
 * 
 *     property Flag_eeBadScFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_eeBadScFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_eeBadScFilter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_18Flag_eeBadScFilter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_18Flag_eeBadScFilter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_18Flag_eeBadScFilter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_18Flag_eeBadScFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6416
 *     property Flag_eeBadScFilter:
 *         def __get__(self):
 *             self.Flag_eeBadScFilter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Flag_eeBadScFilter_value
 * 
 */
  (void)(__pyx_v_self->Flag_eeBadScFilter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6417
 *         def __get__(self):
 *             self.Flag_eeBadScFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_eeBadScFilter_value             # <<<<<<<<<<<<<<
 * 
 *     property Flag_globalSuperTightHalo2016Filter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Flag_eeBadScFilter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6415
 * 
 *     property Flag_eeBadScFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_eeBadScFilter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_eeBadScFilter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Flag_eeBadScFilter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6420
 * 
 *     property Flag_globalSuperTightHalo2016Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_globalSuperTightHalo2016Filter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_globalSuperTightHalo2016Filter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35Flag_globalSuperTightHalo2016Filter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35Flag_globalSuperTightHalo2016Filter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35Flag_globalSuperTightHalo2016Filter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35Flag_globalSuperTightHalo2016Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6421
 *     property Flag_globalSuperTightHalo2016Filter:
 *         def __get__(self):
 *             self.Flag_globalSuperTightHalo2016Filter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Flag_globalSuperTightHalo2016Filter_value
 * 
 */
  (void)(__pyx_v_self->Flag_globalSuperTightHalo2016Filter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6422
 *         def __get__(self):
 *             self.Flag_globalSuperTightHalo2016Filter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_globalSuperTightHalo2016Filter_value             # <<<<<<<<<<<<<<
 * 
 *     property Flag_goodVertices:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Flag_globalSuperTightHalo2016Filter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6422, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6420
 * 
 *     property Flag_globalSuperTightHalo2016Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_globalSuperTightHalo2016Filter_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_globalSuperTightHalo2016Filter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Flag_globalSuperTightHalo2016Filter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6425
 * 
 *     property Flag_goodVertices:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_goodVertices_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_goodVertices_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_17Flag_goodVertices_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_17Flag_goodVertices_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_17Flag_goodVertices___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_17Flag_goodVertices___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6426
 *     property Flag_goodVertices:
 *         def __get__(self):
 *             self.Flag_goodVertices_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Flag_goodVertices_value
 * 
 */
  (void)(__pyx_v_self->Flag_goodVertices_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6427
 *         def __get__(self):
 *             self.Flag_goodVertices_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_goodVertices_value             # <<<<<<<<<<<<<<
 * 
 *     property GenWeight:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Flag_goodVertices_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6425
 * 
 *     property Flag_goodVertices:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Flag_goodVertices_branch.GetEntry(self.localentry, 0)
 *             return self.Flag_goodVertices_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Flag_goodVertices.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6430
 * 
 *     property GenWeight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.GenWeight_branch.GetEntry(self.localentry, 0)
 *             return self.GenWeight_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_9GenWeight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_9GenWeight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_9GenWeight___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_9GenWeight___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6431
 *     property GenWeight:
 *         def __get__(self):
 *             self.GenWeight_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.GenWeight_value
 * 
 */
  (void)(__pyx_v_self->GenWeight_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6432
 *         def __get__(self):
 *             self.GenWeight_branch.GetEntry(self.localentry, 0)
 *             return self.GenWeight_value             # <<<<<<<<<<<<<<
 * 
 *     property Ht:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->GenWeight_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6430
 * 
 *     property GenWeight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.GenWeight_branch.GetEntry(self.localentry, 0)
 *             return self.GenWeight_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.GenWeight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6435
 * 
 *     property Ht:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ht_branch.GetEntry(self.localentry, 0)
 *             return self.Ht_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_2Ht_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_2Ht_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_2Ht___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_2Ht___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6436
 *     property Ht:
 *         def __get__(self):
 *             self.Ht_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Ht_value
 * 
 */
  (void)(__pyx_v_self->Ht_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6437
 *         def __get__(self):
 *             self.Ht_branch.GetEntry(self.localentry, 0)
 *             return self.Ht_value             # <<<<<<<<<<<<<<
 * 
 *     property IsoMu24Pass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Ht_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6435
 * 
 *     property Ht:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ht_branch.GetEntry(self.localentry, 0)
 *             return self.Ht_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Ht.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6440
 * 
 *     property IsoMu24Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.IsoMu24Pass_branch.GetEntry(self.localentry, 0)
 *             return self.IsoMu24Pass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11IsoMu24Pass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11IsoMu24Pass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11IsoMu24Pass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11IsoMu24Pass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6441
 *     property IsoMu24Pass:
 *         def __get__(self):
 *             self.IsoMu24Pass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.IsoMu24Pass_value
 * 
 */
  (void)(__pyx_v_self->IsoMu24Pass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6442
 *         def __get__(self):
 *             self.IsoMu24Pass_branch.GetEntry(self.localentry, 0)
 *             return self.IsoMu24Pass_value             # <<<<<<<<<<<<<<
 * 
 *     property IsoMu27Pass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->IsoMu24Pass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6440
 * 
 *     property IsoMu24Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.IsoMu24Pass_branch.GetEntry(self.localentry, 0)
 *             return self.IsoMu24Pass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.IsoMu24Pass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6445
 * 
 *     property IsoMu27Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.IsoMu27Pass_branch.GetEntry(self.localentry, 0)
 *             return self.IsoMu27Pass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11IsoMu27Pass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11IsoMu27Pass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11IsoMu27Pass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11IsoMu27Pass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6446
 *     property IsoMu27Pass:
 *         def __get__(self):
 *             self.IsoMu27Pass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.IsoMu27Pass_value
 * 
 */
  (void)(__pyx_v_self->IsoMu27Pass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6447
 *         def __get__(self):
 *             self.IsoMu27Pass_branch.GetEntry(self.localentry, 0)
 *             return self.IsoMu27Pass_value             # <<<<<<<<<<<<<<
 * 
 *     property LT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->IsoMu27Pass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6447, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6445
 * 
 *     property IsoMu27Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.IsoMu27Pass_branch.GetEntry(self.localentry, 0)
 *             return self.IsoMu27Pass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.IsoMu27Pass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6450
 * 
 *     property LT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.LT_branch.GetEntry(self.localentry, 0)
 *             return self.LT_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_2LT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_2LT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_2LT___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_2LT___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6451
 *     property LT:
 *         def __get__(self):
 *             self.LT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.LT_value
 * 
 */
  (void)(__pyx_v_self->LT_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6452
 *         def __get__(self):
 *             self.LT_branch.GetEntry(self.localentry, 0)
 *             return self.LT_value             # <<<<<<<<<<<<<<
 * 
 *     property Mass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->LT_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6450
 * 
 *     property LT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.LT_branch.GetEntry(self.localentry, 0)
 *             return self.LT_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.LT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6455
 * 
 *     property Mass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Mass_branch.GetEntry(self.localentry, 0)
 *             return self.Mass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_4Mass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_4Mass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_4Mass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_4Mass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6456
 *     property Mass:
 *         def __get__(self):
 *             self.Mass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Mass_value
 * 
 */
  (void)(__pyx_v_self->Mass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6457
 *         def __get__(self):
 *             self.Mass_branch.GetEntry(self.localentry, 0)
 *             return self.Mass_value             # <<<<<<<<<<<<<<
 * 
 *     property MassError:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Mass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6457, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6455
 * 
 *     property Mass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Mass_branch.GetEntry(self.localentry, 0)
 *             return self.Mass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Mass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6460
 * 
 *     property MassError:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassError_branch.GetEntry(self.localentry, 0)
 *             return self.MassError_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_9MassError_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_9MassError_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_9MassError___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_9MassError___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6461
 *     property MassError:
 *         def __get__(self):
 *             self.MassError_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.MassError_value
 * 
 */
  (void)(__pyx_v_self->MassError_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6462
 *         def __get__(self):
 *             self.MassError_branch.GetEntry(self.localentry, 0)
 *             return self.MassError_value             # <<<<<<<<<<<<<<
 * 
 *     property MassErrord1:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->MassError_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6462, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6460
 * 
 *     property MassError:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassError_branch.GetEntry(self.localentry, 0)
 *             return self.MassError_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.MassError.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6465
 * 
 *     property MassErrord1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord1_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord1_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11MassErrord1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11MassErrord1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11MassErrord1___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11MassErrord1___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6466
 *     property MassErrord1:
 *         def __get__(self):
 *             self.MassErrord1_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.MassErrord1_value
 * 
 */
  (void)(__pyx_v_self->MassErrord1_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6467
 *         def __get__(self):
 *             self.MassErrord1_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord1_value             # <<<<<<<<<<<<<<
 * 
 *     property MassErrord2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->MassErrord1_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6465
 * 
 *     property MassErrord1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord1_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord1_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.MassErrord1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6470
 * 
 *     property MassErrord2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord2_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord2_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11MassErrord2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11MassErrord2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11MassErrord2___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11MassErrord2___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6471
 *     property MassErrord2:
 *         def __get__(self):
 *             self.MassErrord2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.MassErrord2_value
 * 
 */
  (void)(__pyx_v_self->MassErrord2_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6472
 *         def __get__(self):
 *             self.MassErrord2_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord2_value             # <<<<<<<<<<<<<<
 * 
 *     property MassErrord3:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->MassErrord2_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6470
 * 
 *     property MassErrord2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord2_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord2_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.MassErrord2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6475
 * 
 *     property MassErrord3:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord3_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord3_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11MassErrord3_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11MassErrord3_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11MassErrord3___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11MassErrord3___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6476
 *     property MassErrord3:
 *         def __get__(self):
 *             self.MassErrord3_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.MassErrord3_value
 * 
 */
  (void)(__pyx_v_self->MassErrord3_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6477
 *         def __get__(self):
 *             self.MassErrord3_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord3_value             # <<<<<<<<<<<<<<
 * 
 *     property MassErrord4:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->MassErrord3_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6475
 * 
 *     property MassErrord3:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord3_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord3_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.MassErrord3.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6480
 * 
 *     property MassErrord4:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord4_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord4_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11MassErrord4_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11MassErrord4_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11MassErrord4___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11MassErrord4___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6481
 *     property MassErrord4:
 *         def __get__(self):
 *             self.MassErrord4_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.MassErrord4_value
 * 
 */
  (void)(__pyx_v_self->MassErrord4_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6482
 *         def __get__(self):
 *             self.MassErrord4_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord4_value             # <<<<<<<<<<<<<<
 * 
 *     property Mt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->MassErrord4_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6482, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6480
 * 
 *     property MassErrord4:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord4_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord4_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.MassErrord4.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6485
 * 
 *     property Mt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Mt_branch.GetEntry(self.localentry, 0)
 *             return self.Mt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_2Mt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_2Mt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_2Mt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_2Mt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6486
 *     property Mt:
 *         def __get__(self):
 *             self.Mt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Mt_value
 * 
 */
  (void)(__pyx_v_self->Mt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6487
 *         def __get__(self):
 *             self.Mt_branch.GetEntry(self.localentry, 0)
 *             return self.Mt_value             # <<<<<<<<<<<<<<
 * 
 *     property Mu50Pass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Mt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6485
 * 
 *     property Mt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Mt_branch.GetEntry(self.localentry, 0)
 *             return self.Mt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Mt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6490
 * 
 *     property Mu50Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Mu50Pass_branch.GetEntry(self.localentry, 0)
 *             return self.Mu50Pass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_8Mu50Pass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_8Mu50Pass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_8Mu50Pass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_8Mu50Pass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6491
 *     property Mu50Pass:
 *         def __get__(self):
 *             self.Mu50Pass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Mu50Pass_value
 * 
 */
  (void)(__pyx_v_self->Mu50Pass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6492
 *         def __get__(self):
 *             self.Mu50Pass_branch.GetEntry(self.localentry, 0)
 *             return self.Mu50Pass_value             # <<<<<<<<<<<<<<
 * 
 *     property NUP:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Mu50Pass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6492, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6490
 * 
 *     property Mu50Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Mu50Pass_branch.GetEntry(self.localentry, 0)
 *             return self.Mu50Pass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Mu50Pass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6495
 * 
 *     property NUP:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.NUP_branch.GetEntry(self.localentry, 0)
 *             return self.NUP_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_3NUP_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_3NUP_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_3NUP___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_3NUP___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6496
 *     property NUP:
 *         def __get__(self):
 *             self.NUP_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.NUP_value
 * 
 */
  (void)(__pyx_v_self->NUP_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6497
 *         def __get__(self):
 *             self.NUP_branch.GetEntry(self.localentry, 0)
 *             return self.NUP_value             # <<<<<<<<<<<<<<
 * 
 *     property Phi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->NUP_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6495
 * 
 *     property NUP:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.NUP_branch.GetEntry(self.localentry, 0)
 *             return self.NUP_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.NUP.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6500
 * 
 *     property Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Phi_branch.GetEntry(self.localentry, 0)
 *             return self.Phi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_3Phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_3Phi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_3Phi___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_3Phi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6501
 *     property Phi:
 *         def __get__(self):
 *             self.Phi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Phi_value
 * 
 */
  (void)(__pyx_v_self->Phi_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6502
 *         def __get__(self):
 *             self.Phi_branch.GetEntry(self.localentry, 0)
 *             return self.Phi_value             # <<<<<<<<<<<<<<
 * 
 *     property Pt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Phi_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6502, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6500
 * 
 *     property Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Phi_branch.GetEntry(self.localentry, 0)
 *             return self.Phi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6505
 * 
 *     property Pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Pt_branch.GetEntry(self.localentry, 0)
 *             return self.Pt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_2Pt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_2Pt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_2Pt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_2Pt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6506
 *     property Pt:
 *         def __get__(self):
 *             self.Pt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Pt_value
 * 
 */
  (void)(__pyx_v_self->Pt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6507
 *         def __get__(self):
 *             self.Pt_branch.GetEntry(self.localentry, 0)
 *             return self.Pt_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetDeepCSVVeto20Medium_2016_DR0p5:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Pt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6505
 * 
 *     property Pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Pt_branch.GetEntry(self.localentry, 0)
 *             return self.Pt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.Pt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6510
 * 
 *     property bjetDeepCSVVeto20Medium_2016_DR0p5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto20Medium_2016_DR0p5_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2016_DR0p5_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2016_DR0p5_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2016_DR0p5___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2016_DR0p5___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6511
 *     property bjetDeepCSVVeto20Medium_2016_DR0p5:
 *         def __get__(self):
 *             self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetDeepCSVVeto20Medium_2016_DR0p5_value
 * 
 */
  (void)(__pyx_v_self->bjetDeepCSVVeto20Medium_2016_DR0p5_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6512
 *         def __get__(self):
 *             self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto20Medium_2016_DR0p5_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetDeepCSVVeto20Medium_2017_DR0p5:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetDeepCSVVeto20Medium_2016_DR0p5_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6512, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6510
 * 
 *     property bjetDeepCSVVeto20Medium_2016_DR0p5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto20Medium_2016_DR0p5_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.bjetDeepCSVVeto20Medium_2016_DR0p5.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6515
 * 
 *     property bjetDeepCSVVeto20Medium_2017_DR0p5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto20Medium_2017_DR0p5_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2017_DR0p5_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2017_DR0p5_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2017_DR0p5___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2017_DR0p5___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6516
 *     property bjetDeepCSVVeto20Medium_2017_DR0p5:
 *         def __get__(self):
 *             self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetDeepCSVVeto20Medium_2017_DR0p5_value
 * 
 */
  (void)(__pyx_v_self->bjetDeepCSVVeto20Medium_2017_DR0p5_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6517
 *         def __get__(self):
 *             self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto20Medium_2017_DR0p5_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetDeepCSVVeto20Medium_2018_DR0p5:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetDeepCSVVeto20Medium_2017_DR0p5_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6517, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6515
 * 
 *     property bjetDeepCSVVeto20Medium_2017_DR0p5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto20Medium_2017_DR0p5_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.bjetDeepCSVVeto20Medium_2017_DR0p5.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6520
 * 
 *     property bjetDeepCSVVeto20Medium_2018_DR0p5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto20Medium_2018_DR0p5_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2018_DR0p5_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2018_DR0p5_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2018_DR0p5___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2018_DR0p5___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6521
 *     property bjetDeepCSVVeto20Medium_2018_DR0p5:
 *         def __get__(self):
 *             self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetDeepCSVVeto20Medium_2018_DR0p5_value
 * 
 */
  (void)(__pyx_v_self->bjetDeepCSVVeto20Medium_2018_DR0p5_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6522
 *         def __get__(self):
 *             self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto20Medium_2018_DR0p5_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetDeepCSVVeto30Medium_2016_DR0p5:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetDeepCSVVeto20Medium_2018_DR0p5_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6520
 * 
 *     property bjetDeepCSVVeto20Medium_2018_DR0p5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto20Medium_2018_DR0p5_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.bjetDeepCSVVeto20Medium_2018_DR0p5.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6525
 * 
 *     property bjetDeepCSVVeto30Medium_2016_DR0p5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto30Medium_2016_DR0p5_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2016_DR0p5_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2016_DR0p5_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2016_DR0p5___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2016_DR0p5___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6526
 *     property bjetDeepCSVVeto30Medium_2016_DR0p5:
 *         def __get__(self):
 *             self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetDeepCSVVeto30Medium_2016_DR0p5_value
 * 
 */
  (void)(__pyx_v_self->bjetDeepCSVVeto30Medium_2016_DR0p5_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6527
 *         def __get__(self):
 *             self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto30Medium_2016_DR0p5_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetDeepCSVVeto30Medium_2017_DR0p5:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetDeepCSVVeto30Medium_2016_DR0p5_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6527, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6525
 * 
 *     property bjetDeepCSVVeto30Medium_2016_DR0p5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto30Medium_2016_DR0p5_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.bjetDeepCSVVeto30Medium_2016_DR0p5.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6530
 * 
 *     property bjetDeepCSVVeto30Medium_2017_DR0p5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto30Medium_2017_DR0p5_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2017_DR0p5_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2017_DR0p5_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2017_DR0p5___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2017_DR0p5___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6531
 *     property bjetDeepCSVVeto30Medium_2017_DR0p5:
 *         def __get__(self):
 *             self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetDeepCSVVeto30Medium_2017_DR0p5_value
 * 
 */
  (void)(__pyx_v_self->bjetDeepCSVVeto30Medium_2017_DR0p5_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6532
 *         def __get__(self):
 *             self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto30Medium_2017_DR0p5_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetDeepCSVVeto30Medium_2018_DR0p5:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetDeepCSVVeto30Medium_2017_DR0p5_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6532, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6530
 * 
 *     property bjetDeepCSVVeto30Medium_2017_DR0p5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto30Medium_2017_DR0p5_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.bjetDeepCSVVeto30Medium_2017_DR0p5.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6535
 * 
 *     property bjetDeepCSVVeto30Medium_2018_DR0p5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto30Medium_2018_DR0p5_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2018_DR0p5_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2018_DR0p5_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2018_DR0p5___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2018_DR0p5___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6536
 *     property bjetDeepCSVVeto30Medium_2018_DR0p5:
 *         def __get__(self):
 *             self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetDeepCSVVeto30Medium_2018_DR0p5_value
 * 
 */
  (void)(__pyx_v_self->bjetDeepCSVVeto30Medium_2018_DR0p5_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6537
 *         def __get__(self):
 *             self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto30Medium_2018_DR0p5_value             # <<<<<<<<<<<<<<
 * 
 *     property bweight_2016:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetDeepCSVVeto30Medium_2018_DR0p5_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6537, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6535
 * 
 *     property bjetDeepCSVVeto30Medium_2018_DR0p5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch.GetEntry(self.localentry, 0)
 *             return self.bjetDeepCSVVeto30Medium_2018_DR0p5_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.bjetDeepCSVVeto30Medium_2018_DR0p5.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6540
 * 
 *     property bweight_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bweight_2016_branch.GetEntry(self.localentry, 0)
 *             return self.bweight_2016_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12bweight_2016_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12bweight_2016_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12bweight_2016___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12bweight_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6541
 *     property bweight_2016:
 *         def __get__(self):
 *             self.bweight_2016_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bweight_2016_value
 * 
 */
  (void)(__pyx_v_self->bweight_2016_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6542
 *         def __get__(self):
 *             self.bweight_2016_branch.GetEntry(self.localentry, 0)
 *             return self.bweight_2016_value             # <<<<<<<<<<<<<<
 * 
 *     property bweight_2017:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bweight_2016_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6540
 * 
 *     property bweight_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bweight_2016_branch.GetEntry(self.localentry, 0)
 *             return self.bweight_2016_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.bweight_2016.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6545
 * 
 *     property bweight_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bweight_2017_branch.GetEntry(self.localentry, 0)
 *             return self.bweight_2017_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12bweight_2017_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12bweight_2017_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12bweight_2017___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12bweight_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6546
 *     property bweight_2017:
 *         def __get__(self):
 *             self.bweight_2017_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bweight_2017_value
 * 
 */
  (void)(__pyx_v_self->bweight_2017_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6547
 *         def __get__(self):
 *             self.bweight_2017_branch.GetEntry(self.localentry, 0)
 *             return self.bweight_2017_value             # <<<<<<<<<<<<<<
 * 
 *     property bweight_2018:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bweight_2017_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6547, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6545
 * 
 *     property bweight_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bweight_2017_branch.GetEntry(self.localentry, 0)
 *             return self.bweight_2017_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.bweight_2017.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6550
 * 
 *     property bweight_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bweight_2018_branch.GetEntry(self.localentry, 0)
 *             return self.bweight_2018_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12bweight_2018_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12bweight_2018_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12bweight_2018___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12bweight_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6551
 *     property bweight_2018:
 *         def __get__(self):
 *             self.bweight_2018_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bweight_2018_value
 * 
 */
  (void)(__pyx_v_self->bweight_2018_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6552
 *         def __get__(self):
 *             self.bweight_2018_branch.GetEntry(self.localentry, 0)
 *             return self.bweight_2018_value             # <<<<<<<<<<<<<<
 * 
 *     property charge:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bweight_2018_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6550
 * 
 *     property bweight_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bweight_2018_branch.GetEntry(self.localentry, 0)
 *             return self.bweight_2018_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.bweight_2018.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6555
 * 
 *     property charge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.charge_branch.GetEntry(self.localentry, 0)
 *             return self.charge_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6charge_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6charge_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6charge___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6charge___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6556
 *     property charge:
 *         def __get__(self):
 *             self.charge_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.charge_value
 * 
 */
  (void)(__pyx_v_self->charge_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6557
 *         def __get__(self):
 *             self.charge_branch.GetEntry(self.localentry, 0)
 *             return self.charge_value             # <<<<<<<<<<<<<<
 * 
 *     property deepcsvb1_btagscore:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->charge_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6555
 * 
 *     property charge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.charge_branch.GetEntry(self.localentry, 0)
 *             return self.charge_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.charge.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6560
 * 
 *     property deepcsvb1_btagscore:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb1_btagscore_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_btagscore_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_19deepcsvb1_btagscore_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_19deepcsvb1_btagscore_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_19deepcsvb1_btagscore___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_19deepcsvb1_btagscore___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6561
 *     property deepcsvb1_btagscore:
 *         def __get__(self):
 *             self.deepcsvb1_btagscore_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.deepcsvb1_btagscore_value
 * 
 */
  (void)(__pyx_v_self->deepcsvb1_btagscore_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6562
 *         def __get__(self):
 *             self.deepcsvb1_btagscore_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_btagscore_value             # <<<<<<<<<<<<<<
 * 
 *     property deepcsvb1_eta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->deepcsvb1_btagscore_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6562, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6560
 * 
 *     property deepcsvb1_btagscore:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb1_btagscore_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_btagscore_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.deepcsvb1_btagscore.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6565
 * 
 *     property deepcsvb1_eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb1_eta_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_eta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_13deepcsvb1_eta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_13deepcsvb1_eta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_13deepcsvb1_eta___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_13deepcsvb1_eta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6566
 *     property deepcsvb1_eta:
 *         def __get__(self):
 *             self.deepcsvb1_eta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.deepcsvb1_eta_value
 * 
 */
  (void)(__pyx_v_self->deepcsvb1_eta_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6567
 *         def __get__(self):
 *             self.deepcsvb1_eta_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_eta_value             # <<<<<<<<<<<<<<
 * 
 *     property deepcsvb1_hadronflavour:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->deepcsvb1_eta_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6567, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6565
 * 
 *     property deepcsvb1_eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb1_eta_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_eta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.deepcsvb1_eta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6570
 * 
 *     property deepcsvb1_hadronflavour:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb1_hadronflavour_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_hadronflavour_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_23deepcsvb1_hadronflavour_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_23deepcsvb1_hadronflavour_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_23deepcsvb1_hadronflavour___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_23deepcsvb1_hadronflavour___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6571
 *     property deepcsvb1_hadronflavour:
 *         def __get__(self):
 *             self.deepcsvb1_hadronflavour_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.deepcsvb1_hadronflavour_value
 * 
 */
  (void)(__pyx_v_self->deepcsvb1_hadronflavour_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6572
 *         def __get__(self):
 *             self.deepcsvb1_hadronflavour_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_hadronflavour_value             # <<<<<<<<<<<<<<
 * 
 *     property deepcsvb1_m:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->deepcsvb1_hadronflavour_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6572, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6570
 * 
 *     property deepcsvb1_hadronflavour:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb1_hadronflavour_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_hadronflavour_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.deepcsvb1_hadronflavour.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6575
 * 
 *     property deepcsvb1_m:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb1_m_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_m_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11deepcsvb1_m_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11deepcsvb1_m_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11deepcsvb1_m___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11deepcsvb1_m___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6576
 *     property deepcsvb1_m:
 *         def __get__(self):
 *             self.deepcsvb1_m_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.deepcsvb1_m_value
 * 
 */
  (void)(__pyx_v_self->deepcsvb1_m_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6577
 *         def __get__(self):
 *             self.deepcsvb1_m_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_m_value             # <<<<<<<<<<<<<<
 * 
 *     property deepcsvb1_phi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->deepcsvb1_m_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6575
 * 
 *     property deepcsvb1_m:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb1_m_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_m_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.deepcsvb1_m.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6580
 * 
 *     property deepcsvb1_phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb1_phi_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_phi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_13deepcsvb1_phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_13deepcsvb1_phi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_13deepcsvb1_phi___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_13deepcsvb1_phi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6581
 *     property deepcsvb1_phi:
 *         def __get__(self):
 *             self.deepcsvb1_phi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.deepcsvb1_phi_value
 * 
 */
  (void)(__pyx_v_self->deepcsvb1_phi_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6582
 *         def __get__(self):
 *             self.deepcsvb1_phi_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_phi_value             # <<<<<<<<<<<<<<
 * 
 *     property deepcsvb1_pt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->deepcsvb1_phi_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6580
 * 
 *     property deepcsvb1_phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb1_phi_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_phi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.deepcsvb1_phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6585
 * 
 *     property deepcsvb1_pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb1_pt_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_pt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12deepcsvb1_pt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12deepcsvb1_pt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12deepcsvb1_pt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12deepcsvb1_pt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6586
 *     property deepcsvb1_pt:
 *         def __get__(self):
 *             self.deepcsvb1_pt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.deepcsvb1_pt_value
 * 
 */
  (void)(__pyx_v_self->deepcsvb1_pt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6587
 *         def __get__(self):
 *             self.deepcsvb1_pt_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_pt_value             # <<<<<<<<<<<<<<
 * 
 *     property deepcsvb2_btagscore:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->deepcsvb1_pt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6585
 * 
 *     property deepcsvb1_pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb1_pt_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb1_pt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.deepcsvb1_pt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6590
 * 
 *     property deepcsvb2_btagscore:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb2_btagscore_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_btagscore_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_19deepcsvb2_btagscore_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_19deepcsvb2_btagscore_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_19deepcsvb2_btagscore___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_19deepcsvb2_btagscore___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6591
 *     property deepcsvb2_btagscore:
 *         def __get__(self):
 *             self.deepcsvb2_btagscore_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.deepcsvb2_btagscore_value
 * 
 */
  (void)(__pyx_v_self->deepcsvb2_btagscore_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6592
 *         def __get__(self):
 *             self.deepcsvb2_btagscore_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_btagscore_value             # <<<<<<<<<<<<<<
 * 
 *     property deepcsvb2_eta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->deepcsvb2_btagscore_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6590
 * 
 *     property deepcsvb2_btagscore:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb2_btagscore_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_btagscore_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.deepcsvb2_btagscore.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6595
 * 
 *     property deepcsvb2_eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb2_eta_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_eta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_13deepcsvb2_eta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_13deepcsvb2_eta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_13deepcsvb2_eta___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_13deepcsvb2_eta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6596
 *     property deepcsvb2_eta:
 *         def __get__(self):
 *             self.deepcsvb2_eta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.deepcsvb2_eta_value
 * 
 */
  (void)(__pyx_v_self->deepcsvb2_eta_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6597
 *         def __get__(self):
 *             self.deepcsvb2_eta_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_eta_value             # <<<<<<<<<<<<<<
 * 
 *     property deepcsvb2_hadronflavour:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->deepcsvb2_eta_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6595
 * 
 *     property deepcsvb2_eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb2_eta_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_eta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.deepcsvb2_eta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6600
 * 
 *     property deepcsvb2_hadronflavour:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb2_hadronflavour_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_hadronflavour_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_23deepcsvb2_hadronflavour_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_23deepcsvb2_hadronflavour_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_23deepcsvb2_hadronflavour___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_23deepcsvb2_hadronflavour___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6601
 *     property deepcsvb2_hadronflavour:
 *         def __get__(self):
 *             self.deepcsvb2_hadronflavour_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.deepcsvb2_hadronflavour_value
 * 
 */
  (void)(__pyx_v_self->deepcsvb2_hadronflavour_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6602
 *         def __get__(self):
 *             self.deepcsvb2_hadronflavour_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_hadronflavour_value             # <<<<<<<<<<<<<<
 * 
 *     property deepcsvb2_m:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->deepcsvb2_hadronflavour_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6602, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6600
 * 
 *     property deepcsvb2_hadronflavour:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb2_hadronflavour_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_hadronflavour_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.deepcsvb2_hadronflavour.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6605
 * 
 *     property deepcsvb2_m:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb2_m_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_m_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11deepcsvb2_m_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11deepcsvb2_m_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11deepcsvb2_m___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11deepcsvb2_m___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6606
 *     property deepcsvb2_m:
 *         def __get__(self):
 *             self.deepcsvb2_m_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.deepcsvb2_m_value
 * 
 */
  (void)(__pyx_v_self->deepcsvb2_m_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6607
 *         def __get__(self):
 *             self.deepcsvb2_m_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_m_value             # <<<<<<<<<<<<<<
 * 
 *     property deepcsvb2_phi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->deepcsvb2_m_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6605
 * 
 *     property deepcsvb2_m:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb2_m_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_m_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.deepcsvb2_m.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6610
 * 
 *     property deepcsvb2_phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb2_phi_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_phi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_13deepcsvb2_phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_13deepcsvb2_phi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_13deepcsvb2_phi___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_13deepcsvb2_phi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6611
 *     property deepcsvb2_phi:
 *         def __get__(self):
 *             self.deepcsvb2_phi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.deepcsvb2_phi_value
 * 
 */
  (void)(__pyx_v_self->deepcsvb2_phi_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6612
 *         def __get__(self):
 *             self.deepcsvb2_phi_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_phi_value             # <<<<<<<<<<<<<<
 * 
 *     property deepcsvb2_pt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->deepcsvb2_phi_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6610
 * 
 *     property deepcsvb2_phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb2_phi_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_phi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.deepcsvb2_phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6615
 * 
 *     property deepcsvb2_pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb2_pt_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_pt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12deepcsvb2_pt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12deepcsvb2_pt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12deepcsvb2_pt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12deepcsvb2_pt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6616
 *     property deepcsvb2_pt:
 *         def __get__(self):
 *             self.deepcsvb2_pt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.deepcsvb2_pt_value
 * 
 */
  (void)(__pyx_v_self->deepcsvb2_pt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6617
 *         def __get__(self):
 *             self.deepcsvb2_pt_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_pt_value             # <<<<<<<<<<<<<<
 * 
 *     property dielectronVeto:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->deepcsvb2_pt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6617, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6615
 * 
 *     property deepcsvb2_pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.deepcsvb2_pt_branch.GetEntry(self.localentry, 0)
 *             return self.deepcsvb2_pt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.deepcsvb2_pt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6620
 * 
 *     property dielectronVeto:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.dielectronVeto_branch.GetEntry(self.localentry, 0)
 *             return self.dielectronVeto_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_14dielectronVeto_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_14dielectronVeto_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_14dielectronVeto___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_14dielectronVeto___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6621
 *     property dielectronVeto:
 *         def __get__(self):
 *             self.dielectronVeto_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.dielectronVeto_value
 * 
 */
  (void)(__pyx_v_self->dielectronVeto_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6622
 *         def __get__(self):
 *             self.dielectronVeto_branch.GetEntry(self.localentry, 0)
 *             return self.dielectronVeto_value             # <<<<<<<<<<<<<<
 * 
 *     property dimuonVeto:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->dielectronVeto_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6620
 * 
 *     property dielectronVeto:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.dielectronVeto_branch.GetEntry(self.localentry, 0)
 *             return self.dielectronVeto_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.dielectronVeto.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6625
 * 
 *     property dimuonVeto:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.dimuonVeto_branch.GetEntry(self.localentry, 0)
 *             return self.dimuonVeto_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10dimuonVeto_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10dimuonVeto_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10dimuonVeto___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10dimuonVeto___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6626
 *     property dimuonVeto:
 *         def __get__(self):
 *             self.dimuonVeto_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.dimuonVeto_value
 * 
 */
  (void)(__pyx_v_self->dimuonVeto_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6627
 *         def __get__(self):
 *             self.dimuonVeto_branch.GetEntry(self.localentry, 0)
 *             return self.dimuonVeto_value             # <<<<<<<<<<<<<<
 * 
 *     property eCharge:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->dimuonVeto_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6627, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6625
 * 
 *     property dimuonVeto:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.dimuonVeto_branch.GetEntry(self.localentry, 0)
 *             return self.dimuonVeto_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.dimuonVeto.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6630
 * 
 *     property eCharge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eCharge_branch.GetEntry(self.localentry, 0)
 *             return self.eCharge_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_7eCharge_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_7eCharge_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_7eCharge___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_7eCharge___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6631
 *     property eCharge:
 *         def __get__(self):
 *             self.eCharge_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eCharge_value
 * 
 */
  (void)(__pyx_v_self->eCharge_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6632
 *         def __get__(self):
 *             self.eCharge_branch.GetEntry(self.localentry, 0)
 *             return self.eCharge_value             # <<<<<<<<<<<<<<
 * 
 *     property eComesFromHiggs:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eCharge_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6630
 * 
 *     property eCharge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eCharge_branch.GetEntry(self.localentry, 0)
 *             return self.eCharge_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eCharge.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6635
 * 
 *     property eComesFromHiggs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eComesFromHiggs_branch.GetEntry(self.localentry, 0)
 *             return self.eComesFromHiggs_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_15eComesFromHiggs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_15eComesFromHiggs_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_15eComesFromHiggs___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_15eComesFromHiggs___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6636
 *     property eComesFromHiggs:
 *         def __get__(self):
 *             self.eComesFromHiggs_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eComesFromHiggs_value
 * 
 */
  (void)(__pyx_v_self->eComesFromHiggs_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6637
 *         def __get__(self):
 *             self.eComesFromHiggs_branch.GetEntry(self.localentry, 0)
 *             return self.eComesFromHiggs_value             # <<<<<<<<<<<<<<
 * 
 *     property eCorrectedEt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eComesFromHiggs_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6637, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6635
 * 
 *     property eComesFromHiggs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eComesFromHiggs_branch.GetEntry(self.localentry, 0)
 *             return self.eComesFromHiggs_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eComesFromHiggs.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6640
 * 
 *     property eCorrectedEt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eCorrectedEt_branch.GetEntry(self.localentry, 0)
 *             return self.eCorrectedEt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12eCorrectedEt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12eCorrectedEt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12eCorrectedEt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12eCorrectedEt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6641
 *     property eCorrectedEt:
 *         def __get__(self):
 *             self.eCorrectedEt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eCorrectedEt_value
 * 
 */
  (void)(__pyx_v_self->eCorrectedEt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6642
 *         def __get__(self):
 *             self.eCorrectedEt_branch.GetEntry(self.localentry, 0)
 *             return self.eCorrectedEt_value             # <<<<<<<<<<<<<<
 * 
 *     property eEnergyError:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eCorrectedEt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6640
 * 
 *     property eCorrectedEt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eCorrectedEt_branch.GetEntry(self.localentry, 0)
 *             return self.eCorrectedEt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eCorrectedEt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6645
 * 
 *     property eEnergyError:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyError_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyError_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12eEnergyError_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12eEnergyError_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12eEnergyError___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12eEnergyError___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6646
 *     property eEnergyError:
 *         def __get__(self):
 *             self.eEnergyError_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eEnergyError_value
 * 
 */
  (void)(__pyx_v_self->eEnergyError_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6647
 *         def __get__(self):
 *             self.eEnergyError_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyError_value             # <<<<<<<<<<<<<<
 * 
 *     property eEnergyScaleDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eEnergyError_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6647, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6645
 * 
 *     property eEnergyError:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyError_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyError_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eEnergyError.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6650
 * 
 *     property eEnergyScaleDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyScaleDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16eEnergyScaleDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16eEnergyScaleDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16eEnergyScaleDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16eEnergyScaleDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6651
 *     property eEnergyScaleDown:
 *         def __get__(self):
 *             self.eEnergyScaleDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eEnergyScaleDown_value
 * 
 */
  (void)(__pyx_v_self->eEnergyScaleDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6652
 *         def __get__(self):
 *             self.eEnergyScaleDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleDown_value             # <<<<<<<<<<<<<<
 * 
 *     property eEnergyScaleGainDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eEnergyScaleDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6652, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6650
 * 
 *     property eEnergyScaleDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyScaleDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eEnergyScaleDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6655
 * 
 *     property eEnergyScaleGainDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyScaleGainDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleGainDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20eEnergyScaleGainDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20eEnergyScaleGainDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20eEnergyScaleGainDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20eEnergyScaleGainDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6656
 *     property eEnergyScaleGainDown:
 *         def __get__(self):
 *             self.eEnergyScaleGainDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eEnergyScaleGainDown_value
 * 
 */
  (void)(__pyx_v_self->eEnergyScaleGainDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6657
 *         def __get__(self):
 *             self.eEnergyScaleGainDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleGainDown_value             # <<<<<<<<<<<<<<
 * 
 *     property eEnergyScaleGainUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eEnergyScaleGainDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6655
 * 
 *     property eEnergyScaleGainDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyScaleGainDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleGainDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eEnergyScaleGainDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6660
 * 
 *     property eEnergyScaleGainUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyScaleGainUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleGainUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_18eEnergyScaleGainUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_18eEnergyScaleGainUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_18eEnergyScaleGainUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_18eEnergyScaleGainUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6661
 *     property eEnergyScaleGainUp:
 *         def __get__(self):
 *             self.eEnergyScaleGainUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eEnergyScaleGainUp_value
 * 
 */
  (void)(__pyx_v_self->eEnergyScaleGainUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6662
 *         def __get__(self):
 *             self.eEnergyScaleGainUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleGainUp_value             # <<<<<<<<<<<<<<
 * 
 *     property eEnergyScaleStatDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eEnergyScaleGainUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6660
 * 
 *     property eEnergyScaleGainUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyScaleGainUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleGainUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eEnergyScaleGainUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6665
 * 
 *     property eEnergyScaleStatDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyScaleStatDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleStatDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20eEnergyScaleStatDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20eEnergyScaleStatDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20eEnergyScaleStatDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20eEnergyScaleStatDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6666
 *     property eEnergyScaleStatDown:
 *         def __get__(self):
 *             self.eEnergyScaleStatDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eEnergyScaleStatDown_value
 * 
 */
  (void)(__pyx_v_self->eEnergyScaleStatDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6667
 *         def __get__(self):
 *             self.eEnergyScaleStatDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleStatDown_value             # <<<<<<<<<<<<<<
 * 
 *     property eEnergyScaleStatUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eEnergyScaleStatDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6665
 * 
 *     property eEnergyScaleStatDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyScaleStatDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleStatDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eEnergyScaleStatDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6670
 * 
 *     property eEnergyScaleStatUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyScaleStatUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleStatUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_18eEnergyScaleStatUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_18eEnergyScaleStatUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_18eEnergyScaleStatUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_18eEnergyScaleStatUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6671
 *     property eEnergyScaleStatUp:
 *         def __get__(self):
 *             self.eEnergyScaleStatUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eEnergyScaleStatUp_value
 * 
 */
  (void)(__pyx_v_self->eEnergyScaleStatUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6672
 *         def __get__(self):
 *             self.eEnergyScaleStatUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleStatUp_value             # <<<<<<<<<<<<<<
 * 
 *     property eEnergyScaleSystDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eEnergyScaleStatUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6670
 * 
 *     property eEnergyScaleStatUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyScaleStatUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleStatUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eEnergyScaleStatUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6675
 * 
 *     property eEnergyScaleSystDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyScaleSystDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleSystDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20eEnergyScaleSystDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20eEnergyScaleSystDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20eEnergyScaleSystDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20eEnergyScaleSystDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6676
 *     property eEnergyScaleSystDown:
 *         def __get__(self):
 *             self.eEnergyScaleSystDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eEnergyScaleSystDown_value
 * 
 */
  (void)(__pyx_v_self->eEnergyScaleSystDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6677
 *         def __get__(self):
 *             self.eEnergyScaleSystDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleSystDown_value             # <<<<<<<<<<<<<<
 * 
 *     property eEnergyScaleSystUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eEnergyScaleSystDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6677, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6675
 * 
 *     property eEnergyScaleSystDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyScaleSystDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleSystDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eEnergyScaleSystDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6680
 * 
 *     property eEnergyScaleSystUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyScaleSystUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleSystUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_18eEnergyScaleSystUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_18eEnergyScaleSystUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_18eEnergyScaleSystUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_18eEnergyScaleSystUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6681
 *     property eEnergyScaleSystUp:
 *         def __get__(self):
 *             self.eEnergyScaleSystUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eEnergyScaleSystUp_value
 * 
 */
  (void)(__pyx_v_self->eEnergyScaleSystUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6682
 *         def __get__(self):
 *             self.eEnergyScaleSystUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleSystUp_value             # <<<<<<<<<<<<<<
 * 
 *     property eEnergyScaleUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eEnergyScaleSystUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6682, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6680
 * 
 *     property eEnergyScaleSystUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyScaleSystUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleSystUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eEnergyScaleSystUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6685
 * 
 *     property eEnergyScaleUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyScaleUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_14eEnergyScaleUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_14eEnergyScaleUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_14eEnergyScaleUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_14eEnergyScaleUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6686
 *     property eEnergyScaleUp:
 *         def __get__(self):
 *             self.eEnergyScaleUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eEnergyScaleUp_value
 * 
 */
  (void)(__pyx_v_self->eEnergyScaleUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6687
 *         def __get__(self):
 *             self.eEnergyScaleUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleUp_value             # <<<<<<<<<<<<<<
 * 
 *     property eEnergySigmaDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eEnergyScaleUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6687, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6685
 * 
 *     property eEnergyScaleUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergyScaleUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergyScaleUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eEnergyScaleUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6690
 * 
 *     property eEnergySigmaDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergySigmaDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16eEnergySigmaDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16eEnergySigmaDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16eEnergySigmaDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16eEnergySigmaDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6691
 *     property eEnergySigmaDown:
 *         def __get__(self):
 *             self.eEnergySigmaDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eEnergySigmaDown_value
 * 
 */
  (void)(__pyx_v_self->eEnergySigmaDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6692
 *         def __get__(self):
 *             self.eEnergySigmaDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaDown_value             # <<<<<<<<<<<<<<
 * 
 *     property eEnergySigmaPhiDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eEnergySigmaDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6692, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6690
 * 
 *     property eEnergySigmaDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergySigmaDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eEnergySigmaDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6695
 * 
 *     property eEnergySigmaPhiDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergySigmaPhiDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaPhiDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_19eEnergySigmaPhiDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_19eEnergySigmaPhiDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_19eEnergySigmaPhiDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_19eEnergySigmaPhiDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6696
 *     property eEnergySigmaPhiDown:
 *         def __get__(self):
 *             self.eEnergySigmaPhiDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eEnergySigmaPhiDown_value
 * 
 */
  (void)(__pyx_v_self->eEnergySigmaPhiDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6697
 *         def __get__(self):
 *             self.eEnergySigmaPhiDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaPhiDown_value             # <<<<<<<<<<<<<<
 * 
 *     property eEnergySigmaPhiUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eEnergySigmaPhiDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6697, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6695
 * 
 *     property eEnergySigmaPhiDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergySigmaPhiDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaPhiDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eEnergySigmaPhiDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6700
 * 
 *     property eEnergySigmaPhiUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergySigmaPhiUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaPhiUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_17eEnergySigmaPhiUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_17eEnergySigmaPhiUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_17eEnergySigmaPhiUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_17eEnergySigmaPhiUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6701
 *     property eEnergySigmaPhiUp:
 *         def __get__(self):
 *             self.eEnergySigmaPhiUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eEnergySigmaPhiUp_value
 * 
 */
  (void)(__pyx_v_self->eEnergySigmaPhiUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6702
 *         def __get__(self):
 *             self.eEnergySigmaPhiUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaPhiUp_value             # <<<<<<<<<<<<<<
 * 
 *     property eEnergySigmaRhoDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eEnergySigmaPhiUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6700
 * 
 *     property eEnergySigmaPhiUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergySigmaPhiUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaPhiUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eEnergySigmaPhiUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6705
 * 
 *     property eEnergySigmaRhoDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergySigmaRhoDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaRhoDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_19eEnergySigmaRhoDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_19eEnergySigmaRhoDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_19eEnergySigmaRhoDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_19eEnergySigmaRhoDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6706
 *     property eEnergySigmaRhoDown:
 *         def __get__(self):
 *             self.eEnergySigmaRhoDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eEnergySigmaRhoDown_value
 * 
 */
  (void)(__pyx_v_self->eEnergySigmaRhoDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6707
 *         def __get__(self):
 *             self.eEnergySigmaRhoDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaRhoDown_value             # <<<<<<<<<<<<<<
 * 
 *     property eEnergySigmaRhoUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eEnergySigmaRhoDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6707, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6705
 * 
 *     property eEnergySigmaRhoDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergySigmaRhoDown_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaRhoDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eEnergySigmaRhoDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6710
 * 
 *     property eEnergySigmaRhoUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergySigmaRhoUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaRhoUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_17eEnergySigmaRhoUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_17eEnergySigmaRhoUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_17eEnergySigmaRhoUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_17eEnergySigmaRhoUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6711
 *     property eEnergySigmaRhoUp:
 *         def __get__(self):
 *             self.eEnergySigmaRhoUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eEnergySigmaRhoUp_value
 * 
 */
  (void)(__pyx_v_self->eEnergySigmaRhoUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6712
 *         def __get__(self):
 *             self.eEnergySigmaRhoUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaRhoUp_value             # <<<<<<<<<<<<<<
 * 
 *     property eEnergySigmaUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eEnergySigmaRhoUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6712, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6710
 * 
 *     property eEnergySigmaRhoUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergySigmaRhoUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaRhoUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eEnergySigmaRhoUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6715
 * 
 *     property eEnergySigmaUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergySigmaUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_14eEnergySigmaUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_14eEnergySigmaUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_14eEnergySigmaUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_14eEnergySigmaUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6716
 *     property eEnergySigmaUp:
 *         def __get__(self):
 *             self.eEnergySigmaUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eEnergySigmaUp_value
 * 
 */
  (void)(__pyx_v_self->eEnergySigmaUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6717
 *         def __get__(self):
 *             self.eEnergySigmaUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaUp_value             # <<<<<<<<<<<<<<
 * 
 *     property eEta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eEnergySigmaUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6715
 * 
 *     property eEnergySigmaUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEnergySigmaUp_branch.GetEntry(self.localentry, 0)
 *             return self.eEnergySigmaUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eEnergySigmaUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6720
 * 
 *     property eEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEta_branch.GetEntry(self.localentry, 0)
 *             return self.eEta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_4eEta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_4eEta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_4eEta___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_4eEta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6721
 *     property eEta:
 *         def __get__(self):
 *             self.eEta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eEta_value
 * 
 */
  (void)(__pyx_v_self->eEta_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6722
 *         def __get__(self):
 *             self.eEta_branch.GetEntry(self.localentry, 0)
 *             return self.eEta_value             # <<<<<<<<<<<<<<
 * 
 *     property eGenCharge:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eEta_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6722, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6720
 * 
 *     property eEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eEta_branch.GetEntry(self.localentry, 0)
 *             return self.eEta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eEta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6725
 * 
 *     property eGenCharge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenCharge_branch.GetEntry(self.localentry, 0)
 *             return self.eGenCharge_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10eGenCharge_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10eGenCharge_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10eGenCharge___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10eGenCharge___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6726
 *     property eGenCharge:
 *         def __get__(self):
 *             self.eGenCharge_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eGenCharge_value
 * 
 */
  (void)(__pyx_v_self->eGenCharge_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6727
 *         def __get__(self):
 *             self.eGenCharge_branch.GetEntry(self.localentry, 0)
 *             return self.eGenCharge_value             # <<<<<<<<<<<<<<
 * 
 *     property eGenDirectPromptTauDecay:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eGenCharge_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6727, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6725
 * 
 *     property eGenCharge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenCharge_branch.GetEntry(self.localentry, 0)
 *             return self.eGenCharge_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eGenCharge.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6730
 * 
 *     property eGenDirectPromptTauDecay:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenDirectPromptTauDecay_branch.GetEntry(self.localentry, 0)
 *             return self.eGenDirectPromptTauDecay_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_24eGenDirectPromptTauDecay_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_24eGenDirectPromptTauDecay_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_24eGenDirectPromptTauDecay___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_24eGenDirectPromptTauDecay___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6731
 *     property eGenDirectPromptTauDecay:
 *         def __get__(self):
 *             self.eGenDirectPromptTauDecay_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eGenDirectPromptTauDecay_value
 * 
 */
  (void)(__pyx_v_self->eGenDirectPromptTauDecay_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6732
 *         def __get__(self):
 *             self.eGenDirectPromptTauDecay_branch.GetEntry(self.localentry, 0)
 *             return self.eGenDirectPromptTauDecay_value             # <<<<<<<<<<<<<<
 * 
 *     property eGenEnergy:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eGenDirectPromptTauDecay_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6730
 * 
 *     property eGenDirectPromptTauDecay:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenDirectPromptTauDecay_branch.GetEntry(self.localentry, 0)
 *             return self.eGenDirectPromptTauDecay_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eGenDirectPromptTauDecay.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6735
 * 
 *     property eGenEnergy:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenEnergy_branch.GetEntry(self.localentry, 0)
 *             return self.eGenEnergy_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10eGenEnergy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10eGenEnergy_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10eGenEnergy___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10eGenEnergy___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6736
 *     property eGenEnergy:
 *         def __get__(self):
 *             self.eGenEnergy_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eGenEnergy_value
 * 
 */
  (void)(__pyx_v_self->eGenEnergy_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6737
 *         def __get__(self):
 *             self.eGenEnergy_branch.GetEntry(self.localentry, 0)
 *             return self.eGenEnergy_value             # <<<<<<<<<<<<<<
 * 
 *     property eGenEta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eGenEnergy_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6737, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6735
 * 
 *     property eGenEnergy:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenEnergy_branch.GetEntry(self.localentry, 0)
 *             return self.eGenEnergy_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eGenEnergy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6740
 * 
 *     property eGenEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenEta_branch.GetEntry(self.localentry, 0)
 *             return self.eGenEta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_7eGenEta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_7eGenEta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_7eGenEta___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_7eGenEta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6741
 *     property eGenEta:
 *         def __get__(self):
 *             self.eGenEta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eGenEta_value
 * 
 */
  (void)(__pyx_v_self->eGenEta_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6742
 *         def __get__(self):
 *             self.eGenEta_branch.GetEntry(self.localentry, 0)
 *             return self.eGenEta_value             # <<<<<<<<<<<<<<
 * 
 *     property eGenIsPrompt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eGenEta_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6740
 * 
 *     property eGenEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenEta_branch.GetEntry(self.localentry, 0)
 *             return self.eGenEta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eGenEta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6745
 * 
 *     property eGenIsPrompt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenIsPrompt_branch.GetEntry(self.localentry, 0)
 *             return self.eGenIsPrompt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12eGenIsPrompt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12eGenIsPrompt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12eGenIsPrompt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12eGenIsPrompt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6746
 *     property eGenIsPrompt:
 *         def __get__(self):
 *             self.eGenIsPrompt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eGenIsPrompt_value
 * 
 */
  (void)(__pyx_v_self->eGenIsPrompt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6747
 *         def __get__(self):
 *             self.eGenIsPrompt_branch.GetEntry(self.localentry, 0)
 *             return self.eGenIsPrompt_value             # <<<<<<<<<<<<<<
 * 
 *     property eGenMotherPdgId:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eGenIsPrompt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6747, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6745
 * 
 *     property eGenIsPrompt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenIsPrompt_branch.GetEntry(self.localentry, 0)
 *             return self.eGenIsPrompt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eGenIsPrompt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6750
 * 
 *     property eGenMotherPdgId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenMotherPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.eGenMotherPdgId_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_15eGenMotherPdgId_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_15eGenMotherPdgId_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_15eGenMotherPdgId___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_15eGenMotherPdgId___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6751
 *     property eGenMotherPdgId:
 *         def __get__(self):
 *             self.eGenMotherPdgId_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eGenMotherPdgId_value
 * 
 */
  (void)(__pyx_v_self->eGenMotherPdgId_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6752
 *         def __get__(self):
 *             self.eGenMotherPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.eGenMotherPdgId_value             # <<<<<<<<<<<<<<
 * 
 *     property eGenParticle:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eGenMotherPdgId_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6752, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6750
 * 
 *     property eGenMotherPdgId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenMotherPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.eGenMotherPdgId_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eGenMotherPdgId.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6755
 * 
 *     property eGenParticle:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenParticle_branch.GetEntry(self.localentry, 0)
 *             return self.eGenParticle_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12eGenParticle_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12eGenParticle_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12eGenParticle___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12eGenParticle___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6756
 *     property eGenParticle:
 *         def __get__(self):
 *             self.eGenParticle_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eGenParticle_value
 * 
 */
  (void)(__pyx_v_self->eGenParticle_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6757
 *         def __get__(self):
 *             self.eGenParticle_branch.GetEntry(self.localentry, 0)
 *             return self.eGenParticle_value             # <<<<<<<<<<<<<<
 * 
 *     property eGenPdgId:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eGenParticle_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6757, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6755
 * 
 *     property eGenParticle:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenParticle_branch.GetEntry(self.localentry, 0)
 *             return self.eGenParticle_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eGenParticle.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6760
 * 
 *     property eGenPdgId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.eGenPdgId_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_9eGenPdgId_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_9eGenPdgId_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_9eGenPdgId___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_9eGenPdgId___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6761
 *     property eGenPdgId:
 *         def __get__(self):
 *             self.eGenPdgId_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eGenPdgId_value
 * 
 */
  (void)(__pyx_v_self->eGenPdgId_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6762
 *         def __get__(self):
 *             self.eGenPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.eGenPdgId_value             # <<<<<<<<<<<<<<
 * 
 *     property eGenPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eGenPdgId_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6762, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6760
 * 
 *     property eGenPdgId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.eGenPdgId_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eGenPdgId.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6765
 * 
 *     property eGenPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenPhi_branch.GetEntry(self.localentry, 0)
 *             return self.eGenPhi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_7eGenPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_7eGenPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_7eGenPhi___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_7eGenPhi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6766
 *     property eGenPhi:
 *         def __get__(self):
 *             self.eGenPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eGenPhi_value
 * 
 */
  (void)(__pyx_v_self->eGenPhi_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6767
 *         def __get__(self):
 *             self.eGenPhi_branch.GetEntry(self.localentry, 0)
 *             return self.eGenPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property eGenPrompt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eGenPhi_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6767, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6765
 * 
 *     property eGenPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenPhi_branch.GetEntry(self.localentry, 0)
 *             return self.eGenPhi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eGenPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6770
 * 
 *     property eGenPrompt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenPrompt_branch.GetEntry(self.localentry, 0)
 *             return self.eGenPrompt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10eGenPrompt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10eGenPrompt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10eGenPrompt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10eGenPrompt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6771
 *     property eGenPrompt:
 *         def __get__(self):
 *             self.eGenPrompt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eGenPrompt_value
 * 
 */
  (void)(__pyx_v_self->eGenPrompt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6772
 *         def __get__(self):
 *             self.eGenPrompt_branch.GetEntry(self.localentry, 0)
 *             return self.eGenPrompt_value             # <<<<<<<<<<<<<<
 * 
 *     property eGenPromptTauDecay:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eGenPrompt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6772, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6770
 * 
 *     property eGenPrompt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenPrompt_branch.GetEntry(self.localentry, 0)
 *             return self.eGenPrompt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eGenPrompt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6775
 * 
 *     property eGenPromptTauDecay:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenPromptTauDecay_branch.GetEntry(self.localentry, 0)
 *             return self.eGenPromptTauDecay_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_18eGenPromptTauDecay_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_18eGenPromptTauDecay_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_18eGenPromptTauDecay___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_18eGenPromptTauDecay___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6776
 *     property eGenPromptTauDecay:
 *         def __get__(self):
 *             self.eGenPromptTauDecay_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eGenPromptTauDecay_value
 * 
 */
  (void)(__pyx_v_self->eGenPromptTauDecay_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6777
 *         def __get__(self):
 *             self.eGenPromptTauDecay_branch.GetEntry(self.localentry, 0)
 *             return self.eGenPromptTauDecay_value             # <<<<<<<<<<<<<<
 * 
 *     property eGenPt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eGenPromptTauDecay_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6777, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6775
 * 
 *     property eGenPromptTauDecay:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenPromptTauDecay_branch.GetEntry(self.localentry, 0)
 *             return self.eGenPromptTauDecay_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eGenPromptTauDecay.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6780
 * 
 *     property eGenPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenPt_branch.GetEntry(self.localentry, 0)
 *             return self.eGenPt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6eGenPt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6eGenPt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6eGenPt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6eGenPt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6781
 *     property eGenPt:
 *         def __get__(self):
 *             self.eGenPt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eGenPt_value
 * 
 */
  (void)(__pyx_v_self->eGenPt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6782
 *         def __get__(self):
 *             self.eGenPt_branch.GetEntry(self.localentry, 0)
 *             return self.eGenPt_value             # <<<<<<<<<<<<<<
 * 
 *     property eGenTauDecay:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eGenPt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6782, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6780
 * 
 *     property eGenPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenPt_branch.GetEntry(self.localentry, 0)
 *             return self.eGenPt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eGenPt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6785
 * 
 *     property eGenTauDecay:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenTauDecay_branch.GetEntry(self.localentry, 0)
 *             return self.eGenTauDecay_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12eGenTauDecay_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12eGenTauDecay_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12eGenTauDecay___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12eGenTauDecay___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6786
 *     property eGenTauDecay:
 *         def __get__(self):
 *             self.eGenTauDecay_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eGenTauDecay_value
 * 
 */
  (void)(__pyx_v_self->eGenTauDecay_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6787
 *         def __get__(self):
 *             self.eGenTauDecay_branch.GetEntry(self.localentry, 0)
 *             return self.eGenTauDecay_value             # <<<<<<<<<<<<<<
 * 
 *     property eGenVZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eGenTauDecay_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6787, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6785
 * 
 *     property eGenTauDecay:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenTauDecay_branch.GetEntry(self.localentry, 0)
 *             return self.eGenTauDecay_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eGenTauDecay.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6790
 * 
 *     property eGenVZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenVZ_branch.GetEntry(self.localentry, 0)
 *             return self.eGenVZ_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6eGenVZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6eGenVZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6eGenVZ___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6eGenVZ___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6791
 *     property eGenVZ:
 *         def __get__(self):
 *             self.eGenVZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eGenVZ_value
 * 
 */
  (void)(__pyx_v_self->eGenVZ_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6792
 *         def __get__(self):
 *             self.eGenVZ_branch.GetEntry(self.localentry, 0)
 *             return self.eGenVZ_value             # <<<<<<<<<<<<<<
 * 
 *     property eGenVtxPVMatch:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eGenVZ_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6792, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6790
 * 
 *     property eGenVZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenVZ_branch.GetEntry(self.localentry, 0)
 *             return self.eGenVZ_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eGenVZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6795
 * 
 *     property eGenVtxPVMatch:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenVtxPVMatch_branch.GetEntry(self.localentry, 0)
 *             return self.eGenVtxPVMatch_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_14eGenVtxPVMatch_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_14eGenVtxPVMatch_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_14eGenVtxPVMatch___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_14eGenVtxPVMatch___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6796
 *     property eGenVtxPVMatch:
 *         def __get__(self):
 *             self.eGenVtxPVMatch_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eGenVtxPVMatch_value
 * 
 */
  (void)(__pyx_v_self->eGenVtxPVMatch_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6797
 *         def __get__(self):
 *             self.eGenVtxPVMatch_branch.GetEntry(self.localentry, 0)
 *             return self.eGenVtxPVMatch_value             # <<<<<<<<<<<<<<
 * 
 *     property eIP3D:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eGenVtxPVMatch_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6797, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6795
 * 
 *     property eGenVtxPVMatch:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eGenVtxPVMatch_branch.GetEntry(self.localentry, 0)
 *             return self.eGenVtxPVMatch_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eGenVtxPVMatch.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6800
 * 
 *     property eIP3D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.eIP3D_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5eIP3D_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5eIP3D_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5eIP3D___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5eIP3D___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6801
 *     property eIP3D:
 *         def __get__(self):
 *             self.eIP3D_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eIP3D_value
 * 
 */
  (void)(__pyx_v_self->eIP3D_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6802
 *         def __get__(self):
 *             self.eIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.eIP3D_value             # <<<<<<<<<<<<<<
 * 
 *     property eIP3DErr:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eIP3D_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6802, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6800
 * 
 *     property eIP3D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.eIP3D_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eIP3D.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6805
 * 
 *     property eIP3DErr:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eIP3DErr_branch.GetEntry(self.localentry, 0)
 *             return self.eIP3DErr_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_8eIP3DErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_8eIP3DErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_8eIP3DErr___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_8eIP3DErr___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6806
 *     property eIP3DErr:
 *         def __get__(self):
 *             self.eIP3DErr_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eIP3DErr_value
 * 
 */
  (void)(__pyx_v_self->eIP3DErr_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6807
 *         def __get__(self):
 *             self.eIP3DErr_branch.GetEntry(self.localentry, 0)
 *             return self.eIP3DErr_value             # <<<<<<<<<<<<<<
 * 
 *     property eIsoDB03:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eIP3DErr_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6807, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6805
 * 
 *     property eIP3DErr:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eIP3DErr_branch.GetEntry(self.localentry, 0)
 *             return self.eIP3DErr_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eIP3DErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6810
 * 
 *     property eIsoDB03:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eIsoDB03_branch.GetEntry(self.localentry, 0)
 *             return self.eIsoDB03_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_8eIsoDB03_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_8eIsoDB03_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_8eIsoDB03___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_8eIsoDB03___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6811
 *     property eIsoDB03:
 *         def __get__(self):
 *             self.eIsoDB03_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eIsoDB03_value
 * 
 */
  (void)(__pyx_v_self->eIsoDB03_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6812
 *         def __get__(self):
 *             self.eIsoDB03_branch.GetEntry(self.localentry, 0)
 *             return self.eIsoDB03_value             # <<<<<<<<<<<<<<
 * 
 *     property eJetArea:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eIsoDB03_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6812, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6810
 * 
 *     property eIsoDB03:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eIsoDB03_branch.GetEntry(self.localentry, 0)
 *             return self.eIsoDB03_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eIsoDB03.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6815
 * 
 *     property eJetArea:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetArea_branch.GetEntry(self.localentry, 0)
 *             return self.eJetArea_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_8eJetArea_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_8eJetArea_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_8eJetArea___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_8eJetArea___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6816
 *     property eJetArea:
 *         def __get__(self):
 *             self.eJetArea_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eJetArea_value
 * 
 */
  (void)(__pyx_v_self->eJetArea_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6817
 *         def __get__(self):
 *             self.eJetArea_branch.GetEntry(self.localentry, 0)
 *             return self.eJetArea_value             # <<<<<<<<<<<<<<
 * 
 *     property eJetBtag:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eJetArea_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6817, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6815
 * 
 *     property eJetArea:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetArea_branch.GetEntry(self.localentry, 0)
 *             return self.eJetArea_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eJetArea.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6820
 * 
 *     property eJetBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetBtag_branch.GetEntry(self.localentry, 0)
 *             return self.eJetBtag_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_8eJetBtag_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_8eJetBtag_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_8eJetBtag___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_8eJetBtag___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6821
 *     property eJetBtag:
 *         def __get__(self):
 *             self.eJetBtag_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eJetBtag_value
 * 
 */
  (void)(__pyx_v_self->eJetBtag_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6822
 *         def __get__(self):
 *             self.eJetBtag_branch.GetEntry(self.localentry, 0)
 *             return self.eJetBtag_value             # <<<<<<<<<<<<<<
 * 
 *     property eJetDR:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eJetBtag_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6822, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6820
 * 
 *     property eJetBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetBtag_branch.GetEntry(self.localentry, 0)
 *             return self.eJetBtag_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eJetBtag.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6825
 * 
 *     property eJetDR:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetDR_branch.GetEntry(self.localentry, 0)
 *             return self.eJetDR_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6eJetDR_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6eJetDR_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6eJetDR___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6eJetDR___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6826
 *     property eJetDR:
 *         def __get__(self):
 *             self.eJetDR_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eJetDR_value
 * 
 */
  (void)(__pyx_v_self->eJetDR_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6827
 *         def __get__(self):
 *             self.eJetDR_branch.GetEntry(self.localentry, 0)
 *             return self.eJetDR_value             # <<<<<<<<<<<<<<
 * 
 *     property eJetEtaEtaMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eJetDR_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6827, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6825
 * 
 *     property eJetDR:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetDR_branch.GetEntry(self.localentry, 0)
 *             return self.eJetDR_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eJetDR.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6830
 * 
 *     property eJetEtaEtaMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)
 *             return self.eJetEtaEtaMoment_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16eJetEtaEtaMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16eJetEtaEtaMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16eJetEtaEtaMoment___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16eJetEtaEtaMoment___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6831
 *     property eJetEtaEtaMoment:
 *         def __get__(self):
 *             self.eJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eJetEtaEtaMoment_value
 * 
 */
  (void)(__pyx_v_self->eJetEtaEtaMoment_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6832
 *         def __get__(self):
 *             self.eJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)
 *             return self.eJetEtaEtaMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property eJetEtaPhiMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eJetEtaEtaMoment_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6832, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6830
 * 
 *     property eJetEtaEtaMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)
 *             return self.eJetEtaEtaMoment_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eJetEtaEtaMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6835
 * 
 *     property eJetEtaPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.eJetEtaPhiMoment_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16eJetEtaPhiMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16eJetEtaPhiMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16eJetEtaPhiMoment___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16eJetEtaPhiMoment___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6836
 *     property eJetEtaPhiMoment:
 *         def __get__(self):
 *             self.eJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eJetEtaPhiMoment_value
 * 
 */
  (void)(__pyx_v_self->eJetEtaPhiMoment_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6837
 *         def __get__(self):
 *             self.eJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.eJetEtaPhiMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property eJetEtaPhiSpread:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eJetEtaPhiMoment_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6837, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6835
 * 
 *     property eJetEtaPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.eJetEtaPhiMoment_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eJetEtaPhiMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6840
 * 
 *     property eJetEtaPhiSpread:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)
 *             return self.eJetEtaPhiSpread_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16eJetEtaPhiSpread_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16eJetEtaPhiSpread_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16eJetEtaPhiSpread___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16eJetEtaPhiSpread___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6841
 *     property eJetEtaPhiSpread:
 *         def __get__(self):
 *             self.eJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eJetEtaPhiSpread_value
 * 
 */
  (void)(__pyx_v_self->eJetEtaPhiSpread_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6842
 *         def __get__(self):
 *             self.eJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)
 *             return self.eJetEtaPhiSpread_value             # <<<<<<<<<<<<<<
 * 
 *     property eJetHadronFlavour:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eJetEtaPhiSpread_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6842, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6840
 * 
 *     property eJetEtaPhiSpread:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)
 *             return self.eJetEtaPhiSpread_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eJetEtaPhiSpread.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6845
 * 
 *     property eJetHadronFlavour:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetHadronFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.eJetHadronFlavour_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_17eJetHadronFlavour_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_17eJetHadronFlavour_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_17eJetHadronFlavour___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_17eJetHadronFlavour___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6846
 *     property eJetHadronFlavour:
 *         def __get__(self):
 *             self.eJetHadronFlavour_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eJetHadronFlavour_value
 * 
 */
  (void)(__pyx_v_self->eJetHadronFlavour_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6847
 *         def __get__(self):
 *             self.eJetHadronFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.eJetHadronFlavour_value             # <<<<<<<<<<<<<<
 * 
 *     property eJetPFCISVBtag:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eJetHadronFlavour_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6845
 * 
 *     property eJetHadronFlavour:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetHadronFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.eJetHadronFlavour_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eJetHadronFlavour.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6850
 * 
 *     property eJetPFCISVBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetPFCISVBtag_branch.GetEntry(self.localentry, 0)
 *             return self.eJetPFCISVBtag_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_14eJetPFCISVBtag_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_14eJetPFCISVBtag_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_14eJetPFCISVBtag___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_14eJetPFCISVBtag___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6851
 *     property eJetPFCISVBtag:
 *         def __get__(self):
 *             self.eJetPFCISVBtag_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eJetPFCISVBtag_value
 * 
 */
  (void)(__pyx_v_self->eJetPFCISVBtag_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6852
 *         def __get__(self):
 *             self.eJetPFCISVBtag_branch.GetEntry(self.localentry, 0)
 *             return self.eJetPFCISVBtag_value             # <<<<<<<<<<<<<<
 * 
 *     property eJetPartonFlavour:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eJetPFCISVBtag_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6852, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6850
 * 
 *     property eJetPFCISVBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetPFCISVBtag_branch.GetEntry(self.localentry, 0)
 *             return self.eJetPFCISVBtag_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eJetPFCISVBtag.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6855
 * 
 *     property eJetPartonFlavour:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetPartonFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.eJetPartonFlavour_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_17eJetPartonFlavour_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_17eJetPartonFlavour_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_17eJetPartonFlavour___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_17eJetPartonFlavour___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6856
 *     property eJetPartonFlavour:
 *         def __get__(self):
 *             self.eJetPartonFlavour_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eJetPartonFlavour_value
 * 
 */
  (void)(__pyx_v_self->eJetPartonFlavour_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6857
 *         def __get__(self):
 *             self.eJetPartonFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.eJetPartonFlavour_value             # <<<<<<<<<<<<<<
 * 
 *     property eJetPhiPhiMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eJetPartonFlavour_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6857, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6855
 * 
 *     property eJetPartonFlavour:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetPartonFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.eJetPartonFlavour_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eJetPartonFlavour.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6860
 * 
 *     property eJetPhiPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.eJetPhiPhiMoment_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16eJetPhiPhiMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16eJetPhiPhiMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16eJetPhiPhiMoment___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16eJetPhiPhiMoment___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6861
 *     property eJetPhiPhiMoment:
 *         def __get__(self):
 *             self.eJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eJetPhiPhiMoment_value
 * 
 */
  (void)(__pyx_v_self->eJetPhiPhiMoment_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6862
 *         def __get__(self):
 *             self.eJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.eJetPhiPhiMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property eJetPt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eJetPhiPhiMoment_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6862, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6860
 * 
 *     property eJetPhiPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.eJetPhiPhiMoment_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eJetPhiPhiMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6865
 * 
 *     property eJetPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetPt_branch.GetEntry(self.localentry, 0)
 *             return self.eJetPt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6eJetPt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6eJetPt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6eJetPt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6eJetPt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6866
 *     property eJetPt:
 *         def __get__(self):
 *             self.eJetPt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eJetPt_value
 * 
 */
  (void)(__pyx_v_self->eJetPt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6867
 *         def __get__(self):
 *             self.eJetPt_branch.GetEntry(self.localentry, 0)
 *             return self.eJetPt_value             # <<<<<<<<<<<<<<
 * 
 *     property eMVAIsoWP80:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eJetPt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6867, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6865
 * 
 *     property eJetPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eJetPt_branch.GetEntry(self.localentry, 0)
 *             return self.eJetPt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eJetPt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6870
 * 
 *     property eMVAIsoWP80:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMVAIsoWP80_branch.GetEntry(self.localentry, 0)
 *             return self.eMVAIsoWP80_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11eMVAIsoWP80_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11eMVAIsoWP80_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11eMVAIsoWP80___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11eMVAIsoWP80___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6871
 *     property eMVAIsoWP80:
 *         def __get__(self):
 *             self.eMVAIsoWP80_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMVAIsoWP80_value
 * 
 */
  (void)(__pyx_v_self->eMVAIsoWP80_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6872
 *         def __get__(self):
 *             self.eMVAIsoWP80_branch.GetEntry(self.localentry, 0)
 *             return self.eMVAIsoWP80_value             # <<<<<<<<<<<<<<
 * 
 *     property eMVAIsoWP90:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMVAIsoWP80_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6870
 * 
 *     property eMVAIsoWP80:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMVAIsoWP80_branch.GetEntry(self.localentry, 0)
 *             return self.eMVAIsoWP80_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMVAIsoWP80.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6875
 * 
 *     property eMVAIsoWP90:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMVAIsoWP90_branch.GetEntry(self.localentry, 0)
 *             return self.eMVAIsoWP90_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11eMVAIsoWP90_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11eMVAIsoWP90_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11eMVAIsoWP90___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11eMVAIsoWP90___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6876
 *     property eMVAIsoWP90:
 *         def __get__(self):
 *             self.eMVAIsoWP90_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMVAIsoWP90_value
 * 
 */
  (void)(__pyx_v_self->eMVAIsoWP90_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6877
 *         def __get__(self):
 *             self.eMVAIsoWP90_branch.GetEntry(self.localentry, 0)
 *             return self.eMVAIsoWP90_value             # <<<<<<<<<<<<<<
 * 
 *     property eMVANoisoWP80:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMVAIsoWP90_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6875
 * 
 *     property eMVAIsoWP90:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMVAIsoWP90_branch.GetEntry(self.localentry, 0)
 *             return self.eMVAIsoWP90_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMVAIsoWP90.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6880
 * 
 *     property eMVANoisoWP80:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMVANoisoWP80_branch.GetEntry(self.localentry, 0)
 *             return self.eMVANoisoWP80_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_13eMVANoisoWP80_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_13eMVANoisoWP80_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_13eMVANoisoWP80___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_13eMVANoisoWP80___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6881
 *     property eMVANoisoWP80:
 *         def __get__(self):
 *             self.eMVANoisoWP80_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMVANoisoWP80_value
 * 
 */
  (void)(__pyx_v_self->eMVANoisoWP80_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6882
 *         def __get__(self):
 *             self.eMVANoisoWP80_branch.GetEntry(self.localentry, 0)
 *             return self.eMVANoisoWP80_value             # <<<<<<<<<<<<<<
 * 
 *     property eMVANoisoWP90:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMVANoisoWP80_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6882, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6880
 * 
 *     property eMVANoisoWP80:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMVANoisoWP80_branch.GetEntry(self.localentry, 0)
 *             return self.eMVANoisoWP80_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMVANoisoWP80.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6885
 * 
 *     property eMVANoisoWP90:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMVANoisoWP90_branch.GetEntry(self.localentry, 0)
 *             return self.eMVANoisoWP90_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_13eMVANoisoWP90_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_13eMVANoisoWP90_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_13eMVANoisoWP90___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_13eMVANoisoWP90___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6886
 *     property eMVANoisoWP90:
 *         def __get__(self):
 *             self.eMVANoisoWP90_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMVANoisoWP90_value
 * 
 */
  (void)(__pyx_v_self->eMVANoisoWP90_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6887
 *         def __get__(self):
 *             self.eMVANoisoWP90_branch.GetEntry(self.localentry, 0)
 *             return self.eMVANoisoWP90_value             # <<<<<<<<<<<<<<
 * 
 *     property eMass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMVANoisoWP90_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6887, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6885
 * 
 *     property eMVANoisoWP90:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMVANoisoWP90_branch.GetEntry(self.localentry, 0)
 *             return self.eMVANoisoWP90_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMVANoisoWP90.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6890
 * 
 *     property eMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMass_branch.GetEntry(self.localentry, 0)
 *             return self.eMass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5eMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5eMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5eMass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5eMass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6891
 *     property eMass:
 *         def __get__(self):
 *             self.eMass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMass_value
 * 
 */
  (void)(__pyx_v_self->eMass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6892
 *         def __get__(self):
 *             self.eMass_branch.GetEntry(self.localentry, 0)
 *             return self.eMass_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchEmbeddedFilterEle24Tau30:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6892, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6890
 * 
 *     property eMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMass_branch.GetEntry(self.localentry, 0)
 *             return self.eMass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6895
 * 
 *     property eMatchEmbeddedFilterEle24Tau30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchEmbeddedFilterEle24Tau30_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle24Tau30_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_30eMatchEmbeddedFilterEle24Tau30_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_30eMatchEmbeddedFilterEle24Tau30_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_30eMatchEmbeddedFilterEle24Tau30___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_30eMatchEmbeddedFilterEle24Tau30___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6896
 *     property eMatchEmbeddedFilterEle24Tau30:
 *         def __get__(self):
 *             self.eMatchEmbeddedFilterEle24Tau30_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchEmbeddedFilterEle24Tau30_value
 * 
 */
  (void)(__pyx_v_self->eMatchEmbeddedFilterEle24Tau30_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6897
 *         def __get__(self):
 *             self.eMatchEmbeddedFilterEle24Tau30_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle24Tau30_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchEmbeddedFilterEle27:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchEmbeddedFilterEle24Tau30_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6897, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6895
 * 
 *     property eMatchEmbeddedFilterEle24Tau30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchEmbeddedFilterEle24Tau30_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle24Tau30_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchEmbeddedFilterEle24Tau30.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6900
 * 
 *     property eMatchEmbeddedFilterEle27:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchEmbeddedFilterEle27_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle27_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_25eMatchEmbeddedFilterEle27_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_25eMatchEmbeddedFilterEle27_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_25eMatchEmbeddedFilterEle27___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_25eMatchEmbeddedFilterEle27___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6901
 *     property eMatchEmbeddedFilterEle27:
 *         def __get__(self):
 *             self.eMatchEmbeddedFilterEle27_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchEmbeddedFilterEle27_value
 * 
 */
  (void)(__pyx_v_self->eMatchEmbeddedFilterEle27_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6902
 *         def __get__(self):
 *             self.eMatchEmbeddedFilterEle27_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle27_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchEmbeddedFilterEle32:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchEmbeddedFilterEle27_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6900
 * 
 *     property eMatchEmbeddedFilterEle27:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchEmbeddedFilterEle27_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle27_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchEmbeddedFilterEle27.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6905
 * 
 *     property eMatchEmbeddedFilterEle32:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchEmbeddedFilterEle32_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle32_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_25eMatchEmbeddedFilterEle32_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_25eMatchEmbeddedFilterEle32_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_25eMatchEmbeddedFilterEle32___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_25eMatchEmbeddedFilterEle32___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6906
 *     property eMatchEmbeddedFilterEle32:
 *         def __get__(self):
 *             self.eMatchEmbeddedFilterEle32_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchEmbeddedFilterEle32_value
 * 
 */
  (void)(__pyx_v_self->eMatchEmbeddedFilterEle32_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6907
 *         def __get__(self):
 *             self.eMatchEmbeddedFilterEle32_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle32_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchEmbeddedFilterEle32DoubleL1_v1:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchEmbeddedFilterEle32_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6907, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6905
 * 
 *     property eMatchEmbeddedFilterEle32:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchEmbeddedFilterEle32_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle32_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchEmbeddedFilterEle32.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6910
 * 
 *     property eMatchEmbeddedFilterEle32DoubleL1_v1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle32DoubleL1_v1_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_36eMatchEmbeddedFilterEle32DoubleL1_v1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_36eMatchEmbeddedFilterEle32DoubleL1_v1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_36eMatchEmbeddedFilterEle32DoubleL1_v1___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_36eMatchEmbeddedFilterEle32DoubleL1_v1___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6911
 *     property eMatchEmbeddedFilterEle32DoubleL1_v1:
 *         def __get__(self):
 *             self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchEmbeddedFilterEle32DoubleL1_v1_value
 * 
 */
  (void)(__pyx_v_self->eMatchEmbeddedFilterEle32DoubleL1_v1_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6912
 *         def __get__(self):
 *             self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle32DoubleL1_v1_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchEmbeddedFilterEle32DoubleL1_v2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchEmbeddedFilterEle32DoubleL1_v1_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6912, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6910
 * 
 *     property eMatchEmbeddedFilterEle32DoubleL1_v1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle32DoubleL1_v1_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchEmbeddedFilterEle32DoubleL1_v1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6915
 * 
 *     property eMatchEmbeddedFilterEle32DoubleL1_v2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle32DoubleL1_v2_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_36eMatchEmbeddedFilterEle32DoubleL1_v2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_36eMatchEmbeddedFilterEle32DoubleL1_v2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_36eMatchEmbeddedFilterEle32DoubleL1_v2___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_36eMatchEmbeddedFilterEle32DoubleL1_v2___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6916
 *     property eMatchEmbeddedFilterEle32DoubleL1_v2:
 *         def __get__(self):
 *             self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchEmbeddedFilterEle32DoubleL1_v2_value
 * 
 */
  (void)(__pyx_v_self->eMatchEmbeddedFilterEle32DoubleL1_v2_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6917
 *         def __get__(self):
 *             self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle32DoubleL1_v2_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchEmbeddedFilterEle35:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchEmbeddedFilterEle32DoubleL1_v2_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6917, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6915
 * 
 *     property eMatchEmbeddedFilterEle32DoubleL1_v2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle32DoubleL1_v2_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchEmbeddedFilterEle32DoubleL1_v2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6920
 * 
 *     property eMatchEmbeddedFilterEle35:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchEmbeddedFilterEle35_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle35_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_25eMatchEmbeddedFilterEle35_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_25eMatchEmbeddedFilterEle35_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_25eMatchEmbeddedFilterEle35___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_25eMatchEmbeddedFilterEle35___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6921
 *     property eMatchEmbeddedFilterEle35:
 *         def __get__(self):
 *             self.eMatchEmbeddedFilterEle35_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchEmbeddedFilterEle35_value
 * 
 */
  (void)(__pyx_v_self->eMatchEmbeddedFilterEle35_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6922
 *         def __get__(self):
 *             self.eMatchEmbeddedFilterEle35_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle35_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesEle24HPSTau30Filter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchEmbeddedFilterEle35_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6922, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6920
 * 
 *     property eMatchEmbeddedFilterEle35:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchEmbeddedFilterEle35_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchEmbeddedFilterEle35_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchEmbeddedFilterEle35.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6925
 * 
 *     property eMatchesEle24HPSTau30Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle24HPSTau30Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle24HPSTau30Filter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_27eMatchesEle24HPSTau30Filter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_27eMatchesEle24HPSTau30Filter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_27eMatchesEle24HPSTau30Filter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_27eMatchesEle24HPSTau30Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6926
 *     property eMatchesEle24HPSTau30Filter:
 *         def __get__(self):
 *             self.eMatchesEle24HPSTau30Filter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesEle24HPSTau30Filter_value
 * 
 */
  (void)(__pyx_v_self->eMatchesEle24HPSTau30Filter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6927
 *         def __get__(self):
 *             self.eMatchesEle24HPSTau30Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle24HPSTau30Filter_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesEle24HPSTau30Path:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesEle24HPSTau30Filter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6927, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6925
 * 
 *     property eMatchesEle24HPSTau30Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle24HPSTau30Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle24HPSTau30Filter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesEle24HPSTau30Filter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6930
 * 
 *     property eMatchesEle24HPSTau30Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle24HPSTau30Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle24HPSTau30Path_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_25eMatchesEle24HPSTau30Path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_25eMatchesEle24HPSTau30Path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_25eMatchesEle24HPSTau30Path___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_25eMatchesEle24HPSTau30Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6931
 *     property eMatchesEle24HPSTau30Path:
 *         def __get__(self):
 *             self.eMatchesEle24HPSTau30Path_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesEle24HPSTau30Path_value
 * 
 */
  (void)(__pyx_v_self->eMatchesEle24HPSTau30Path_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6932
 *         def __get__(self):
 *             self.eMatchesEle24HPSTau30Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle24HPSTau30Path_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesEle24Tau30Filter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesEle24HPSTau30Path_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6932, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6930
 * 
 *     property eMatchesEle24HPSTau30Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle24HPSTau30Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle24HPSTau30Path_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesEle24HPSTau30Path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6935
 * 
 *     property eMatchesEle24Tau30Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle24Tau30Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle24Tau30Filter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_24eMatchesEle24Tau30Filter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_24eMatchesEle24Tau30Filter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_24eMatchesEle24Tau30Filter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_24eMatchesEle24Tau30Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6936
 *     property eMatchesEle24Tau30Filter:
 *         def __get__(self):
 *             self.eMatchesEle24Tau30Filter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesEle24Tau30Filter_value
 * 
 */
  (void)(__pyx_v_self->eMatchesEle24Tau30Filter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6937
 *         def __get__(self):
 *             self.eMatchesEle24Tau30Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle24Tau30Filter_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesEle24Tau30Path:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesEle24Tau30Filter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6935
 * 
 *     property eMatchesEle24Tau30Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle24Tau30Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle24Tau30Filter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesEle24Tau30Filter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6940
 * 
 *     property eMatchesEle24Tau30Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle24Tau30Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle24Tau30Path_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_22eMatchesEle24Tau30Path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_22eMatchesEle24Tau30Path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_22eMatchesEle24Tau30Path___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_22eMatchesEle24Tau30Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6941
 *     property eMatchesEle24Tau30Path:
 *         def __get__(self):
 *             self.eMatchesEle24Tau30Path_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesEle24Tau30Path_value
 * 
 */
  (void)(__pyx_v_self->eMatchesEle24Tau30Path_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6942
 *         def __get__(self):
 *             self.eMatchesEle24Tau30Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle24Tau30Path_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesEle25Filter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesEle24Tau30Path_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6942, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6940
 * 
 *     property eMatchesEle24Tau30Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle24Tau30Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle24Tau30Path_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesEle24Tau30Path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6945
 * 
 *     property eMatchesEle25Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle25Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle25Filter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_19eMatchesEle25Filter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_19eMatchesEle25Filter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_19eMatchesEle25Filter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_19eMatchesEle25Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6946
 *     property eMatchesEle25Filter:
 *         def __get__(self):
 *             self.eMatchesEle25Filter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesEle25Filter_value
 * 
 */
  (void)(__pyx_v_self->eMatchesEle25Filter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6947
 *         def __get__(self):
 *             self.eMatchesEle25Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle25Filter_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesEle25Path:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesEle25Filter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6947, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6945
 * 
 *     property eMatchesEle25Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle25Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle25Filter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesEle25Filter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6950
 * 
 *     property eMatchesEle25Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle25Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle25Path_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_17eMatchesEle25Path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_17eMatchesEle25Path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_17eMatchesEle25Path___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_17eMatchesEle25Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6951
 *     property eMatchesEle25Path:
 *         def __get__(self):
 *             self.eMatchesEle25Path_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesEle25Path_value
 * 
 */
  (void)(__pyx_v_self->eMatchesEle25Path_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6952
 *         def __get__(self):
 *             self.eMatchesEle25Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle25Path_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesEle27Filter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesEle25Path_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6952, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6950
 * 
 *     property eMatchesEle25Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle25Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle25Path_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesEle25Path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6955
 * 
 *     property eMatchesEle27Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle27Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle27Filter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_19eMatchesEle27Filter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_19eMatchesEle27Filter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_19eMatchesEle27Filter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_19eMatchesEle27Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6956
 *     property eMatchesEle27Filter:
 *         def __get__(self):
 *             self.eMatchesEle27Filter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesEle27Filter_value
 * 
 */
  (void)(__pyx_v_self->eMatchesEle27Filter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6957
 *         def __get__(self):
 *             self.eMatchesEle27Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle27Filter_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesEle27Path:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesEle27Filter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6957, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6955
 * 
 *     property eMatchesEle27Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle27Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle27Filter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesEle27Filter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6960
 * 
 *     property eMatchesEle27Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle27Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle27Path_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_17eMatchesEle27Path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_17eMatchesEle27Path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_17eMatchesEle27Path___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_17eMatchesEle27Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6961
 *     property eMatchesEle27Path:
 *         def __get__(self):
 *             self.eMatchesEle27Path_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesEle27Path_value
 * 
 */
  (void)(__pyx_v_self->eMatchesEle27Path_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6962
 *         def __get__(self):
 *             self.eMatchesEle27Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle27Path_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesEle32Filter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesEle27Path_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6962, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6960
 * 
 *     property eMatchesEle27Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle27Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle27Path_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesEle27Path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6965
 * 
 *     property eMatchesEle32Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle32Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle32Filter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_19eMatchesEle32Filter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_19eMatchesEle32Filter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_19eMatchesEle32Filter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_19eMatchesEle32Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6966
 *     property eMatchesEle32Filter:
 *         def __get__(self):
 *             self.eMatchesEle32Filter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesEle32Filter_value
 * 
 */
  (void)(__pyx_v_self->eMatchesEle32Filter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6967
 *         def __get__(self):
 *             self.eMatchesEle32Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle32Filter_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesEle32Path:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesEle32Filter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6967, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6965
 * 
 *     property eMatchesEle32Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle32Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle32Filter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesEle32Filter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6970
 * 
 *     property eMatchesEle32Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle32Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle32Path_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_17eMatchesEle32Path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_17eMatchesEle32Path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_17eMatchesEle32Path___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_17eMatchesEle32Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6971
 *     property eMatchesEle32Path:
 *         def __get__(self):
 *             self.eMatchesEle32Path_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesEle32Path_value
 * 
 */
  (void)(__pyx_v_self->eMatchesEle32Path_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6972
 *         def __get__(self):
 *             self.eMatchesEle32Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle32Path_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesEle35Filter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesEle32Path_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6972, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6970
 * 
 *     property eMatchesEle32Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle32Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle32Path_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesEle32Path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6975
 * 
 *     property eMatchesEle35Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle35Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle35Filter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_19eMatchesEle35Filter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_19eMatchesEle35Filter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_19eMatchesEle35Filter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_19eMatchesEle35Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6976
 *     property eMatchesEle35Filter:
 *         def __get__(self):
 *             self.eMatchesEle35Filter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesEle35Filter_value
 * 
 */
  (void)(__pyx_v_self->eMatchesEle35Filter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6977
 *         def __get__(self):
 *             self.eMatchesEle35Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle35Filter_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesEle35Path:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesEle35Filter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6977, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6975
 * 
 *     property eMatchesEle35Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle35Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle35Filter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesEle35Filter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6980
 * 
 *     property eMatchesEle35Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle35Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle35Path_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_17eMatchesEle35Path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_17eMatchesEle35Path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_17eMatchesEle35Path___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_17eMatchesEle35Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6981
 *     property eMatchesEle35Path:
 *         def __get__(self):
 *             self.eMatchesEle35Path_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesEle35Path_value
 * 
 */
  (void)(__pyx_v_self->eMatchesEle35Path_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6982
 *         def __get__(self):
 *             self.eMatchesEle35Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle35Path_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesMu23e12DZFilter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesEle35Path_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6982, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6980
 * 
 *     property eMatchesEle35Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesEle35Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesEle35Path_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesEle35Path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6985
 * 
 *     property eMatchesMu23e12DZFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesMu23e12DZFilter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu23e12DZFilter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_23eMatchesMu23e12DZFilter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_23eMatchesMu23e12DZFilter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_23eMatchesMu23e12DZFilter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_23eMatchesMu23e12DZFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6986
 *     property eMatchesMu23e12DZFilter:
 *         def __get__(self):
 *             self.eMatchesMu23e12DZFilter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesMu23e12DZFilter_value
 * 
 */
  (void)(__pyx_v_self->eMatchesMu23e12DZFilter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6987
 *         def __get__(self):
 *             self.eMatchesMu23e12DZFilter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu23e12DZFilter_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesMu23e12DZPath:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesMu23e12DZFilter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6987, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6985
 * 
 *     property eMatchesMu23e12DZFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesMu23e12DZFilter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu23e12DZFilter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesMu23e12DZFilter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6990
 * 
 *     property eMatchesMu23e12DZPath:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesMu23e12DZPath_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu23e12DZPath_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_21eMatchesMu23e12DZPath_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_21eMatchesMu23e12DZPath_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_21eMatchesMu23e12DZPath___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_21eMatchesMu23e12DZPath___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6991
 *     property eMatchesMu23e12DZPath:
 *         def __get__(self):
 *             self.eMatchesMu23e12DZPath_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesMu23e12DZPath_value
 * 
 */
  (void)(__pyx_v_self->eMatchesMu23e12DZPath_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6992
 *         def __get__(self):
 *             self.eMatchesMu23e12DZPath_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu23e12DZPath_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesMu23e12Filter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesMu23e12DZPath_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6992, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6990
 * 
 *     property eMatchesMu23e12DZPath:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesMu23e12DZPath_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu23e12DZPath_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesMu23e12DZPath.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":6995
 * 
 *     property eMatchesMu23e12Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesMu23e12Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu23e12Filter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_21eMatchesMu23e12Filter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_21eMatchesMu23e12Filter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_21eMatchesMu23e12Filter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_21eMatchesMu23e12Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":6996
 *     property eMatchesMu23e12Filter:
 *         def __get__(self):
 *             self.eMatchesMu23e12Filter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesMu23e12Filter_value
 * 
 */
  (void)(__pyx_v_self->eMatchesMu23e12Filter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":6997
 *         def __get__(self):
 *             self.eMatchesMu23e12Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu23e12Filter_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesMu23e12Path:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesMu23e12Filter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6997, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":6995
 * 
 *     property eMatchesMu23e12Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesMu23e12Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu23e12Filter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesMu23e12Filter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7000
 * 
 *     property eMatchesMu23e12Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesMu23e12Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu23e12Path_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_19eMatchesMu23e12Path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_19eMatchesMu23e12Path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_19eMatchesMu23e12Path___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_19eMatchesMu23e12Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7001
 *     property eMatchesMu23e12Path:
 *         def __get__(self):
 *             self.eMatchesMu23e12Path_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesMu23e12Path_value
 * 
 */
  (void)(__pyx_v_self->eMatchesMu23e12Path_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7002
 *         def __get__(self):
 *             self.eMatchesMu23e12Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu23e12Path_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesMu8e23DZFilter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesMu23e12Path_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7000
 * 
 *     property eMatchesMu23e12Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesMu23e12Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu23e12Path_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesMu23e12Path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7005
 * 
 *     property eMatchesMu8e23DZFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesMu8e23DZFilter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu8e23DZFilter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_22eMatchesMu8e23DZFilter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_22eMatchesMu8e23DZFilter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_22eMatchesMu8e23DZFilter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_22eMatchesMu8e23DZFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7006
 *     property eMatchesMu8e23DZFilter:
 *         def __get__(self):
 *             self.eMatchesMu8e23DZFilter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesMu8e23DZFilter_value
 * 
 */
  (void)(__pyx_v_self->eMatchesMu8e23DZFilter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7007
 *         def __get__(self):
 *             self.eMatchesMu8e23DZFilter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu8e23DZFilter_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesMu8e23DZPath:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesMu8e23DZFilter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7007, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7005
 * 
 *     property eMatchesMu8e23DZFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesMu8e23DZFilter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu8e23DZFilter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesMu8e23DZFilter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7010
 * 
 *     property eMatchesMu8e23DZPath:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesMu8e23DZPath_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu8e23DZPath_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20eMatchesMu8e23DZPath_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20eMatchesMu8e23DZPath_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20eMatchesMu8e23DZPath___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20eMatchesMu8e23DZPath___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7011
 *     property eMatchesMu8e23DZPath:
 *         def __get__(self):
 *             self.eMatchesMu8e23DZPath_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesMu8e23DZPath_value
 * 
 */
  (void)(__pyx_v_self->eMatchesMu8e23DZPath_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7012
 *         def __get__(self):
 *             self.eMatchesMu8e23DZPath_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu8e23DZPath_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesMu8e23Filter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesMu8e23DZPath_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7012, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7010
 * 
 *     property eMatchesMu8e23DZPath:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesMu8e23DZPath_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu8e23DZPath_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesMu8e23DZPath.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7015
 * 
 *     property eMatchesMu8e23Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesMu8e23Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu8e23Filter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20eMatchesMu8e23Filter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20eMatchesMu8e23Filter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20eMatchesMu8e23Filter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20eMatchesMu8e23Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7016
 *     property eMatchesMu8e23Filter:
 *         def __get__(self):
 *             self.eMatchesMu8e23Filter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesMu8e23Filter_value
 * 
 */
  (void)(__pyx_v_self->eMatchesMu8e23Filter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7017
 *         def __get__(self):
 *             self.eMatchesMu8e23Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu8e23Filter_value             # <<<<<<<<<<<<<<
 * 
 *     property eMatchesMu8e23Path:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesMu8e23Filter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7017, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7015
 * 
 *     property eMatchesMu8e23Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesMu8e23Filter_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu8e23Filter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesMu8e23Filter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7020
 * 
 *     property eMatchesMu8e23Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesMu8e23Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu8e23Path_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_18eMatchesMu8e23Path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_18eMatchesMu8e23Path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_18eMatchesMu8e23Path___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_18eMatchesMu8e23Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7021
 *     property eMatchesMu8e23Path:
 *         def __get__(self):
 *             self.eMatchesMu8e23Path_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMatchesMu8e23Path_value
 * 
 */
  (void)(__pyx_v_self->eMatchesMu8e23Path_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7022
 *         def __get__(self):
 *             self.eMatchesMu8e23Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu8e23Path_value             # <<<<<<<<<<<<<<
 * 
 *     property eMissingHits:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMatchesMu8e23Path_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7022, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7020
 * 
 *     property eMatchesMu8e23Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMatchesMu8e23Path_branch.GetEntry(self.localentry, 0)
 *             return self.eMatchesMu8e23Path_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMatchesMu8e23Path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7025
 * 
 *     property eMissingHits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMissingHits_branch.GetEntry(self.localentry, 0)
 *             return self.eMissingHits_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12eMissingHits_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12eMissingHits_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12eMissingHits___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12eMissingHits___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7026
 *     property eMissingHits:
 *         def __get__(self):
 *             self.eMissingHits_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eMissingHits_value
 * 
 */
  (void)(__pyx_v_self->eMissingHits_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7027
 *         def __get__(self):
 *             self.eMissingHits_branch.GetEntry(self.localentry, 0)
 *             return self.eMissingHits_value             # <<<<<<<<<<<<<<
 * 
 *     property ePVDXY:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eMissingHits_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7027, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7025
 * 
 *     property eMissingHits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eMissingHits_branch.GetEntry(self.localentry, 0)
 *             return self.eMissingHits_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eMissingHits.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7030
 * 
 *     property ePVDXY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.ePVDXY_branch.GetEntry(self.localentry, 0)
 *             return self.ePVDXY_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6ePVDXY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6ePVDXY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6ePVDXY___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6ePVDXY___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7031
 *     property ePVDXY:
 *         def __get__(self):
 *             self.ePVDXY_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.ePVDXY_value
 * 
 */
  (void)(__pyx_v_self->ePVDXY_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7032
 *         def __get__(self):
 *             self.ePVDXY_branch.GetEntry(self.localentry, 0)
 *             return self.ePVDXY_value             # <<<<<<<<<<<<<<
 * 
 *     property ePVDZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ePVDXY_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7032, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7030
 * 
 *     property ePVDXY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.ePVDXY_branch.GetEntry(self.localentry, 0)
 *             return self.ePVDXY_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.ePVDXY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7035
 * 
 *     property ePVDZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.ePVDZ_branch.GetEntry(self.localentry, 0)
 *             return self.ePVDZ_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5ePVDZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5ePVDZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5ePVDZ___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5ePVDZ___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7036
 *     property ePVDZ:
 *         def __get__(self):
 *             self.ePVDZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.ePVDZ_value
 * 
 */
  (void)(__pyx_v_self->ePVDZ_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7037
 *         def __get__(self):
 *             self.ePVDZ_branch.GetEntry(self.localentry, 0)
 *             return self.ePVDZ_value             # <<<<<<<<<<<<<<
 * 
 *     property ePassesConversionVeto:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ePVDZ_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7037, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7035
 * 
 *     property ePVDZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.ePVDZ_branch.GetEntry(self.localentry, 0)
 *             return self.ePVDZ_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.ePVDZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7040
 * 
 *     property ePassesConversionVeto:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.ePassesConversionVeto_branch.GetEntry(self.localentry, 0)
 *             return self.ePassesConversionVeto_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_21ePassesConversionVeto_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_21ePassesConversionVeto_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_21ePassesConversionVeto___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_21ePassesConversionVeto___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7041
 *     property ePassesConversionVeto:
 *         def __get__(self):
 *             self.ePassesConversionVeto_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.ePassesConversionVeto_value
 * 
 */
  (void)(__pyx_v_self->ePassesConversionVeto_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7042
 *         def __get__(self):
 *             self.ePassesConversionVeto_branch.GetEntry(self.localentry, 0)
 *             return self.ePassesConversionVeto_value             # <<<<<<<<<<<<<<
 * 
 *     property ePhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ePassesConversionVeto_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7042, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7040
 * 
 *     property ePassesConversionVeto:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.ePassesConversionVeto_branch.GetEntry(self.localentry, 0)
 *             return self.ePassesConversionVeto_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.ePassesConversionVeto.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7045
 * 
 *     property ePhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.ePhi_branch.GetEntry(self.localentry, 0)
 *             return self.ePhi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_4ePhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_4ePhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_4ePhi___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_4ePhi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7046
 *     property ePhi:
 *         def __get__(self):
 *             self.ePhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.ePhi_value
 * 
 */
  (void)(__pyx_v_self->ePhi_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7047
 *         def __get__(self):
 *             self.ePhi_branch.GetEntry(self.localentry, 0)
 *             return self.ePhi_value             # <<<<<<<<<<<<<<
 * 
 *     property ePt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ePhi_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7047, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7045
 * 
 *     property ePhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.ePhi_branch.GetEntry(self.localentry, 0)
 *             return self.ePhi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.ePhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7050
 * 
 *     property ePt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.ePt_branch.GetEntry(self.localentry, 0)
 *             return self.ePt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_3ePt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_3ePt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_3ePt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_3ePt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7051
 *     property ePt:
 *         def __get__(self):
 *             self.ePt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.ePt_value
 * 
 */
  (void)(__pyx_v_self->ePt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7052
 *         def __get__(self):
 *             self.ePt_branch.GetEntry(self.localentry, 0)
 *             return self.ePt_value             # <<<<<<<<<<<<<<
 * 
 *     property eRelPFIsoRho:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ePt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7052, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7050
 * 
 *     property ePt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.ePt_branch.GetEntry(self.localentry, 0)
 *             return self.ePt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.ePt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7055
 * 
 *     property eRelPFIsoRho:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eRelPFIsoRho_branch.GetEntry(self.localentry, 0)
 *             return self.eRelPFIsoRho_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12eRelPFIsoRho_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12eRelPFIsoRho_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12eRelPFIsoRho___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12eRelPFIsoRho___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7056
 *     property eRelPFIsoRho:
 *         def __get__(self):
 *             self.eRelPFIsoRho_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eRelPFIsoRho_value
 * 
 */
  (void)(__pyx_v_self->eRelPFIsoRho_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7057
 *         def __get__(self):
 *             self.eRelPFIsoRho_branch.GetEntry(self.localentry, 0)
 *             return self.eRelPFIsoRho_value             # <<<<<<<<<<<<<<
 * 
 *     property eSIP2D:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eRelPFIsoRho_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7057, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7055
 * 
 *     property eRelPFIsoRho:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eRelPFIsoRho_branch.GetEntry(self.localentry, 0)
 *             return self.eRelPFIsoRho_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eRelPFIsoRho.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7060
 * 
 *     property eSIP2D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eSIP2D_branch.GetEntry(self.localentry, 0)
 *             return self.eSIP2D_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6eSIP2D_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6eSIP2D_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6eSIP2D___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6eSIP2D___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7061
 *     property eSIP2D:
 *         def __get__(self):
 *             self.eSIP2D_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eSIP2D_value
 * 
 */
  (void)(__pyx_v_self->eSIP2D_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7062
 *         def __get__(self):
 *             self.eSIP2D_branch.GetEntry(self.localentry, 0)
 *             return self.eSIP2D_value             # <<<<<<<<<<<<<<
 * 
 *     property eSIP3D:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eSIP2D_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7062, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7060
 * 
 *     property eSIP2D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eSIP2D_branch.GetEntry(self.localentry, 0)
 *             return self.eSIP2D_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eSIP2D.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7065
 * 
 *     property eSIP3D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eSIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.eSIP3D_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6eSIP3D_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6eSIP3D_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6eSIP3D___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6eSIP3D___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7066
 *     property eSIP3D:
 *         def __get__(self):
 *             self.eSIP3D_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eSIP3D_value
 * 
 */
  (void)(__pyx_v_self->eSIP3D_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7067
 *         def __get__(self):
 *             self.eSIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.eSIP3D_value             # <<<<<<<<<<<<<<
 * 
 *     property eVZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eSIP3D_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7065
 * 
 *     property eSIP3D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eSIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.eSIP3D_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eSIP3D.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7070
 * 
 *     property eVZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eVZ_branch.GetEntry(self.localentry, 0)
 *             return self.eVZ_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_3eVZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_3eVZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_3eVZ___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_3eVZ___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7071
 *     property eVZ:
 *         def __get__(self):
 *             self.eVZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eVZ_value
 * 
 */
  (void)(__pyx_v_self->eVZ_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7072
 *         def __get__(self):
 *             self.eVZ_branch.GetEntry(self.localentry, 0)
 *             return self.eVZ_value             # <<<<<<<<<<<<<<
 * 
 *     property eVetoMVAIsoVtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eVZ_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7072, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7070
 * 
 *     property eVZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eVZ_branch.GetEntry(self.localentry, 0)
 *             return self.eVZ_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eVZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7075
 * 
 *     property eVetoMVAIsoVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eVetoMVAIsoVtx_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoMVAIsoVtx_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_14eVetoMVAIsoVtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_14eVetoMVAIsoVtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_14eVetoMVAIsoVtx___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_14eVetoMVAIsoVtx___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7076
 *     property eVetoMVAIsoVtx:
 *         def __get__(self):
 *             self.eVetoMVAIsoVtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eVetoMVAIsoVtx_value
 * 
 */
  (void)(__pyx_v_self->eVetoMVAIsoVtx_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7077
 *         def __get__(self):
 *             self.eVetoMVAIsoVtx_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoMVAIsoVtx_value             # <<<<<<<<<<<<<<
 * 
 *     property eVetoZTTp001dxyz:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eVetoMVAIsoVtx_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7077, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7075
 * 
 *     property eVetoMVAIsoVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eVetoMVAIsoVtx_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoMVAIsoVtx_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eVetoMVAIsoVtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7080
 * 
 *     property eVetoZTTp001dxyz:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eVetoZTTp001dxyz_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoZTTp001dxyz_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16eVetoZTTp001dxyz_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16eVetoZTTp001dxyz_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16eVetoZTTp001dxyz___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16eVetoZTTp001dxyz___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7081
 *     property eVetoZTTp001dxyz:
 *         def __get__(self):
 *             self.eVetoZTTp001dxyz_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eVetoZTTp001dxyz_value
 * 
 */
  (void)(__pyx_v_self->eVetoZTTp001dxyz_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7082
 *         def __get__(self):
 *             self.eVetoZTTp001dxyz_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoZTTp001dxyz_value             # <<<<<<<<<<<<<<
 * 
 *     property eZTTGenMatching:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eVetoZTTp001dxyz_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7082, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7080
 * 
 *     property eVetoZTTp001dxyz:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eVetoZTTp001dxyz_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoZTTp001dxyz_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eVetoZTTp001dxyz.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7085
 * 
 *     property eZTTGenMatching:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eZTTGenMatching_branch.GetEntry(self.localentry, 0)
 *             return self.eZTTGenMatching_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_15eZTTGenMatching_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_15eZTTGenMatching_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_15eZTTGenMatching___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_15eZTTGenMatching___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7086
 *     property eZTTGenMatching:
 *         def __get__(self):
 *             self.eZTTGenMatching_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eZTTGenMatching_value
 * 
 */
  (void)(__pyx_v_self->eZTTGenMatching_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7087
 *         def __get__(self):
 *             self.eZTTGenMatching_branch.GetEntry(self.localentry, 0)
 *             return self.eZTTGenMatching_value             # <<<<<<<<<<<<<<
 * 
 *     property e_m_PZeta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eZTTGenMatching_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7087, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7085
 * 
 *     property eZTTGenMatching:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eZTTGenMatching_branch.GetEntry(self.localentry, 0)
 *             return self.eZTTGenMatching_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eZTTGenMatching.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7090
 * 
 *     property e_m_PZeta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.e_m_PZeta_branch.GetEntry(self.localentry, 0)
 *             return self.e_m_PZeta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_9e_m_PZeta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_9e_m_PZeta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_9e_m_PZeta___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_9e_m_PZeta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7091
 *     property e_m_PZeta:
 *         def __get__(self):
 *             self.e_m_PZeta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.e_m_PZeta_value
 * 
 */
  (void)(__pyx_v_self->e_m_PZeta_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7092
 *         def __get__(self):
 *             self.e_m_PZeta_branch.GetEntry(self.localentry, 0)
 *             return self.e_m_PZeta_value             # <<<<<<<<<<<<<<
 * 
 *     property e_m_PZetaVis:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->e_m_PZeta_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7092, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7090
 * 
 *     property e_m_PZeta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.e_m_PZeta_branch.GetEntry(self.localentry, 0)
 *             return self.e_m_PZeta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.e_m_PZeta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7095
 * 
 *     property e_m_PZetaVis:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.e_m_PZetaVis_branch.GetEntry(self.localentry, 0)
 *             return self.e_m_PZetaVis_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12e_m_PZetaVis_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12e_m_PZetaVis_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12e_m_PZetaVis___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12e_m_PZetaVis___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7096
 *     property e_m_PZetaVis:
 *         def __get__(self):
 *             self.e_m_PZetaVis_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.e_m_PZetaVis_value
 * 
 */
  (void)(__pyx_v_self->e_m_PZetaVis_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7097
 *         def __get__(self):
 *             self.e_m_PZetaVis_branch.GetEntry(self.localentry, 0)
 *             return self.e_m_PZetaVis_value             # <<<<<<<<<<<<<<
 * 
 *     property e_m_doubleL1IsoTauMatch:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->e_m_PZetaVis_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7097, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7095
 * 
 *     property e_m_PZetaVis:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.e_m_PZetaVis_branch.GetEntry(self.localentry, 0)
 *             return self.e_m_PZetaVis_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.e_m_PZetaVis.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7100
 * 
 *     property e_m_doubleL1IsoTauMatch:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.e_m_doubleL1IsoTauMatch_branch.GetEntry(self.localentry, 0)
 *             return self.e_m_doubleL1IsoTauMatch_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_23e_m_doubleL1IsoTauMatch_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_23e_m_doubleL1IsoTauMatch_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_23e_m_doubleL1IsoTauMatch___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_23e_m_doubleL1IsoTauMatch___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7101
 *     property e_m_doubleL1IsoTauMatch:
 *         def __get__(self):
 *             self.e_m_doubleL1IsoTauMatch_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.e_m_doubleL1IsoTauMatch_value
 * 
 */
  (void)(__pyx_v_self->e_m_doubleL1IsoTauMatch_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7102
 *         def __get__(self):
 *             self.e_m_doubleL1IsoTauMatch_branch.GetEntry(self.localentry, 0)
 *             return self.e_m_doubleL1IsoTauMatch_value             # <<<<<<<<<<<<<<
 * 
 *     property eecalEnergy:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->e_m_doubleL1IsoTauMatch_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7100
 * 
 *     property e_m_doubleL1IsoTauMatch:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.e_m_doubleL1IsoTauMatch_branch.GetEntry(self.localentry, 0)
 *             return self.e_m_doubleL1IsoTauMatch_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.e_m_doubleL1IsoTauMatch.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7105
 * 
 *     property eecalEnergy:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eecalEnergy_branch.GetEntry(self.localentry, 0)
 *             return self.eecalEnergy_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11eecalEnergy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11eecalEnergy_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11eecalEnergy___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11eecalEnergy___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7106
 *     property eecalEnergy:
 *         def __get__(self):
 *             self.eecalEnergy_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eecalEnergy_value
 * 
 */
  (void)(__pyx_v_self->eecalEnergy_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7107
 *         def __get__(self):
 *             self.eecalEnergy_branch.GetEntry(self.localentry, 0)
 *             return self.eecalEnergy_value             # <<<<<<<<<<<<<<
 * 
 *     property evt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eecalEnergy_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7105
 * 
 *     property eecalEnergy:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eecalEnergy_branch.GetEntry(self.localentry, 0)
 *             return self.eecalEnergy_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.eecalEnergy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7110
 * 
 *     property evt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.evt_branch.GetEntry(self.localentry, 0)
 *             return self.evt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_3evt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_3evt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_3evt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_3evt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7111
 *     property evt:
 *         def __get__(self):
 *             self.evt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.evt_value
 * 
 */
  (void)(__pyx_v_self->evt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7112
 *         def __get__(self):
 *             self.evt_branch.GetEntry(self.localentry, 0)
 *             return self.evt_value             # <<<<<<<<<<<<<<
 * 
 *     property genEta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_long(__pyx_v_self->evt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7110
 * 
 *     property evt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.evt_branch.GetEntry(self.localentry, 0)
 *             return self.evt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.evt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7115
 * 
 *     property genEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.genEta_branch.GetEntry(self.localentry, 0)
 *             return self.genEta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6genEta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6genEta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6genEta___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6genEta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7116
 *     property genEta:
 *         def __get__(self):
 *             self.genEta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.genEta_value
 * 
 */
  (void)(__pyx_v_self->genEta_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7117
 *         def __get__(self):
 *             self.genEta_branch.GetEntry(self.localentry, 0)
 *             return self.genEta_value             # <<<<<<<<<<<<<<
 * 
 *     property genHTT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->genEta_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7115
 * 
 *     property genEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.genEta_branch.GetEntry(self.localentry, 0)
 *             return self.genEta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.genEta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7120
 * 
 *     property genHTT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.genHTT_branch.GetEntry(self.localentry, 0)
 *             return self.genHTT_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6genHTT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6genHTT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6genHTT___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6genHTT___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7121
 *     property genHTT:
 *         def __get__(self):
 *             self.genHTT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.genHTT_value
 * 
 */
  (void)(__pyx_v_self->genHTT_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7122
 *         def __get__(self):
 *             self.genHTT_branch.GetEntry(self.localentry, 0)
 *             return self.genHTT_value             # <<<<<<<<<<<<<<
 * 
 *     property genM:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->genHTT_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7120
 * 
 *     property genHTT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.genHTT_branch.GetEntry(self.localentry, 0)
 *             return self.genHTT_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.genHTT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7125
 * 
 *     property genM:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.genM_branch.GetEntry(self.localentry, 0)
 *             return self.genM_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_4genM_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_4genM_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_4genM___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_4genM___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7126
 *     property genM:
 *         def __get__(self):
 *             self.genM_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.genM_value
 * 
 */
  (void)(__pyx_v_self->genM_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7127
 *         def __get__(self):
 *             self.genM_branch.GetEntry(self.localentry, 0)
 *             return self.genM_value             # <<<<<<<<<<<<<<
 * 
 *     property genMass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->genM_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7125
 * 
 *     property genM:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.genM_branch.GetEntry(self.localentry, 0)
 *             return self.genM_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.genM.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7130
 * 
 *     property genMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.genMass_branch.GetEntry(self.localentry, 0)
 *             return self.genMass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_7genMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_7genMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_7genMass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_7genMass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7131
 *     property genMass:
 *         def __get__(self):
 *             self.genMass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.genMass_value
 * 
 */
  (void)(__pyx_v_self->genMass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7132
 *         def __get__(self):
 *             self.genMass_branch.GetEntry(self.localentry, 0)
 *             return self.genMass_value             # <<<<<<<<<<<<<<
 * 
 *     property genPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->genMass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7130
 * 
 *     property genMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.genMass_branch.GetEntry(self.localentry, 0)
 *             return self.genMass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.genMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7135
 * 
 *     property genPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.genPhi_branch.GetEntry(self.localentry, 0)
 *             return self.genPhi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6genPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6genPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6genPhi___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6genPhi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7136
 *     property genPhi:
 *         def __get__(self):
 *             self.genPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.genPhi_value
 * 
 */
  (void)(__pyx_v_self->genPhi_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7137
 *         def __get__(self):
 *             self.genPhi_branch.GetEntry(self.localentry, 0)
 *             return self.genPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property genpT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->genPhi_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7135
 * 
 *     property genPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.genPhi_branch.GetEntry(self.localentry, 0)
 *             return self.genPhi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.genPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7140
 * 
 *     property genpT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.genpT_branch.GetEntry(self.localentry, 0)
 *             return self.genpT_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5genpT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5genpT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5genpT___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5genpT___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7141
 *     property genpT:
 *         def __get__(self):
 *             self.genpT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.genpT_value
 * 
 */
  (void)(__pyx_v_self->genpT_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7142
 *         def __get__(self):
 *             self.genpT_branch.GetEntry(self.localentry, 0)
 *             return self.genpT_value             # <<<<<<<<<<<<<<
 * 
 *     property genpX:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->genpT_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7140
 * 
 *     property genpT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.genpT_branch.GetEntry(self.localentry, 0)
 *             return self.genpT_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.genpT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7145
 * 
 *     property genpX:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.genpX_branch.GetEntry(self.localentry, 0)
 *             return self.genpX_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5genpX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5genpX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5genpX___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5genpX___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7146
 *     property genpX:
 *         def __get__(self):
 *             self.genpX_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.genpX_value
 * 
 */
  (void)(__pyx_v_self->genpX_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7147
 *         def __get__(self):
 *             self.genpX_branch.GetEntry(self.localentry, 0)
 *             return self.genpX_value             # <<<<<<<<<<<<<<
 * 
 *     property genpY:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->genpX_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7145
 * 
 *     property genpX:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.genpX_branch.GetEntry(self.localentry, 0)
 *             return self.genpX_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.genpX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7150
 * 
 *     property genpY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.genpY_branch.GetEntry(self.localentry, 0)
 *             return self.genpY_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5genpY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5genpY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5genpY___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5genpY___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7151
 *     property genpY:
 *         def __get__(self):
 *             self.genpY_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.genpY_value
 * 
 */
  (void)(__pyx_v_self->genpY_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7152
 *         def __get__(self):
 *             self.genpY_branch.GetEntry(self.localentry, 0)
 *             return self.genpY_value             # <<<<<<<<<<<<<<
 * 
 *     property isGtautau:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->genpY_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7150
 * 
 *     property genpY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.genpY_branch.GetEntry(self.localentry, 0)
 *             return self.genpY_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.genpY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7155
 * 
 *     property isGtautau:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isGtautau_branch.GetEntry(self.localentry, 0)
 *             return self.isGtautau_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_9isGtautau_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_9isGtautau_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_9isGtautau___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_9isGtautau___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7156
 *     property isGtautau:
 *         def __get__(self):
 *             self.isGtautau_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isGtautau_value
 * 
 */
  (void)(__pyx_v_self->isGtautau_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7157
 *         def __get__(self):
 *             self.isGtautau_branch.GetEntry(self.localentry, 0)
 *             return self.isGtautau_value             # <<<<<<<<<<<<<<
 * 
 *     property isWenu:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isGtautau_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7155
 * 
 *     property isGtautau:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isGtautau_branch.GetEntry(self.localentry, 0)
 *             return self.isGtautau_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.isGtautau.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7160
 * 
 *     property isWenu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isWenu_branch.GetEntry(self.localentry, 0)
 *             return self.isWenu_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6isWenu_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6isWenu_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6isWenu___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6isWenu___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7161
 *     property isWenu:
 *         def __get__(self):
 *             self.isWenu_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isWenu_value
 * 
 */
  (void)(__pyx_v_self->isWenu_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7162
 *         def __get__(self):
 *             self.isWenu_branch.GetEntry(self.localentry, 0)
 *             return self.isWenu_value             # <<<<<<<<<<<<<<
 * 
 *     property isWmunu:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isWenu_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7160
 * 
 *     property isWenu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isWenu_branch.GetEntry(self.localentry, 0)
 *             return self.isWenu_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.isWenu.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7165
 * 
 *     property isWmunu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isWmunu_branch.GetEntry(self.localentry, 0)
 *             return self.isWmunu_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_7isWmunu_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_7isWmunu_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_7isWmunu___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_7isWmunu___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7166
 *     property isWmunu:
 *         def __get__(self):
 *             self.isWmunu_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isWmunu_value
 * 
 */
  (void)(__pyx_v_self->isWmunu_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7167
 *         def __get__(self):
 *             self.isWmunu_branch.GetEntry(self.localentry, 0)
 *             return self.isWmunu_value             # <<<<<<<<<<<<<<
 * 
 *     property isWtaunu:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isWmunu_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7165
 * 
 *     property isWmunu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isWmunu_branch.GetEntry(self.localentry, 0)
 *             return self.isWmunu_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.isWmunu.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7170
 * 
 *     property isWtaunu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isWtaunu_branch.GetEntry(self.localentry, 0)
 *             return self.isWtaunu_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_8isWtaunu_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_8isWtaunu_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_8isWtaunu___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_8isWtaunu___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7171
 *     property isWtaunu:
 *         def __get__(self):
 *             self.isWtaunu_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isWtaunu_value
 * 
 */
  (void)(__pyx_v_self->isWtaunu_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7172
 *         def __get__(self):
 *             self.isWtaunu_branch.GetEntry(self.localentry, 0)
 *             return self.isWtaunu_value             # <<<<<<<<<<<<<<
 * 
 *     property isZee:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isWtaunu_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7170
 * 
 *     property isWtaunu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isWtaunu_branch.GetEntry(self.localentry, 0)
 *             return self.isWtaunu_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.isWtaunu.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7175
 * 
 *     property isZee:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isZee_branch.GetEntry(self.localentry, 0)
 *             return self.isZee_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5isZee_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5isZee_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5isZee___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5isZee___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7176
 *     property isZee:
 *         def __get__(self):
 *             self.isZee_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isZee_value
 * 
 */
  (void)(__pyx_v_self->isZee_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7177
 *         def __get__(self):
 *             self.isZee_branch.GetEntry(self.localentry, 0)
 *             return self.isZee_value             # <<<<<<<<<<<<<<
 * 
 *     property isZmumu:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isZee_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7175
 * 
 *     property isZee:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isZee_branch.GetEntry(self.localentry, 0)
 *             return self.isZee_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.isZee.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7180
 * 
 *     property isZmumu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isZmumu_branch.GetEntry(self.localentry, 0)
 *             return self.isZmumu_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_7isZmumu_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_7isZmumu_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_7isZmumu___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_7isZmumu___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7181
 *     property isZmumu:
 *         def __get__(self):
 *             self.isZmumu_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isZmumu_value
 * 
 */
  (void)(__pyx_v_self->isZmumu_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7182
 *         def __get__(self):
 *             self.isZmumu_branch.GetEntry(self.localentry, 0)
 *             return self.isZmumu_value             # <<<<<<<<<<<<<<
 * 
 *     property isZtautau:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isZmumu_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7180
 * 
 *     property isZmumu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isZmumu_branch.GetEntry(self.localentry, 0)
 *             return self.isZmumu_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.isZmumu.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7185
 * 
 *     property isZtautau:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isZtautau_branch.GetEntry(self.localentry, 0)
 *             return self.isZtautau_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_9isZtautau_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_9isZtautau_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_9isZtautau___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_9isZtautau___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7186
 *     property isZtautau:
 *         def __get__(self):
 *             self.isZtautau_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isZtautau_value
 * 
 */
  (void)(__pyx_v_self->isZtautau_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7187
 *         def __get__(self):
 *             self.isZtautau_branch.GetEntry(self.localentry, 0)
 *             return self.isZtautau_value             # <<<<<<<<<<<<<<
 * 
 *     property isdata:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isZtautau_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7185
 * 
 *     property isZtautau:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isZtautau_branch.GetEntry(self.localentry, 0)
 *             return self.isZtautau_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.isZtautau.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7190
 * 
 *     property isdata:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isdata_branch.GetEntry(self.localentry, 0)
 *             return self.isdata_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6isdata_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6isdata_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6isdata___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6isdata___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7191
 *     property isdata:
 *         def __get__(self):
 *             self.isdata_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isdata_value
 * 
 */
  (void)(__pyx_v_self->isdata_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7192
 *         def __get__(self):
 *             self.isdata_branch.GetEntry(self.localentry, 0)
 *             return self.isdata_value             # <<<<<<<<<<<<<<
 * 
 *     property isembed:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->isdata_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7192, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7190
 * 
 *     property isdata:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isdata_branch.GetEntry(self.localentry, 0)
 *             return self.isdata_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.isdata.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7195
 * 
 *     property isembed:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isembed_branch.GetEntry(self.localentry, 0)
 *             return self.isembed_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_7isembed_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_7isembed_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_7isembed___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_7isembed___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7196
 *     property isembed:
 *         def __get__(self):
 *             self.isembed_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isembed_value
 * 
 */
  (void)(__pyx_v_self->isembed_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7197
 *         def __get__(self):
 *             self.isembed_branch.GetEntry(self.localentry, 0)
 *             return self.isembed_value             # <<<<<<<<<<<<<<
 * 
 *     property j1csv:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->isembed_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7195
 * 
 *     property isembed:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isembed_branch.GetEntry(self.localentry, 0)
 *             return self.isembed_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.isembed.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7200
 * 
 *     property j1csv:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1csv_branch.GetEntry(self.localentry, 0)
 *             return self.j1csv_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5j1csv_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5j1csv_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5j1csv___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5j1csv___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7201
 *     property j1csv:
 *         def __get__(self):
 *             self.j1csv_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1csv_value
 * 
 */
  (void)(__pyx_v_self->j1csv_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7202
 *         def __get__(self):
 *             self.j1csv_branch.GetEntry(self.localentry, 0)
 *             return self.j1csv_value             # <<<<<<<<<<<<<<
 * 
 *     property j1csvWoNoisyJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1csv_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7200
 * 
 *     property j1csv:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1csv_branch.GetEntry(self.localentry, 0)
 *             return self.j1csv_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1csv.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7205
 * 
 *     property j1csvWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1csvWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j1csvWoNoisyJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16j1csvWoNoisyJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16j1csvWoNoisyJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16j1csvWoNoisyJets___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16j1csvWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7206
 *     property j1csvWoNoisyJets:
 *         def __get__(self):
 *             self.j1csvWoNoisyJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1csvWoNoisyJets_value
 * 
 */
  (void)(__pyx_v_self->j1csvWoNoisyJets_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7207
 *         def __get__(self):
 *             self.j1csvWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j1csvWoNoisyJets_value             # <<<<<<<<<<<<<<
 * 
 *     property j1eta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1csvWoNoisyJets_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7205
 * 
 *     property j1csvWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1csvWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j1csvWoNoisyJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1csvWoNoisyJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7210
 * 
 *     property j1eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1eta_branch.GetEntry(self.localentry, 0)
 *             return self.j1eta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5j1eta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5j1eta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5j1eta___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5j1eta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7211
 *     property j1eta:
 *         def __get__(self):
 *             self.j1eta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1eta_value
 * 
 */
  (void)(__pyx_v_self->j1eta_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7212
 *         def __get__(self):
 *             self.j1eta_branch.GetEntry(self.localentry, 0)
 *             return self.j1eta_value             # <<<<<<<<<<<<<<
 * 
 *     property j1etaWoNoisyJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1eta_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7210
 * 
 *     property j1eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1eta_branch.GetEntry(self.localentry, 0)
 *             return self.j1eta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1eta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7215
 * 
 *     property j1etaWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1etaWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j1etaWoNoisyJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16j1etaWoNoisyJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16j1etaWoNoisyJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16j1etaWoNoisyJets___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16j1etaWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7216
 *     property j1etaWoNoisyJets:
 *         def __get__(self):
 *             self.j1etaWoNoisyJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1etaWoNoisyJets_value
 * 
 */
  (void)(__pyx_v_self->j1etaWoNoisyJets_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7217
 *         def __get__(self):
 *             self.j1etaWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j1etaWoNoisyJets_value             # <<<<<<<<<<<<<<
 * 
 *     property j1hadronflavor:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1etaWoNoisyJets_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7215
 * 
 *     property j1etaWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1etaWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j1etaWoNoisyJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1etaWoNoisyJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7220
 * 
 *     property j1hadronflavor:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1hadronflavor_branch.GetEntry(self.localentry, 0)
 *             return self.j1hadronflavor_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_14j1hadronflavor_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_14j1hadronflavor_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_14j1hadronflavor___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_14j1hadronflavor___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7221
 *     property j1hadronflavor:
 *         def __get__(self):
 *             self.j1hadronflavor_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1hadronflavor_value
 * 
 */
  (void)(__pyx_v_self->j1hadronflavor_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7222
 *         def __get__(self):
 *             self.j1hadronflavor_branch.GetEntry(self.localentry, 0)
 *             return self.j1hadronflavor_value             # <<<<<<<<<<<<<<
 * 
 *     property j1hadronflavorWoNoisyJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1hadronflavor_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7220
 * 
 *     property j1hadronflavor:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1hadronflavor_branch.GetEntry(self.localentry, 0)
 *             return self.j1hadronflavor_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1hadronflavor.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7225
 * 
 *     property j1hadronflavorWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1hadronflavorWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j1hadronflavorWoNoisyJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_25j1hadronflavorWoNoisyJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_25j1hadronflavorWoNoisyJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_25j1hadronflavorWoNoisyJets___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_25j1hadronflavorWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7226
 *     property j1hadronflavorWoNoisyJets:
 *         def __get__(self):
 *             self.j1hadronflavorWoNoisyJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1hadronflavorWoNoisyJets_value
 * 
 */
  (void)(__pyx_v_self->j1hadronflavorWoNoisyJets_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7227
 *         def __get__(self):
 *             self.j1hadronflavorWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j1hadronflavorWoNoisyJets_value             # <<<<<<<<<<<<<<
 * 
 *     property j1phi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1hadronflavorWoNoisyJets_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7225
 * 
 *     property j1hadronflavorWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1hadronflavorWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j1hadronflavorWoNoisyJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1hadronflavorWoNoisyJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7230
 * 
 *     property j1phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1phi_branch.GetEntry(self.localentry, 0)
 *             return self.j1phi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5j1phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5j1phi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5j1phi___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5j1phi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7231
 *     property j1phi:
 *         def __get__(self):
 *             self.j1phi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1phi_value
 * 
 */
  (void)(__pyx_v_self->j1phi_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7232
 *         def __get__(self):
 *             self.j1phi_branch.GetEntry(self.localentry, 0)
 *             return self.j1phi_value             # <<<<<<<<<<<<<<
 * 
 *     property j1phiWoNoisyJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1phi_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7232, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7230
 * 
 *     property j1phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1phi_branch.GetEntry(self.localentry, 0)
 *             return self.j1phi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7235
 * 
 *     property j1phiWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1phiWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j1phiWoNoisyJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16j1phiWoNoisyJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16j1phiWoNoisyJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16j1phiWoNoisyJets___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16j1phiWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7236
 *     property j1phiWoNoisyJets:
 *         def __get__(self):
 *             self.j1phiWoNoisyJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1phiWoNoisyJets_value
 * 
 */
  (void)(__pyx_v_self->j1phiWoNoisyJets_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7237
 *         def __get__(self):
 *             self.j1phiWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j1phiWoNoisyJets_value             # <<<<<<<<<<<<<<
 * 
 *     property j1pt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1phiWoNoisyJets_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7235
 * 
 *     property j1phiWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1phiWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j1phiWoNoisyJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1phiWoNoisyJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7240
 * 
 *     property j1pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1pt_branch.GetEntry(self.localentry, 0)
 *             return self.j1pt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_4j1pt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_4j1pt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_4j1pt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_4j1pt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7241
 *     property j1pt:
 *         def __get__(self):
 *             self.j1pt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1pt_value
 * 
 */
  (void)(__pyx_v_self->j1pt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7242
 *         def __get__(self):
 *             self.j1pt_branch.GetEntry(self.localentry, 0)
 *             return self.j1pt_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1pt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7240
 * 
 *     property j1pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1pt_branch.GetEntry(self.localentry, 0)
 *             return self.j1pt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1pt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7245
 * 
 *     property j1ptWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_15j1ptWoNoisyJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_15j1ptWoNoisyJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_15j1ptWoNoisyJets___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_15j1ptWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7246
 *     property j1ptWoNoisyJets:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7247
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JERDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7245
 * 
 *     property j1ptWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7250
 * 
 *     property j1ptWoNoisyJets_JERDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JERDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_23j1ptWoNoisyJets_JERDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_23j1ptWoNoisyJets_JERDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_23j1ptWoNoisyJets_JERDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_23j1ptWoNoisyJets_JERDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7251
 *     property j1ptWoNoisyJets_JERDown:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JERDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JERDown_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JERDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7252
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JERDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JERUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JERDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7252, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7250
 * 
 *     property j1ptWoNoisyJets_JERDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JERDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JERDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7255
 * 
 *     property j1ptWoNoisyJets_JERUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JERUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_21j1ptWoNoisyJets_JERUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_21j1ptWoNoisyJets_JERUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_21j1ptWoNoisyJets_JERUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_21j1ptWoNoisyJets_JERUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7256
 *     property j1ptWoNoisyJets_JERUp:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JERUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JERUp_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JERUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7257
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JERUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetAbsoluteDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JERUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7255
 * 
 *     property j1ptWoNoisyJets_JERUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JERUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JERUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7260
 * 
 *     property j1ptWoNoisyJets_JetAbsoluteDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetAbsoluteDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_31j1ptWoNoisyJets_JetAbsoluteDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_31j1ptWoNoisyJets_JetAbsoluteDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_31j1ptWoNoisyJets_JetAbsoluteDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_31j1ptWoNoisyJets_JetAbsoluteDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7261
 *     property j1ptWoNoisyJets_JetAbsoluteDown:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetAbsoluteDown_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetAbsoluteDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7262
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetAbsoluteDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetAbsoluteUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetAbsoluteDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7260
 * 
 *     property j1ptWoNoisyJets_JetAbsoluteDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetAbsoluteDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetAbsoluteDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7265
 * 
 *     property j1ptWoNoisyJets_JetAbsoluteUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetAbsoluteUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_29j1ptWoNoisyJets_JetAbsoluteUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_29j1ptWoNoisyJets_JetAbsoluteUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_29j1ptWoNoisyJets_JetAbsoluteUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_29j1ptWoNoisyJets_JetAbsoluteUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7266
 *     property j1ptWoNoisyJets_JetAbsoluteUp:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetAbsoluteUp_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetAbsoluteUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7267
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetAbsoluteUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetAbsoluteyearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetAbsoluteUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7265
 * 
 *     property j1ptWoNoisyJets_JetAbsoluteUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetAbsoluteUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetAbsoluteUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7270
 * 
 *     property j1ptWoNoisyJets_JetAbsoluteyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetAbsoluteyearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35j1ptWoNoisyJets_JetAbsoluteyearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35j1ptWoNoisyJets_JetAbsoluteyearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35j1ptWoNoisyJets_JetAbsoluteyearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35j1ptWoNoisyJets_JetAbsoluteyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7271
 *     property j1ptWoNoisyJets_JetAbsoluteyearDown:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetAbsoluteyearDown_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetAbsoluteyearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7272
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetAbsoluteyearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetAbsoluteyearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetAbsoluteyearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7270
 * 
 *     property j1ptWoNoisyJets_JetAbsoluteyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetAbsoluteyearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetAbsoluteyearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7275
 * 
 *     property j1ptWoNoisyJets_JetAbsoluteyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetAbsoluteyearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_33j1ptWoNoisyJets_JetAbsoluteyearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_33j1ptWoNoisyJets_JetAbsoluteyearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_33j1ptWoNoisyJets_JetAbsoluteyearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_33j1ptWoNoisyJets_JetAbsoluteyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7276
 *     property j1ptWoNoisyJets_JetAbsoluteyearUp:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetAbsoluteyearUp_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetAbsoluteyearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7277
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetAbsoluteyearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetBBEC1Down:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetAbsoluteyearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7275
 * 
 *     property j1ptWoNoisyJets_JetAbsoluteyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetAbsoluteyearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetAbsoluteyearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7280
 * 
 *     property j1ptWoNoisyJets_JetBBEC1Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetBBEC1Down_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_28j1ptWoNoisyJets_JetBBEC1Down_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_28j1ptWoNoisyJets_JetBBEC1Down_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_28j1ptWoNoisyJets_JetBBEC1Down___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_28j1ptWoNoisyJets_JetBBEC1Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7281
 *     property j1ptWoNoisyJets_JetBBEC1Down:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetBBEC1Down_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetBBEC1Down_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetBBEC1Down_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7282
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetBBEC1Down_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetBBEC1Up:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetBBEC1Down_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7280
 * 
 *     property j1ptWoNoisyJets_JetBBEC1Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetBBEC1Down_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetBBEC1Down.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7285
 * 
 *     property j1ptWoNoisyJets_JetBBEC1Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetBBEC1Up_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_26j1ptWoNoisyJets_JetBBEC1Up_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_26j1ptWoNoisyJets_JetBBEC1Up_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_26j1ptWoNoisyJets_JetBBEC1Up___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_26j1ptWoNoisyJets_JetBBEC1Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7286
 *     property j1ptWoNoisyJets_JetBBEC1Up:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetBBEC1Up_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetBBEC1Up_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetBBEC1Up_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7287
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetBBEC1Up_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetBBEC1yearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetBBEC1Up_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7285
 * 
 *     property j1ptWoNoisyJets_JetBBEC1Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetBBEC1Up_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetBBEC1Up.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7290
 * 
 *     property j1ptWoNoisyJets_JetBBEC1yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetBBEC1yearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32j1ptWoNoisyJets_JetBBEC1yearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32j1ptWoNoisyJets_JetBBEC1yearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32j1ptWoNoisyJets_JetBBEC1yearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32j1ptWoNoisyJets_JetBBEC1yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7291
 *     property j1ptWoNoisyJets_JetBBEC1yearDown:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetBBEC1yearDown_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetBBEC1yearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7292
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetBBEC1yearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetBBEC1yearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetBBEC1yearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7290
 * 
 *     property j1ptWoNoisyJets_JetBBEC1yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetBBEC1yearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetBBEC1yearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7295
 * 
 *     property j1ptWoNoisyJets_JetBBEC1yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetBBEC1yearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_30j1ptWoNoisyJets_JetBBEC1yearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_30j1ptWoNoisyJets_JetBBEC1yearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_30j1ptWoNoisyJets_JetBBEC1yearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_30j1ptWoNoisyJets_JetBBEC1yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7296
 *     property j1ptWoNoisyJets_JetBBEC1yearUp:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetBBEC1yearUp_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetBBEC1yearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7297
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetBBEC1yearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetEC2Down:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetBBEC1yearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7295
 * 
 *     property j1ptWoNoisyJets_JetBBEC1yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetBBEC1yearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetBBEC1yearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7300
 * 
 *     property j1ptWoNoisyJets_JetEC2Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetEC2Down_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_26j1ptWoNoisyJets_JetEC2Down_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_26j1ptWoNoisyJets_JetEC2Down_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_26j1ptWoNoisyJets_JetEC2Down___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_26j1ptWoNoisyJets_JetEC2Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7301
 *     property j1ptWoNoisyJets_JetEC2Down:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetEC2Down_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetEC2Down_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetEC2Down_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7302
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetEC2Down_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetEC2Up:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetEC2Down_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7302, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7300
 * 
 *     property j1ptWoNoisyJets_JetEC2Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetEC2Down_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetEC2Down.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7305
 * 
 *     property j1ptWoNoisyJets_JetEC2Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetEC2Up_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_24j1ptWoNoisyJets_JetEC2Up_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_24j1ptWoNoisyJets_JetEC2Up_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_24j1ptWoNoisyJets_JetEC2Up___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_24j1ptWoNoisyJets_JetEC2Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7306
 *     property j1ptWoNoisyJets_JetEC2Up:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetEC2Up_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetEC2Up_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetEC2Up_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7307
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetEC2Up_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetEC2yearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetEC2Up_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7305
 * 
 *     property j1ptWoNoisyJets_JetEC2Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetEC2Up_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetEC2Up.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7310
 * 
 *     property j1ptWoNoisyJets_JetEC2yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetEC2yearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_30j1ptWoNoisyJets_JetEC2yearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_30j1ptWoNoisyJets_JetEC2yearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_30j1ptWoNoisyJets_JetEC2yearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_30j1ptWoNoisyJets_JetEC2yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7311
 *     property j1ptWoNoisyJets_JetEC2yearDown:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetEC2yearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetEC2yearDown_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetEC2yearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7312
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetEC2yearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetEC2yearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetEC2yearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7312, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7310
 * 
 *     property j1ptWoNoisyJets_JetEC2yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetEC2yearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetEC2yearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7315
 * 
 *     property j1ptWoNoisyJets_JetEC2yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetEC2yearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_28j1ptWoNoisyJets_JetEC2yearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_28j1ptWoNoisyJets_JetEC2yearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_28j1ptWoNoisyJets_JetEC2yearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_28j1ptWoNoisyJets_JetEC2yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7316
 *     property j1ptWoNoisyJets_JetEC2yearUp:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetEC2yearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetEC2yearUp_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetEC2yearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7317
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetEC2yearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetFlavorQCDDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetEC2yearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7315
 * 
 *     property j1ptWoNoisyJets_JetEC2yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetEC2yearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetEC2yearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7320
 * 
 *     property j1ptWoNoisyJets_JetFlavorQCDDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetFlavorQCDDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32j1ptWoNoisyJets_JetFlavorQCDDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32j1ptWoNoisyJets_JetFlavorQCDDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32j1ptWoNoisyJets_JetFlavorQCDDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32j1ptWoNoisyJets_JetFlavorQCDDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7321
 *     property j1ptWoNoisyJets_JetFlavorQCDDown:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetFlavorQCDDown_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetFlavorQCDDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7322
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetFlavorQCDDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetFlavorQCDUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetFlavorQCDDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7320
 * 
 *     property j1ptWoNoisyJets_JetFlavorQCDDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetFlavorQCDDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetFlavorQCDDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7325
 * 
 *     property j1ptWoNoisyJets_JetFlavorQCDUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetFlavorQCDUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_30j1ptWoNoisyJets_JetFlavorQCDUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_30j1ptWoNoisyJets_JetFlavorQCDUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_30j1ptWoNoisyJets_JetFlavorQCDUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_30j1ptWoNoisyJets_JetFlavorQCDUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7326
 *     property j1ptWoNoisyJets_JetFlavorQCDUp:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetFlavorQCDUp_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetFlavorQCDUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7327
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetFlavorQCDUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetHFDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetFlavorQCDUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7325
 * 
 *     property j1ptWoNoisyJets_JetFlavorQCDUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetFlavorQCDUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetFlavorQCDUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7330
 * 
 *     property j1ptWoNoisyJets_JetHFDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetHFDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_25j1ptWoNoisyJets_JetHFDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_25j1ptWoNoisyJets_JetHFDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_25j1ptWoNoisyJets_JetHFDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_25j1ptWoNoisyJets_JetHFDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7331
 *     property j1ptWoNoisyJets_JetHFDown:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetHFDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetHFDown_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetHFDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7332
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetHFDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetHFUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetHFDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7332, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7330
 * 
 *     property j1ptWoNoisyJets_JetHFDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetHFDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetHFDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7335
 * 
 *     property j1ptWoNoisyJets_JetHFUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetHFUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_23j1ptWoNoisyJets_JetHFUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_23j1ptWoNoisyJets_JetHFUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_23j1ptWoNoisyJets_JetHFUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_23j1ptWoNoisyJets_JetHFUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7336
 *     property j1ptWoNoisyJets_JetHFUp:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetHFUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetHFUp_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetHFUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7337
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetHFUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetHFyearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetHFUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7335
 * 
 *     property j1ptWoNoisyJets_JetHFUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetHFUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetHFUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7340
 * 
 *     property j1ptWoNoisyJets_JetHFyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetHFyearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_29j1ptWoNoisyJets_JetHFyearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_29j1ptWoNoisyJets_JetHFyearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_29j1ptWoNoisyJets_JetHFyearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_29j1ptWoNoisyJets_JetHFyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7341
 *     property j1ptWoNoisyJets_JetHFyearDown:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetHFyearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetHFyearDown_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetHFyearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7342
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetHFyearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetHFyearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetHFyearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7340
 * 
 *     property j1ptWoNoisyJets_JetHFyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetHFyearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetHFyearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7345
 * 
 *     property j1ptWoNoisyJets_JetHFyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetHFyearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_27j1ptWoNoisyJets_JetHFyearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_27j1ptWoNoisyJets_JetHFyearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_27j1ptWoNoisyJets_JetHFyearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_27j1ptWoNoisyJets_JetHFyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7346
 *     property j1ptWoNoisyJets_JetHFyearUp:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetHFyearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetHFyearUp_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetHFyearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7347
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetHFyearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetRelativeBalDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetHFyearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7345
 * 
 *     property j1ptWoNoisyJets_JetHFyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetHFyearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetHFyearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7350
 * 
 *     property j1ptWoNoisyJets_JetRelativeBalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetRelativeBalDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34j1ptWoNoisyJets_JetRelativeBalDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34j1ptWoNoisyJets_JetRelativeBalDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34j1ptWoNoisyJets_JetRelativeBalDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34j1ptWoNoisyJets_JetRelativeBalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7351
 *     property j1ptWoNoisyJets_JetRelativeBalDown:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetRelativeBalDown_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetRelativeBalDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7352
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetRelativeBalDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetRelativeBalUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetRelativeBalDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7350
 * 
 *     property j1ptWoNoisyJets_JetRelativeBalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetRelativeBalDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetRelativeBalDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7355
 * 
 *     property j1ptWoNoisyJets_JetRelativeBalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetRelativeBalUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32j1ptWoNoisyJets_JetRelativeBalUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32j1ptWoNoisyJets_JetRelativeBalUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32j1ptWoNoisyJets_JetRelativeBalUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32j1ptWoNoisyJets_JetRelativeBalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7356
 *     property j1ptWoNoisyJets_JetRelativeBalUp:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetRelativeBalUp_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetRelativeBalUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7357
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetRelativeBalUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetRelativeSampleDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetRelativeBalUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7355
 * 
 *     property j1ptWoNoisyJets_JetRelativeBalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetRelativeBalUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetRelativeBalUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7360
 * 
 *     property j1ptWoNoisyJets_JetRelativeSampleDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetRelativeSampleDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_37j1ptWoNoisyJets_JetRelativeSampleDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_37j1ptWoNoisyJets_JetRelativeSampleDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_37j1ptWoNoisyJets_JetRelativeSampleDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_37j1ptWoNoisyJets_JetRelativeSampleDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7361
 *     property j1ptWoNoisyJets_JetRelativeSampleDown:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetRelativeSampleDown_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetRelativeSampleDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7362
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetRelativeSampleDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j1ptWoNoisyJets_JetRelativeSampleUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetRelativeSampleDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7360
 * 
 *     property j1ptWoNoisyJets_JetRelativeSampleDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetRelativeSampleDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetRelativeSampleDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7365
 * 
 *     property j1ptWoNoisyJets_JetRelativeSampleUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetRelativeSampleUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35j1ptWoNoisyJets_JetRelativeSampleUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35j1ptWoNoisyJets_JetRelativeSampleUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35j1ptWoNoisyJets_JetRelativeSampleUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35j1ptWoNoisyJets_JetRelativeSampleUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7366
 *     property j1ptWoNoisyJets_JetRelativeSampleUp:
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j1ptWoNoisyJets_JetRelativeSampleUp_value
 * 
 */
  (void)(__pyx_v_self->j1ptWoNoisyJets_JetRelativeSampleUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7367
 *         def __get__(self):
 *             self.j1ptWoNoisyJets_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetRelativeSampleUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j2csv:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j1ptWoNoisyJets_JetRelativeSampleUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7367, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7365
 * 
 *     property j1ptWoNoisyJets_JetRelativeSampleUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j1ptWoNoisyJets_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.j1ptWoNoisyJets_JetRelativeSampleUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j1ptWoNoisyJets_JetRelativeSampleUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7370
 * 
 *     property j2csv:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2csv_branch.GetEntry(self.localentry, 0)
 *             return self.j2csv_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5j2csv_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5j2csv_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5j2csv___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5j2csv___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7371
 *     property j2csv:
 *         def __get__(self):
 *             self.j2csv_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2csv_value
 * 
 */
  (void)(__pyx_v_self->j2csv_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7372
 *         def __get__(self):
 *             self.j2csv_branch.GetEntry(self.localentry, 0)
 *             return self.j2csv_value             # <<<<<<<<<<<<<<
 * 
 *     property j2csvWoNoisyJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2csv_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7370
 * 
 *     property j2csv:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2csv_branch.GetEntry(self.localentry, 0)
 *             return self.j2csv_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2csv.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7375
 * 
 *     property j2csvWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2csvWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j2csvWoNoisyJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16j2csvWoNoisyJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16j2csvWoNoisyJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16j2csvWoNoisyJets___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16j2csvWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7376
 *     property j2csvWoNoisyJets:
 *         def __get__(self):
 *             self.j2csvWoNoisyJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2csvWoNoisyJets_value
 * 
 */
  (void)(__pyx_v_self->j2csvWoNoisyJets_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7377
 *         def __get__(self):
 *             self.j2csvWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j2csvWoNoisyJets_value             # <<<<<<<<<<<<<<
 * 
 *     property j2eta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2csvWoNoisyJets_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7377, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7375
 * 
 *     property j2csvWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2csvWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j2csvWoNoisyJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2csvWoNoisyJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7380
 * 
 *     property j2eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2eta_branch.GetEntry(self.localentry, 0)
 *             return self.j2eta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5j2eta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5j2eta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5j2eta___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5j2eta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7381
 *     property j2eta:
 *         def __get__(self):
 *             self.j2eta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2eta_value
 * 
 */
  (void)(__pyx_v_self->j2eta_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7382
 *         def __get__(self):
 *             self.j2eta_branch.GetEntry(self.localentry, 0)
 *             return self.j2eta_value             # <<<<<<<<<<<<<<
 * 
 *     property j2etaWoNoisyJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2eta_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7382, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7380
 * 
 *     property j2eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2eta_branch.GetEntry(self.localentry, 0)
 *             return self.j2eta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2eta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7385
 * 
 *     property j2etaWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2etaWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j2etaWoNoisyJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16j2etaWoNoisyJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16j2etaWoNoisyJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16j2etaWoNoisyJets___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16j2etaWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7386
 *     property j2etaWoNoisyJets:
 *         def __get__(self):
 *             self.j2etaWoNoisyJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2etaWoNoisyJets_value
 * 
 */
  (void)(__pyx_v_self->j2etaWoNoisyJets_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7387
 *         def __get__(self):
 *             self.j2etaWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j2etaWoNoisyJets_value             # <<<<<<<<<<<<<<
 * 
 *     property j2hadronflavor:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2etaWoNoisyJets_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7385
 * 
 *     property j2etaWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2etaWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j2etaWoNoisyJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2etaWoNoisyJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7390
 * 
 *     property j2hadronflavor:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2hadronflavor_branch.GetEntry(self.localentry, 0)
 *             return self.j2hadronflavor_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_14j2hadronflavor_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_14j2hadronflavor_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_14j2hadronflavor___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_14j2hadronflavor___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7391
 *     property j2hadronflavor:
 *         def __get__(self):
 *             self.j2hadronflavor_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2hadronflavor_value
 * 
 */
  (void)(__pyx_v_self->j2hadronflavor_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7392
 *         def __get__(self):
 *             self.j2hadronflavor_branch.GetEntry(self.localentry, 0)
 *             return self.j2hadronflavor_value             # <<<<<<<<<<<<<<
 * 
 *     property j2hadronflavorWoNoisyJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2hadronflavor_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7390
 * 
 *     property j2hadronflavor:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2hadronflavor_branch.GetEntry(self.localentry, 0)
 *             return self.j2hadronflavor_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2hadronflavor.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7395
 * 
 *     property j2hadronflavorWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2hadronflavorWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j2hadronflavorWoNoisyJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_25j2hadronflavorWoNoisyJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_25j2hadronflavorWoNoisyJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_25j2hadronflavorWoNoisyJets___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_25j2hadronflavorWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7396
 *     property j2hadronflavorWoNoisyJets:
 *         def __get__(self):
 *             self.j2hadronflavorWoNoisyJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2hadronflavorWoNoisyJets_value
 * 
 */
  (void)(__pyx_v_self->j2hadronflavorWoNoisyJets_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7397
 *         def __get__(self):
 *             self.j2hadronflavorWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j2hadronflavorWoNoisyJets_value             # <<<<<<<<<<<<<<
 * 
 *     property j2phi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2hadronflavorWoNoisyJets_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7395
 * 
 *     property j2hadronflavorWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2hadronflavorWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j2hadronflavorWoNoisyJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2hadronflavorWoNoisyJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7400
 * 
 *     property j2phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2phi_branch.GetEntry(self.localentry, 0)
 *             return self.j2phi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5j2phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5j2phi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5j2phi___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5j2phi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7401
 *     property j2phi:
 *         def __get__(self):
 *             self.j2phi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2phi_value
 * 
 */
  (void)(__pyx_v_self->j2phi_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7402
 *         def __get__(self):
 *             self.j2phi_branch.GetEntry(self.localentry, 0)
 *             return self.j2phi_value             # <<<<<<<<<<<<<<
 * 
 *     property j2phiWoNoisyJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2phi_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7400
 * 
 *     property j2phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2phi_branch.GetEntry(self.localentry, 0)
 *             return self.j2phi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7405
 * 
 *     property j2phiWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2phiWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j2phiWoNoisyJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16j2phiWoNoisyJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16j2phiWoNoisyJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16j2phiWoNoisyJets___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16j2phiWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7406
 *     property j2phiWoNoisyJets:
 *         def __get__(self):
 *             self.j2phiWoNoisyJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2phiWoNoisyJets_value
 * 
 */
  (void)(__pyx_v_self->j2phiWoNoisyJets_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7407
 *         def __get__(self):
 *             self.j2phiWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j2phiWoNoisyJets_value             # <<<<<<<<<<<<<<
 * 
 *     property j2pt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2phiWoNoisyJets_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7405
 * 
 *     property j2phiWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2phiWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j2phiWoNoisyJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2phiWoNoisyJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7410
 * 
 *     property j2pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2pt_branch.GetEntry(self.localentry, 0)
 *             return self.j2pt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_4j2pt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_4j2pt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_4j2pt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_4j2pt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7411
 *     property j2pt:
 *         def __get__(self):
 *             self.j2pt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2pt_value
 * 
 */
  (void)(__pyx_v_self->j2pt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7412
 *         def __get__(self):
 *             self.j2pt_branch.GetEntry(self.localentry, 0)
 *             return self.j2pt_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2pt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7412, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7410
 * 
 *     property j2pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2pt_branch.GetEntry(self.localentry, 0)
 *             return self.j2pt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2pt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7415
 * 
 *     property j2ptWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_15j2ptWoNoisyJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_15j2ptWoNoisyJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_15j2ptWoNoisyJets___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_15j2ptWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7416
 *     property j2ptWoNoisyJets:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7417
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JERDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7415
 * 
 *     property j2ptWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7420
 * 
 *     property j2ptWoNoisyJets_JERDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JERDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_23j2ptWoNoisyJets_JERDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_23j2ptWoNoisyJets_JERDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_23j2ptWoNoisyJets_JERDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_23j2ptWoNoisyJets_JERDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7421
 *     property j2ptWoNoisyJets_JERDown:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JERDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JERDown_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JERDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7422
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JERDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JERUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JERDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7422, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7420
 * 
 *     property j2ptWoNoisyJets_JERDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JERDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JERDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7425
 * 
 *     property j2ptWoNoisyJets_JERUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JERUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_21j2ptWoNoisyJets_JERUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_21j2ptWoNoisyJets_JERUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_21j2ptWoNoisyJets_JERUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_21j2ptWoNoisyJets_JERUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7426
 *     property j2ptWoNoisyJets_JERUp:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JERUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JERUp_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JERUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7427
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JERUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetAbsoluteDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JERUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7425
 * 
 *     property j2ptWoNoisyJets_JERUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JERUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JERUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7430
 * 
 *     property j2ptWoNoisyJets_JetAbsoluteDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetAbsoluteDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_31j2ptWoNoisyJets_JetAbsoluteDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_31j2ptWoNoisyJets_JetAbsoluteDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_31j2ptWoNoisyJets_JetAbsoluteDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_31j2ptWoNoisyJets_JetAbsoluteDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7431
 *     property j2ptWoNoisyJets_JetAbsoluteDown:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetAbsoluteDown_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetAbsoluteDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7432
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetAbsoluteDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetAbsoluteUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetAbsoluteDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7430
 * 
 *     property j2ptWoNoisyJets_JetAbsoluteDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetAbsoluteDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetAbsoluteDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7435
 * 
 *     property j2ptWoNoisyJets_JetAbsoluteUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetAbsoluteUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_29j2ptWoNoisyJets_JetAbsoluteUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_29j2ptWoNoisyJets_JetAbsoluteUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_29j2ptWoNoisyJets_JetAbsoluteUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_29j2ptWoNoisyJets_JetAbsoluteUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7436
 *     property j2ptWoNoisyJets_JetAbsoluteUp:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetAbsoluteUp_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetAbsoluteUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7437
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetAbsoluteUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetAbsoluteyearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetAbsoluteUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7435
 * 
 *     property j2ptWoNoisyJets_JetAbsoluteUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetAbsoluteUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetAbsoluteUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7440
 * 
 *     property j2ptWoNoisyJets_JetAbsoluteyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetAbsoluteyearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35j2ptWoNoisyJets_JetAbsoluteyearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35j2ptWoNoisyJets_JetAbsoluteyearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35j2ptWoNoisyJets_JetAbsoluteyearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35j2ptWoNoisyJets_JetAbsoluteyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7441
 *     property j2ptWoNoisyJets_JetAbsoluteyearDown:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetAbsoluteyearDown_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetAbsoluteyearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7442
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetAbsoluteyearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetAbsoluteyearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetAbsoluteyearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7440
 * 
 *     property j2ptWoNoisyJets_JetAbsoluteyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetAbsoluteyearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetAbsoluteyearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7445
 * 
 *     property j2ptWoNoisyJets_JetAbsoluteyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetAbsoluteyearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_33j2ptWoNoisyJets_JetAbsoluteyearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_33j2ptWoNoisyJets_JetAbsoluteyearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_33j2ptWoNoisyJets_JetAbsoluteyearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_33j2ptWoNoisyJets_JetAbsoluteyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7446
 *     property j2ptWoNoisyJets_JetAbsoluteyearUp:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetAbsoluteyearUp_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetAbsoluteyearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7447
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetAbsoluteyearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetBBEC1Down:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetAbsoluteyearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7447, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7445
 * 
 *     property j2ptWoNoisyJets_JetAbsoluteyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetAbsoluteyearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetAbsoluteyearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7450
 * 
 *     property j2ptWoNoisyJets_JetBBEC1Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetBBEC1Down_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_28j2ptWoNoisyJets_JetBBEC1Down_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_28j2ptWoNoisyJets_JetBBEC1Down_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_28j2ptWoNoisyJets_JetBBEC1Down___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_28j2ptWoNoisyJets_JetBBEC1Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7451
 *     property j2ptWoNoisyJets_JetBBEC1Down:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetBBEC1Down_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetBBEC1Down_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetBBEC1Down_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7452
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetBBEC1Down_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetBBEC1Up:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetBBEC1Down_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7450
 * 
 *     property j2ptWoNoisyJets_JetBBEC1Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetBBEC1Down_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetBBEC1Down.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7455
 * 
 *     property j2ptWoNoisyJets_JetBBEC1Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetBBEC1Up_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_26j2ptWoNoisyJets_JetBBEC1Up_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_26j2ptWoNoisyJets_JetBBEC1Up_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_26j2ptWoNoisyJets_JetBBEC1Up___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_26j2ptWoNoisyJets_JetBBEC1Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7456
 *     property j2ptWoNoisyJets_JetBBEC1Up:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetBBEC1Up_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetBBEC1Up_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetBBEC1Up_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7457
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetBBEC1Up_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetBBEC1yearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetBBEC1Up_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7457, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7455
 * 
 *     property j2ptWoNoisyJets_JetBBEC1Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetBBEC1Up_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetBBEC1Up.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7460
 * 
 *     property j2ptWoNoisyJets_JetBBEC1yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetBBEC1yearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32j2ptWoNoisyJets_JetBBEC1yearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32j2ptWoNoisyJets_JetBBEC1yearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32j2ptWoNoisyJets_JetBBEC1yearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32j2ptWoNoisyJets_JetBBEC1yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7461
 *     property j2ptWoNoisyJets_JetBBEC1yearDown:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetBBEC1yearDown_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetBBEC1yearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7462
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetBBEC1yearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetBBEC1yearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetBBEC1yearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7462, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7460
 * 
 *     property j2ptWoNoisyJets_JetBBEC1yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetBBEC1yearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetBBEC1yearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7465
 * 
 *     property j2ptWoNoisyJets_JetBBEC1yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetBBEC1yearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_30j2ptWoNoisyJets_JetBBEC1yearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_30j2ptWoNoisyJets_JetBBEC1yearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_30j2ptWoNoisyJets_JetBBEC1yearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_30j2ptWoNoisyJets_JetBBEC1yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7466
 *     property j2ptWoNoisyJets_JetBBEC1yearUp:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetBBEC1yearUp_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetBBEC1yearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7467
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetBBEC1yearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetEC2Down:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetBBEC1yearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7465
 * 
 *     property j2ptWoNoisyJets_JetBBEC1yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetBBEC1yearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetBBEC1yearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7470
 * 
 *     property j2ptWoNoisyJets_JetEC2Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetEC2Down_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_26j2ptWoNoisyJets_JetEC2Down_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_26j2ptWoNoisyJets_JetEC2Down_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_26j2ptWoNoisyJets_JetEC2Down___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_26j2ptWoNoisyJets_JetEC2Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7471
 *     property j2ptWoNoisyJets_JetEC2Down:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetEC2Down_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetEC2Down_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetEC2Down_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7472
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetEC2Down_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetEC2Up:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetEC2Down_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7470
 * 
 *     property j2ptWoNoisyJets_JetEC2Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetEC2Down_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetEC2Down.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7475
 * 
 *     property j2ptWoNoisyJets_JetEC2Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetEC2Up_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_24j2ptWoNoisyJets_JetEC2Up_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_24j2ptWoNoisyJets_JetEC2Up_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_24j2ptWoNoisyJets_JetEC2Up___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_24j2ptWoNoisyJets_JetEC2Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7476
 *     property j2ptWoNoisyJets_JetEC2Up:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetEC2Up_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetEC2Up_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetEC2Up_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7477
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetEC2Up_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetEC2yearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetEC2Up_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7475
 * 
 *     property j2ptWoNoisyJets_JetEC2Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetEC2Up_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetEC2Up.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7480
 * 
 *     property j2ptWoNoisyJets_JetEC2yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetEC2yearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_30j2ptWoNoisyJets_JetEC2yearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_30j2ptWoNoisyJets_JetEC2yearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_30j2ptWoNoisyJets_JetEC2yearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_30j2ptWoNoisyJets_JetEC2yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7481
 *     property j2ptWoNoisyJets_JetEC2yearDown:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetEC2yearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetEC2yearDown_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetEC2yearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7482
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetEC2yearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetEC2yearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetEC2yearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7482, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7480
 * 
 *     property j2ptWoNoisyJets_JetEC2yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetEC2yearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetEC2yearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7485
 * 
 *     property j2ptWoNoisyJets_JetEC2yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetEC2yearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_28j2ptWoNoisyJets_JetEC2yearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_28j2ptWoNoisyJets_JetEC2yearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_28j2ptWoNoisyJets_JetEC2yearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_28j2ptWoNoisyJets_JetEC2yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7486
 *     property j2ptWoNoisyJets_JetEC2yearUp:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetEC2yearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetEC2yearUp_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetEC2yearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7487
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetEC2yearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetFlavorQCDDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetEC2yearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7485
 * 
 *     property j2ptWoNoisyJets_JetEC2yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetEC2yearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetEC2yearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7490
 * 
 *     property j2ptWoNoisyJets_JetFlavorQCDDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetFlavorQCDDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32j2ptWoNoisyJets_JetFlavorQCDDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32j2ptWoNoisyJets_JetFlavorQCDDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32j2ptWoNoisyJets_JetFlavorQCDDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32j2ptWoNoisyJets_JetFlavorQCDDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7491
 *     property j2ptWoNoisyJets_JetFlavorQCDDown:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetFlavorQCDDown_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetFlavorQCDDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7492
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetFlavorQCDDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetFlavorQCDUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetFlavorQCDDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7492, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7490
 * 
 *     property j2ptWoNoisyJets_JetFlavorQCDDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetFlavorQCDDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetFlavorQCDDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7495
 * 
 *     property j2ptWoNoisyJets_JetFlavorQCDUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetFlavorQCDUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_30j2ptWoNoisyJets_JetFlavorQCDUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_30j2ptWoNoisyJets_JetFlavorQCDUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_30j2ptWoNoisyJets_JetFlavorQCDUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_30j2ptWoNoisyJets_JetFlavorQCDUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7496
 *     property j2ptWoNoisyJets_JetFlavorQCDUp:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetFlavorQCDUp_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetFlavorQCDUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7497
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetFlavorQCDUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetHFDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetFlavorQCDUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7495
 * 
 *     property j2ptWoNoisyJets_JetFlavorQCDUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetFlavorQCDUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetFlavorQCDUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7500
 * 
 *     property j2ptWoNoisyJets_JetHFDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetHFDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_25j2ptWoNoisyJets_JetHFDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_25j2ptWoNoisyJets_JetHFDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_25j2ptWoNoisyJets_JetHFDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_25j2ptWoNoisyJets_JetHFDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7501
 *     property j2ptWoNoisyJets_JetHFDown:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetHFDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetHFDown_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetHFDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7502
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetHFDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetHFUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetHFDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7502, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7500
 * 
 *     property j2ptWoNoisyJets_JetHFDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetHFDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetHFDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7505
 * 
 *     property j2ptWoNoisyJets_JetHFUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetHFUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_23j2ptWoNoisyJets_JetHFUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_23j2ptWoNoisyJets_JetHFUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_23j2ptWoNoisyJets_JetHFUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_23j2ptWoNoisyJets_JetHFUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7506
 *     property j2ptWoNoisyJets_JetHFUp:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetHFUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetHFUp_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetHFUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7507
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetHFUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetHFyearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetHFUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7505
 * 
 *     property j2ptWoNoisyJets_JetHFUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetHFUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetHFUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7510
 * 
 *     property j2ptWoNoisyJets_JetHFyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetHFyearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_29j2ptWoNoisyJets_JetHFyearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_29j2ptWoNoisyJets_JetHFyearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_29j2ptWoNoisyJets_JetHFyearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_29j2ptWoNoisyJets_JetHFyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7511
 *     property j2ptWoNoisyJets_JetHFyearDown:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetHFyearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetHFyearDown_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetHFyearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7512
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetHFyearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetHFyearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetHFyearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7512, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7510
 * 
 *     property j2ptWoNoisyJets_JetHFyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetHFyearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetHFyearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7515
 * 
 *     property j2ptWoNoisyJets_JetHFyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetHFyearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_27j2ptWoNoisyJets_JetHFyearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_27j2ptWoNoisyJets_JetHFyearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_27j2ptWoNoisyJets_JetHFyearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_27j2ptWoNoisyJets_JetHFyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7516
 *     property j2ptWoNoisyJets_JetHFyearUp:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetHFyearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetHFyearUp_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetHFyearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7517
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetHFyearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetRelativeBalDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetHFyearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7517, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7515
 * 
 *     property j2ptWoNoisyJets_JetHFyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetHFyearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetHFyearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7520
 * 
 *     property j2ptWoNoisyJets_JetRelativeBalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetRelativeBalDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34j2ptWoNoisyJets_JetRelativeBalDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34j2ptWoNoisyJets_JetRelativeBalDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34j2ptWoNoisyJets_JetRelativeBalDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34j2ptWoNoisyJets_JetRelativeBalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7521
 *     property j2ptWoNoisyJets_JetRelativeBalDown:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetRelativeBalDown_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetRelativeBalDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7522
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetRelativeBalDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetRelativeBalUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetRelativeBalDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7520
 * 
 *     property j2ptWoNoisyJets_JetRelativeBalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetRelativeBalDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetRelativeBalDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7525
 * 
 *     property j2ptWoNoisyJets_JetRelativeBalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetRelativeBalUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32j2ptWoNoisyJets_JetRelativeBalUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32j2ptWoNoisyJets_JetRelativeBalUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32j2ptWoNoisyJets_JetRelativeBalUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32j2ptWoNoisyJets_JetRelativeBalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7526
 *     property j2ptWoNoisyJets_JetRelativeBalUp:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetRelativeBalUp_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetRelativeBalUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7527
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetRelativeBalUp_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetRelativeSampleDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetRelativeBalUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7527, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7525
 * 
 *     property j2ptWoNoisyJets_JetRelativeBalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetRelativeBalUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetRelativeBalUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7530
 * 
 *     property j2ptWoNoisyJets_JetRelativeSampleDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetRelativeSampleDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_37j2ptWoNoisyJets_JetRelativeSampleDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_37j2ptWoNoisyJets_JetRelativeSampleDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_37j2ptWoNoisyJets_JetRelativeSampleDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_37j2ptWoNoisyJets_JetRelativeSampleDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7531
 *     property j2ptWoNoisyJets_JetRelativeSampleDown:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetRelativeSampleDown_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetRelativeSampleDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7532
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetRelativeSampleDown_value             # <<<<<<<<<<<<<<
 * 
 *     property j2ptWoNoisyJets_JetRelativeSampleUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetRelativeSampleDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7532, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7530
 * 
 *     property j2ptWoNoisyJets_JetRelativeSampleDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetRelativeSampleDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetRelativeSampleDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7535
 * 
 *     property j2ptWoNoisyJets_JetRelativeSampleUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetRelativeSampleUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35j2ptWoNoisyJets_JetRelativeSampleUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35j2ptWoNoisyJets_JetRelativeSampleUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35j2ptWoNoisyJets_JetRelativeSampleUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35j2ptWoNoisyJets_JetRelativeSampleUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7536
 *     property j2ptWoNoisyJets_JetRelativeSampleUp:
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.j2ptWoNoisyJets_JetRelativeSampleUp_value
 * 
 */
  (void)(__pyx_v_self->j2ptWoNoisyJets_JetRelativeSampleUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7537
 *         def __get__(self):
 *             self.j2ptWoNoisyJets_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetRelativeSampleUp_value             # <<<<<<<<<<<<<<
 * 
 *     property jb1eta_2016:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->j2ptWoNoisyJets_JetRelativeSampleUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7537, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7535
 * 
 *     property j2ptWoNoisyJets_JetRelativeSampleUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.j2ptWoNoisyJets_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.j2ptWoNoisyJets_JetRelativeSampleUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.j2ptWoNoisyJets_JetRelativeSampleUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7540
 * 
 *     property jb1eta_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1eta_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb1eta_2016_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb1eta_2016_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb1eta_2016_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11jb1eta_2016___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11jb1eta_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7541
 *     property jb1eta_2016:
 *         def __get__(self):
 *             self.jb1eta_2016_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb1eta_2016_value
 * 
 */
  (void)(__pyx_v_self->jb1eta_2016_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7542
 *         def __get__(self):
 *             self.jb1eta_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb1eta_2016_value             # <<<<<<<<<<<<<<
 * 
 *     property jb1eta_2017:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb1eta_2016_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7540
 * 
 *     property jb1eta_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1eta_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb1eta_2016_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb1eta_2016.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7545
 * 
 *     property jb1eta_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1eta_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb1eta_2017_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb1eta_2017_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb1eta_2017_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11jb1eta_2017___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11jb1eta_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7546
 *     property jb1eta_2017:
 *         def __get__(self):
 *             self.jb1eta_2017_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb1eta_2017_value
 * 
 */
  (void)(__pyx_v_self->jb1eta_2017_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7547
 *         def __get__(self):
 *             self.jb1eta_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb1eta_2017_value             # <<<<<<<<<<<<<<
 * 
 *     property jb1eta_2018:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb1eta_2017_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7547, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7545
 * 
 *     property jb1eta_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1eta_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb1eta_2017_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb1eta_2017.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7550
 * 
 *     property jb1eta_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1eta_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb1eta_2018_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb1eta_2018_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb1eta_2018_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11jb1eta_2018___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11jb1eta_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7551
 *     property jb1eta_2018:
 *         def __get__(self):
 *             self.jb1eta_2018_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb1eta_2018_value
 * 
 */
  (void)(__pyx_v_self->jb1eta_2018_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7552
 *         def __get__(self):
 *             self.jb1eta_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb1eta_2018_value             # <<<<<<<<<<<<<<
 * 
 *     property jb1hadronflavor_2016:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb1eta_2018_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7550
 * 
 *     property jb1eta_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1eta_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb1eta_2018_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb1eta_2018.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7555
 * 
 *     property jb1hadronflavor_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1hadronflavor_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb1hadronflavor_2016_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20jb1hadronflavor_2016_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20jb1hadronflavor_2016_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20jb1hadronflavor_2016___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20jb1hadronflavor_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7556
 *     property jb1hadronflavor_2016:
 *         def __get__(self):
 *             self.jb1hadronflavor_2016_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb1hadronflavor_2016_value
 * 
 */
  (void)(__pyx_v_self->jb1hadronflavor_2016_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7557
 *         def __get__(self):
 *             self.jb1hadronflavor_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb1hadronflavor_2016_value             # <<<<<<<<<<<<<<
 * 
 *     property jb1hadronflavor_2017:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb1hadronflavor_2016_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7555
 * 
 *     property jb1hadronflavor_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1hadronflavor_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb1hadronflavor_2016_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb1hadronflavor_2016.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7560
 * 
 *     property jb1hadronflavor_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1hadronflavor_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb1hadronflavor_2017_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20jb1hadronflavor_2017_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20jb1hadronflavor_2017_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20jb1hadronflavor_2017___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20jb1hadronflavor_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7561
 *     property jb1hadronflavor_2017:
 *         def __get__(self):
 *             self.jb1hadronflavor_2017_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb1hadronflavor_2017_value
 * 
 */
  (void)(__pyx_v_self->jb1hadronflavor_2017_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7562
 *         def __get__(self):
 *             self.jb1hadronflavor_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb1hadronflavor_2017_value             # <<<<<<<<<<<<<<
 * 
 *     property jb1hadronflavor_2018:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb1hadronflavor_2017_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7562, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7560
 * 
 *     property jb1hadronflavor_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1hadronflavor_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb1hadronflavor_2017_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb1hadronflavor_2017.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7565
 * 
 *     property jb1hadronflavor_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1hadronflavor_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb1hadronflavor_2018_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20jb1hadronflavor_2018_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20jb1hadronflavor_2018_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20jb1hadronflavor_2018___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20jb1hadronflavor_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7566
 *     property jb1hadronflavor_2018:
 *         def __get__(self):
 *             self.jb1hadronflavor_2018_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb1hadronflavor_2018_value
 * 
 */
  (void)(__pyx_v_self->jb1hadronflavor_2018_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7567
 *         def __get__(self):
 *             self.jb1hadronflavor_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb1hadronflavor_2018_value             # <<<<<<<<<<<<<<
 * 
 *     property jb1phi_2016:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb1hadronflavor_2018_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7567, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7565
 * 
 *     property jb1hadronflavor_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1hadronflavor_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb1hadronflavor_2018_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb1hadronflavor_2018.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7570
 * 
 *     property jb1phi_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1phi_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb1phi_2016_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb1phi_2016_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb1phi_2016_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11jb1phi_2016___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11jb1phi_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7571
 *     property jb1phi_2016:
 *         def __get__(self):
 *             self.jb1phi_2016_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb1phi_2016_value
 * 
 */
  (void)(__pyx_v_self->jb1phi_2016_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7572
 *         def __get__(self):
 *             self.jb1phi_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb1phi_2016_value             # <<<<<<<<<<<<<<
 * 
 *     property jb1phi_2017:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb1phi_2016_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7572, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7570
 * 
 *     property jb1phi_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1phi_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb1phi_2016_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb1phi_2016.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7575
 * 
 *     property jb1phi_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1phi_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb1phi_2017_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb1phi_2017_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb1phi_2017_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11jb1phi_2017___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11jb1phi_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7576
 *     property jb1phi_2017:
 *         def __get__(self):
 *             self.jb1phi_2017_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb1phi_2017_value
 * 
 */
  (void)(__pyx_v_self->jb1phi_2017_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7577
 *         def __get__(self):
 *             self.jb1phi_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb1phi_2017_value             # <<<<<<<<<<<<<<
 * 
 *     property jb1phi_2018:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb1phi_2017_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7575
 * 
 *     property jb1phi_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1phi_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb1phi_2017_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb1phi_2017.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7580
 * 
 *     property jb1phi_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1phi_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb1phi_2018_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb1phi_2018_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb1phi_2018_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11jb1phi_2018___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11jb1phi_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7581
 *     property jb1phi_2018:
 *         def __get__(self):
 *             self.jb1phi_2018_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb1phi_2018_value
 * 
 */
  (void)(__pyx_v_self->jb1phi_2018_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7582
 *         def __get__(self):
 *             self.jb1phi_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb1phi_2018_value             # <<<<<<<<<<<<<<
 * 
 *     property jb1pt_2016:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb1phi_2018_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7580
 * 
 *     property jb1phi_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1phi_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb1phi_2018_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb1phi_2018.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7585
 * 
 *     property jb1pt_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1pt_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb1pt_2016_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10jb1pt_2016_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10jb1pt_2016_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10jb1pt_2016___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10jb1pt_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7586
 *     property jb1pt_2016:
 *         def __get__(self):
 *             self.jb1pt_2016_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb1pt_2016_value
 * 
 */
  (void)(__pyx_v_self->jb1pt_2016_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7587
 *         def __get__(self):
 *             self.jb1pt_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb1pt_2016_value             # <<<<<<<<<<<<<<
 * 
 *     property jb1pt_2017:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb1pt_2016_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7585
 * 
 *     property jb1pt_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1pt_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb1pt_2016_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb1pt_2016.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7590
 * 
 *     property jb1pt_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1pt_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb1pt_2017_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10jb1pt_2017_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10jb1pt_2017_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10jb1pt_2017___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10jb1pt_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7591
 *     property jb1pt_2017:
 *         def __get__(self):
 *             self.jb1pt_2017_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb1pt_2017_value
 * 
 */
  (void)(__pyx_v_self->jb1pt_2017_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7592
 *         def __get__(self):
 *             self.jb1pt_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb1pt_2017_value             # <<<<<<<<<<<<<<
 * 
 *     property jb1pt_2018:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb1pt_2017_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7590
 * 
 *     property jb1pt_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1pt_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb1pt_2017_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb1pt_2017.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7595
 * 
 *     property jb1pt_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1pt_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb1pt_2018_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10jb1pt_2018_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10jb1pt_2018_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10jb1pt_2018___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10jb1pt_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7596
 *     property jb1pt_2018:
 *         def __get__(self):
 *             self.jb1pt_2018_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb1pt_2018_value
 * 
 */
  (void)(__pyx_v_self->jb1pt_2018_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7597
 *         def __get__(self):
 *             self.jb1pt_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb1pt_2018_value             # <<<<<<<<<<<<<<
 * 
 *     property jb2eta_2016:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb1pt_2018_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7595
 * 
 *     property jb1pt_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb1pt_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb1pt_2018_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb1pt_2018.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7600
 * 
 *     property jb2eta_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2eta_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb2eta_2016_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb2eta_2016_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb2eta_2016_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11jb2eta_2016___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11jb2eta_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7601
 *     property jb2eta_2016:
 *         def __get__(self):
 *             self.jb2eta_2016_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb2eta_2016_value
 * 
 */
  (void)(__pyx_v_self->jb2eta_2016_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7602
 *         def __get__(self):
 *             self.jb2eta_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb2eta_2016_value             # <<<<<<<<<<<<<<
 * 
 *     property jb2eta_2017:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb2eta_2016_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7602, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7600
 * 
 *     property jb2eta_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2eta_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb2eta_2016_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb2eta_2016.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7605
 * 
 *     property jb2eta_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2eta_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb2eta_2017_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb2eta_2017_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb2eta_2017_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11jb2eta_2017___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11jb2eta_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7606
 *     property jb2eta_2017:
 *         def __get__(self):
 *             self.jb2eta_2017_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb2eta_2017_value
 * 
 */
  (void)(__pyx_v_self->jb2eta_2017_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7607
 *         def __get__(self):
 *             self.jb2eta_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb2eta_2017_value             # <<<<<<<<<<<<<<
 * 
 *     property jb2eta_2018:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb2eta_2017_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7605
 * 
 *     property jb2eta_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2eta_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb2eta_2017_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb2eta_2017.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7610
 * 
 *     property jb2eta_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2eta_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb2eta_2018_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb2eta_2018_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb2eta_2018_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11jb2eta_2018___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11jb2eta_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7611
 *     property jb2eta_2018:
 *         def __get__(self):
 *             self.jb2eta_2018_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb2eta_2018_value
 * 
 */
  (void)(__pyx_v_self->jb2eta_2018_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7612
 *         def __get__(self):
 *             self.jb2eta_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb2eta_2018_value             # <<<<<<<<<<<<<<
 * 
 *     property jb2hadronflavor_2016:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb2eta_2018_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7610
 * 
 *     property jb2eta_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2eta_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb2eta_2018_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb2eta_2018.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7615
 * 
 *     property jb2hadronflavor_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2hadronflavor_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb2hadronflavor_2016_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20jb2hadronflavor_2016_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20jb2hadronflavor_2016_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20jb2hadronflavor_2016___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20jb2hadronflavor_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7616
 *     property jb2hadronflavor_2016:
 *         def __get__(self):
 *             self.jb2hadronflavor_2016_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb2hadronflavor_2016_value
 * 
 */
  (void)(__pyx_v_self->jb2hadronflavor_2016_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7617
 *         def __get__(self):
 *             self.jb2hadronflavor_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb2hadronflavor_2016_value             # <<<<<<<<<<<<<<
 * 
 *     property jb2hadronflavor_2017:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb2hadronflavor_2016_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7617, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7615
 * 
 *     property jb2hadronflavor_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2hadronflavor_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb2hadronflavor_2016_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb2hadronflavor_2016.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7620
 * 
 *     property jb2hadronflavor_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2hadronflavor_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb2hadronflavor_2017_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20jb2hadronflavor_2017_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20jb2hadronflavor_2017_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20jb2hadronflavor_2017___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20jb2hadronflavor_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7621
 *     property jb2hadronflavor_2017:
 *         def __get__(self):
 *             self.jb2hadronflavor_2017_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb2hadronflavor_2017_value
 * 
 */
  (void)(__pyx_v_self->jb2hadronflavor_2017_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7622
 *         def __get__(self):
 *             self.jb2hadronflavor_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb2hadronflavor_2017_value             # <<<<<<<<<<<<<<
 * 
 *     property jb2hadronflavor_2018:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb2hadronflavor_2017_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7620
 * 
 *     property jb2hadronflavor_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2hadronflavor_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb2hadronflavor_2017_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb2hadronflavor_2017.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7625
 * 
 *     property jb2hadronflavor_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2hadronflavor_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb2hadronflavor_2018_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20jb2hadronflavor_2018_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20jb2hadronflavor_2018_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20jb2hadronflavor_2018___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20jb2hadronflavor_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7626
 *     property jb2hadronflavor_2018:
 *         def __get__(self):
 *             self.jb2hadronflavor_2018_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb2hadronflavor_2018_value
 * 
 */
  (void)(__pyx_v_self->jb2hadronflavor_2018_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7627
 *         def __get__(self):
 *             self.jb2hadronflavor_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb2hadronflavor_2018_value             # <<<<<<<<<<<<<<
 * 
 *     property jb2phi_2016:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb2hadronflavor_2018_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7627, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7625
 * 
 *     property jb2hadronflavor_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2hadronflavor_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb2hadronflavor_2018_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb2hadronflavor_2018.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7630
 * 
 *     property jb2phi_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2phi_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb2phi_2016_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb2phi_2016_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb2phi_2016_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11jb2phi_2016___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11jb2phi_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7631
 *     property jb2phi_2016:
 *         def __get__(self):
 *             self.jb2phi_2016_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb2phi_2016_value
 * 
 */
  (void)(__pyx_v_self->jb2phi_2016_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7632
 *         def __get__(self):
 *             self.jb2phi_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb2phi_2016_value             # <<<<<<<<<<<<<<
 * 
 *     property jb2phi_2017:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb2phi_2016_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7630
 * 
 *     property jb2phi_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2phi_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb2phi_2016_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb2phi_2016.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7635
 * 
 *     property jb2phi_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2phi_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb2phi_2017_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb2phi_2017_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb2phi_2017_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11jb2phi_2017___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11jb2phi_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7636
 *     property jb2phi_2017:
 *         def __get__(self):
 *             self.jb2phi_2017_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb2phi_2017_value
 * 
 */
  (void)(__pyx_v_self->jb2phi_2017_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7637
 *         def __get__(self):
 *             self.jb2phi_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb2phi_2017_value             # <<<<<<<<<<<<<<
 * 
 *     property jb2phi_2018:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb2phi_2017_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7637, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7635
 * 
 *     property jb2phi_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2phi_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb2phi_2017_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb2phi_2017.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7640
 * 
 *     property jb2phi_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2phi_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb2phi_2018_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb2phi_2018_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11jb2phi_2018_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11jb2phi_2018___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11jb2phi_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7641
 *     property jb2phi_2018:
 *         def __get__(self):
 *             self.jb2phi_2018_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb2phi_2018_value
 * 
 */
  (void)(__pyx_v_self->jb2phi_2018_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7642
 *         def __get__(self):
 *             self.jb2phi_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb2phi_2018_value             # <<<<<<<<<<<<<<
 * 
 *     property jb2pt_2016:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb2phi_2018_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7640
 * 
 *     property jb2phi_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2phi_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb2phi_2018_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb2phi_2018.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7645
 * 
 *     property jb2pt_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2pt_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb2pt_2016_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10jb2pt_2016_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10jb2pt_2016_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10jb2pt_2016___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10jb2pt_2016___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7646
 *     property jb2pt_2016:
 *         def __get__(self):
 *             self.jb2pt_2016_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb2pt_2016_value
 * 
 */
  (void)(__pyx_v_self->jb2pt_2016_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7647
 *         def __get__(self):
 *             self.jb2pt_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb2pt_2016_value             # <<<<<<<<<<<<<<
 * 
 *     property jb2pt_2017:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb2pt_2016_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7647, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7645
 * 
 *     property jb2pt_2016:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2pt_2016_branch.GetEntry(self.localentry, 0)
 *             return self.jb2pt_2016_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb2pt_2016.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7650
 * 
 *     property jb2pt_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2pt_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb2pt_2017_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10jb2pt_2017_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10jb2pt_2017_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10jb2pt_2017___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10jb2pt_2017___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7651
 *     property jb2pt_2017:
 *         def __get__(self):
 *             self.jb2pt_2017_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb2pt_2017_value
 * 
 */
  (void)(__pyx_v_self->jb2pt_2017_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7652
 *         def __get__(self):
 *             self.jb2pt_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb2pt_2017_value             # <<<<<<<<<<<<<<
 * 
 *     property jb2pt_2018:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb2pt_2017_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7652, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7650
 * 
 *     property jb2pt_2017:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2pt_2017_branch.GetEntry(self.localentry, 0)
 *             return self.jb2pt_2017_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb2pt_2017.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7655
 * 
 *     property jb2pt_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2pt_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb2pt_2018_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10jb2pt_2018_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10jb2pt_2018_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10jb2pt_2018___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10jb2pt_2018___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7656
 *     property jb2pt_2018:
 *         def __get__(self):
 *             self.jb2pt_2018_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jb2pt_2018_value
 * 
 */
  (void)(__pyx_v_self->jb2pt_2018_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7657
 *         def __get__(self):
 *             self.jb2pt_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb2pt_2018_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto20:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jb2pt_2018_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7655
 * 
 *     property jb2pt_2018:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jb2pt_2018_branch.GetEntry(self.localentry, 0)
 *             return self.jb2pt_2018_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jb2pt_2018.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7660
 * 
 *     property jetVeto20:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto20_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto20_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_9jetVeto20_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_9jetVeto20_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_9jetVeto20___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_9jetVeto20___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7661
 *     property jetVeto20:
 *         def __get__(self):
 *             self.jetVeto20_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto20_value
 * 
 */
  (void)(__pyx_v_self->jetVeto20_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7662
 *         def __get__(self):
 *             self.jetVeto20_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto20_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto20WoNoisyJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto20_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7660
 * 
 *     property jetVeto20:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto20_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto20_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto20.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7665
 * 
 *     property jetVeto20WoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto20WoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto20WoNoisyJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20jetVeto20WoNoisyJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20jetVeto20WoNoisyJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20jetVeto20WoNoisyJets___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20jetVeto20WoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7666
 *     property jetVeto20WoNoisyJets:
 *         def __get__(self):
 *             self.jetVeto20WoNoisyJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto20WoNoisyJets_value
 * 
 */
  (void)(__pyx_v_self->jetVeto20WoNoisyJets_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7667
 *         def __get__(self):
 *             self.jetVeto20WoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto20WoNoisyJets_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto20WoNoisyJets_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7665
 * 
 *     property jetVeto20WoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto20WoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto20WoNoisyJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto20WoNoisyJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7670
 * 
 *     property jetVeto30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_9jetVeto30_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_9jetVeto30_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_9jetVeto30___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_9jetVeto30___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7671
 *     property jetVeto30:
 *         def __get__(self):
 *             self.jetVeto30_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7672
 *         def __get__(self):
 *             self.jetVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7670
 * 
 *     property jetVeto30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7675
 * 
 *     property jetVeto30WoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20jetVeto30WoNoisyJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20jetVeto30WoNoisyJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20jetVeto30WoNoisyJets___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20jetVeto30WoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7676
 *     property jetVeto30WoNoisyJets:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7677
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JERDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7677, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7675
 * 
 *     property jetVeto30WoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7680
 * 
 *     property jetVeto30WoNoisyJets_JERDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JERDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_28jetVeto30WoNoisyJets_JERDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_28jetVeto30WoNoisyJets_JERDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_28jetVeto30WoNoisyJets_JERDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_28jetVeto30WoNoisyJets_JERDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7681
 *     property jetVeto30WoNoisyJets_JERDown:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JERDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JERDown_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JERDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7682
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JERDown_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JERUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JERDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7682, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7680
 * 
 *     property jetVeto30WoNoisyJets_JERDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JERDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JERDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7685
 * 
 *     property jetVeto30WoNoisyJets_JERUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JERUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_26jetVeto30WoNoisyJets_JERUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_26jetVeto30WoNoisyJets_JERUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_26jetVeto30WoNoisyJets_JERUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_26jetVeto30WoNoisyJets_JERUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7686
 *     property jetVeto30WoNoisyJets_JERUp:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JERUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JERUp_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JERUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7687
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JERUp_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetAbsoluteDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JERUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7687, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7685
 * 
 *     property jetVeto30WoNoisyJets_JERUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JERUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JERUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7690
 * 
 *     property jetVeto30WoNoisyJets_JetAbsoluteDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetAbsoluteDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_36jetVeto30WoNoisyJets_JetAbsoluteDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_36jetVeto30WoNoisyJets_JetAbsoluteDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_36jetVeto30WoNoisyJets_JetAbsoluteDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_36jetVeto30WoNoisyJets_JetAbsoluteDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7691
 *     property jetVeto30WoNoisyJets_JetAbsoluteDown:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetAbsoluteDown_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7692
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetAbsoluteDown_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetAbsoluteUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7692, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7690
 * 
 *     property jetVeto30WoNoisyJets_JetAbsoluteDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetAbsoluteDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetAbsoluteDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7695
 * 
 *     property jetVeto30WoNoisyJets_JetAbsoluteUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetAbsoluteUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34jetVeto30WoNoisyJets_JetAbsoluteUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34jetVeto30WoNoisyJets_JetAbsoluteUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34jetVeto30WoNoisyJets_JetAbsoluteUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34jetVeto30WoNoisyJets_JetAbsoluteUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7696
 *     property jetVeto30WoNoisyJets_JetAbsoluteUp:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetAbsoluteUp_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7697
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetAbsoluteUp_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetAbsoluteyearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7697, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7695
 * 
 *     property jetVeto30WoNoisyJets_JetAbsoluteUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetAbsoluteUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetAbsoluteUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7700
 * 
 *     property jetVeto30WoNoisyJets_JetAbsoluteyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_40jetVeto30WoNoisyJets_JetAbsoluteyearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_40jetVeto30WoNoisyJets_JetAbsoluteyearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_40jetVeto30WoNoisyJets_JetAbsoluteyearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_40jetVeto30WoNoisyJets_JetAbsoluteyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7701
 *     property jetVeto30WoNoisyJets_JetAbsoluteyearDown:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7702
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetAbsoluteyearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteyearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7700
 * 
 *     property jetVeto30WoNoisyJets_JetAbsoluteyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetAbsoluteyearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7705
 * 
 *     property jetVeto30WoNoisyJets_JetAbsoluteyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_38jetVeto30WoNoisyJets_JetAbsoluteyearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_38jetVeto30WoNoisyJets_JetAbsoluteyearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_38jetVeto30WoNoisyJets_JetAbsoluteyearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_38jetVeto30WoNoisyJets_JetAbsoluteyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7706
 *     property jetVeto30WoNoisyJets_JetAbsoluteyearUp:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7707
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetBBEC1Down:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetAbsoluteyearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7707, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7705
 * 
 *     property jetVeto30WoNoisyJets_JetAbsoluteyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetAbsoluteyearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7710
 * 
 *     property jetVeto30WoNoisyJets_JetBBEC1Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetBBEC1Down_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetBBEC1Down_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetBBEC1Down_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetBBEC1Down___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetBBEC1Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7711
 *     property jetVeto30WoNoisyJets_JetBBEC1Down:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetBBEC1Down_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetBBEC1Down_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1Down_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7712
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetBBEC1Down_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetBBEC1Up:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1Down_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7712, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7710
 * 
 *     property jetVeto30WoNoisyJets_JetBBEC1Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetBBEC1Down_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetBBEC1Down.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7715
 * 
 *     property jetVeto30WoNoisyJets_JetBBEC1Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetBBEC1Up_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetBBEC1Up_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetBBEC1Up_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetBBEC1Up___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetBBEC1Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7716
 *     property jetVeto30WoNoisyJets_JetBBEC1Up:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetBBEC1Up_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetBBEC1Up_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1Up_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7717
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetBBEC1Up_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetBBEC1yearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1Up_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7715
 * 
 *     property jetVeto30WoNoisyJets_JetBBEC1Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetBBEC1Up_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetBBEC1Up.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7720
 * 
 *     property jetVeto30WoNoisyJets_JetBBEC1yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetBBEC1yearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_37jetVeto30WoNoisyJets_JetBBEC1yearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_37jetVeto30WoNoisyJets_JetBBEC1yearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_37jetVeto30WoNoisyJets_JetBBEC1yearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_37jetVeto30WoNoisyJets_JetBBEC1yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7721
 *     property jetVeto30WoNoisyJets_JetBBEC1yearDown:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetBBEC1yearDown_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1yearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7722
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetBBEC1yearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetBBEC1yearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1yearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7722, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7720
 * 
 *     property jetVeto30WoNoisyJets_JetBBEC1yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetBBEC1yearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetBBEC1yearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7725
 * 
 *     property jetVeto30WoNoisyJets_JetBBEC1yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetBBEC1yearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetBBEC1yearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetBBEC1yearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetBBEC1yearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetBBEC1yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7726
 *     property jetVeto30WoNoisyJets_JetBBEC1yearUp:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetBBEC1yearUp_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1yearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7727
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetBBEC1yearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetEC2Down:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetBBEC1yearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7727, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7725
 * 
 *     property jetVeto30WoNoisyJets_JetBBEC1yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetBBEC1yearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetBBEC1yearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7730
 * 
 *     property jetVeto30WoNoisyJets_JetEC2Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetEC2Down_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetEC2Down_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetEC2Down_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetEC2Down___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetEC2Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7731
 *     property jetVeto30WoNoisyJets_JetEC2Down:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetEC2Down_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetEC2Down_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetEC2Down_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7732
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetEC2Down_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetEC2Up:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetEC2Down_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7730
 * 
 *     property jetVeto30WoNoisyJets_JetEC2Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetEC2Down_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetEC2Down.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7735
 * 
 *     property jetVeto30WoNoisyJets_JetEC2Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetEC2Up_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_29jetVeto30WoNoisyJets_JetEC2Up_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_29jetVeto30WoNoisyJets_JetEC2Up_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_29jetVeto30WoNoisyJets_JetEC2Up___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_29jetVeto30WoNoisyJets_JetEC2Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7736
 *     property jetVeto30WoNoisyJets_JetEC2Up:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetEC2Up_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetEC2Up_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetEC2Up_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7737
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetEC2Up_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetEC2yearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetEC2Up_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7737, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7735
 * 
 *     property jetVeto30WoNoisyJets_JetEC2Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetEC2Up_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetEC2Up.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7740
 * 
 *     property jetVeto30WoNoisyJets_JetEC2yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetEC2yearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetEC2yearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetEC2yearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetEC2yearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetEC2yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7741
 *     property jetVeto30WoNoisyJets_JetEC2yearDown:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetEC2yearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetEC2yearDown_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetEC2yearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7742
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetEC2yearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetEC2yearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetEC2yearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7740
 * 
 *     property jetVeto30WoNoisyJets_JetEC2yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetEC2yearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetEC2yearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7745
 * 
 *     property jetVeto30WoNoisyJets_JetEC2yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetEC2yearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetEC2yearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetEC2yearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetEC2yearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetEC2yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7746
 *     property jetVeto30WoNoisyJets_JetEC2yearUp:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetEC2yearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetEC2yearUp_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetEC2yearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7747
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetEC2yearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetFlavorQCDDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetEC2yearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7747, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7745
 * 
 *     property jetVeto30WoNoisyJets_JetEC2yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetEC2yearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetEC2yearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7750
 * 
 *     property jetVeto30WoNoisyJets_JetFlavorQCDDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetFlavorQCDDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_37jetVeto30WoNoisyJets_JetFlavorQCDDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_37jetVeto30WoNoisyJets_JetFlavorQCDDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_37jetVeto30WoNoisyJets_JetFlavorQCDDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_37jetVeto30WoNoisyJets_JetFlavorQCDDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7751
 *     property jetVeto30WoNoisyJets_JetFlavorQCDDown:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetFlavorQCDDown_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetFlavorQCDDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7752
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetFlavorQCDDown_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetFlavorQCDUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetFlavorQCDDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7752, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7750
 * 
 *     property jetVeto30WoNoisyJets_JetFlavorQCDDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetFlavorQCDDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetFlavorQCDDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7755
 * 
 *     property jetVeto30WoNoisyJets_JetFlavorQCDUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetFlavorQCDUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetFlavorQCDUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetFlavorQCDUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetFlavorQCDUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetFlavorQCDUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7756
 *     property jetVeto30WoNoisyJets_JetFlavorQCDUp:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetFlavorQCDUp_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetFlavorQCDUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7757
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetFlavorQCDUp_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetHFDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetFlavorQCDUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7757, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7755
 * 
 *     property jetVeto30WoNoisyJets_JetFlavorQCDUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetFlavorQCDUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetFlavorQCDUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7760
 * 
 *     property jetVeto30WoNoisyJets_JetHFDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetHFDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_30jetVeto30WoNoisyJets_JetHFDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_30jetVeto30WoNoisyJets_JetHFDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_30jetVeto30WoNoisyJets_JetHFDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_30jetVeto30WoNoisyJets_JetHFDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7761
 *     property jetVeto30WoNoisyJets_JetHFDown:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetHFDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetHFDown_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetHFDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7762
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetHFDown_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetHFUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetHFDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7762, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7760
 * 
 *     property jetVeto30WoNoisyJets_JetHFDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetHFDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetHFDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7765
 * 
 *     property jetVeto30WoNoisyJets_JetHFUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetHFUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_28jetVeto30WoNoisyJets_JetHFUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_28jetVeto30WoNoisyJets_JetHFUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_28jetVeto30WoNoisyJets_JetHFUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_28jetVeto30WoNoisyJets_JetHFUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7766
 *     property jetVeto30WoNoisyJets_JetHFUp:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetHFUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetHFUp_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetHFUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7767
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetHFUp_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetHFyearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetHFUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7767, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7765
 * 
 *     property jetVeto30WoNoisyJets_JetHFUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetHFUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetHFUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7770
 * 
 *     property jetVeto30WoNoisyJets_JetHFyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetHFyearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34jetVeto30WoNoisyJets_JetHFyearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34jetVeto30WoNoisyJets_JetHFyearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34jetVeto30WoNoisyJets_JetHFyearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34jetVeto30WoNoisyJets_JetHFyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7771
 *     property jetVeto30WoNoisyJets_JetHFyearDown:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetHFyearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetHFyearDown_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetHFyearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7772
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetHFyearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetHFyearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetHFyearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7772, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7770
 * 
 *     property jetVeto30WoNoisyJets_JetHFyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetHFyearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetHFyearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7775
 * 
 *     property jetVeto30WoNoisyJets_JetHFyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetHFyearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32jetVeto30WoNoisyJets_JetHFyearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32jetVeto30WoNoisyJets_JetHFyearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32jetVeto30WoNoisyJets_JetHFyearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32jetVeto30WoNoisyJets_JetHFyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7776
 *     property jetVeto30WoNoisyJets_JetHFyearUp:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetHFyearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetHFyearUp_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetHFyearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7777
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetHFyearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetHFyearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7777, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7775
 * 
 *     property jetVeto30WoNoisyJets_JetHFyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetHFyearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetHFyearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7780
 * 
 *     property jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_50jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_50jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_50jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_50jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7781
 *     property jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7782
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7782, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7780
 * 
 *     property jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7785
 * 
 *     property jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_48jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_48jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_48jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_48jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7786
 *     property jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7787
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetRelativeSampleDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7787, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7785
 * 
 *     property jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7790
 * 
 *     property jetVeto30WoNoisyJets_JetRelativeSampleDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetRelativeSampleDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_42jetVeto30WoNoisyJets_JetRelativeSampleDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_42jetVeto30WoNoisyJets_JetRelativeSampleDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_42jetVeto30WoNoisyJets_JetRelativeSampleDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_42jetVeto30WoNoisyJets_JetRelativeSampleDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7791
 *     property jetVeto30WoNoisyJets_JetRelativeSampleDown:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetRelativeSampleDown_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetRelativeSampleDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7792
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetRelativeSampleDown_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetRelativeSampleUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetRelativeSampleDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7792, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7790
 * 
 *     property jetVeto30WoNoisyJets_JetRelativeSampleDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetRelativeSampleDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetRelativeSampleDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7795
 * 
 *     property jetVeto30WoNoisyJets_JetRelativeSampleUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetRelativeSampleUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_40jetVeto30WoNoisyJets_JetRelativeSampleUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_40jetVeto30WoNoisyJets_JetRelativeSampleUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_40jetVeto30WoNoisyJets_JetRelativeSampleUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_40jetVeto30WoNoisyJets_JetRelativeSampleUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7796
 *     property jetVeto30WoNoisyJets_JetRelativeSampleUp:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetRelativeSampleUp_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetRelativeSampleUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7797
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetRelativeSampleUp_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetTotalDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetRelativeSampleUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7797, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7795
 * 
 *     property jetVeto30WoNoisyJets_JetRelativeSampleUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetRelativeSampleUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetRelativeSampleUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7800
 * 
 *     property jetVeto30WoNoisyJets_JetTotalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetTotalDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetTotalDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetTotalDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetTotalDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetTotalDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetTotalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7801
 *     property jetVeto30WoNoisyJets_JetTotalDown:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetTotalDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetTotalDown_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetTotalDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7802
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetTotalDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetTotalDown_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30WoNoisyJets_JetTotalUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetTotalDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7802, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7800
 * 
 *     property jetVeto30WoNoisyJets_JetTotalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetTotalDown_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetTotalDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetTotalDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7805
 * 
 *     property jetVeto30WoNoisyJets_JetTotalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetTotalUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetTotalUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetTotalUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetTotalUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetTotalUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetTotalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7806
 *     property jetVeto30WoNoisyJets_JetTotalUp:
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetTotalUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30WoNoisyJets_JetTotalUp_value
 * 
 */
  (void)(__pyx_v_self->jetVeto30WoNoisyJets_JetTotalUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7807
 *         def __get__(self):
 *             self.jetVeto30WoNoisyJets_JetTotalUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetTotalUp_value             # <<<<<<<<<<<<<<
 * 
 *     property lumi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30WoNoisyJets_JetTotalUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7807, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7805
 * 
 *     property jetVeto30WoNoisyJets_JetTotalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30WoNoisyJets_JetTotalUp_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30WoNoisyJets_JetTotalUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.jetVeto30WoNoisyJets_JetTotalUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7810
 * 
 *     property lumi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.lumi_branch.GetEntry(self.localentry, 0)
 *             return self.lumi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_4lumi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_4lumi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_4lumi___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_4lumi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7811
 *     property lumi:
 *         def __get__(self):
 *             self.lumi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.lumi_value
 * 
 */
  (void)(__pyx_v_self->lumi_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7812
 *         def __get__(self):
 *             self.lumi_branch.GetEntry(self.localentry, 0)
 *             return self.lumi_value             # <<<<<<<<<<<<<<
 * 
 *     property mCharge:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->lumi_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7812, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7810
 * 
 *     property lumi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.lumi_branch.GetEntry(self.localentry, 0)
 *             return self.lumi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.lumi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7815
 * 
 *     property mCharge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mCharge_branch.GetEntry(self.localentry, 0)
 *             return self.mCharge_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_7mCharge_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_7mCharge_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_7mCharge___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_7mCharge___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7816
 *     property mCharge:
 *         def __get__(self):
 *             self.mCharge_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mCharge_value
 * 
 */
  (void)(__pyx_v_self->mCharge_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7817
 *         def __get__(self):
 *             self.mCharge_branch.GetEntry(self.localentry, 0)
 *             return self.mCharge_value             # <<<<<<<<<<<<<<
 * 
 *     property mComesFromHiggs:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mCharge_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7817, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7815
 * 
 *     property mCharge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mCharge_branch.GetEntry(self.localentry, 0)
 *             return self.mCharge_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mCharge.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7820
 * 
 *     property mComesFromHiggs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mComesFromHiggs_branch.GetEntry(self.localentry, 0)
 *             return self.mComesFromHiggs_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_15mComesFromHiggs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_15mComesFromHiggs_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_15mComesFromHiggs___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_15mComesFromHiggs___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7821
 *     property mComesFromHiggs:
 *         def __get__(self):
 *             self.mComesFromHiggs_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mComesFromHiggs_value
 * 
 */
  (void)(__pyx_v_self->mComesFromHiggs_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7822
 *         def __get__(self):
 *             self.mComesFromHiggs_branch.GetEntry(self.localentry, 0)
 *             return self.mComesFromHiggs_value             # <<<<<<<<<<<<<<
 * 
 *     property mEta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mComesFromHiggs_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7822, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7820
 * 
 *     property mComesFromHiggs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mComesFromHiggs_branch.GetEntry(self.localentry, 0)
 *             return self.mComesFromHiggs_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mComesFromHiggs.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7825
 * 
 *     property mEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEta_branch.GetEntry(self.localentry, 0)
 *             return self.mEta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_4mEta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_4mEta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_4mEta___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_4mEta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7826
 *     property mEta:
 *         def __get__(self):
 *             self.mEta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mEta_value
 * 
 */
  (void)(__pyx_v_self->mEta_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7827
 *         def __get__(self):
 *             self.mEta_branch.GetEntry(self.localentry, 0)
 *             return self.mEta_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenCharge:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mEta_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7827, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7825
 * 
 *     property mEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEta_branch.GetEntry(self.localentry, 0)
 *             return self.mEta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mEta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7830
 * 
 *     property mGenCharge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenCharge_branch.GetEntry(self.localentry, 0)
 *             return self.mGenCharge_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10mGenCharge_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10mGenCharge_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10mGenCharge___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10mGenCharge___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7831
 *     property mGenCharge:
 *         def __get__(self):
 *             self.mGenCharge_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenCharge_value
 * 
 */
  (void)(__pyx_v_self->mGenCharge_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7832
 *         def __get__(self):
 *             self.mGenCharge_branch.GetEntry(self.localentry, 0)
 *             return self.mGenCharge_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenDirectPromptTauDecayFinalState:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenCharge_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7832, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7830
 * 
 *     property mGenCharge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenCharge_branch.GetEntry(self.localentry, 0)
 *             return self.mGenCharge_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mGenCharge.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7835
 * 
 *     property mGenDirectPromptTauDecayFinalState:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenDirectPromptTauDecayFinalState_branch.GetEntry(self.localentry, 0)
 *             return self.mGenDirectPromptTauDecayFinalState_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34mGenDirectPromptTauDecayFinalState_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34mGenDirectPromptTauDecayFinalState_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34mGenDirectPromptTauDecayFinalState___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34mGenDirectPromptTauDecayFinalState___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7836
 *     property mGenDirectPromptTauDecayFinalState:
 *         def __get__(self):
 *             self.mGenDirectPromptTauDecayFinalState_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenDirectPromptTauDecayFinalState_value
 * 
 */
  (void)(__pyx_v_self->mGenDirectPromptTauDecayFinalState_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7837
 *         def __get__(self):
 *             self.mGenDirectPromptTauDecayFinalState_branch.GetEntry(self.localentry, 0)
 *             return self.mGenDirectPromptTauDecayFinalState_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenEnergy:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenDirectPromptTauDecayFinalState_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7837, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7835
 * 
 *     property mGenDirectPromptTauDecayFinalState:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenDirectPromptTauDecayFinalState_branch.GetEntry(self.localentry, 0)
 *             return self.mGenDirectPromptTauDecayFinalState_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mGenDirectPromptTauDecayFinalState.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7840
 * 
 *     property mGenEnergy:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenEnergy_branch.GetEntry(self.localentry, 0)
 *             return self.mGenEnergy_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10mGenEnergy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10mGenEnergy_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10mGenEnergy___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10mGenEnergy___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7841
 *     property mGenEnergy:
 *         def __get__(self):
 *             self.mGenEnergy_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenEnergy_value
 * 
 */
  (void)(__pyx_v_self->mGenEnergy_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7842
 *         def __get__(self):
 *             self.mGenEnergy_branch.GetEntry(self.localentry, 0)
 *             return self.mGenEnergy_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenEta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenEnergy_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7842, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7840
 * 
 *     property mGenEnergy:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenEnergy_branch.GetEntry(self.localentry, 0)
 *             return self.mGenEnergy_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mGenEnergy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7845
 * 
 *     property mGenEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenEta_branch.GetEntry(self.localentry, 0)
 *             return self.mGenEta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_7mGenEta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_7mGenEta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_7mGenEta___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_7mGenEta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7846
 *     property mGenEta:
 *         def __get__(self):
 *             self.mGenEta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenEta_value
 * 
 */
  (void)(__pyx_v_self->mGenEta_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7847
 *         def __get__(self):
 *             self.mGenEta_branch.GetEntry(self.localentry, 0)
 *             return self.mGenEta_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenIsPrompt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenEta_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7845
 * 
 *     property mGenEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenEta_branch.GetEntry(self.localentry, 0)
 *             return self.mGenEta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mGenEta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7850
 * 
 *     property mGenIsPrompt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenIsPrompt_branch.GetEntry(self.localentry, 0)
 *             return self.mGenIsPrompt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12mGenIsPrompt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12mGenIsPrompt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12mGenIsPrompt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12mGenIsPrompt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7851
 *     property mGenIsPrompt:
 *         def __get__(self):
 *             self.mGenIsPrompt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenIsPrompt_value
 * 
 */
  (void)(__pyx_v_self->mGenIsPrompt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7852
 *         def __get__(self):
 *             self.mGenIsPrompt_branch.GetEntry(self.localentry, 0)
 *             return self.mGenIsPrompt_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenMotherPdgId:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenIsPrompt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7852, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7850
 * 
 *     property mGenIsPrompt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenIsPrompt_branch.GetEntry(self.localentry, 0)
 *             return self.mGenIsPrompt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mGenIsPrompt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7855
 * 
 *     property mGenMotherPdgId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenMotherPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.mGenMotherPdgId_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_15mGenMotherPdgId_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_15mGenMotherPdgId_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_15mGenMotherPdgId___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_15mGenMotherPdgId___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7856
 *     property mGenMotherPdgId:
 *         def __get__(self):
 *             self.mGenMotherPdgId_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenMotherPdgId_value
 * 
 */
  (void)(__pyx_v_self->mGenMotherPdgId_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7857
 *         def __get__(self):
 *             self.mGenMotherPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.mGenMotherPdgId_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenParticle:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenMotherPdgId_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7857, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7855
 * 
 *     property mGenMotherPdgId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenMotherPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.mGenMotherPdgId_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mGenMotherPdgId.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7860
 * 
 *     property mGenParticle:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenParticle_branch.GetEntry(self.localentry, 0)
 *             return self.mGenParticle_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12mGenParticle_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12mGenParticle_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12mGenParticle___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12mGenParticle___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7861
 *     property mGenParticle:
 *         def __get__(self):
 *             self.mGenParticle_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenParticle_value
 * 
 */
  (void)(__pyx_v_self->mGenParticle_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7862
 *         def __get__(self):
 *             self.mGenParticle_branch.GetEntry(self.localentry, 0)
 *             return self.mGenParticle_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenPdgId:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenParticle_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7862, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7860
 * 
 *     property mGenParticle:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenParticle_branch.GetEntry(self.localentry, 0)
 *             return self.mGenParticle_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mGenParticle.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7865
 * 
 *     property mGenPdgId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPdgId_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_9mGenPdgId_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_9mGenPdgId_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_9mGenPdgId___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_9mGenPdgId___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7866
 *     property mGenPdgId:
 *         def __get__(self):
 *             self.mGenPdgId_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenPdgId_value
 * 
 */
  (void)(__pyx_v_self->mGenPdgId_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7867
 *         def __get__(self):
 *             self.mGenPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPdgId_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenPdgId_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7867, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7865
 * 
 *     property mGenPdgId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPdgId_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mGenPdgId.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7870
 * 
 *     property mGenPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPhi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_7mGenPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_7mGenPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_7mGenPhi___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_7mGenPhi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7871
 *     property mGenPhi:
 *         def __get__(self):
 *             self.mGenPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenPhi_value
 * 
 */
  (void)(__pyx_v_self->mGenPhi_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7872
 *         def __get__(self):
 *             self.mGenPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenPrompt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenPhi_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7870
 * 
 *     property mGenPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPhi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mGenPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7875
 * 
 *     property mGenPrompt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPrompt_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPrompt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10mGenPrompt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10mGenPrompt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10mGenPrompt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10mGenPrompt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7876
 *     property mGenPrompt:
 *         def __get__(self):
 *             self.mGenPrompt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenPrompt_value
 * 
 */
  (void)(__pyx_v_self->mGenPrompt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7877
 *         def __get__(self):
 *             self.mGenPrompt_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPrompt_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenPromptFinalState:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenPrompt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7875
 * 
 *     property mGenPrompt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPrompt_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPrompt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mGenPrompt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7880
 * 
 *     property mGenPromptFinalState:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPromptFinalState_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPromptFinalState_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20mGenPromptFinalState_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20mGenPromptFinalState_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20mGenPromptFinalState___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20mGenPromptFinalState___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7881
 *     property mGenPromptFinalState:
 *         def __get__(self):
 *             self.mGenPromptFinalState_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenPromptFinalState_value
 * 
 */
  (void)(__pyx_v_self->mGenPromptFinalState_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7882
 *         def __get__(self):
 *             self.mGenPromptFinalState_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPromptFinalState_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenPromptTauDecay:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenPromptFinalState_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7882, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7880
 * 
 *     property mGenPromptFinalState:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPromptFinalState_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPromptFinalState_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mGenPromptFinalState.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7885
 * 
 *     property mGenPromptTauDecay:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPromptTauDecay_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPromptTauDecay_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_18mGenPromptTauDecay_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_18mGenPromptTauDecay_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_18mGenPromptTauDecay___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_18mGenPromptTauDecay___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7886
 *     property mGenPromptTauDecay:
 *         def __get__(self):
 *             self.mGenPromptTauDecay_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenPromptTauDecay_value
 * 
 */
  (void)(__pyx_v_self->mGenPromptTauDecay_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7887
 *         def __get__(self):
 *             self.mGenPromptTauDecay_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPromptTauDecay_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenPt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenPromptTauDecay_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7887, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7885
 * 
 *     property mGenPromptTauDecay:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPromptTauDecay_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPromptTauDecay_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mGenPromptTauDecay.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7890
 * 
 *     property mGenPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPt_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6mGenPt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6mGenPt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6mGenPt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6mGenPt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7891
 *     property mGenPt:
 *         def __get__(self):
 *             self.mGenPt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenPt_value
 * 
 */
  (void)(__pyx_v_self->mGenPt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7892
 *         def __get__(self):
 *             self.mGenPt_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPt_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenTauDecay:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenPt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7892, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7890
 * 
 *     property mGenPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPt_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mGenPt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7895
 * 
 *     property mGenTauDecay:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenTauDecay_branch.GetEntry(self.localentry, 0)
 *             return self.mGenTauDecay_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12mGenTauDecay_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12mGenTauDecay_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12mGenTauDecay___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12mGenTauDecay___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7896
 *     property mGenTauDecay:
 *         def __get__(self):
 *             self.mGenTauDecay_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenTauDecay_value
 * 
 */
  (void)(__pyx_v_self->mGenTauDecay_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7897
 *         def __get__(self):
 *             self.mGenTauDecay_branch.GetEntry(self.localentry, 0)
 *             return self.mGenTauDecay_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenVZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenTauDecay_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7897, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7895
 * 
 *     property mGenTauDecay:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenTauDecay_branch.GetEntry(self.localentry, 0)
 *             return self.mGenTauDecay_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mGenTauDecay.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7900
 * 
 *     property mGenVZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenVZ_branch.GetEntry(self.localentry, 0)
 *             return self.mGenVZ_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6mGenVZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6mGenVZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6mGenVZ___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6mGenVZ___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7901
 *     property mGenVZ:
 *         def __get__(self):
 *             self.mGenVZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenVZ_value
 * 
 */
  (void)(__pyx_v_self->mGenVZ_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7902
 *         def __get__(self):
 *             self.mGenVZ_branch.GetEntry(self.localentry, 0)
 *             return self.mGenVZ_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenVtxPVMatch:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenVZ_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7900
 * 
 *     property mGenVZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenVZ_branch.GetEntry(self.localentry, 0)
 *             return self.mGenVZ_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mGenVZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7905
 * 
 *     property mGenVtxPVMatch:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenVtxPVMatch_branch.GetEntry(self.localentry, 0)
 *             return self.mGenVtxPVMatch_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_14mGenVtxPVMatch_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_14mGenVtxPVMatch_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_14mGenVtxPVMatch___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_14mGenVtxPVMatch___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7906
 *     property mGenVtxPVMatch:
 *         def __get__(self):
 *             self.mGenVtxPVMatch_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenVtxPVMatch_value
 * 
 */
  (void)(__pyx_v_self->mGenVtxPVMatch_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7907
 *         def __get__(self):
 *             self.mGenVtxPVMatch_branch.GetEntry(self.localentry, 0)
 *             return self.mGenVtxPVMatch_value             # <<<<<<<<<<<<<<
 * 
 *     property mIP3D:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenVtxPVMatch_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7907, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7905
 * 
 *     property mGenVtxPVMatch:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenVtxPVMatch_branch.GetEntry(self.localentry, 0)
 *             return self.mGenVtxPVMatch_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mGenVtxPVMatch.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7910
 * 
 *     property mIP3D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.mIP3D_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5mIP3D_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5mIP3D_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5mIP3D___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5mIP3D___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7911
 *     property mIP3D:
 *         def __get__(self):
 *             self.mIP3D_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mIP3D_value
 * 
 */
  (void)(__pyx_v_self->mIP3D_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7912
 *         def __get__(self):
 *             self.mIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.mIP3D_value             # <<<<<<<<<<<<<<
 * 
 *     property mIP3DErr:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mIP3D_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7912, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7910
 * 
 *     property mIP3D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.mIP3D_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mIP3D.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7915
 * 
 *     property mIP3DErr:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIP3DErr_branch.GetEntry(self.localentry, 0)
 *             return self.mIP3DErr_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_8mIP3DErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_8mIP3DErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_8mIP3DErr___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_8mIP3DErr___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7916
 *     property mIP3DErr:
 *         def __get__(self):
 *             self.mIP3DErr_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mIP3DErr_value
 * 
 */
  (void)(__pyx_v_self->mIP3DErr_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7917
 *         def __get__(self):
 *             self.mIP3DErr_branch.GetEntry(self.localentry, 0)
 *             return self.mIP3DErr_value             # <<<<<<<<<<<<<<
 * 
 *     property mIsGlobal:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mIP3DErr_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7917, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7915
 * 
 *     property mIP3DErr:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIP3DErr_branch.GetEntry(self.localentry, 0)
 *             return self.mIP3DErr_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mIP3DErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7920
 * 
 *     property mIsGlobal:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIsGlobal_branch.GetEntry(self.localentry, 0)
 *             return self.mIsGlobal_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_9mIsGlobal_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_9mIsGlobal_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_9mIsGlobal___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_9mIsGlobal___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7921
 *     property mIsGlobal:
 *         def __get__(self):
 *             self.mIsGlobal_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mIsGlobal_value
 * 
 */
  (void)(__pyx_v_self->mIsGlobal_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7922
 *         def __get__(self):
 *             self.mIsGlobal_branch.GetEntry(self.localentry, 0)
 *             return self.mIsGlobal_value             # <<<<<<<<<<<<<<
 * 
 *     property mIsPFMuon:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mIsGlobal_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7922, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7920
 * 
 *     property mIsGlobal:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIsGlobal_branch.GetEntry(self.localentry, 0)
 *             return self.mIsGlobal_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mIsGlobal.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7925
 * 
 *     property mIsPFMuon:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIsPFMuon_branch.GetEntry(self.localentry, 0)
 *             return self.mIsPFMuon_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_9mIsPFMuon_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_9mIsPFMuon_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_9mIsPFMuon___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_9mIsPFMuon___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7926
 *     property mIsPFMuon:
 *         def __get__(self):
 *             self.mIsPFMuon_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mIsPFMuon_value
 * 
 */
  (void)(__pyx_v_self->mIsPFMuon_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7927
 *         def __get__(self):
 *             self.mIsPFMuon_branch.GetEntry(self.localentry, 0)
 *             return self.mIsPFMuon_value             # <<<<<<<<<<<<<<
 * 
 *     property mIsTracker:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mIsPFMuon_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7927, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7925
 * 
 *     property mIsPFMuon:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIsPFMuon_branch.GetEntry(self.localentry, 0)
 *             return self.mIsPFMuon_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mIsPFMuon.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7930
 * 
 *     property mIsTracker:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIsTracker_branch.GetEntry(self.localentry, 0)
 *             return self.mIsTracker_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10mIsTracker_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10mIsTracker_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10mIsTracker___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10mIsTracker___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7931
 *     property mIsTracker:
 *         def __get__(self):
 *             self.mIsTracker_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mIsTracker_value
 * 
 */
  (void)(__pyx_v_self->mIsTracker_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7932
 *         def __get__(self):
 *             self.mIsTracker_branch.GetEntry(self.localentry, 0)
 *             return self.mIsTracker_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetArea:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mIsTracker_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7932, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7930
 * 
 *     property mIsTracker:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIsTracker_branch.GetEntry(self.localentry, 0)
 *             return self.mIsTracker_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mIsTracker.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7935
 * 
 *     property mJetArea:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetArea_branch.GetEntry(self.localentry, 0)
 *             return self.mJetArea_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_8mJetArea_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_8mJetArea_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_8mJetArea___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_8mJetArea___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7936
 *     property mJetArea:
 *         def __get__(self):
 *             self.mJetArea_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetArea_value
 * 
 */
  (void)(__pyx_v_self->mJetArea_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7937
 *         def __get__(self):
 *             self.mJetArea_branch.GetEntry(self.localentry, 0)
 *             return self.mJetArea_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetBtag:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetArea_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7935
 * 
 *     property mJetArea:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetArea_branch.GetEntry(self.localentry, 0)
 *             return self.mJetArea_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mJetArea.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7940
 * 
 *     property mJetBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetBtag_branch.GetEntry(self.localentry, 0)
 *             return self.mJetBtag_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_8mJetBtag_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_8mJetBtag_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_8mJetBtag___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_8mJetBtag___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7941
 *     property mJetBtag:
 *         def __get__(self):
 *             self.mJetBtag_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetBtag_value
 * 
 */
  (void)(__pyx_v_self->mJetBtag_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7942
 *         def __get__(self):
 *             self.mJetBtag_branch.GetEntry(self.localentry, 0)
 *             return self.mJetBtag_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetDR:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetBtag_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7942, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7940
 * 
 *     property mJetBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetBtag_branch.GetEntry(self.localentry, 0)
 *             return self.mJetBtag_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mJetBtag.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7945
 * 
 *     property mJetDR:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetDR_branch.GetEntry(self.localentry, 0)
 *             return self.mJetDR_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6mJetDR_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6mJetDR_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6mJetDR___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6mJetDR___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7946
 *     property mJetDR:
 *         def __get__(self):
 *             self.mJetDR_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetDR_value
 * 
 */
  (void)(__pyx_v_self->mJetDR_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7947
 *         def __get__(self):
 *             self.mJetDR_branch.GetEntry(self.localentry, 0)
 *             return self.mJetDR_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetEtaEtaMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetDR_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7947, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7945
 * 
 *     property mJetDR:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetDR_branch.GetEntry(self.localentry, 0)
 *             return self.mJetDR_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mJetDR.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7950
 * 
 *     property mJetEtaEtaMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaEtaMoment_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16mJetEtaEtaMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16mJetEtaEtaMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16mJetEtaEtaMoment___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16mJetEtaEtaMoment___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7951
 *     property mJetEtaEtaMoment:
 *         def __get__(self):
 *             self.mJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetEtaEtaMoment_value
 * 
 */
  (void)(__pyx_v_self->mJetEtaEtaMoment_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7952
 *         def __get__(self):
 *             self.mJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaEtaMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetEtaPhiMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetEtaEtaMoment_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7952, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7950
 * 
 *     property mJetEtaEtaMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaEtaMoment_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mJetEtaEtaMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7955
 * 
 *     property mJetEtaPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaPhiMoment_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16mJetEtaPhiMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16mJetEtaPhiMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16mJetEtaPhiMoment___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16mJetEtaPhiMoment___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7956
 *     property mJetEtaPhiMoment:
 *         def __get__(self):
 *             self.mJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetEtaPhiMoment_value
 * 
 */
  (void)(__pyx_v_self->mJetEtaPhiMoment_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7957
 *         def __get__(self):
 *             self.mJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaPhiMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetEtaPhiSpread:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetEtaPhiMoment_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7957, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7955
 * 
 *     property mJetEtaPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaPhiMoment_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mJetEtaPhiMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7960
 * 
 *     property mJetEtaPhiSpread:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaPhiSpread_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16mJetEtaPhiSpread_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16mJetEtaPhiSpread_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16mJetEtaPhiSpread___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16mJetEtaPhiSpread___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7961
 *     property mJetEtaPhiSpread:
 *         def __get__(self):
 *             self.mJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetEtaPhiSpread_value
 * 
 */
  (void)(__pyx_v_self->mJetEtaPhiSpread_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7962
 *         def __get__(self):
 *             self.mJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaPhiSpread_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetHadronFlavour:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetEtaPhiSpread_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7962, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7960
 * 
 *     property mJetEtaPhiSpread:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaPhiSpread_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mJetEtaPhiSpread.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7965
 * 
 *     property mJetHadronFlavour:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetHadronFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.mJetHadronFlavour_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_17mJetHadronFlavour_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_17mJetHadronFlavour_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_17mJetHadronFlavour___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_17mJetHadronFlavour___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7966
 *     property mJetHadronFlavour:
 *         def __get__(self):
 *             self.mJetHadronFlavour_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetHadronFlavour_value
 * 
 */
  (void)(__pyx_v_self->mJetHadronFlavour_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7967
 *         def __get__(self):
 *             self.mJetHadronFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.mJetHadronFlavour_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetPFCISVBtag:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetHadronFlavour_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7967, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7965
 * 
 *     property mJetHadronFlavour:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetHadronFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.mJetHadronFlavour_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mJetHadronFlavour.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7970
 * 
 *     property mJetPFCISVBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPFCISVBtag_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPFCISVBtag_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_14mJetPFCISVBtag_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_14mJetPFCISVBtag_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_14mJetPFCISVBtag___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_14mJetPFCISVBtag___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7971
 *     property mJetPFCISVBtag:
 *         def __get__(self):
 *             self.mJetPFCISVBtag_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetPFCISVBtag_value
 * 
 */
  (void)(__pyx_v_self->mJetPFCISVBtag_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7972
 *         def __get__(self):
 *             self.mJetPFCISVBtag_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPFCISVBtag_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetPartonFlavour:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetPFCISVBtag_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7972, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7970
 * 
 *     property mJetPFCISVBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPFCISVBtag_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPFCISVBtag_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mJetPFCISVBtag.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7975
 * 
 *     property mJetPartonFlavour:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPartonFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPartonFlavour_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_17mJetPartonFlavour_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_17mJetPartonFlavour_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_17mJetPartonFlavour___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_17mJetPartonFlavour___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7976
 *     property mJetPartonFlavour:
 *         def __get__(self):
 *             self.mJetPartonFlavour_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetPartonFlavour_value
 * 
 */
  (void)(__pyx_v_self->mJetPartonFlavour_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7977
 *         def __get__(self):
 *             self.mJetPartonFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPartonFlavour_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetPhiPhiMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetPartonFlavour_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7977, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7975
 * 
 *     property mJetPartonFlavour:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPartonFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPartonFlavour_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mJetPartonFlavour.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7980
 * 
 *     property mJetPhiPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPhiPhiMoment_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16mJetPhiPhiMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16mJetPhiPhiMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16mJetPhiPhiMoment___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16mJetPhiPhiMoment___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7981
 *     property mJetPhiPhiMoment:
 *         def __get__(self):
 *             self.mJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetPhiPhiMoment_value
 * 
 */
  (void)(__pyx_v_self->mJetPhiPhiMoment_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7982
 *         def __get__(self):
 *             self.mJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPhiPhiMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetPt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetPhiPhiMoment_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7982, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7980
 * 
 *     property mJetPhiPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPhiPhiMoment_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mJetPhiPhiMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7985
 * 
 *     property mJetPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPt_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6mJetPt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6mJetPt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6mJetPt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6mJetPt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7986
 *     property mJetPt:
 *         def __get__(self):
 *             self.mJetPt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetPt_value
 * 
 */
  (void)(__pyx_v_self->mJetPt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7987
 *         def __get__(self):
 *             self.mJetPt_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPt_value             # <<<<<<<<<<<<<<
 * 
 *     property mMass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetPt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7987, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7985
 * 
 *     property mJetPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPt_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mJetPt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7990
 * 
 *     property mMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMass_branch.GetEntry(self.localentry, 0)
 *             return self.mMass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5mMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5mMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5mMass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5mMass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7991
 *     property mMass:
 *         def __get__(self):
 *             self.mMass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMass_value
 * 
 */
  (void)(__pyx_v_self->mMass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7992
 *         def __get__(self):
 *             self.mMass_branch.GetEntry(self.localentry, 0)
 *             return self.mMass_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchEmbeddedFilterMu24:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7992, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7990
 * 
 *     property mMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMass_branch.GetEntry(self.localentry, 0)
 *             return self.mMass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":7995
 * 
 *     property mMatchEmbeddedFilterMu24:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchEmbeddedFilterMu24_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchEmbeddedFilterMu24_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_24mMatchEmbeddedFilterMu24_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_24mMatchEmbeddedFilterMu24_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_24mMatchEmbeddedFilterMu24___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_24mMatchEmbeddedFilterMu24___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":7996
 *     property mMatchEmbeddedFilterMu24:
 *         def __get__(self):
 *             self.mMatchEmbeddedFilterMu24_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchEmbeddedFilterMu24_value
 * 
 */
  (void)(__pyx_v_self->mMatchEmbeddedFilterMu24_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":7997
 *         def __get__(self):
 *             self.mMatchEmbeddedFilterMu24_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchEmbeddedFilterMu24_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchEmbeddedFilterMu27:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchEmbeddedFilterMu24_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7997, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":7995
 * 
 *     property mMatchEmbeddedFilterMu24:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchEmbeddedFilterMu24_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchEmbeddedFilterMu24_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mMatchEmbeddedFilterMu24.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8000
 * 
 *     property mMatchEmbeddedFilterMu27:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchEmbeddedFilterMu27_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchEmbeddedFilterMu27_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_24mMatchEmbeddedFilterMu27_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_24mMatchEmbeddedFilterMu27_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_24mMatchEmbeddedFilterMu27___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_24mMatchEmbeddedFilterMu27___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8001
 *     property mMatchEmbeddedFilterMu27:
 *         def __get__(self):
 *             self.mMatchEmbeddedFilterMu27_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchEmbeddedFilterMu27_value
 * 
 */
  (void)(__pyx_v_self->mMatchEmbeddedFilterMu27_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8002
 *         def __get__(self):
 *             self.mMatchEmbeddedFilterMu27_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchEmbeddedFilterMu27_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesIsoMu24Filter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchEmbeddedFilterMu27_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8000
 * 
 *     property mMatchEmbeddedFilterMu27:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchEmbeddedFilterMu27_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchEmbeddedFilterMu27_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mMatchEmbeddedFilterMu27.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8005
 * 
 *     property mMatchesIsoMu24Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesIsoMu24Filter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesIsoMu24Filter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_21mMatchesIsoMu24Filter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_21mMatchesIsoMu24Filter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_21mMatchesIsoMu24Filter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_21mMatchesIsoMu24Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8006
 *     property mMatchesIsoMu24Filter:
 *         def __get__(self):
 *             self.mMatchesIsoMu24Filter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesIsoMu24Filter_value
 * 
 */
  (void)(__pyx_v_self->mMatchesIsoMu24Filter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8007
 *         def __get__(self):
 *             self.mMatchesIsoMu24Filter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesIsoMu24Filter_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesIsoMu24Path:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesIsoMu24Filter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8007, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8005
 * 
 *     property mMatchesIsoMu24Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesIsoMu24Filter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesIsoMu24Filter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mMatchesIsoMu24Filter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8010
 * 
 *     property mMatchesIsoMu24Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesIsoMu24Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesIsoMu24Path_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_19mMatchesIsoMu24Path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_19mMatchesIsoMu24Path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_19mMatchesIsoMu24Path___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_19mMatchesIsoMu24Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8011
 *     property mMatchesIsoMu24Path:
 *         def __get__(self):
 *             self.mMatchesIsoMu24Path_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesIsoMu24Path_value
 * 
 */
  (void)(__pyx_v_self->mMatchesIsoMu24Path_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8012
 *         def __get__(self):
 *             self.mMatchesIsoMu24Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesIsoMu24Path_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesIsoMu27Filter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesIsoMu24Path_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8012, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8010
 * 
 *     property mMatchesIsoMu24Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesIsoMu24Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesIsoMu24Path_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mMatchesIsoMu24Path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8015
 * 
 *     property mMatchesIsoMu27Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesIsoMu27Filter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesIsoMu27Filter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_21mMatchesIsoMu27Filter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_21mMatchesIsoMu27Filter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_21mMatchesIsoMu27Filter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_21mMatchesIsoMu27Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8016
 *     property mMatchesIsoMu27Filter:
 *         def __get__(self):
 *             self.mMatchesIsoMu27Filter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesIsoMu27Filter_value
 * 
 */
  (void)(__pyx_v_self->mMatchesIsoMu27Filter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8017
 *         def __get__(self):
 *             self.mMatchesIsoMu27Filter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesIsoMu27Filter_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesIsoMu27Path:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesIsoMu27Filter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8017, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8015
 * 
 *     property mMatchesIsoMu27Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesIsoMu27Filter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesIsoMu27Filter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mMatchesIsoMu27Filter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8020
 * 
 *     property mMatchesIsoMu27Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesIsoMu27Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesIsoMu27Path_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_19mMatchesIsoMu27Path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_19mMatchesIsoMu27Path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_19mMatchesIsoMu27Path___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_19mMatchesIsoMu27Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8021
 *     property mMatchesIsoMu27Path:
 *         def __get__(self):
 *             self.mMatchesIsoMu27Path_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesIsoMu27Path_value
 * 
 */
  (void)(__pyx_v_self->mMatchesIsoMu27Path_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8022
 *         def __get__(self):
 *             self.mMatchesIsoMu27Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesIsoMu27Path_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesMu23e12DZFilter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesIsoMu27Path_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8022, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8020
 * 
 *     property mMatchesIsoMu27Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesIsoMu27Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesIsoMu27Path_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mMatchesIsoMu27Path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8025
 * 
 *     property mMatchesMu23e12DZFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu23e12DZFilter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu23e12DZFilter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_23mMatchesMu23e12DZFilter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_23mMatchesMu23e12DZFilter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_23mMatchesMu23e12DZFilter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_23mMatchesMu23e12DZFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8026
 *     property mMatchesMu23e12DZFilter:
 *         def __get__(self):
 *             self.mMatchesMu23e12DZFilter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesMu23e12DZFilter_value
 * 
 */
  (void)(__pyx_v_self->mMatchesMu23e12DZFilter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8027
 *         def __get__(self):
 *             self.mMatchesMu23e12DZFilter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu23e12DZFilter_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesMu23e12DZPath:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesMu23e12DZFilter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8027, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8025
 * 
 *     property mMatchesMu23e12DZFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu23e12DZFilter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu23e12DZFilter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mMatchesMu23e12DZFilter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8030
 * 
 *     property mMatchesMu23e12DZPath:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu23e12DZPath_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu23e12DZPath_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_21mMatchesMu23e12DZPath_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_21mMatchesMu23e12DZPath_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_21mMatchesMu23e12DZPath___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_21mMatchesMu23e12DZPath___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8031
 *     property mMatchesMu23e12DZPath:
 *         def __get__(self):
 *             self.mMatchesMu23e12DZPath_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesMu23e12DZPath_value
 * 
 */
  (void)(__pyx_v_self->mMatchesMu23e12DZPath_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8032
 *         def __get__(self):
 *             self.mMatchesMu23e12DZPath_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu23e12DZPath_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesMu23e12Filter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesMu23e12DZPath_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8032, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8030
 * 
 *     property mMatchesMu23e12DZPath:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu23e12DZPath_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu23e12DZPath_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mMatchesMu23e12DZPath.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8035
 * 
 *     property mMatchesMu23e12Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu23e12Filter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu23e12Filter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_21mMatchesMu23e12Filter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_21mMatchesMu23e12Filter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_21mMatchesMu23e12Filter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_21mMatchesMu23e12Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8036
 *     property mMatchesMu23e12Filter:
 *         def __get__(self):
 *             self.mMatchesMu23e12Filter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesMu23e12Filter_value
 * 
 */
  (void)(__pyx_v_self->mMatchesMu23e12Filter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8037
 *         def __get__(self):
 *             self.mMatchesMu23e12Filter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu23e12Filter_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesMu23e12Path:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesMu23e12Filter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8037, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8035
 * 
 *     property mMatchesMu23e12Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu23e12Filter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu23e12Filter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mMatchesMu23e12Filter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8040
 * 
 *     property mMatchesMu23e12Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu23e12Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu23e12Path_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_19mMatchesMu23e12Path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_19mMatchesMu23e12Path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_19mMatchesMu23e12Path___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_19mMatchesMu23e12Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8041
 *     property mMatchesMu23e12Path:
 *         def __get__(self):
 *             self.mMatchesMu23e12Path_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesMu23e12Path_value
 * 
 */
  (void)(__pyx_v_self->mMatchesMu23e12Path_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8042
 *         def __get__(self):
 *             self.mMatchesMu23e12Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu23e12Path_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesMu8e23DZFilter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesMu23e12Path_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8042, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8040
 * 
 *     property mMatchesMu23e12Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu23e12Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu23e12Path_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mMatchesMu23e12Path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8045
 * 
 *     property mMatchesMu8e23DZFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu8e23DZFilter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu8e23DZFilter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_22mMatchesMu8e23DZFilter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_22mMatchesMu8e23DZFilter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_22mMatchesMu8e23DZFilter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_22mMatchesMu8e23DZFilter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8046
 *     property mMatchesMu8e23DZFilter:
 *         def __get__(self):
 *             self.mMatchesMu8e23DZFilter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesMu8e23DZFilter_value
 * 
 */
  (void)(__pyx_v_self->mMatchesMu8e23DZFilter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8047
 *         def __get__(self):
 *             self.mMatchesMu8e23DZFilter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu8e23DZFilter_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesMu8e23DZPath:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesMu8e23DZFilter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8047, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8045
 * 
 *     property mMatchesMu8e23DZFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu8e23DZFilter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu8e23DZFilter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mMatchesMu8e23DZFilter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8050
 * 
 *     property mMatchesMu8e23DZPath:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu8e23DZPath_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu8e23DZPath_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20mMatchesMu8e23DZPath_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20mMatchesMu8e23DZPath_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20mMatchesMu8e23DZPath___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20mMatchesMu8e23DZPath___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8051
 *     property mMatchesMu8e23DZPath:
 *         def __get__(self):
 *             self.mMatchesMu8e23DZPath_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesMu8e23DZPath_value
 * 
 */
  (void)(__pyx_v_self->mMatchesMu8e23DZPath_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8052
 *         def __get__(self):
 *             self.mMatchesMu8e23DZPath_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu8e23DZPath_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesMu8e23Filter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesMu8e23DZPath_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8052, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8050
 * 
 *     property mMatchesMu8e23DZPath:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu8e23DZPath_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu8e23DZPath_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mMatchesMu8e23DZPath.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8055
 * 
 *     property mMatchesMu8e23Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu8e23Filter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu8e23Filter_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_20mMatchesMu8e23Filter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_20mMatchesMu8e23Filter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_20mMatchesMu8e23Filter___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_20mMatchesMu8e23Filter___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8056
 *     property mMatchesMu8e23Filter:
 *         def __get__(self):
 *             self.mMatchesMu8e23Filter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesMu8e23Filter_value
 * 
 */
  (void)(__pyx_v_self->mMatchesMu8e23Filter_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8057
 *         def __get__(self):
 *             self.mMatchesMu8e23Filter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu8e23Filter_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesMu8e23Path:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesMu8e23Filter_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8057, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8055
 * 
 *     property mMatchesMu8e23Filter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu8e23Filter_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu8e23Filter_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mMatchesMu8e23Filter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8060
 * 
 *     property mMatchesMu8e23Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu8e23Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu8e23Path_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_18mMatchesMu8e23Path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_18mMatchesMu8e23Path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_18mMatchesMu8e23Path___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_18mMatchesMu8e23Path___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8061
 *     property mMatchesMu8e23Path:
 *         def __get__(self):
 *             self.mMatchesMu8e23Path_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesMu8e23Path_value
 * 
 */
  (void)(__pyx_v_self->mMatchesMu8e23Path_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8062
 *         def __get__(self):
 *             self.mMatchesMu8e23Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu8e23Path_value             # <<<<<<<<<<<<<<
 * 
 *     property mPFIDLoose:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesMu8e23Path_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8062, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8060
 * 
 *     property mMatchesMu8e23Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu8e23Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu8e23Path_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mMatchesMu8e23Path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8065
 * 
 *     property mPFIDLoose:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFIDLoose_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDLoose_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10mPFIDLoose_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10mPFIDLoose_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10mPFIDLoose___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10mPFIDLoose___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8066
 *     property mPFIDLoose:
 *         def __get__(self):
 *             self.mPFIDLoose_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPFIDLoose_value
 * 
 */
  (void)(__pyx_v_self->mPFIDLoose_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8067
 *         def __get__(self):
 *             self.mPFIDLoose_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDLoose_value             # <<<<<<<<<<<<<<
 * 
 *     property mPFIDMedium:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPFIDLoose_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8065
 * 
 *     property mPFIDLoose:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFIDLoose_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDLoose_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mPFIDLoose.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8070
 * 
 *     property mPFIDMedium:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFIDMedium_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDMedium_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11mPFIDMedium_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11mPFIDMedium_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11mPFIDMedium___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11mPFIDMedium___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8071
 *     property mPFIDMedium:
 *         def __get__(self):
 *             self.mPFIDMedium_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPFIDMedium_value
 * 
 */
  (void)(__pyx_v_self->mPFIDMedium_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8072
 *         def __get__(self):
 *             self.mPFIDMedium_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDMedium_value             # <<<<<<<<<<<<<<
 * 
 *     property mPFIDTight:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPFIDMedium_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8072, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8070
 * 
 *     property mPFIDMedium:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFIDMedium_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDMedium_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mPFIDMedium.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8075
 * 
 *     property mPFIDTight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFIDTight_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDTight_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10mPFIDTight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10mPFIDTight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10mPFIDTight___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10mPFIDTight___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8076
 *     property mPFIDTight:
 *         def __get__(self):
 *             self.mPFIDTight_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPFIDTight_value
 * 
 */
  (void)(__pyx_v_self->mPFIDTight_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8077
 *         def __get__(self):
 *             self.mPFIDTight_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDTight_value             # <<<<<<<<<<<<<<
 * 
 *     property mPVDXY:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPFIDTight_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8077, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8075
 * 
 *     property mPFIDTight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFIDTight_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDTight_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mPFIDTight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8080
 * 
 *     property mPVDXY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPVDXY_branch.GetEntry(self.localentry, 0)
 *             return self.mPVDXY_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6mPVDXY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6mPVDXY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6mPVDXY___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6mPVDXY___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8081
 *     property mPVDXY:
 *         def __get__(self):
 *             self.mPVDXY_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPVDXY_value
 * 
 */
  (void)(__pyx_v_self->mPVDXY_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8082
 *         def __get__(self):
 *             self.mPVDXY_branch.GetEntry(self.localentry, 0)
 *             return self.mPVDXY_value             # <<<<<<<<<<<<<<
 * 
 *     property mPVDZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPVDXY_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8082, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8080
 * 
 *     property mPVDXY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPVDXY_branch.GetEntry(self.localentry, 0)
 *             return self.mPVDXY_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mPVDXY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8085
 * 
 *     property mPVDZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPVDZ_branch.GetEntry(self.localentry, 0)
 *             return self.mPVDZ_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5mPVDZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5mPVDZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5mPVDZ___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5mPVDZ___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8086
 *     property mPVDZ:
 *         def __get__(self):
 *             self.mPVDZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPVDZ_value
 * 
 */
  (void)(__pyx_v_self->mPVDZ_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8087
 *         def __get__(self):
 *             self.mPVDZ_branch.GetEntry(self.localentry, 0)
 *             return self.mPVDZ_value             # <<<<<<<<<<<<<<
 * 
 *     property mPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPVDZ_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8087, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8085
 * 
 *     property mPVDZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPVDZ_branch.GetEntry(self.localentry, 0)
 *             return self.mPVDZ_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mPVDZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8090
 * 
 *     property mPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mPhi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_4mPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_4mPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_4mPhi___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_4mPhi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8091
 *     property mPhi:
 *         def __get__(self):
 *             self.mPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPhi_value
 * 
 */
  (void)(__pyx_v_self->mPhi_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8092
 *         def __get__(self):
 *             self.mPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property mPt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPhi_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8092, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8090
 * 
 *     property mPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mPhi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8095
 * 
 *     property mPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPt_branch.GetEntry(self.localentry, 0)
 *             return self.mPt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_3mPt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_3mPt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_3mPt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_3mPt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8096
 *     property mPt:
 *         def __get__(self):
 *             self.mPt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPt_value
 * 
 */
  (void)(__pyx_v_self->mPt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8097
 *         def __get__(self):
 *             self.mPt_branch.GetEntry(self.localentry, 0)
 *             return self.mPt_value             # <<<<<<<<<<<<<<
 * 
 *     property mRelPFIsoDBDefaultR04:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8097, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8095
 * 
 *     property mPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPt_branch.GetEntry(self.localentry, 0)
 *             return self.mPt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mPt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8100
 * 
 *     property mRelPFIsoDBDefaultR04:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mRelPFIsoDBDefaultR04_branch.GetEntry(self.localentry, 0)
 *             return self.mRelPFIsoDBDefaultR04_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_21mRelPFIsoDBDefaultR04_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_21mRelPFIsoDBDefaultR04_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_21mRelPFIsoDBDefaultR04___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_21mRelPFIsoDBDefaultR04___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8101
 *     property mRelPFIsoDBDefaultR04:
 *         def __get__(self):
 *             self.mRelPFIsoDBDefaultR04_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mRelPFIsoDBDefaultR04_value
 * 
 */
  (void)(__pyx_v_self->mRelPFIsoDBDefaultR04_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8102
 *         def __get__(self):
 *             self.mRelPFIsoDBDefaultR04_branch.GetEntry(self.localentry, 0)
 *             return self.mRelPFIsoDBDefaultR04_value             # <<<<<<<<<<<<<<
 * 
 *     property mSIP2D:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mRelPFIsoDBDefaultR04_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8100
 * 
 *     property mRelPFIsoDBDefaultR04:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mRelPFIsoDBDefaultR04_branch.GetEntry(self.localentry, 0)
 *             return self.mRelPFIsoDBDefaultR04_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mRelPFIsoDBDefaultR04.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8105
 * 
 *     property mSIP2D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mSIP2D_branch.GetEntry(self.localentry, 0)
 *             return self.mSIP2D_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6mSIP2D_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6mSIP2D_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6mSIP2D___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6mSIP2D___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8106
 *     property mSIP2D:
 *         def __get__(self):
 *             self.mSIP2D_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mSIP2D_value
 * 
 */
  (void)(__pyx_v_self->mSIP2D_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8107
 *         def __get__(self):
 *             self.mSIP2D_branch.GetEntry(self.localentry, 0)
 *             return self.mSIP2D_value             # <<<<<<<<<<<<<<
 * 
 *     property mSIP3D:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mSIP2D_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8105
 * 
 *     property mSIP2D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mSIP2D_branch.GetEntry(self.localentry, 0)
 *             return self.mSIP2D_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mSIP2D.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8110
 * 
 *     property mSIP3D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mSIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.mSIP3D_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6mSIP3D_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6mSIP3D_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6mSIP3D___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6mSIP3D___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8111
 *     property mSIP3D:
 *         def __get__(self):
 *             self.mSIP3D_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mSIP3D_value
 * 
 */
  (void)(__pyx_v_self->mSIP3D_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8112
 *         def __get__(self):
 *             self.mSIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.mSIP3D_value             # <<<<<<<<<<<<<<
 * 
 *     property mVZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mSIP3D_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8110
 * 
 *     property mSIP3D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mSIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.mSIP3D_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mSIP3D.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8115
 * 
 *     property mVZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mVZ_branch.GetEntry(self.localentry, 0)
 *             return self.mVZ_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_3mVZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_3mVZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_3mVZ___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_3mVZ___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8116
 *     property mVZ:
 *         def __get__(self):
 *             self.mVZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mVZ_value
 * 
 */
  (void)(__pyx_v_self->mVZ_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8117
 *         def __get__(self):
 *             self.mVZ_branch.GetEntry(self.localentry, 0)
 *             return self.mVZ_value             # <<<<<<<<<<<<<<
 * 
 *     property mZTTGenMatching:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mVZ_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8115
 * 
 *     property mVZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mVZ_branch.GetEntry(self.localentry, 0)
 *             return self.mVZ_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mVZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8120
 * 
 *     property mZTTGenMatching:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mZTTGenMatching_branch.GetEntry(self.localentry, 0)
 *             return self.mZTTGenMatching_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_15mZTTGenMatching_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_15mZTTGenMatching_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_15mZTTGenMatching___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_15mZTTGenMatching___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8121
 *     property mZTTGenMatching:
 *         def __get__(self):
 *             self.mZTTGenMatching_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mZTTGenMatching_value
 * 
 */
  (void)(__pyx_v_self->mZTTGenMatching_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8122
 *         def __get__(self):
 *             self.mZTTGenMatching_branch.GetEntry(self.localentry, 0)
 *             return self.mZTTGenMatching_value             # <<<<<<<<<<<<<<
 * 
 *     property mu12e23DZPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mZTTGenMatching_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8120
 * 
 *     property mZTTGenMatching:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mZTTGenMatching_branch.GetEntry(self.localentry, 0)
 *             return self.mZTTGenMatching_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mZTTGenMatching.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8125
 * 
 *     property mu12e23DZPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu12e23DZPass_branch.GetEntry(self.localentry, 0)
 *             return self.mu12e23DZPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_13mu12e23DZPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_13mu12e23DZPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_13mu12e23DZPass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_13mu12e23DZPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8126
 *     property mu12e23DZPass:
 *         def __get__(self):
 *             self.mu12e23DZPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu12e23DZPass_value
 * 
 */
  (void)(__pyx_v_self->mu12e23DZPass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8127
 *         def __get__(self):
 *             self.mu12e23DZPass_branch.GetEntry(self.localentry, 0)
 *             return self.mu12e23DZPass_value             # <<<<<<<<<<<<<<
 * 
 *     property mu12e23Pass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu12e23DZPass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8125
 * 
 *     property mu12e23DZPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu12e23DZPass_branch.GetEntry(self.localentry, 0)
 *             return self.mu12e23DZPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mu12e23DZPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8130
 * 
 *     property mu12e23Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu12e23Pass_branch.GetEntry(self.localentry, 0)
 *             return self.mu12e23Pass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11mu12e23Pass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11mu12e23Pass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11mu12e23Pass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11mu12e23Pass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8131
 *     property mu12e23Pass:
 *         def __get__(self):
 *             self.mu12e23Pass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu12e23Pass_value
 * 
 */
  (void)(__pyx_v_self->mu12e23Pass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8132
 *         def __get__(self):
 *             self.mu12e23Pass_branch.GetEntry(self.localentry, 0)
 *             return self.mu12e23Pass_value             # <<<<<<<<<<<<<<
 * 
 *     property mu23e12DZPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu12e23Pass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8130
 * 
 *     property mu12e23Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu12e23Pass_branch.GetEntry(self.localentry, 0)
 *             return self.mu12e23Pass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mu12e23Pass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8135
 * 
 *     property mu23e12DZPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu23e12DZPass_branch.GetEntry(self.localentry, 0)
 *             return self.mu23e12DZPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_13mu23e12DZPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_13mu23e12DZPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_13mu23e12DZPass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_13mu23e12DZPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8136
 *     property mu23e12DZPass:
 *         def __get__(self):
 *             self.mu23e12DZPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu23e12DZPass_value
 * 
 */
  (void)(__pyx_v_self->mu23e12DZPass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8137
 *         def __get__(self):
 *             self.mu23e12DZPass_branch.GetEntry(self.localentry, 0)
 *             return self.mu23e12DZPass_value             # <<<<<<<<<<<<<<
 * 
 *     property mu23e12Pass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu23e12DZPass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8135
 * 
 *     property mu23e12DZPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu23e12DZPass_branch.GetEntry(self.localentry, 0)
 *             return self.mu23e12DZPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mu23e12DZPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8140
 * 
 *     property mu23e12Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu23e12Pass_branch.GetEntry(self.localentry, 0)
 *             return self.mu23e12Pass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11mu23e12Pass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11mu23e12Pass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11mu23e12Pass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11mu23e12Pass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8141
 *     property mu23e12Pass:
 *         def __get__(self):
 *             self.mu23e12Pass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu23e12Pass_value
 * 
 */
  (void)(__pyx_v_self->mu23e12Pass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8142
 *         def __get__(self):
 *             self.mu23e12Pass_branch.GetEntry(self.localentry, 0)
 *             return self.mu23e12Pass_value             # <<<<<<<<<<<<<<
 * 
 *     property mu8e23DZPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu23e12Pass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8140
 * 
 *     property mu23e12Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu23e12Pass_branch.GetEntry(self.localentry, 0)
 *             return self.mu23e12Pass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mu23e12Pass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8145
 * 
 *     property mu8e23DZPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu8e23DZPass_branch.GetEntry(self.localentry, 0)
 *             return self.mu8e23DZPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12mu8e23DZPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12mu8e23DZPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12mu8e23DZPass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12mu8e23DZPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8146
 *     property mu8e23DZPass:
 *         def __get__(self):
 *             self.mu8e23DZPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu8e23DZPass_value
 * 
 */
  (void)(__pyx_v_self->mu8e23DZPass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8147
 *         def __get__(self):
 *             self.mu8e23DZPass_branch.GetEntry(self.localentry, 0)
 *             return self.mu8e23DZPass_value             # <<<<<<<<<<<<<<
 * 
 *     property mu8e23Pass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu8e23DZPass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8145
 * 
 *     property mu8e23DZPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu8e23DZPass_branch.GetEntry(self.localentry, 0)
 *             return self.mu8e23DZPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mu8e23DZPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8150
 * 
 *     property mu8e23Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu8e23Pass_branch.GetEntry(self.localentry, 0)
 *             return self.mu8e23Pass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10mu8e23Pass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10mu8e23Pass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10mu8e23Pass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10mu8e23Pass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8151
 *     property mu8e23Pass:
 *         def __get__(self):
 *             self.mu8e23Pass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu8e23Pass_value
 * 
 */
  (void)(__pyx_v_self->mu8e23Pass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8152
 *         def __get__(self):
 *             self.mu8e23Pass_branch.GetEntry(self.localentry, 0)
 *             return self.mu8e23Pass_value             # <<<<<<<<<<<<<<
 * 
 *     property muGlbIsoVetoPt10:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu8e23Pass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8150
 * 
 *     property mu8e23Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu8e23Pass_branch.GetEntry(self.localentry, 0)
 *             return self.mu8e23Pass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.mu8e23Pass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8155
 * 
 *     property muGlbIsoVetoPt10:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muGlbIsoVetoPt10_branch.GetEntry(self.localentry, 0)
 *             return self.muGlbIsoVetoPt10_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16muGlbIsoVetoPt10_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16muGlbIsoVetoPt10_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16muGlbIsoVetoPt10___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16muGlbIsoVetoPt10___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8156
 *     property muGlbIsoVetoPt10:
 *         def __get__(self):
 *             self.muGlbIsoVetoPt10_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.muGlbIsoVetoPt10_value
 * 
 */
  (void)(__pyx_v_self->muGlbIsoVetoPt10_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8157
 *         def __get__(self):
 *             self.muGlbIsoVetoPt10_branch.GetEntry(self.localentry, 0)
 *             return self.muGlbIsoVetoPt10_value             # <<<<<<<<<<<<<<
 * 
 *     property muVetoZTTp001dxyz:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->muGlbIsoVetoPt10_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8155
 * 
 *     property muGlbIsoVetoPt10:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muGlbIsoVetoPt10_branch.GetEntry(self.localentry, 0)
 *             return self.muGlbIsoVetoPt10_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.muGlbIsoVetoPt10.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8160
 * 
 *     property muVetoZTTp001dxyz:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muVetoZTTp001dxyz_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoZTTp001dxyz_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_17muVetoZTTp001dxyz_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_17muVetoZTTp001dxyz_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_17muVetoZTTp001dxyz___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_17muVetoZTTp001dxyz___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8161
 *     property muVetoZTTp001dxyz:
 *         def __get__(self):
 *             self.muVetoZTTp001dxyz_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.muVetoZTTp001dxyz_value
 * 
 */
  (void)(__pyx_v_self->muVetoZTTp001dxyz_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8162
 *         def __get__(self):
 *             self.muVetoZTTp001dxyz_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoZTTp001dxyz_value             # <<<<<<<<<<<<<<
 * 
 *     property nTruePU:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->muVetoZTTp001dxyz_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8160
 * 
 *     property muVetoZTTp001dxyz:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muVetoZTTp001dxyz_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoZTTp001dxyz_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.muVetoZTTp001dxyz.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8165
 * 
 *     property nTruePU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.nTruePU_branch.GetEntry(self.localentry, 0)
 *             return self.nTruePU_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_7nTruePU_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_7nTruePU_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_7nTruePU___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_7nTruePU___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8166
 *     property nTruePU:
 *         def __get__(self):
 *             self.nTruePU_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.nTruePU_value
 * 
 */
  (void)(__pyx_v_self->nTruePU_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8167
 *         def __get__(self):
 *             self.nTruePU_branch.GetEntry(self.localentry, 0)
 *             return self.nTruePU_value             # <<<<<<<<<<<<<<
 * 
 *     property npNLO:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->nTruePU_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8165
 * 
 *     property nTruePU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.nTruePU_branch.GetEntry(self.localentry, 0)
 *             return self.nTruePU_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.nTruePU.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8170
 * 
 *     property npNLO:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.npNLO_branch.GetEntry(self.localentry, 0)
 *             return self.npNLO_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5npNLO_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5npNLO_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5npNLO___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5npNLO___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8171
 *     property npNLO:
 *         def __get__(self):
 *             self.npNLO_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.npNLO_value
 * 
 */
  (void)(__pyx_v_self->npNLO_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8172
 *         def __get__(self):
 *             self.npNLO_branch.GetEntry(self.localentry, 0)
 *             return self.npNLO_value             # <<<<<<<<<<<<<<
 * 
 *     property numGenJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->npNLO_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8170
 * 
 *     property npNLO:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.npNLO_branch.GetEntry(self.localentry, 0)
 *             return self.npNLO_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.npNLO.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8175
 * 
 *     property numGenJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.numGenJets_branch.GetEntry(self.localentry, 0)
 *             return self.numGenJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10numGenJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10numGenJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10numGenJets___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10numGenJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8176
 *     property numGenJets:
 *         def __get__(self):
 *             self.numGenJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.numGenJets_value
 * 
 */
  (void)(__pyx_v_self->numGenJets_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8177
 *         def __get__(self):
 *             self.numGenJets_branch.GetEntry(self.localentry, 0)
 *             return self.numGenJets_value             # <<<<<<<<<<<<<<
 * 
 *     property nvtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->numGenJets_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8175
 * 
 *     property numGenJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.numGenJets_branch.GetEntry(self.localentry, 0)
 *             return self.numGenJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.numGenJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8180
 * 
 *     property nvtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.nvtx_branch.GetEntry(self.localentry, 0)
 *             return self.nvtx_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_4nvtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_4nvtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_4nvtx___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_4nvtx___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8181
 *     property nvtx:
 *         def __get__(self):
 *             self.nvtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.nvtx_value
 * 
 */
  (void)(__pyx_v_self->nvtx_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8182
 *         def __get__(self):
 *             self.nvtx_branch.GetEntry(self.localentry, 0)
 *             return self.nvtx_value             # <<<<<<<<<<<<<<
 * 
 *     property prefiring_weight:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->nvtx_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8180
 * 
 *     property nvtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.nvtx_branch.GetEntry(self.localentry, 0)
 *             return self.nvtx_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.nvtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8185
 * 
 *     property prefiring_weight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.prefiring_weight_branch.GetEntry(self.localentry, 0)
 *             return self.prefiring_weight_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16prefiring_weight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16prefiring_weight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16prefiring_weight___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16prefiring_weight___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8186
 *     property prefiring_weight:
 *         def __get__(self):
 *             self.prefiring_weight_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.prefiring_weight_value
 * 
 */
  (void)(__pyx_v_self->prefiring_weight_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8187
 *         def __get__(self):
 *             self.prefiring_weight_branch.GetEntry(self.localentry, 0)
 *             return self.prefiring_weight_value             # <<<<<<<<<<<<<<
 * 
 *     property prefiring_weight_down:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->prefiring_weight_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8185
 * 
 *     property prefiring_weight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.prefiring_weight_branch.GetEntry(self.localentry, 0)
 *             return self.prefiring_weight_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.prefiring_weight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8190
 * 
 *     property prefiring_weight_down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.prefiring_weight_down_branch.GetEntry(self.localentry, 0)
 *             return self.prefiring_weight_down_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_21prefiring_weight_down_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_21prefiring_weight_down_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_21prefiring_weight_down___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_21prefiring_weight_down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8191
 *     property prefiring_weight_down:
 *         def __get__(self):
 *             self.prefiring_weight_down_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.prefiring_weight_down_value
 * 
 */
  (void)(__pyx_v_self->prefiring_weight_down_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8192
 *         def __get__(self):
 *             self.prefiring_weight_down_branch.GetEntry(self.localentry, 0)
 *             return self.prefiring_weight_down_value             # <<<<<<<<<<<<<<
 * 
 *     property prefiring_weight_up:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->prefiring_weight_down_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8192, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8190
 * 
 *     property prefiring_weight_down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.prefiring_weight_down_branch.GetEntry(self.localentry, 0)
 *             return self.prefiring_weight_down_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.prefiring_weight_down.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8195
 * 
 *     property prefiring_weight_up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.prefiring_weight_up_branch.GetEntry(self.localentry, 0)
 *             return self.prefiring_weight_up_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_19prefiring_weight_up_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_19prefiring_weight_up_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_19prefiring_weight_up___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_19prefiring_weight_up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8196
 *     property prefiring_weight_up:
 *         def __get__(self):
 *             self.prefiring_weight_up_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.prefiring_weight_up_value
 * 
 */
  (void)(__pyx_v_self->prefiring_weight_up_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8197
 *         def __get__(self):
 *             self.prefiring_weight_up_branch.GetEntry(self.localentry, 0)
 *             return self.prefiring_weight_up_value             # <<<<<<<<<<<<<<
 * 
 *     property processID:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->prefiring_weight_up_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8195
 * 
 *     property prefiring_weight_up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.prefiring_weight_up_branch.GetEntry(self.localentry, 0)
 *             return self.prefiring_weight_up_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.prefiring_weight_up.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8200
 * 
 *     property processID:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.processID_branch.GetEntry(self.localentry, 0)
 *             return self.processID_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_9processID_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_9processID_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_9processID___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_9processID___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8201
 *     property processID:
 *         def __get__(self):
 *             self.processID_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.processID_value
 * 
 */
  (void)(__pyx_v_self->processID_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8202
 *         def __get__(self):
 *             self.processID_branch.GetEntry(self.localentry, 0)
 *             return self.processID_value             # <<<<<<<<<<<<<<
 * 
 *     property puppiMetEt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->processID_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8200
 * 
 *     property processID:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.processID_branch.GetEntry(self.localentry, 0)
 *             return self.processID_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.processID.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8205
 * 
 *     property puppiMetEt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.puppiMetEt_branch.GetEntry(self.localentry, 0)
 *             return self.puppiMetEt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10puppiMetEt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10puppiMetEt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10puppiMetEt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10puppiMetEt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8206
 *     property puppiMetEt:
 *         def __get__(self):
 *             self.puppiMetEt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.puppiMetEt_value
 * 
 */
  (void)(__pyx_v_self->puppiMetEt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8207
 *         def __get__(self):
 *             self.puppiMetEt_branch.GetEntry(self.localentry, 0)
 *             return self.puppiMetEt_value             # <<<<<<<<<<<<<<
 * 
 *     property puppiMetPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->puppiMetEt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8205
 * 
 *     property puppiMetEt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.puppiMetEt_branch.GetEntry(self.localentry, 0)
 *             return self.puppiMetEt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.puppiMetEt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8210
 * 
 *     property puppiMetPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.puppiMetPhi_branch.GetEntry(self.localentry, 0)
 *             return self.puppiMetPhi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11puppiMetPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11puppiMetPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11puppiMetPhi___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11puppiMetPhi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8211
 *     property puppiMetPhi:
 *         def __get__(self):
 *             self.puppiMetPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.puppiMetPhi_value
 * 
 */
  (void)(__pyx_v_self->puppiMetPhi_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8212
 *         def __get__(self):
 *             self.puppiMetPhi_branch.GetEntry(self.localentry, 0)
 *             return self.puppiMetPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property pvChi2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->puppiMetPhi_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8210
 * 
 *     property puppiMetPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.puppiMetPhi_branch.GetEntry(self.localentry, 0)
 *             return self.puppiMetPhi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.puppiMetPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8215
 * 
 *     property pvChi2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvChi2_branch.GetEntry(self.localentry, 0)
 *             return self.pvChi2_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6pvChi2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6pvChi2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6pvChi2___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6pvChi2___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8216
 *     property pvChi2:
 *         def __get__(self):
 *             self.pvChi2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvChi2_value
 * 
 */
  (void)(__pyx_v_self->pvChi2_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8217
 *         def __get__(self):
 *             self.pvChi2_branch.GetEntry(self.localentry, 0)
 *             return self.pvChi2_value             # <<<<<<<<<<<<<<
 * 
 *     property pvDX:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvChi2_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8215
 * 
 *     property pvChi2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvChi2_branch.GetEntry(self.localentry, 0)
 *             return self.pvChi2_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.pvChi2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8220
 * 
 *     property pvDX:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvDX_branch.GetEntry(self.localentry, 0)
 *             return self.pvDX_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_4pvDX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_4pvDX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_4pvDX___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_4pvDX___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8221
 *     property pvDX:
 *         def __get__(self):
 *             self.pvDX_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvDX_value
 * 
 */
  (void)(__pyx_v_self->pvDX_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8222
 *         def __get__(self):
 *             self.pvDX_branch.GetEntry(self.localentry, 0)
 *             return self.pvDX_value             # <<<<<<<<<<<<<<
 * 
 *     property pvDY:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvDX_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8220
 * 
 *     property pvDX:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvDX_branch.GetEntry(self.localentry, 0)
 *             return self.pvDX_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.pvDX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8225
 * 
 *     property pvDY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvDY_branch.GetEntry(self.localentry, 0)
 *             return self.pvDY_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_4pvDY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_4pvDY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_4pvDY___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_4pvDY___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8226
 *     property pvDY:
 *         def __get__(self):
 *             self.pvDY_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvDY_value
 * 
 */
  (void)(__pyx_v_self->pvDY_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8227
 *         def __get__(self):
 *             self.pvDY_branch.GetEntry(self.localentry, 0)
 *             return self.pvDY_value             # <<<<<<<<<<<<<<
 * 
 *     property pvDZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvDY_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8225
 * 
 *     property pvDY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvDY_branch.GetEntry(self.localentry, 0)
 *             return self.pvDY_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.pvDY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8230
 * 
 *     property pvDZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvDZ_branch.GetEntry(self.localentry, 0)
 *             return self.pvDZ_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_4pvDZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_4pvDZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_4pvDZ___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_4pvDZ___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8231
 *     property pvDZ:
 *         def __get__(self):
 *             self.pvDZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvDZ_value
 * 
 */
  (void)(__pyx_v_self->pvDZ_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8232
 *         def __get__(self):
 *             self.pvDZ_branch.GetEntry(self.localentry, 0)
 *             return self.pvDZ_value             # <<<<<<<<<<<<<<
 * 
 *     property pvIsFake:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvDZ_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8232, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8230
 * 
 *     property pvDZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvDZ_branch.GetEntry(self.localentry, 0)
 *             return self.pvDZ_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.pvDZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8235
 * 
 *     property pvIsFake:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvIsFake_branch.GetEntry(self.localentry, 0)
 *             return self.pvIsFake_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_8pvIsFake_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_8pvIsFake_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_8pvIsFake___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_8pvIsFake___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8236
 *     property pvIsFake:
 *         def __get__(self):
 *             self.pvIsFake_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvIsFake_value
 * 
 */
  (void)(__pyx_v_self->pvIsFake_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8237
 *         def __get__(self):
 *             self.pvIsFake_branch.GetEntry(self.localentry, 0)
 *             return self.pvIsFake_value             # <<<<<<<<<<<<<<
 * 
 *     property pvIsValid:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->pvIsFake_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8235
 * 
 *     property pvIsFake:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvIsFake_branch.GetEntry(self.localentry, 0)
 *             return self.pvIsFake_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.pvIsFake.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8240
 * 
 *     property pvIsValid:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvIsValid_branch.GetEntry(self.localentry, 0)
 *             return self.pvIsValid_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_9pvIsValid_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_9pvIsValid_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_9pvIsValid___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_9pvIsValid___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8241
 *     property pvIsValid:
 *         def __get__(self):
 *             self.pvIsValid_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvIsValid_value
 * 
 */
  (void)(__pyx_v_self->pvIsValid_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8242
 *         def __get__(self):
 *             self.pvIsValid_branch.GetEntry(self.localentry, 0)
 *             return self.pvIsValid_value             # <<<<<<<<<<<<<<
 * 
 *     property pvNormChi2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->pvIsValid_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8240
 * 
 *     property pvIsValid:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvIsValid_branch.GetEntry(self.localentry, 0)
 *             return self.pvIsValid_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.pvIsValid.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8245
 * 
 *     property pvNormChi2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvNormChi2_branch.GetEntry(self.localentry, 0)
 *             return self.pvNormChi2_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10pvNormChi2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10pvNormChi2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10pvNormChi2___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10pvNormChi2___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8246
 *     property pvNormChi2:
 *         def __get__(self):
 *             self.pvNormChi2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvNormChi2_value
 * 
 */
  (void)(__pyx_v_self->pvNormChi2_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8247
 *         def __get__(self):
 *             self.pvNormChi2_branch.GetEntry(self.localentry, 0)
 *             return self.pvNormChi2_value             # <<<<<<<<<<<<<<
 * 
 *     property pvRho:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvNormChi2_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8245
 * 
 *     property pvNormChi2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvNormChi2_branch.GetEntry(self.localentry, 0)
 *             return self.pvNormChi2_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.pvNormChi2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8250
 * 
 *     property pvRho:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvRho_branch.GetEntry(self.localentry, 0)
 *             return self.pvRho_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5pvRho_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5pvRho_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5pvRho___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5pvRho___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8251
 *     property pvRho:
 *         def __get__(self):
 *             self.pvRho_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvRho_value
 * 
 */
  (void)(__pyx_v_self->pvRho_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8252
 *         def __get__(self):
 *             self.pvRho_branch.GetEntry(self.localentry, 0)
 *             return self.pvRho_value             # <<<<<<<<<<<<<<
 * 
 *     property pvX:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvRho_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8252, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8250
 * 
 *     property pvRho:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvRho_branch.GetEntry(self.localentry, 0)
 *             return self.pvRho_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.pvRho.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8255
 * 
 *     property pvX:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvX_branch.GetEntry(self.localentry, 0)
 *             return self.pvX_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_3pvX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_3pvX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_3pvX___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_3pvX___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8256
 *     property pvX:
 *         def __get__(self):
 *             self.pvX_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvX_value
 * 
 */
  (void)(__pyx_v_self->pvX_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8257
 *         def __get__(self):
 *             self.pvX_branch.GetEntry(self.localentry, 0)
 *             return self.pvX_value             # <<<<<<<<<<<<<<
 * 
 *     property pvY:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvX_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8255
 * 
 *     property pvX:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvX_branch.GetEntry(self.localentry, 0)
 *             return self.pvX_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.pvX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8260
 * 
 *     property pvY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvY_branch.GetEntry(self.localentry, 0)
 *             return self.pvY_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_3pvY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_3pvY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_3pvY___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_3pvY___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8261
 *     property pvY:
 *         def __get__(self):
 *             self.pvY_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvY_value
 * 
 */
  (void)(__pyx_v_self->pvY_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8262
 *         def __get__(self):
 *             self.pvY_branch.GetEntry(self.localentry, 0)
 *             return self.pvY_value             # <<<<<<<<<<<<<<
 * 
 *     property pvZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvY_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8260
 * 
 *     property pvY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvY_branch.GetEntry(self.localentry, 0)
 *             return self.pvY_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.pvY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8265
 * 
 *     property pvZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvZ_branch.GetEntry(self.localentry, 0)
 *             return self.pvZ_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_3pvZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_3pvZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_3pvZ___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_3pvZ___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8266
 *     property pvZ:
 *         def __get__(self):
 *             self.pvZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvZ_value
 * 
 */
  (void)(__pyx_v_self->pvZ_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8267
 *         def __get__(self):
 *             self.pvZ_branch.GetEntry(self.localentry, 0)
 *             return self.pvZ_value             # <<<<<<<<<<<<<<
 * 
 *     property pvndof:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvZ_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8265
 * 
 *     property pvZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvZ_branch.GetEntry(self.localentry, 0)
 *             return self.pvZ_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.pvZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8270
 * 
 *     property pvndof:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvndof_branch.GetEntry(self.localentry, 0)
 *             return self.pvndof_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_6pvndof_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_6pvndof_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_6pvndof___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_6pvndof___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8271
 *     property pvndof:
 *         def __get__(self):
 *             self.pvndof_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvndof_value
 * 
 */
  (void)(__pyx_v_self->pvndof_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8272
 *         def __get__(self):
 *             self.pvndof_branch.GetEntry(self.localentry, 0)
 *             return self.pvndof_value             # <<<<<<<<<<<<<<
 * 
 *     property recoilDaught:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvndof_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8270
 * 
 *     property pvndof:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvndof_branch.GetEntry(self.localentry, 0)
 *             return self.pvndof_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.pvndof.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8275
 * 
 *     property recoilDaught:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.recoilDaught_branch.GetEntry(self.localentry, 0)
 *             return self.recoilDaught_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12recoilDaught_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12recoilDaught_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12recoilDaught___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12recoilDaught___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8276
 *     property recoilDaught:
 *         def __get__(self):
 *             self.recoilDaught_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.recoilDaught_value
 * 
 */
  (void)(__pyx_v_self->recoilDaught_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8277
 *         def __get__(self):
 *             self.recoilDaught_branch.GetEntry(self.localentry, 0)
 *             return self.recoilDaught_value             # <<<<<<<<<<<<<<
 * 
 *     property recoilWithMet:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->recoilDaught_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8275
 * 
 *     property recoilDaught:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.recoilDaught_branch.GetEntry(self.localentry, 0)
 *             return self.recoilDaught_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.recoilDaught.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8280
 * 
 *     property recoilWithMet:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.recoilWithMet_branch.GetEntry(self.localentry, 0)
 *             return self.recoilWithMet_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_13recoilWithMet_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_13recoilWithMet_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_13recoilWithMet___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_13recoilWithMet___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8281
 *     property recoilWithMet:
 *         def __get__(self):
 *             self.recoilWithMet_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.recoilWithMet_value
 * 
 */
  (void)(__pyx_v_self->recoilWithMet_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8282
 *         def __get__(self):
 *             self.recoilWithMet_branch.GetEntry(self.localentry, 0)
 *             return self.recoilWithMet_value             # <<<<<<<<<<<<<<
 * 
 *     property rho:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->recoilWithMet_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8280
 * 
 *     property recoilWithMet:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.recoilWithMet_branch.GetEntry(self.localentry, 0)
 *             return self.recoilWithMet_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.recoilWithMet.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8285
 * 
 *     property rho:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.rho_branch.GetEntry(self.localentry, 0)
 *             return self.rho_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_3rho_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_3rho_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_3rho___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_3rho___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8286
 *     property rho:
 *         def __get__(self):
 *             self.rho_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.rho_value
 * 
 */
  (void)(__pyx_v_self->rho_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8287
 *         def __get__(self):
 *             self.rho_branch.GetEntry(self.localentry, 0)
 *             return self.rho_value             # <<<<<<<<<<<<<<
 * 
 *     property run:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->rho_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8285
 * 
 *     property rho:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.rho_branch.GetEntry(self.localentry, 0)
 *             return self.rho_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.rho.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8290
 * 
 *     property run:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.run_branch.GetEntry(self.localentry, 0)
 *             return self.run_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_3run_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_3run_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_3run___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_3run___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8291
 *     property run:
 *         def __get__(self):
 *             self.run_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.run_value
 * 
 */
  (void)(__pyx_v_self->run_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8292
 *         def __get__(self):
 *             self.run_branch.GetEntry(self.localentry, 0)
 *             return self.run_value             # <<<<<<<<<<<<<<
 * 
 *     property singleE25eta2p1TightPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->run_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8290
 * 
 *     property run:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.run_branch.GetEntry(self.localentry, 0)
 *             return self.run_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.run.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8295
 * 
 *     property singleE25eta2p1TightPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleE25eta2p1TightPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleE25eta2p1TightPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_24singleE25eta2p1TightPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_24singleE25eta2p1TightPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_24singleE25eta2p1TightPass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_24singleE25eta2p1TightPass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8296
 *     property singleE25eta2p1TightPass:
 *         def __get__(self):
 *             self.singleE25eta2p1TightPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleE25eta2p1TightPass_value
 * 
 */
  (void)(__pyx_v_self->singleE25eta2p1TightPass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8297
 *         def __get__(self):
 *             self.singleE25eta2p1TightPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleE25eta2p1TightPass_value             # <<<<<<<<<<<<<<
 * 
 *     property tauVetoPt20LooseMVALTVtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleE25eta2p1TightPass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8295
 * 
 *     property singleE25eta2p1TightPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleE25eta2p1TightPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleE25eta2p1TightPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.singleE25eta2p1TightPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8300
 * 
 *     property tauVetoPt20LooseMVALTVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20LooseMVALTVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20LooseMVALTVtx_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_24tauVetoPt20LooseMVALTVtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_24tauVetoPt20LooseMVALTVtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_24tauVetoPt20LooseMVALTVtx___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_24tauVetoPt20LooseMVALTVtx___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8301
 *     property tauVetoPt20LooseMVALTVtx:
 *         def __get__(self):
 *             self.tauVetoPt20LooseMVALTVtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tauVetoPt20LooseMVALTVtx_value
 * 
 */
  (void)(__pyx_v_self->tauVetoPt20LooseMVALTVtx_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8302
 *         def __get__(self):
 *             self.tauVetoPt20LooseMVALTVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20LooseMVALTVtx_value             # <<<<<<<<<<<<<<
 * 
 *     property tauVetoPtDeepVtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tauVetoPt20LooseMVALTVtx_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8302, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8300
 * 
 *     property tauVetoPt20LooseMVALTVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20LooseMVALTVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20LooseMVALTVtx_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.tauVetoPt20LooseMVALTVtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8305
 * 
 *     property tauVetoPtDeepVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPtDeepVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPtDeepVtx_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_16tauVetoPtDeepVtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_16tauVetoPtDeepVtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_16tauVetoPtDeepVtx___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_16tauVetoPtDeepVtx___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8306
 *     property tauVetoPtDeepVtx:
 *         def __get__(self):
 *             self.tauVetoPtDeepVtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tauVetoPtDeepVtx_value
 * 
 */
  (void)(__pyx_v_self->tauVetoPtDeepVtx_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8307
 *         def __get__(self):
 *             self.tauVetoPtDeepVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPtDeepVtx_value             # <<<<<<<<<<<<<<
 * 
 *     property topQuarkPt1:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tauVetoPtDeepVtx_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8305
 * 
 *     property tauVetoPtDeepVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPtDeepVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPtDeepVtx_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.tauVetoPtDeepVtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8310
 * 
 *     property topQuarkPt1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.topQuarkPt1_branch.GetEntry(self.localentry, 0)
 *             return self.topQuarkPt1_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11topQuarkPt1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11topQuarkPt1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11topQuarkPt1___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11topQuarkPt1___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8311
 *     property topQuarkPt1:
 *         def __get__(self):
 *             self.topQuarkPt1_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.topQuarkPt1_value
 * 
 */
  (void)(__pyx_v_self->topQuarkPt1_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8312
 *         def __get__(self):
 *             self.topQuarkPt1_branch.GetEntry(self.localentry, 0)
 *             return self.topQuarkPt1_value             # <<<<<<<<<<<<<<
 * 
 *     property topQuarkPt2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->topQuarkPt1_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8312, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8310
 * 
 *     property topQuarkPt1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.topQuarkPt1_branch.GetEntry(self.localentry, 0)
 *             return self.topQuarkPt1_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.topQuarkPt1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8315
 * 
 *     property topQuarkPt2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.topQuarkPt2_branch.GetEntry(self.localentry, 0)
 *             return self.topQuarkPt2_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11topQuarkPt2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11topQuarkPt2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_11topQuarkPt2___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_11topQuarkPt2___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8316
 *     property topQuarkPt2:
 *         def __get__(self):
 *             self.topQuarkPt2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.topQuarkPt2_value
 * 
 */
  (void)(__pyx_v_self->topQuarkPt2_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8317
 *         def __get__(self):
 *             self.topQuarkPt2_branch.GetEntry(self.localentry, 0)
 *             return self.topQuarkPt2_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMetEt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->topQuarkPt2_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8315
 * 
 *     property topQuarkPt2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.topQuarkPt2_branch.GetEntry(self.localentry, 0)
 *             return self.topQuarkPt2_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.topQuarkPt2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8320
 * 
 *     property type1_pfMetEt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMetEt_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMetEt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_13type1_pfMetEt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_13type1_pfMetEt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_13type1_pfMetEt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_13type1_pfMetEt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8321
 *     property type1_pfMetEt:
 *         def __get__(self):
 *             self.type1_pfMetEt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMetEt_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMetEt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8322
 *         def __get__(self):
 *             self.type1_pfMetEt_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMetEt_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMetPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMetEt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8320
 * 
 *     property type1_pfMetEt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMetEt_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMetEt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMetEt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8325
 * 
 *     property type1_pfMetPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMetPhi_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMetPhi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_14type1_pfMetPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_14type1_pfMetPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_14type1_pfMetPhi___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_14type1_pfMetPhi___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8326
 *     property type1_pfMetPhi:
 *         def __get__(self):
 *             self.type1_pfMetPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMetPhi_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMetPhi_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8327
 *         def __get__(self):
 *             self.type1_pfMetPhi_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMetPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JERDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMetPhi_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8325
 * 
 *     property type1_pfMetPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMetPhi_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMetPhi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMetPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8330
 * 
 *     property type1_pfMet_shiftedPhi_JERDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JERDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JERDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JERDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JERDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JERDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8331
 *     property type1_pfMet_shiftedPhi_JERDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JERDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JERDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JERDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8332
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JERDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JERUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JERDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8332, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8330
 * 
 *     property type1_pfMet_shiftedPhi_JERDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JERDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JERDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8335
 * 
 *     property type1_pfMet_shiftedPhi_JERUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JERUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_28type1_pfMet_shiftedPhi_JERUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_28type1_pfMet_shiftedPhi_JERUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_28type1_pfMet_shiftedPhi_JERUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_28type1_pfMet_shiftedPhi_JERUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8336
 *     property type1_pfMet_shiftedPhi_JERUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JERUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JERUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JERUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8337
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JERUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetAbsoluteDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JERUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8335
 * 
 *     property type1_pfMet_shiftedPhi_JERUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JERUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JERUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8340
 * 
 *     property type1_pfMet_shiftedPhi_JetAbsoluteDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetAbsoluteDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_38type1_pfMet_shiftedPhi_JetAbsoluteDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_38type1_pfMet_shiftedPhi_JetAbsoluteDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_38type1_pfMet_shiftedPhi_JetAbsoluteDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_38type1_pfMet_shiftedPhi_JetAbsoluteDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8341
 *     property type1_pfMet_shiftedPhi_JetAbsoluteDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetAbsoluteDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8342
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetAbsoluteDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetAbsoluteUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8340
 * 
 *     property type1_pfMet_shiftedPhi_JetAbsoluteDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetAbsoluteDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetAbsoluteDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8345
 * 
 *     property type1_pfMet_shiftedPhi_JetAbsoluteUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetAbsoluteUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPhi_JetAbsoluteUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPhi_JetAbsoluteUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPhi_JetAbsoluteUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPhi_JetAbsoluteUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8346
 *     property type1_pfMet_shiftedPhi_JetAbsoluteUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetAbsoluteUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8347
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetAbsoluteUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetAbsoluteyearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8345
 * 
 *     property type1_pfMet_shiftedPhi_JetAbsoluteUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetAbsoluteUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetAbsoluteUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8350
 * 
 *     property type1_pfMet_shiftedPhi_JetAbsoluteyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_42type1_pfMet_shiftedPhi_JetAbsoluteyearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_42type1_pfMet_shiftedPhi_JetAbsoluteyearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_42type1_pfMet_shiftedPhi_JetAbsoluteyearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_42type1_pfMet_shiftedPhi_JetAbsoluteyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8351
 *     property type1_pfMet_shiftedPhi_JetAbsoluteyearDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8352
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetAbsoluteyearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteyearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8350
 * 
 *     property type1_pfMet_shiftedPhi_JetAbsoluteyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetAbsoluteyearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8355
 * 
 *     property type1_pfMet_shiftedPhi_JetAbsoluteyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_40type1_pfMet_shiftedPhi_JetAbsoluteyearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_40type1_pfMet_shiftedPhi_JetAbsoluteyearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_40type1_pfMet_shiftedPhi_JetAbsoluteyearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_40type1_pfMet_shiftedPhi_JetAbsoluteyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8356
 *     property type1_pfMet_shiftedPhi_JetAbsoluteyearUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8357
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetBBEC1Down:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetAbsoluteyearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8355
 * 
 *     property type1_pfMet_shiftedPhi_JetAbsoluteyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetAbsoluteyearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8360
 * 
 *     property type1_pfMet_shiftedPhi_JetBBEC1Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetBBEC1Down_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetBBEC1Down_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetBBEC1Down_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetBBEC1Down___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetBBEC1Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8361
 *     property type1_pfMet_shiftedPhi_JetBBEC1Down:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetBBEC1Down_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1Down_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8362
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetBBEC1Down_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetBBEC1Up:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1Down_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8360
 * 
 *     property type1_pfMet_shiftedPhi_JetBBEC1Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetBBEC1Down_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetBBEC1Down.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8365
 * 
 *     property type1_pfMet_shiftedPhi_JetBBEC1Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetBBEC1Up_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetBBEC1Up_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetBBEC1Up_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetBBEC1Up___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetBBEC1Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8366
 *     property type1_pfMet_shiftedPhi_JetBBEC1Up:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetBBEC1Up_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1Up_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8367
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetBBEC1Up_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetBBEC1yearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1Up_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8367, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8365
 * 
 *     property type1_pfMet_shiftedPhi_JetBBEC1Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetBBEC1Up_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetBBEC1Up.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8370
 * 
 *     property type1_pfMet_shiftedPhi_JetBBEC1yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetBBEC1yearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetBBEC1yearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetBBEC1yearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetBBEC1yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8371
 *     property type1_pfMet_shiftedPhi_JetBBEC1yearDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8372
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetBBEC1yearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1yearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8370
 * 
 *     property type1_pfMet_shiftedPhi_JetBBEC1yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetBBEC1yearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8375
 * 
 *     property type1_pfMet_shiftedPhi_JetBBEC1yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetBBEC1yearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetBBEC1yearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetBBEC1yearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetBBEC1yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8376
 *     property type1_pfMet_shiftedPhi_JetBBEC1yearUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8377
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetEC2Down:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetBBEC1yearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8377, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8375
 * 
 *     property type1_pfMet_shiftedPhi_JetBBEC1yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetBBEC1yearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8380
 * 
 *     property type1_pfMet_shiftedPhi_JetEC2Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEC2Down_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetEC2Down_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetEC2Down_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetEC2Down___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetEC2Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8381
 *     property type1_pfMet_shiftedPhi_JetEC2Down:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetEC2Down_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetEC2Down_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetEC2Down_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8382
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEC2Down_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetEC2Up:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetEC2Down_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8382, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8380
 * 
 *     property type1_pfMet_shiftedPhi_JetEC2Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEC2Down_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetEC2Down.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8385
 * 
 *     property type1_pfMet_shiftedPhi_JetEC2Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEC2Up_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPhi_JetEC2Up_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPhi_JetEC2Up_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPhi_JetEC2Up___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPhi_JetEC2Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8386
 *     property type1_pfMet_shiftedPhi_JetEC2Up:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetEC2Up_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetEC2Up_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetEC2Up_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8387
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEC2Up_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetEC2yearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetEC2Up_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8385
 * 
 *     property type1_pfMet_shiftedPhi_JetEC2Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEC2Up_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetEC2Up.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8390
 * 
 *     property type1_pfMet_shiftedPhi_JetEC2yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEC2yearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetEC2yearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetEC2yearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetEC2yearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetEC2yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8391
 *     property type1_pfMet_shiftedPhi_JetEC2yearDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetEC2yearDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetEC2yearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8392
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEC2yearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetEC2yearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetEC2yearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8390
 * 
 *     property type1_pfMet_shiftedPhi_JetEC2yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEC2yearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetEC2yearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8395
 * 
 *     property type1_pfMet_shiftedPhi_JetEC2yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEC2yearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetEC2yearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetEC2yearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetEC2yearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetEC2yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8396
 *     property type1_pfMet_shiftedPhi_JetEC2yearUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetEC2yearUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetEC2yearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8397
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEC2yearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetEnDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetEC2yearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8395
 * 
 *     property type1_pfMet_shiftedPhi_JetEC2yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEC2yearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetEC2yearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8400
 * 
 *     property type1_pfMet_shiftedPhi_JetEnDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetEnDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEnDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_JetEnDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_JetEnDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_JetEnDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_JetEnDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8401
 *     property type1_pfMet_shiftedPhi_JetEnDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetEnDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetEnDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetEnDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8402
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetEnDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEnDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetEnUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetEnDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8400
 * 
 *     property type1_pfMet_shiftedPhi_JetEnDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetEnDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEnDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetEnDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8405
 * 
 *     property type1_pfMet_shiftedPhi_JetEnUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetEnUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEnUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JetEnUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JetEnUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JetEnUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JetEnUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8406
 *     property type1_pfMet_shiftedPhi_JetEnUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetEnUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetEnUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetEnUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8407
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetEnUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEnUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetFlavorQCDDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetEnUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8405
 * 
 *     property type1_pfMet_shiftedPhi_JetEnUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetEnUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetEnUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetEnUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8410
 * 
 *     property type1_pfMet_shiftedPhi_JetFlavorQCDDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetFlavorQCDDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetFlavorQCDDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetFlavorQCDDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetFlavorQCDDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8411
 *     property type1_pfMet_shiftedPhi_JetFlavorQCDDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8412
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetFlavorQCDUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetFlavorQCDDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8412, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8410
 * 
 *     property type1_pfMet_shiftedPhi_JetFlavorQCDDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetFlavorQCDDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8415
 * 
 *     property type1_pfMet_shiftedPhi_JetFlavorQCDUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetFlavorQCDUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetFlavorQCDUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetFlavorQCDUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetFlavorQCDUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8416
 *     property type1_pfMet_shiftedPhi_JetFlavorQCDUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8417
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetHFDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetFlavorQCDUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8415
 * 
 *     property type1_pfMet_shiftedPhi_JetFlavorQCDUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetFlavorQCDUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8420
 * 
 *     property type1_pfMet_shiftedPhi_JetHFDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetHFDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_JetHFDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_JetHFDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_JetHFDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_JetHFDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8421
 *     property type1_pfMet_shiftedPhi_JetHFDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetHFDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetHFDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetHFDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8422
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetHFDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetHFUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetHFDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8422, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8420
 * 
 *     property type1_pfMet_shiftedPhi_JetHFDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetHFDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetHFDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8425
 * 
 *     property type1_pfMet_shiftedPhi_JetHFUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetHFUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JetHFUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JetHFUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JetHFUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JetHFUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8426
 *     property type1_pfMet_shiftedPhi_JetHFUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetHFUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetHFUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetHFUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8427
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetHFUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetHFyearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetHFUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8425
 * 
 *     property type1_pfMet_shiftedPhi_JetHFUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetHFUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetHFUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8430
 * 
 *     property type1_pfMet_shiftedPhi_JetHFyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetHFyearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPhi_JetHFyearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPhi_JetHFyearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPhi_JetHFyearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPhi_JetHFyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8431
 *     property type1_pfMet_shiftedPhi_JetHFyearDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetHFyearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetHFyearDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetHFyearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8432
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetHFyearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetHFyearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetHFyearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8430
 * 
 *     property type1_pfMet_shiftedPhi_JetHFyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetHFyearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetHFyearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8435
 * 
 *     property type1_pfMet_shiftedPhi_JetHFyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetHFyearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_JetHFyearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_JetHFyearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_JetHFyearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_JetHFyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8436
 *     property type1_pfMet_shiftedPhi_JetHFyearUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetHFyearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetHFyearUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetHFyearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8437
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetHFyearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetRelativeBalDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetHFyearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8435
 * 
 *     property type1_pfMet_shiftedPhi_JetHFyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetHFyearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetHFyearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8440
 * 
 *     property type1_pfMet_shiftedPhi_JetRelativeBalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetRelativeBalDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_41type1_pfMet_shiftedPhi_JetRelativeBalDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_41type1_pfMet_shiftedPhi_JetRelativeBalDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_41type1_pfMet_shiftedPhi_JetRelativeBalDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_41type1_pfMet_shiftedPhi_JetRelativeBalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8441
 *     property type1_pfMet_shiftedPhi_JetRelativeBalDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetRelativeBalDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeBalDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8442
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetRelativeBalDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetRelativeBalUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeBalDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8440
 * 
 *     property type1_pfMet_shiftedPhi_JetRelativeBalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetRelativeBalDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetRelativeBalDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8445
 * 
 *     property type1_pfMet_shiftedPhi_JetRelativeBalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetRelativeBalUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetRelativeBalUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetRelativeBalUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetRelativeBalUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetRelativeBalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8446
 *     property type1_pfMet_shiftedPhi_JetRelativeBalUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetRelativeBalUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeBalUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8447
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetRelativeBalUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetRelativeSampleDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeBalUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8447, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8445
 * 
 *     property type1_pfMet_shiftedPhi_JetRelativeBalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetRelativeBalUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetRelativeBalUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8450
 * 
 *     property type1_pfMet_shiftedPhi_JetRelativeSampleDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_44type1_pfMet_shiftedPhi_JetRelativeSampleDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_44type1_pfMet_shiftedPhi_JetRelativeSampleDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_44type1_pfMet_shiftedPhi_JetRelativeSampleDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_44type1_pfMet_shiftedPhi_JetRelativeSampleDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8451
 *     property type1_pfMet_shiftedPhi_JetRelativeSampleDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8452
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetRelativeSampleUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeSampleDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8450
 * 
 *     property type1_pfMet_shiftedPhi_JetRelativeSampleDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetRelativeSampleDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8455
 * 
 *     property type1_pfMet_shiftedPhi_JetRelativeSampleUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_42type1_pfMet_shiftedPhi_JetRelativeSampleUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_42type1_pfMet_shiftedPhi_JetRelativeSampleUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_42type1_pfMet_shiftedPhi_JetRelativeSampleUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_42type1_pfMet_shiftedPhi_JetRelativeSampleUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8456
 *     property type1_pfMet_shiftedPhi_JetRelativeSampleUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8457
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetResDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetRelativeSampleUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8457, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8455
 * 
 *     property type1_pfMet_shiftedPhi_JetRelativeSampleUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetRelativeSampleUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8460
 * 
 *     property type1_pfMet_shiftedPhi_JetResDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetResDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetResDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetResDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetResDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetResDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetResDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8461
 *     property type1_pfMet_shiftedPhi_JetResDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetResDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetResDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetResDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8462
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetResDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetResDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetResUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetResDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8462, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8460
 * 
 *     property type1_pfMet_shiftedPhi_JetResDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetResDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetResDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetResDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8465
 * 
 *     property type1_pfMet_shiftedPhi_JetResUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetResUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetResUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPhi_JetResUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPhi_JetResUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPhi_JetResUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPhi_JetResUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8466
 *     property type1_pfMet_shiftedPhi_JetResUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetResUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetResUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetResUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8467
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetResUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetResUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetTotalDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetResUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8465
 * 
 *     property type1_pfMet_shiftedPhi_JetResUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetResUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetResUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetResUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8470
 * 
 *     property type1_pfMet_shiftedPhi_JetTotalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetTotalDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetTotalDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetTotalDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetTotalDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetTotalDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetTotalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8471
 *     property type1_pfMet_shiftedPhi_JetTotalDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetTotalDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetTotalDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetTotalDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8472
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetTotalDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetTotalDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_JetTotalUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetTotalDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8470
 * 
 *     property type1_pfMet_shiftedPhi_JetTotalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetTotalDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetTotalDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetTotalDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8475
 * 
 *     property type1_pfMet_shiftedPhi_JetTotalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetTotalUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetTotalUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetTotalUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetTotalUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetTotalUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetTotalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8476
 *     property type1_pfMet_shiftedPhi_JetTotalUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetTotalUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_JetTotalUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_JetTotalUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8477
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_JetTotalUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetTotalUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_UesCHARGEDDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_JetTotalUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8475
 * 
 *     property type1_pfMet_shiftedPhi_JetTotalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_JetTotalUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_JetTotalUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_JetTotalUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8480
 * 
 *     property type1_pfMet_shiftedPhi_UesCHARGEDDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesCHARGEDDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_UesCHARGEDDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_UesCHARGEDDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_UesCHARGEDDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_UesCHARGEDDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8481
 *     property type1_pfMet_shiftedPhi_UesCHARGEDDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_UesCHARGEDDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_UesCHARGEDDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8482
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesCHARGEDDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_UesCHARGEDUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_UesCHARGEDDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8482, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8480
 * 
 *     property type1_pfMet_shiftedPhi_UesCHARGEDDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesCHARGEDDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_UesCHARGEDDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8485
 * 
 *     property type1_pfMet_shiftedPhi_UesCHARGEDUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesCHARGEDUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_UesCHARGEDUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_UesCHARGEDUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_UesCHARGEDUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_UesCHARGEDUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8486
 *     property type1_pfMet_shiftedPhi_UesCHARGEDUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_UesCHARGEDUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_UesCHARGEDUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8487
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesCHARGEDUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_UesECALDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_UesCHARGEDUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8485
 * 
 *     property type1_pfMet_shiftedPhi_UesCHARGEDUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesCHARGEDUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_UesCHARGEDUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8490
 * 
 *     property type1_pfMet_shiftedPhi_UesECALDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UesECALDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesECALDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_UesECALDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_UesECALDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_UesECALDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_UesECALDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8491
 *     property type1_pfMet_shiftedPhi_UesECALDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UesECALDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_UesECALDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_UesECALDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8492
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UesECALDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesECALDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_UesECALUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_UesECALDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8492, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8490
 * 
 *     property type1_pfMet_shiftedPhi_UesECALDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UesECALDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesECALDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_UesECALDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8495
 * 
 *     property type1_pfMet_shiftedPhi_UesECALUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UesECALUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesECALUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesECALUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesECALUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesECALUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesECALUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8496
 *     property type1_pfMet_shiftedPhi_UesECALUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UesECALUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_UesECALUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_UesECALUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8497
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UesECALUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesECALUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_UesHCALDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_UesECALUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8495
 * 
 *     property type1_pfMet_shiftedPhi_UesECALUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UesECALUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesECALUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_UesECALUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8500
 * 
 *     property type1_pfMet_shiftedPhi_UesHCALDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UesHCALDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesHCALDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_UesHCALDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_UesHCALDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_UesHCALDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_UesHCALDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8501
 *     property type1_pfMet_shiftedPhi_UesHCALDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UesHCALDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_UesHCALDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_UesHCALDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8502
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UesHCALDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesHCALDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_UesHCALUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_UesHCALDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8502, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8500
 * 
 *     property type1_pfMet_shiftedPhi_UesHCALDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UesHCALDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesHCALDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_UesHCALDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8505
 * 
 *     property type1_pfMet_shiftedPhi_UesHCALUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UesHCALUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesHCALUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesHCALUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesHCALUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesHCALUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesHCALUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8506
 *     property type1_pfMet_shiftedPhi_UesHCALUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UesHCALUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_UesHCALUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_UesHCALUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8507
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UesHCALUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesHCALUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_UesHFDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_UesHCALUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8505
 * 
 *     property type1_pfMet_shiftedPhi_UesHCALUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UesHCALUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesHCALUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_UesHCALUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8510
 * 
 *     property type1_pfMet_shiftedPhi_UesHFDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UesHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesHFDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesHFDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesHFDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesHFDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesHFDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8511
 *     property type1_pfMet_shiftedPhi_UesHFDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UesHFDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_UesHFDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_UesHFDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8512
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UesHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesHFDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_UesHFUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_UesHFDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8512, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8510
 * 
 *     property type1_pfMet_shiftedPhi_UesHFDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UesHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesHFDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_UesHFDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8515
 * 
 *     property type1_pfMet_shiftedPhi_UesHFUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UesHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesHFUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_UesHFUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_UesHFUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_UesHFUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_UesHFUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8516
 *     property type1_pfMet_shiftedPhi_UesHFUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UesHFUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_UesHFUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_UesHFUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8517
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UesHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesHFUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_UnclusteredEnDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_UesHFUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8517, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8515
 * 
 *     property type1_pfMet_shiftedPhi_UesHFUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UesHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UesHFUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_UesHFUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8520
 * 
 *     property type1_pfMet_shiftedPhi_UnclusteredEnDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UnclusteredEnDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_40type1_pfMet_shiftedPhi_UnclusteredEnDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_40type1_pfMet_shiftedPhi_UnclusteredEnDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_40type1_pfMet_shiftedPhi_UnclusteredEnDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_40type1_pfMet_shiftedPhi_UnclusteredEnDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8521
 *     property type1_pfMet_shiftedPhi_UnclusteredEnDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_UnclusteredEnDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_UnclusteredEnDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8522
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UnclusteredEnDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPhi_UnclusteredEnUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_UnclusteredEnDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8520
 * 
 *     property type1_pfMet_shiftedPhi_UnclusteredEnDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UnclusteredEnDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_UnclusteredEnDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8525
 * 
 *     property type1_pfMet_shiftedPhi_UnclusteredEnUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UnclusteredEnUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_38type1_pfMet_shiftedPhi_UnclusteredEnUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_38type1_pfMet_shiftedPhi_UnclusteredEnUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_38type1_pfMet_shiftedPhi_UnclusteredEnUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_38type1_pfMet_shiftedPhi_UnclusteredEnUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8526
 *     property type1_pfMet_shiftedPhi_UnclusteredEnUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPhi_UnclusteredEnUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPhi_UnclusteredEnUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8527
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UnclusteredEnUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JERDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPhi_UnclusteredEnUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8527, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8525
 * 
 *     property type1_pfMet_shiftedPhi_UnclusteredEnUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPhi_UnclusteredEnUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPhi_UnclusteredEnUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8530
 * 
 *     property type1_pfMet_shiftedPt_JERDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JERDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JERDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JERDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JERDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JERDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8531
 *     property type1_pfMet_shiftedPt_JERDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JERDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JERDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JERDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8532
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JERDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JERUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JERDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8532, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8530
 * 
 *     property type1_pfMet_shiftedPt_JERDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JERDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JERDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8535
 * 
 *     property type1_pfMet_shiftedPt_JERUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JERUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_27type1_pfMet_shiftedPt_JERUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_27type1_pfMet_shiftedPt_JERUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_27type1_pfMet_shiftedPt_JERUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_27type1_pfMet_shiftedPt_JERUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8536
 *     property type1_pfMet_shiftedPt_JERUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JERUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JERUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JERUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8537
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JERUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetAbsoluteDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JERUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8537, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8535
 * 
 *     property type1_pfMet_shiftedPt_JERUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JERUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JERUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8540
 * 
 *     property type1_pfMet_shiftedPt_JetAbsoluteDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetAbsoluteDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPt_JetAbsoluteDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPt_JetAbsoluteDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPt_JetAbsoluteDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPt_JetAbsoluteDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8541
 *     property type1_pfMet_shiftedPt_JetAbsoluteDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetAbsoluteDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8542
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetAbsoluteDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetAbsoluteUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8540
 * 
 *     property type1_pfMet_shiftedPt_JetAbsoluteDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetAbsoluteDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetAbsoluteDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8545
 * 
 *     property type1_pfMet_shiftedPt_JetAbsoluteUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetAbsoluteUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPt_JetAbsoluteUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPt_JetAbsoluteUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPt_JetAbsoluteUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPt_JetAbsoluteUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8546
 *     property type1_pfMet_shiftedPt_JetAbsoluteUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetAbsoluteUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8547
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetAbsoluteUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetAbsoluteyearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8547, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8545
 * 
 *     property type1_pfMet_shiftedPt_JetAbsoluteUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetAbsoluteUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetAbsoluteUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8550
 * 
 *     property type1_pfMet_shiftedPt_JetAbsoluteyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_41type1_pfMet_shiftedPt_JetAbsoluteyearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_41type1_pfMet_shiftedPt_JetAbsoluteyearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_41type1_pfMet_shiftedPt_JetAbsoluteyearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_41type1_pfMet_shiftedPt_JetAbsoluteyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8551
 *     property type1_pfMet_shiftedPt_JetAbsoluteyearDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8552
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetAbsoluteyearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteyearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8550
 * 
 *     property type1_pfMet_shiftedPt_JetAbsoluteyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetAbsoluteyearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8555
 * 
 *     property type1_pfMet_shiftedPt_JetAbsoluteyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_39type1_pfMet_shiftedPt_JetAbsoluteyearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_39type1_pfMet_shiftedPt_JetAbsoluteyearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_39type1_pfMet_shiftedPt_JetAbsoluteyearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_39type1_pfMet_shiftedPt_JetAbsoluteyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8556
 *     property type1_pfMet_shiftedPt_JetAbsoluteyearUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8557
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetBBEC1Down:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetAbsoluteyearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8555
 * 
 *     property type1_pfMet_shiftedPt_JetAbsoluteyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetAbsoluteyearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8560
 * 
 *     property type1_pfMet_shiftedPt_JetBBEC1Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetBBEC1Down_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetBBEC1Down_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetBBEC1Down_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetBBEC1Down___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetBBEC1Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8561
 *     property type1_pfMet_shiftedPt_JetBBEC1Down:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetBBEC1Down_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetBBEC1Down_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1Down_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8562
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetBBEC1Down_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetBBEC1Up:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1Down_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8562, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8560
 * 
 *     property type1_pfMet_shiftedPt_JetBBEC1Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetBBEC1Down_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetBBEC1Down.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8565
 * 
 *     property type1_pfMet_shiftedPt_JetBBEC1Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetBBEC1Up_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetBBEC1Up_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetBBEC1Up_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetBBEC1Up___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetBBEC1Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8566
 *     property type1_pfMet_shiftedPt_JetBBEC1Up:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetBBEC1Up_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetBBEC1Up_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1Up_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8567
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetBBEC1Up_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetBBEC1yearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1Up_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8567, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8565
 * 
 *     property type1_pfMet_shiftedPt_JetBBEC1Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetBBEC1Up_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetBBEC1Up.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8570
 * 
 *     property type1_pfMet_shiftedPt_JetBBEC1yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetBBEC1yearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetBBEC1yearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetBBEC1yearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetBBEC1yearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetBBEC1yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8571
 *     property type1_pfMet_shiftedPt_JetBBEC1yearDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetBBEC1yearDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1yearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8572
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetBBEC1yearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetBBEC1yearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1yearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8572, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8570
 * 
 *     property type1_pfMet_shiftedPt_JetBBEC1yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetBBEC1yearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetBBEC1yearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8575
 * 
 *     property type1_pfMet_shiftedPt_JetBBEC1yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetBBEC1yearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetBBEC1yearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetBBEC1yearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetBBEC1yearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetBBEC1yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8576
 *     property type1_pfMet_shiftedPt_JetBBEC1yearUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetBBEC1yearUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1yearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8577
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetBBEC1yearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetEC2Down:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetBBEC1yearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8575
 * 
 *     property type1_pfMet_shiftedPt_JetBBEC1yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetBBEC1yearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetBBEC1yearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8580
 * 
 *     property type1_pfMet_shiftedPt_JetEC2Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEC2Down_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetEC2Down_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetEC2Down_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetEC2Down___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetEC2Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8581
 *     property type1_pfMet_shiftedPt_JetEC2Down:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetEC2Down_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetEC2Down_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetEC2Down_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8582
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEC2Down_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetEC2Up:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetEC2Down_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8580
 * 
 *     property type1_pfMet_shiftedPt_JetEC2Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEC2Down_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetEC2Down.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8585
 * 
 *     property type1_pfMet_shiftedPt_JetEC2Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEC2Up_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPt_JetEC2Up_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPt_JetEC2Up_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPt_JetEC2Up___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPt_JetEC2Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8586
 *     property type1_pfMet_shiftedPt_JetEC2Up:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetEC2Up_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetEC2Up_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetEC2Up_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8587
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEC2Up_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetEC2yearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetEC2Up_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8585
 * 
 *     property type1_pfMet_shiftedPt_JetEC2Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEC2Up_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetEC2Up.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8590
 * 
 *     property type1_pfMet_shiftedPt_JetEC2yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEC2yearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetEC2yearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetEC2yearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetEC2yearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetEC2yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8591
 *     property type1_pfMet_shiftedPt_JetEC2yearDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetEC2yearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetEC2yearDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetEC2yearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8592
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEC2yearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetEC2yearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetEC2yearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8590
 * 
 *     property type1_pfMet_shiftedPt_JetEC2yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEC2yearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetEC2yearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8595
 * 
 *     property type1_pfMet_shiftedPt_JetEC2yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEC2yearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetEC2yearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetEC2yearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetEC2yearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetEC2yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8596
 *     property type1_pfMet_shiftedPt_JetEC2yearUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetEC2yearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetEC2yearUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetEC2yearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8597
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEC2yearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetEnDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetEC2yearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8595
 * 
 *     property type1_pfMet_shiftedPt_JetEC2yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEC2yearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetEC2yearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8600
 * 
 *     property type1_pfMet_shiftedPt_JetEnDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetEnDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEnDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPt_JetEnDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPt_JetEnDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPt_JetEnDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPt_JetEnDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8601
 *     property type1_pfMet_shiftedPt_JetEnDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetEnDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetEnDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetEnDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8602
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetEnDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEnDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetEnUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetEnDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8602, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8600
 * 
 *     property type1_pfMet_shiftedPt_JetEnDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetEnDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEnDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetEnDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8605
 * 
 *     property type1_pfMet_shiftedPt_JetEnUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetEnUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEnUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JetEnUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JetEnUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JetEnUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JetEnUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8606
 *     property type1_pfMet_shiftedPt_JetEnUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetEnUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetEnUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetEnUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8607
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetEnUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEnUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetFlavorQCDDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetEnUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8605
 * 
 *     property type1_pfMet_shiftedPt_JetEnUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetEnUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetEnUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetEnUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8610
 * 
 *     property type1_pfMet_shiftedPt_JetFlavorQCDDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetFlavorQCDDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetFlavorQCDDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetFlavorQCDDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetFlavorQCDDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetFlavorQCDDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8611
 *     property type1_pfMet_shiftedPt_JetFlavorQCDDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetFlavorQCDDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetFlavorQCDDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8612
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetFlavorQCDDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetFlavorQCDUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetFlavorQCDDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8610
 * 
 *     property type1_pfMet_shiftedPt_JetFlavorQCDDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetFlavorQCDDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetFlavorQCDDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8615
 * 
 *     property type1_pfMet_shiftedPt_JetFlavorQCDUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetFlavorQCDUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetFlavorQCDUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetFlavorQCDUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetFlavorQCDUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetFlavorQCDUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8616
 *     property type1_pfMet_shiftedPt_JetFlavorQCDUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetFlavorQCDUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetFlavorQCDUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8617
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetFlavorQCDUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetHFDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetFlavorQCDUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8617, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8615
 * 
 *     property type1_pfMet_shiftedPt_JetFlavorQCDUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetFlavorQCDUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetFlavorQCDUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8620
 * 
 *     property type1_pfMet_shiftedPt_JetHFDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetHFDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPt_JetHFDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPt_JetHFDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPt_JetHFDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPt_JetHFDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8621
 *     property type1_pfMet_shiftedPt_JetHFDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetHFDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetHFDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetHFDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8622
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetHFDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetHFUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetHFDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8620
 * 
 *     property type1_pfMet_shiftedPt_JetHFDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetHFDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetHFDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8625
 * 
 *     property type1_pfMet_shiftedPt_JetHFUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetHFUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JetHFUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JetHFUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JetHFUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JetHFUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8626
 *     property type1_pfMet_shiftedPt_JetHFUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetHFUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetHFUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetHFUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8627
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetHFUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetHFyearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetHFUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8627, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8625
 * 
 *     property type1_pfMet_shiftedPt_JetHFUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetHFUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetHFUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8630
 * 
 *     property type1_pfMet_shiftedPt_JetHFyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetHFyearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPt_JetHFyearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPt_JetHFyearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPt_JetHFyearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35type1_pfMet_shiftedPt_JetHFyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8631
 *     property type1_pfMet_shiftedPt_JetHFyearDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetHFyearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetHFyearDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetHFyearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8632
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetHFyearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetHFyearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetHFyearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8630
 * 
 *     property type1_pfMet_shiftedPt_JetHFyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetHFyearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetHFyearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8635
 * 
 *     property type1_pfMet_shiftedPt_JetHFyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetHFyearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPt_JetHFyearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPt_JetHFyearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPt_JetHFyearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPt_JetHFyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8636
 *     property type1_pfMet_shiftedPt_JetHFyearUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetHFyearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetHFyearUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetHFyearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8637
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetHFyearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetRelativeBalDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetHFyearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8637, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8635
 * 
 *     property type1_pfMet_shiftedPt_JetHFyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetHFyearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetHFyearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8640
 * 
 *     property type1_pfMet_shiftedPt_JetRelativeBalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetRelativeBalDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_40type1_pfMet_shiftedPt_JetRelativeBalDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_40type1_pfMet_shiftedPt_JetRelativeBalDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_40type1_pfMet_shiftedPt_JetRelativeBalDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_40type1_pfMet_shiftedPt_JetRelativeBalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8641
 *     property type1_pfMet_shiftedPt_JetRelativeBalDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetRelativeBalDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetRelativeBalDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8642
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetRelativeBalDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetRelativeBalUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetRelativeBalDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8640
 * 
 *     property type1_pfMet_shiftedPt_JetRelativeBalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetRelativeBalDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetRelativeBalDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8645
 * 
 *     property type1_pfMet_shiftedPt_JetRelativeBalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetRelativeBalUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetRelativeBalUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetRelativeBalUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetRelativeBalUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetRelativeBalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8646
 *     property type1_pfMet_shiftedPt_JetRelativeBalUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetRelativeBalUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetRelativeBalUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8647
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetRelativeBalUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetRelativeSampleDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetRelativeBalUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8647, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8645
 * 
 *     property type1_pfMet_shiftedPt_JetRelativeBalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetRelativeBalUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetRelativeBalUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8650
 * 
 *     property type1_pfMet_shiftedPt_JetRelativeSampleDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetRelativeSampleDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_43type1_pfMet_shiftedPt_JetRelativeSampleDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_43type1_pfMet_shiftedPt_JetRelativeSampleDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_43type1_pfMet_shiftedPt_JetRelativeSampleDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_43type1_pfMet_shiftedPt_JetRelativeSampleDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8651
 *     property type1_pfMet_shiftedPt_JetRelativeSampleDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetRelativeSampleDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetRelativeSampleDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8652
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetRelativeSampleDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetRelativeSampleUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetRelativeSampleDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8652, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8650
 * 
 *     property type1_pfMet_shiftedPt_JetRelativeSampleDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetRelativeSampleDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetRelativeSampleDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8655
 * 
 *     property type1_pfMet_shiftedPt_JetRelativeSampleUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetRelativeSampleUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_41type1_pfMet_shiftedPt_JetRelativeSampleUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_41type1_pfMet_shiftedPt_JetRelativeSampleUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_41type1_pfMet_shiftedPt_JetRelativeSampleUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_41type1_pfMet_shiftedPt_JetRelativeSampleUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8656
 *     property type1_pfMet_shiftedPt_JetRelativeSampleUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetRelativeSampleUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetRelativeSampleUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8657
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetRelativeSampleUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetResDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetRelativeSampleUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8655
 * 
 *     property type1_pfMet_shiftedPt_JetRelativeSampleUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetRelativeSampleUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetRelativeSampleUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8660
 * 
 *     property type1_pfMet_shiftedPt_JetResDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetResDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetResDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetResDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetResDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetResDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetResDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8661
 *     property type1_pfMet_shiftedPt_JetResDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetResDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetResDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetResDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8662
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetResDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetResDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetResUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetResDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8660
 * 
 *     property type1_pfMet_shiftedPt_JetResDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetResDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetResDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetResDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8665
 * 
 *     property type1_pfMet_shiftedPt_JetResUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetResUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetResUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPt_JetResUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPt_JetResUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPt_JetResUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_30type1_pfMet_shiftedPt_JetResUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8666
 *     property type1_pfMet_shiftedPt_JetResUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetResUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetResUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetResUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8667
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetResUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetResUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetTotalDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetResUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8665
 * 
 *     property type1_pfMet_shiftedPt_JetResUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetResUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetResUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetResUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8670
 * 
 *     property type1_pfMet_shiftedPt_JetTotalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetTotalDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetTotalDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetTotalDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetTotalDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetTotalDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetTotalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8671
 *     property type1_pfMet_shiftedPt_JetTotalDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetTotalDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetTotalDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetTotalDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8672
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetTotalDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetTotalDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_JetTotalUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetTotalDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8670
 * 
 *     property type1_pfMet_shiftedPt_JetTotalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetTotalDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetTotalDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetTotalDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8675
 * 
 *     property type1_pfMet_shiftedPt_JetTotalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetTotalUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetTotalUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetTotalUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetTotalUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetTotalUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetTotalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8676
 *     property type1_pfMet_shiftedPt_JetTotalUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetTotalUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_JetTotalUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_JetTotalUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8677
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_JetTotalUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetTotalUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_UesCHARGEDDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_JetTotalUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8677, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8675
 * 
 *     property type1_pfMet_shiftedPt_JetTotalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_JetTotalUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_JetTotalUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_JetTotalUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8680
 * 
 *     property type1_pfMet_shiftedPt_UesCHARGEDDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesCHARGEDDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPt_UesCHARGEDDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPt_UesCHARGEDDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPt_UesCHARGEDDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_36type1_pfMet_shiftedPt_UesCHARGEDDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8681
 *     property type1_pfMet_shiftedPt_UesCHARGEDDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_UesCHARGEDDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_UesCHARGEDDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8682
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesCHARGEDDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_UesCHARGEDUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_UesCHARGEDDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8682, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8680
 * 
 *     property type1_pfMet_shiftedPt_UesCHARGEDDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesCHARGEDDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_UesCHARGEDDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8685
 * 
 *     property type1_pfMet_shiftedPt_UesCHARGEDUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesCHARGEDUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPt_UesCHARGEDUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPt_UesCHARGEDUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPt_UesCHARGEDUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34type1_pfMet_shiftedPt_UesCHARGEDUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8686
 *     property type1_pfMet_shiftedPt_UesCHARGEDUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_UesCHARGEDUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_UesCHARGEDUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8687
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesCHARGEDUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_UesECALDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_UesCHARGEDUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8687, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8685
 * 
 *     property type1_pfMet_shiftedPt_UesCHARGEDUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesCHARGEDUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_UesCHARGEDUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8690
 * 
 *     property type1_pfMet_shiftedPt_UesECALDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UesECALDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesECALDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPt_UesECALDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPt_UesECALDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPt_UesECALDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPt_UesECALDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8691
 *     property type1_pfMet_shiftedPt_UesECALDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UesECALDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_UesECALDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_UesECALDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8692
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UesECALDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesECALDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_UesECALUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_UesECALDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8692, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8690
 * 
 *     property type1_pfMet_shiftedPt_UesECALDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UesECALDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesECALDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_UesECALDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8695
 * 
 *     property type1_pfMet_shiftedPt_UesECALUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UesECALUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesECALUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesECALUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesECALUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesECALUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesECALUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8696
 *     property type1_pfMet_shiftedPt_UesECALUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UesECALUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_UesECALUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_UesECALUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8697
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UesECALUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesECALUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_UesHCALDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_UesECALUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8697, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8695
 * 
 *     property type1_pfMet_shiftedPt_UesECALUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UesECALUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesECALUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_UesECALUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8700
 * 
 *     property type1_pfMet_shiftedPt_UesHCALDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UesHCALDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesHCALDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPt_UesHCALDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPt_UesHCALDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPt_UesHCALDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_33type1_pfMet_shiftedPt_UesHCALDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8701
 *     property type1_pfMet_shiftedPt_UesHCALDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UesHCALDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_UesHCALDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_UesHCALDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8702
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UesHCALDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesHCALDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_UesHCALUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_UesHCALDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8700
 * 
 *     property type1_pfMet_shiftedPt_UesHCALDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UesHCALDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesHCALDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_UesHCALDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8705
 * 
 *     property type1_pfMet_shiftedPt_UesHCALUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UesHCALUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesHCALUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesHCALUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesHCALUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesHCALUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesHCALUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8706
 *     property type1_pfMet_shiftedPt_UesHCALUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UesHCALUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_UesHCALUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_UesHCALUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8707
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UesHCALUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesHCALUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_UesHFDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_UesHCALUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8707, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8705
 * 
 *     property type1_pfMet_shiftedPt_UesHCALUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UesHCALUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesHCALUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_UesHCALUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8710
 * 
 *     property type1_pfMet_shiftedPt_UesHFDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UesHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesHFDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesHFDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesHFDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesHFDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesHFDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8711
 *     property type1_pfMet_shiftedPt_UesHFDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UesHFDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_UesHFDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_UesHFDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8712
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UesHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesHFDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_UesHFUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_UesHFDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8712, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8710
 * 
 *     property type1_pfMet_shiftedPt_UesHFDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UesHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesHFDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_UesHFDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8715
 * 
 *     property type1_pfMet_shiftedPt_UesHFUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UesHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesHFUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_29type1_pfMet_shiftedPt_UesHFUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_29type1_pfMet_shiftedPt_UesHFUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_29type1_pfMet_shiftedPt_UesHFUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_29type1_pfMet_shiftedPt_UesHFUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8716
 *     property type1_pfMet_shiftedPt_UesHFUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UesHFUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_UesHFUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_UesHFUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8717
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UesHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesHFUp_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_UnclusteredEnDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_UesHFUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8715
 * 
 *     property type1_pfMet_shiftedPt_UesHFUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UesHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UesHFUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_UesHFUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8720
 * 
 *     property type1_pfMet_shiftedPt_UnclusteredEnDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UnclusteredEnDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_39type1_pfMet_shiftedPt_UnclusteredEnDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_39type1_pfMet_shiftedPt_UnclusteredEnDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_39type1_pfMet_shiftedPt_UnclusteredEnDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_39type1_pfMet_shiftedPt_UnclusteredEnDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8721
 *     property type1_pfMet_shiftedPt_UnclusteredEnDown:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_UnclusteredEnDown_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_UnclusteredEnDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8722
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UnclusteredEnDown_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMet_shiftedPt_UnclusteredEnUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_UnclusteredEnDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8722, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8720
 * 
 *     property type1_pfMet_shiftedPt_UnclusteredEnDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UnclusteredEnDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_UnclusteredEnDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8725
 * 
 *     property type1_pfMet_shiftedPt_UnclusteredEnUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UnclusteredEnUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPt_UnclusteredEnUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPt_UnclusteredEnUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPt_UnclusteredEnUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_37type1_pfMet_shiftedPt_UnclusteredEnUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8726
 *     property type1_pfMet_shiftedPt_UnclusteredEnUp:
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMet_shiftedPt_UnclusteredEnUp_value
 * 
 */
  (void)(__pyx_v_self->type1_pfMet_shiftedPt_UnclusteredEnUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8727
 *         def __get__(self):
 *             self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UnclusteredEnUp_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfDeta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMet_shiftedPt_UnclusteredEnUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8727, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8725
 * 
 *     property type1_pfMet_shiftedPt_UnclusteredEnUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMet_shiftedPt_UnclusteredEnUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.type1_pfMet_shiftedPt_UnclusteredEnUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8730
 * 
 *     property vbfDeta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfDeta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDeta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_7vbfDeta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_7vbfDeta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_7vbfDeta___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_7vbfDeta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8731
 *     property vbfDeta:
 *         def __get__(self):
 *             self.vbfDeta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfDeta_value
 * 
 */
  (void)(__pyx_v_self->vbfDeta_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8732
 *         def __get__(self):
 *             self.vbfDeta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDeta_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfJetVeto20:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfDeta_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8730
 * 
 *     property vbfDeta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfDeta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDeta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfDeta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8735
 * 
 *     property vbfJetVeto20:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfJetVeto20_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVeto20_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12vbfJetVeto20_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12vbfJetVeto20_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12vbfJetVeto20___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12vbfJetVeto20___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8736
 *     property vbfJetVeto20:
 *         def __get__(self):
 *             self.vbfJetVeto20_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfJetVeto20_value
 * 
 */
  (void)(__pyx_v_self->vbfJetVeto20_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8737
 *         def __get__(self):
 *             self.vbfJetVeto20_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVeto20_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfJetVeto30:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfJetVeto20_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8737, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8735
 * 
 *     property vbfJetVeto20:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfJetVeto20_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVeto20_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfJetVeto20.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8740
 * 
 *     property vbfJetVeto30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfJetVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVeto30_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_12vbfJetVeto30_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_12vbfJetVeto30_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_12vbfJetVeto30___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_12vbfJetVeto30___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8741
 *     property vbfJetVeto30:
 *         def __get__(self):
 *             self.vbfJetVeto30_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfJetVeto30_value
 * 
 */
  (void)(__pyx_v_self->vbfJetVeto30_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8742
 *         def __get__(self):
 *             self.vbfJetVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVeto30_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfJetVeto30_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8740
 * 
 *     property vbfJetVeto30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfJetVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVeto30_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfJetVeto30.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8745
 * 
 *     property vbfMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMass_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_7vbfMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_7vbfMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_7vbfMass___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_7vbfMass___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8746
 *     property vbfMass:
 *         def __get__(self):
 *             self.vbfMass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMass_value
 * 
 */
  (void)(__pyx_v_self->vbfMass_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8747
 *         def __get__(self):
 *             self.vbfMass_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMass_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMass_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8747, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8745
 * 
 *     property vbfMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMass_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8750
 * 
 *     property vbfMassWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_18vbfMassWoNoisyJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_18vbfMassWoNoisyJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_18vbfMassWoNoisyJets___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_18vbfMassWoNoisyJets___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8751
 *     property vbfMassWoNoisyJets:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8752
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JERDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8752, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8750
 * 
 *     property vbfMassWoNoisyJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8755
 * 
 *     property vbfMassWoNoisyJets_JERDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JERDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_26vbfMassWoNoisyJets_JERDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_26vbfMassWoNoisyJets_JERDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_26vbfMassWoNoisyJets_JERDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_26vbfMassWoNoisyJets_JERDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8756
 *     property vbfMassWoNoisyJets_JERDown:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JERDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JERDown_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JERDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8757
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JERDown_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JERUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JERDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8757, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8755
 * 
 *     property vbfMassWoNoisyJets_JERDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JERDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JERDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JERDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8760
 * 
 *     property vbfMassWoNoisyJets_JERUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JERUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_24vbfMassWoNoisyJets_JERUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_24vbfMassWoNoisyJets_JERUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_24vbfMassWoNoisyJets_JERUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_24vbfMassWoNoisyJets_JERUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8761
 *     property vbfMassWoNoisyJets_JERUp:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JERUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JERUp_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JERUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8762
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JERUp_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetAbsoluteDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JERUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8762, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8760
 * 
 *     property vbfMassWoNoisyJets_JERUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JERUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JERUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JERUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8765
 * 
 *     property vbfMassWoNoisyJets_JetAbsoluteDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetAbsoluteDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_34vbfMassWoNoisyJets_JetAbsoluteDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_34vbfMassWoNoisyJets_JetAbsoluteDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_34vbfMassWoNoisyJets_JetAbsoluteDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_34vbfMassWoNoisyJets_JetAbsoluteDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8766
 *     property vbfMassWoNoisyJets_JetAbsoluteDown:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetAbsoluteDown_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8767
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetAbsoluteDown_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetAbsoluteUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8767, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8765
 * 
 *     property vbfMassWoNoisyJets_JetAbsoluteDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetAbsoluteDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetAbsoluteDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetAbsoluteDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8770
 * 
 *     property vbfMassWoNoisyJets_JetAbsoluteUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetAbsoluteUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32vbfMassWoNoisyJets_JetAbsoluteUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32vbfMassWoNoisyJets_JetAbsoluteUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32vbfMassWoNoisyJets_JetAbsoluteUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32vbfMassWoNoisyJets_JetAbsoluteUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8771
 *     property vbfMassWoNoisyJets_JetAbsoluteUp:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetAbsoluteUp_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8772
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetAbsoluteUp_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetAbsoluteyearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8772, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8770
 * 
 *     property vbfMassWoNoisyJets_JetAbsoluteUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetAbsoluteUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetAbsoluteUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetAbsoluteUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8775
 * 
 *     property vbfMassWoNoisyJets_JetAbsoluteyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetAbsoluteyearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_38vbfMassWoNoisyJets_JetAbsoluteyearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_38vbfMassWoNoisyJets_JetAbsoluteyearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_38vbfMassWoNoisyJets_JetAbsoluteyearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_38vbfMassWoNoisyJets_JetAbsoluteyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8776
 *     property vbfMassWoNoisyJets_JetAbsoluteyearDown:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetAbsoluteyearDown_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteyearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8777
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetAbsoluteyearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetAbsoluteyearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteyearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8777, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8775
 * 
 *     property vbfMassWoNoisyJets_JetAbsoluteyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetAbsoluteyearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetAbsoluteyearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8780
 * 
 *     property vbfMassWoNoisyJets_JetAbsoluteyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetAbsoluteyearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_36vbfMassWoNoisyJets_JetAbsoluteyearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_36vbfMassWoNoisyJets_JetAbsoluteyearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_36vbfMassWoNoisyJets_JetAbsoluteyearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_36vbfMassWoNoisyJets_JetAbsoluteyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8781
 *     property vbfMassWoNoisyJets_JetAbsoluteyearUp:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetAbsoluteyearUp_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteyearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8782
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetAbsoluteyearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetBBEC1Down:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetAbsoluteyearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8782, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8780
 * 
 *     property vbfMassWoNoisyJets_JetAbsoluteyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetAbsoluteyearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetAbsoluteyearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8785
 * 
 *     property vbfMassWoNoisyJets_JetBBEC1Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetBBEC1Down_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetBBEC1Down_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetBBEC1Down_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetBBEC1Down___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetBBEC1Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8786
 *     property vbfMassWoNoisyJets_JetBBEC1Down:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetBBEC1Down_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetBBEC1Down_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetBBEC1Down_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8787
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetBBEC1Down_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetBBEC1Up:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetBBEC1Down_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8787, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8785
 * 
 *     property vbfMassWoNoisyJets_JetBBEC1Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetBBEC1Down_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetBBEC1Down_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetBBEC1Down.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8790
 * 
 *     property vbfMassWoNoisyJets_JetBBEC1Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetBBEC1Up_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetBBEC1Up_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetBBEC1Up_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetBBEC1Up___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetBBEC1Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8791
 *     property vbfMassWoNoisyJets_JetBBEC1Up:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetBBEC1Up_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetBBEC1Up_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetBBEC1Up_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8792
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetBBEC1Up_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetBBEC1yearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetBBEC1Up_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8792, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8790
 * 
 *     property vbfMassWoNoisyJets_JetBBEC1Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetBBEC1Up_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetBBEC1Up_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetBBEC1Up.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8795
 * 
 *     property vbfMassWoNoisyJets_JetBBEC1yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetBBEC1yearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetBBEC1yearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetBBEC1yearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetBBEC1yearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetBBEC1yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8796
 *     property vbfMassWoNoisyJets_JetBBEC1yearDown:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetBBEC1yearDown_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetBBEC1yearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8797
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetBBEC1yearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetBBEC1yearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetBBEC1yearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8797, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8795
 * 
 *     property vbfMassWoNoisyJets_JetBBEC1yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetBBEC1yearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetBBEC1yearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8800
 * 
 *     property vbfMassWoNoisyJets_JetBBEC1yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetBBEC1yearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetBBEC1yearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetBBEC1yearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetBBEC1yearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetBBEC1yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8801
 *     property vbfMassWoNoisyJets_JetBBEC1yearUp:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetBBEC1yearUp_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetBBEC1yearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8802
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetBBEC1yearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetEC2Down:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetBBEC1yearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8802, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8800
 * 
 *     property vbfMassWoNoisyJets_JetBBEC1yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetBBEC1yearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetBBEC1yearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8805
 * 
 *     property vbfMassWoNoisyJets_JetEC2Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetEC2Down_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetEC2Down_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetEC2Down_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetEC2Down___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetEC2Down___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8806
 *     property vbfMassWoNoisyJets_JetEC2Down:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetEC2Down_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetEC2Down_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetEC2Down_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8807
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetEC2Down_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetEC2Up:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetEC2Down_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8807, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8805
 * 
 *     property vbfMassWoNoisyJets_JetEC2Down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetEC2Down_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetEC2Down_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetEC2Down.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8810
 * 
 *     property vbfMassWoNoisyJets_JetEC2Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetEC2Up_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_27vbfMassWoNoisyJets_JetEC2Up_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_27vbfMassWoNoisyJets_JetEC2Up_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_27vbfMassWoNoisyJets_JetEC2Up___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_27vbfMassWoNoisyJets_JetEC2Up___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8811
 *     property vbfMassWoNoisyJets_JetEC2Up:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetEC2Up_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetEC2Up_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetEC2Up_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8812
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetEC2Up_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetEC2yearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetEC2Up_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8812, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8810
 * 
 *     property vbfMassWoNoisyJets_JetEC2Up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetEC2Up_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetEC2Up_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetEC2Up.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8815
 * 
 *     property vbfMassWoNoisyJets_JetEC2yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetEC2yearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetEC2yearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetEC2yearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetEC2yearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetEC2yearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8816
 *     property vbfMassWoNoisyJets_JetEC2yearDown:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetEC2yearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetEC2yearDown_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetEC2yearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8817
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetEC2yearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetEC2yearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetEC2yearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8817, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8815
 * 
 *     property vbfMassWoNoisyJets_JetEC2yearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetEC2yearDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetEC2yearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetEC2yearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8820
 * 
 *     property vbfMassWoNoisyJets_JetEC2yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetEC2yearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetEC2yearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetEC2yearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetEC2yearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetEC2yearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8821
 *     property vbfMassWoNoisyJets_JetEC2yearUp:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetEC2yearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetEC2yearUp_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetEC2yearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8822
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetEC2yearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetFlavorQCDDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetEC2yearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8822, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8820
 * 
 *     property vbfMassWoNoisyJets_JetEC2yearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetEC2yearUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetEC2yearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetEC2yearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8825
 * 
 *     property vbfMassWoNoisyJets_JetFlavorQCDDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetFlavorQCDDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetFlavorQCDDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetFlavorQCDDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetFlavorQCDDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetFlavorQCDDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8826
 *     property vbfMassWoNoisyJets_JetFlavorQCDDown:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetFlavorQCDDown_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetFlavorQCDDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8827
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetFlavorQCDDown_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetFlavorQCDUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetFlavorQCDDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8827, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8825
 * 
 *     property vbfMassWoNoisyJets_JetFlavorQCDDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetFlavorQCDDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetFlavorQCDDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8830
 * 
 *     property vbfMassWoNoisyJets_JetFlavorQCDUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetFlavorQCDUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetFlavorQCDUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetFlavorQCDUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetFlavorQCDUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetFlavorQCDUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8831
 *     property vbfMassWoNoisyJets_JetFlavorQCDUp:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetFlavorQCDUp_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetFlavorQCDUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8832
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetFlavorQCDUp_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetHFDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetFlavorQCDUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8832, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8830
 * 
 *     property vbfMassWoNoisyJets_JetFlavorQCDUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetFlavorQCDUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetFlavorQCDUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8835
 * 
 *     property vbfMassWoNoisyJets_JetHFDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetHFDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_28vbfMassWoNoisyJets_JetHFDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_28vbfMassWoNoisyJets_JetHFDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_28vbfMassWoNoisyJets_JetHFDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_28vbfMassWoNoisyJets_JetHFDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8836
 *     property vbfMassWoNoisyJets_JetHFDown:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetHFDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetHFDown_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetHFDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8837
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetHFDown_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetHFUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetHFDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8837, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8835
 * 
 *     property vbfMassWoNoisyJets_JetHFDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetHFDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetHFDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetHFDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8840
 * 
 *     property vbfMassWoNoisyJets_JetHFUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetHFUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_26vbfMassWoNoisyJets_JetHFUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_26vbfMassWoNoisyJets_JetHFUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_26vbfMassWoNoisyJets_JetHFUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_26vbfMassWoNoisyJets_JetHFUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8841
 *     property vbfMassWoNoisyJets_JetHFUp:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetHFUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetHFUp_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetHFUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8842
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetHFUp_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetHFyearDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetHFUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8842, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8840
 * 
 *     property vbfMassWoNoisyJets_JetHFUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetHFUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetHFUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetHFUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8845
 * 
 *     property vbfMassWoNoisyJets_JetHFyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetHFyearDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_32vbfMassWoNoisyJets_JetHFyearDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_32vbfMassWoNoisyJets_JetHFyearDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_32vbfMassWoNoisyJets_JetHFyearDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_32vbfMassWoNoisyJets_JetHFyearDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8846
 *     property vbfMassWoNoisyJets_JetHFyearDown:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetHFyearDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetHFyearDown_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetHFyearDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8847
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetHFyearDown_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetHFyearUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetHFyearDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8845
 * 
 *     property vbfMassWoNoisyJets_JetHFyearDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetHFyearDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetHFyearDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetHFyearDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8850
 * 
 *     property vbfMassWoNoisyJets_JetHFyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetHFyearUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_30vbfMassWoNoisyJets_JetHFyearUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_30vbfMassWoNoisyJets_JetHFyearUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_30vbfMassWoNoisyJets_JetHFyearUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_30vbfMassWoNoisyJets_JetHFyearUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8851
 *     property vbfMassWoNoisyJets_JetHFyearUp:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetHFyearUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetHFyearUp_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetHFyearUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8852
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetHFyearUp_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetRelativeBalDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetHFyearUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8852, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8850
 * 
 *     property vbfMassWoNoisyJets_JetHFyearUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetHFyearUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetHFyearUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetHFyearUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8855
 * 
 *     property vbfMassWoNoisyJets_JetRelativeBalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetRelativeBalDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_37vbfMassWoNoisyJets_JetRelativeBalDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_37vbfMassWoNoisyJets_JetRelativeBalDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_37vbfMassWoNoisyJets_JetRelativeBalDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_37vbfMassWoNoisyJets_JetRelativeBalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8856
 *     property vbfMassWoNoisyJets_JetRelativeBalDown:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetRelativeBalDown_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetRelativeBalDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8857
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetRelativeBalDown_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetRelativeBalUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetRelativeBalDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8857, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8855
 * 
 *     property vbfMassWoNoisyJets_JetRelativeBalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetRelativeBalDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetRelativeBalDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetRelativeBalDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8860
 * 
 *     property vbfMassWoNoisyJets_JetRelativeBalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetRelativeBalUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetRelativeBalUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetRelativeBalUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetRelativeBalUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetRelativeBalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8861
 *     property vbfMassWoNoisyJets_JetRelativeBalUp:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetRelativeBalUp_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetRelativeBalUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8862
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetRelativeBalUp_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetRelativeSampleDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetRelativeBalUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8862, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8860
 * 
 *     property vbfMassWoNoisyJets_JetRelativeBalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetRelativeBalUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetRelativeBalUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetRelativeBalUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8865
 * 
 *     property vbfMassWoNoisyJets_JetRelativeSampleDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetRelativeSampleDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_40vbfMassWoNoisyJets_JetRelativeSampleDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_40vbfMassWoNoisyJets_JetRelativeSampleDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_40vbfMassWoNoisyJets_JetRelativeSampleDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_40vbfMassWoNoisyJets_JetRelativeSampleDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8866
 *     property vbfMassWoNoisyJets_JetRelativeSampleDown:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetRelativeSampleDown_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetRelativeSampleDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8867
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetRelativeSampleDown_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetRelativeSampleUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetRelativeSampleDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8867, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8865
 * 
 *     property vbfMassWoNoisyJets_JetRelativeSampleDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetRelativeSampleDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetRelativeSampleDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8870
 * 
 *     property vbfMassWoNoisyJets_JetRelativeSampleUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetRelativeSampleUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_38vbfMassWoNoisyJets_JetRelativeSampleUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_38vbfMassWoNoisyJets_JetRelativeSampleUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_38vbfMassWoNoisyJets_JetRelativeSampleUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_38vbfMassWoNoisyJets_JetRelativeSampleUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8871
 *     property vbfMassWoNoisyJets_JetRelativeSampleUp:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetRelativeSampleUp_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetRelativeSampleUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8872
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetRelativeSampleUp_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetTotalDown:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetRelativeSampleUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8870
 * 
 *     property vbfMassWoNoisyJets_JetRelativeSampleUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetRelativeSampleUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetRelativeSampleUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8875
 * 
 *     property vbfMassWoNoisyJets_JetTotalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetTotalDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetTotalDown_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetTotalDown_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetTotalDown_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetTotalDown___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetTotalDown___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8876
 *     property vbfMassWoNoisyJets_JetTotalDown:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetTotalDown_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetTotalDown_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetTotalDown_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8877
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetTotalDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetTotalDown_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMassWoNoisyJets_JetTotalUp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetTotalDown_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8875
 * 
 *     property vbfMassWoNoisyJets_JetTotalDown:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetTotalDown_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetTotalDown_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetTotalDown.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8880
 * 
 *     property vbfMassWoNoisyJets_JetTotalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetTotalUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetTotalUp_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetTotalUp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetTotalUp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetTotalUp___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetTotalUp___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8881
 *     property vbfMassWoNoisyJets_JetTotalUp:
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetTotalUp_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMassWoNoisyJets_JetTotalUp_value
 * 
 */
  (void)(__pyx_v_self->vbfMassWoNoisyJets_JetTotalUp_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8882
 *         def __get__(self):
 *             self.vbfMassWoNoisyJets_JetTotalUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetTotalUp_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfNJets20:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMassWoNoisyJets_JetTotalUp_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8882, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8880
 * 
 *     property vbfMassWoNoisyJets_JetTotalUp:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMassWoNoisyJets_JetTotalUp_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMassWoNoisyJets_JetTotalUp_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfMassWoNoisyJets_JetTotalUp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8885
 * 
 *     property vbfNJets20:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfNJets20_branch.GetEntry(self.localentry, 0)
 *             return self.vbfNJets20_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10vbfNJets20_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10vbfNJets20_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10vbfNJets20___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10vbfNJets20___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8886
 *     property vbfNJets20:
 *         def __get__(self):
 *             self.vbfNJets20_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfNJets20_value
 * 
 */
  (void)(__pyx_v_self->vbfNJets20_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8887
 *         def __get__(self):
 *             self.vbfNJets20_branch.GetEntry(self.localentry, 0)
 *             return self.vbfNJets20_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfNJets30:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfNJets20_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8887, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8885
 * 
 *     property vbfNJets20:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfNJets20_branch.GetEntry(self.localentry, 0)
 *             return self.vbfNJets20_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfNJets20.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8890
 * 
 *     property vbfNJets30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfNJets30_branch.GetEntry(self.localentry, 0)
 *             return self.vbfNJets30_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10vbfNJets30_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10vbfNJets30_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10vbfNJets30___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10vbfNJets30___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8891
 *     property vbfNJets30:
 *         def __get__(self):
 *             self.vbfNJets30_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfNJets30_value
 * 
 */
  (void)(__pyx_v_self->vbfNJets30_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8892
 *         def __get__(self):
 *             self.vbfNJets30_branch.GetEntry(self.localentry, 0)
 *             return self.vbfNJets30_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfj1eta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfNJets30_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8892, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8890
 * 
 *     property vbfNJets30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfNJets30_branch.GetEntry(self.localentry, 0)
 *             return self.vbfNJets30_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfNJets30.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8895
 * 
 *     property vbfj1eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj1eta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj1eta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_8vbfj1eta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_8vbfj1eta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_8vbfj1eta___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_8vbfj1eta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8896
 *     property vbfj1eta:
 *         def __get__(self):
 *             self.vbfj1eta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfj1eta_value
 * 
 */
  (void)(__pyx_v_self->vbfj1eta_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8897
 *         def __get__(self):
 *             self.vbfj1eta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj1eta_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfj1pt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfj1eta_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8897, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8895
 * 
 *     property vbfj1eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj1eta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj1eta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfj1eta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8900
 * 
 *     property vbfj1pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj1pt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj1pt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_7vbfj1pt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_7vbfj1pt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_7vbfj1pt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_7vbfj1pt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8901
 *     property vbfj1pt:
 *         def __get__(self):
 *             self.vbfj1pt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfj1pt_value
 * 
 */
  (void)(__pyx_v_self->vbfj1pt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8902
 *         def __get__(self):
 *             self.vbfj1pt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj1pt_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfj2eta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfj1pt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8900
 * 
 *     property vbfj1pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj1pt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj1pt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfj1pt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8905
 * 
 *     property vbfj2eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj2eta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj2eta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_8vbfj2eta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_8vbfj2eta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_8vbfj2eta___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_8vbfj2eta___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8906
 *     property vbfj2eta:
 *         def __get__(self):
 *             self.vbfj2eta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfj2eta_value
 * 
 */
  (void)(__pyx_v_self->vbfj2eta_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8907
 *         def __get__(self):
 *             self.vbfj2eta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj2eta_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfj2pt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfj2eta_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8907, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8905
 * 
 *     property vbfj2eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj2eta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj2eta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfj2eta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8910
 * 
 *     property vbfj2pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj2pt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj2pt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_7vbfj2pt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_7vbfj2pt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_7vbfj2pt___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_7vbfj2pt___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8911
 *     property vbfj2pt:
 *         def __get__(self):
 *             self.vbfj2pt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfj2pt_value
 * 
 */
  (void)(__pyx_v_self->vbfj2pt_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8912
 *         def __get__(self):
 *             self.vbfj2pt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj2pt_value             # <<<<<<<<<<<<<<
 * 
 *     property vispX:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfj2pt_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8912, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8910
 * 
 *     property vbfj2pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj2pt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj2pt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vbfj2pt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8915
 * 
 *     property vispX:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vispX_branch.GetEntry(self.localentry, 0)
 *             return self.vispX_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5vispX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5vispX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5vispX___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5vispX___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8916
 *     property vispX:
 *         def __get__(self):
 *             self.vispX_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vispX_value
 * 
 */
  (void)(__pyx_v_self->vispX_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8917
 *         def __get__(self):
 *             self.vispX_branch.GetEntry(self.localentry, 0)
 *             return self.vispX_value             # <<<<<<<<<<<<<<
 * 
 *     property vispY:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vispX_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8917, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8915
 * 
 *     property vispX:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vispX_branch.GetEntry(self.localentry, 0)
 *             return self.vispX_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vispX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8920
 * 
 *     property vispY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vispY_branch.GetEntry(self.localentry, 0)
 *             return self.vispY_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_5vispY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_5vispY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_5vispY___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_5vispY___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8921
 *     property vispY:
 *         def __get__(self):
 *             self.vispY_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vispY_value
 * 
 */
  (void)(__pyx_v_self->vispY_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8922
 *         def __get__(self):
 *             self.vispY_branch.GetEntry(self.localentry, 0)
 *             return self.vispY_value             # <<<<<<<<<<<<<<
 * 
 *     property idx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vispY_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8922, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8920
 * 
 *     property vispY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vispY_branch.GetEntry(self.localentry, 0)
 *             return self.vispY_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.vispY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":8925
 * 
 *     property idx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.idx_branch.GetEntry(self.localentry, 0)
 *             return self.idx_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_3idx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_3idx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_3idx___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_3idx___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "EMTree.pyx":8926
 *     property idx:
 *         def __get__(self):
 *             self.idx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.idx_value
 * 
 */
  (void)(__pyx_v_self->idx_branch->GetEntry(__pyx_v_self->localentry, 0));

  /* "EMTree.pyx":8927
 *         def __get__(self):
 *             self.idx_branch.GetEntry(self.localentry, 0)
 *             return self.idx_value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->idx_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8927, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "EMTree.pyx":8925
 * 
 *     property idx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.idx_branch.GetEntry(self.localentry, 0)
 *             return self.idx_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.idx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "EMTree.pyx":51
 *     cdef long localentry
 *     # Keep track of missing branches we have complained about.
 *     cdef public set complained             # <<<<<<<<<<<<<<
 * 
 *     # Branches and address for all
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_10complained_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_10complained_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10complained___get__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10complained___get__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->complained);
  __pyx_r = __pyx_v_self->complained;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_6EMTree_6EMTree_10complained_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_6EMTree_6EMTree_10complained_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10complained_2__set__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6EMTree_6EMTree_10complained_2__set__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PySet_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "set", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 51, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->complained);
  __Pyx_DECREF(__pyx_v_self->complained);
  __pyx_v_self->complained = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.complained.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_6EMTree_6EMTree_10complained_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_6EMTree_6EMTree_10complained_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10complained_4__del__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6EMTree_6EMTree_10complained_4__del__(struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->complained);
  __Pyx_DECREF(__pyx_v_self->complained);
  __pyx_v_self->complained = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_8__reduce_cython__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6EMTree_EMTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__520, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6EMTree_6EMTree_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6EMTree_6EMTree_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6EMTree_6EMTree_10__setstate_cython__(((struct __pyx_obj_6EMTree_EMTree *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6EMTree_6EMTree_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6EMTree_EMTree *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__521, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("EMTree.EMTree.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_6EMTree_EMTree __pyx_vtable_6EMTree_EMTree;

static PyObject *__pyx_tp_new_6EMTree_EMTree(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6EMTree_EMTree *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6EMTree_EMTree *)o);
  p->__pyx_vtab = __pyx_vtabptr_6EMTree_EMTree;
  p->complained = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_6EMTree_6EMTree_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6EMTree_EMTree(PyObject *o) {
  struct __pyx_obj_6EMTree_EMTree *p = (struct __pyx_obj_6EMTree_EMTree *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->complained);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_6EMTree_EMTree(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6EMTree_EMTree *p = (struct __pyx_obj_6EMTree_EMTree *)o;
  if (p->complained) {
    e = (*v)(p->complained, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6EMTree_EMTree(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_6EMTree_EMTree *p = (struct __pyx_obj_6EMTree_EMTree *)o;
  tmp = ((PyObject*)p->complained);
  p->complained = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_entry(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5entry_1__get__(o);
}

static int __pyx_setprop_6EMTree_6EMTree_entry(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_6EMTree_6EMTree_5entry_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Ele24LooseHPSTau30Pass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_22Ele24LooseHPSTau30Pass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Ele24LooseHPSTau30TightIDPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_29Ele24LooseHPSTau30TightIDPass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Ele24LooseTau30Pass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_19Ele24LooseTau30Pass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Ele24LooseTau30TightIDPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_26Ele24LooseTau30TightIDPass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Ele27WPTightPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16Ele27WPTightPass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Ele32WPTightPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16Ele32WPTightPass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Ele35WPTightPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16Ele35WPTightPass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_EmbPtWeight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11EmbPtWeight_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Eta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_3Eta_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Flag_BadChargedCandidateFilter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_30Flag_BadChargedCandidateFilter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Flag_BadPFMuonFilter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20Flag_BadPFMuonFilter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Flag_EcalDeadCellTriggerPrimitiveFilter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_39Flag_EcalDeadCellTriggerPrimitiveFilter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Flag_HBHENoiseFilter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20Flag_HBHENoiseFilter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Flag_HBHENoiseIsoFilter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_23Flag_HBHENoiseIsoFilter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Flag_ecalBadCalibReducedMINIAODFilter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_37Flag_ecalBadCalibReducedMINIAODFilter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Flag_eeBadScFilter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_18Flag_eeBadScFilter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Flag_globalSuperTightHalo2016Filter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35Flag_globalSuperTightHalo2016Filter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Flag_goodVertices(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_17Flag_goodVertices_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_GenWeight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_9GenWeight_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Ht(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_2Ht_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_IsoMu24Pass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11IsoMu24Pass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_IsoMu27Pass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11IsoMu27Pass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_LT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_2LT_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Mass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_4Mass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_MassError(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_9MassError_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_MassErrord1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11MassErrord1_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_MassErrord2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11MassErrord2_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_MassErrord3(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11MassErrord3_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_MassErrord4(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11MassErrord4_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Mt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_2Mt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Mu50Pass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_8Mu50Pass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_NUP(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_3NUP_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_3Phi_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_Pt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_2Pt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_bjetDeepCSVVeto20Medium_2016_DR0p5(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2016_DR0p5_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_bjetDeepCSVVeto20Medium_2017_DR0p5(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2017_DR0p5_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_bjetDeepCSVVeto20Medium_2018_DR0p5(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto20Medium_2018_DR0p5_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_bjetDeepCSVVeto30Medium_2016_DR0p5(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2016_DR0p5_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_bjetDeepCSVVeto30Medium_2017_DR0p5(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2017_DR0p5_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_bjetDeepCSVVeto30Medium_2018_DR0p5(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34bjetDeepCSVVeto30Medium_2018_DR0p5_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_bweight_2016(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12bweight_2016_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_bweight_2017(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12bweight_2017_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_bweight_2018(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12bweight_2018_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_charge(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6charge_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_deepcsvb1_btagscore(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_19deepcsvb1_btagscore_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_deepcsvb1_eta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_13deepcsvb1_eta_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_deepcsvb1_hadronflavour(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_23deepcsvb1_hadronflavour_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_deepcsvb1_m(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11deepcsvb1_m_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_deepcsvb1_phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_13deepcsvb1_phi_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_deepcsvb1_pt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12deepcsvb1_pt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_deepcsvb2_btagscore(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_19deepcsvb2_btagscore_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_deepcsvb2_eta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_13deepcsvb2_eta_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_deepcsvb2_hadronflavour(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_23deepcsvb2_hadronflavour_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_deepcsvb2_m(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11deepcsvb2_m_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_deepcsvb2_phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_13deepcsvb2_phi_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_deepcsvb2_pt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12deepcsvb2_pt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_dielectronVeto(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_14dielectronVeto_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_dimuonVeto(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10dimuonVeto_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eCharge(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_7eCharge_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eComesFromHiggs(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_15eComesFromHiggs_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eCorrectedEt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12eCorrectedEt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eEnergyError(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12eEnergyError_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eEnergyScaleDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16eEnergyScaleDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eEnergyScaleGainDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20eEnergyScaleGainDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eEnergyScaleGainUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_18eEnergyScaleGainUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eEnergyScaleStatDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20eEnergyScaleStatDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eEnergyScaleStatUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_18eEnergyScaleStatUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eEnergyScaleSystDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20eEnergyScaleSystDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eEnergyScaleSystUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_18eEnergyScaleSystUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eEnergyScaleUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_14eEnergyScaleUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eEnergySigmaDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16eEnergySigmaDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eEnergySigmaPhiDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_19eEnergySigmaPhiDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eEnergySigmaPhiUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_17eEnergySigmaPhiUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eEnergySigmaRhoDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_19eEnergySigmaRhoDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eEnergySigmaRhoUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_17eEnergySigmaRhoUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eEnergySigmaUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_14eEnergySigmaUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eEta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_4eEta_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eGenCharge(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10eGenCharge_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eGenDirectPromptTauDecay(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_24eGenDirectPromptTauDecay_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eGenEnergy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10eGenEnergy_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eGenEta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_7eGenEta_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eGenIsPrompt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12eGenIsPrompt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eGenMotherPdgId(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_15eGenMotherPdgId_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eGenParticle(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12eGenParticle_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eGenPdgId(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_9eGenPdgId_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eGenPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_7eGenPhi_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eGenPrompt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10eGenPrompt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eGenPromptTauDecay(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_18eGenPromptTauDecay_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eGenPt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6eGenPt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eGenTauDecay(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12eGenTauDecay_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eGenVZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6eGenVZ_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eGenVtxPVMatch(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_14eGenVtxPVMatch_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eIP3D(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5eIP3D_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eIP3DErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_8eIP3DErr_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eIsoDB03(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_8eIsoDB03_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eJetArea(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_8eJetArea_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eJetBtag(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_8eJetBtag_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eJetDR(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6eJetDR_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eJetEtaEtaMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16eJetEtaEtaMoment_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eJetEtaPhiMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16eJetEtaPhiMoment_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eJetEtaPhiSpread(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16eJetEtaPhiSpread_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eJetHadronFlavour(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_17eJetHadronFlavour_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eJetPFCISVBtag(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_14eJetPFCISVBtag_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eJetPartonFlavour(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_17eJetPartonFlavour_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eJetPhiPhiMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16eJetPhiPhiMoment_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eJetPt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6eJetPt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMVAIsoWP80(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11eMVAIsoWP80_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMVAIsoWP90(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11eMVAIsoWP90_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMVANoisoWP80(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_13eMVANoisoWP80_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMVANoisoWP90(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_13eMVANoisoWP90_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5eMass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchEmbeddedFilterEle24Tau30(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_30eMatchEmbeddedFilterEle24Tau30_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchEmbeddedFilterEle27(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_25eMatchEmbeddedFilterEle27_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchEmbeddedFilterEle32(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_25eMatchEmbeddedFilterEle32_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchEmbeddedFilterEle32DoubleL1_v1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_36eMatchEmbeddedFilterEle32DoubleL1_v1_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchEmbeddedFilterEle32DoubleL1_v2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_36eMatchEmbeddedFilterEle32DoubleL1_v2_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchEmbeddedFilterEle35(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_25eMatchEmbeddedFilterEle35_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesEle24HPSTau30Filter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_27eMatchesEle24HPSTau30Filter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesEle24HPSTau30Path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_25eMatchesEle24HPSTau30Path_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesEle24Tau30Filter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_24eMatchesEle24Tau30Filter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesEle24Tau30Path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_22eMatchesEle24Tau30Path_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesEle25Filter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_19eMatchesEle25Filter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesEle25Path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_17eMatchesEle25Path_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesEle27Filter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_19eMatchesEle27Filter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesEle27Path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_17eMatchesEle27Path_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesEle32Filter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_19eMatchesEle32Filter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesEle32Path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_17eMatchesEle32Path_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesEle35Filter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_19eMatchesEle35Filter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesEle35Path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_17eMatchesEle35Path_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesMu23e12DZFilter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_23eMatchesMu23e12DZFilter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesMu23e12DZPath(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_21eMatchesMu23e12DZPath_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesMu23e12Filter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_21eMatchesMu23e12Filter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesMu23e12Path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_19eMatchesMu23e12Path_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesMu8e23DZFilter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_22eMatchesMu8e23DZFilter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesMu8e23DZPath(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20eMatchesMu8e23DZPath_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesMu8e23Filter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20eMatchesMu8e23Filter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMatchesMu8e23Path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_18eMatchesMu8e23Path_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eMissingHits(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12eMissingHits_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_ePVDXY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6ePVDXY_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_ePVDZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5ePVDZ_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_ePassesConversionVeto(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_21ePassesConversionVeto_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_ePhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_4ePhi_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_ePt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_3ePt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eRelPFIsoRho(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12eRelPFIsoRho_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eSIP2D(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6eSIP2D_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eSIP3D(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6eSIP3D_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eVZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_3eVZ_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eVetoMVAIsoVtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_14eVetoMVAIsoVtx_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eVetoZTTp001dxyz(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16eVetoZTTp001dxyz_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eZTTGenMatching(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_15eZTTGenMatching_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_e_m_PZeta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_9e_m_PZeta_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_e_m_PZetaVis(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12e_m_PZetaVis_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_e_m_doubleL1IsoTauMatch(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_23e_m_doubleL1IsoTauMatch_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_eecalEnergy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11eecalEnergy_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_evt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_3evt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_genEta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6genEta_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_genHTT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6genHTT_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_genM(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_4genM_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_genMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_7genMass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_genPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6genPhi_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_genpT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5genpT_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_genpX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5genpX_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_genpY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5genpY_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_isGtautau(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_9isGtautau_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_isWenu(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6isWenu_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_isWmunu(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_7isWmunu_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_isWtaunu(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_8isWtaunu_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_isZee(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5isZee_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_isZmumu(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_7isZmumu_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_isZtautau(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_9isZtautau_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_isdata(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6isdata_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_isembed(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_7isembed_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1csv(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5j1csv_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1csvWoNoisyJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16j1csvWoNoisyJets_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1eta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5j1eta_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1etaWoNoisyJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16j1etaWoNoisyJets_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1hadronflavor(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_14j1hadronflavor_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1hadronflavorWoNoisyJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_25j1hadronflavorWoNoisyJets_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5j1phi_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1phiWoNoisyJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16j1phiWoNoisyJets_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1pt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_4j1pt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_15j1ptWoNoisyJets_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JERDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_23j1ptWoNoisyJets_JERDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JERUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_21j1ptWoNoisyJets_JERUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetAbsoluteDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_31j1ptWoNoisyJets_JetAbsoluteDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetAbsoluteUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_29j1ptWoNoisyJets_JetAbsoluteUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetAbsoluteyearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35j1ptWoNoisyJets_JetAbsoluteyearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetAbsoluteyearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_33j1ptWoNoisyJets_JetAbsoluteyearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetBBEC1Down(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_28j1ptWoNoisyJets_JetBBEC1Down_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetBBEC1Up(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_26j1ptWoNoisyJets_JetBBEC1Up_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetBBEC1yearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32j1ptWoNoisyJets_JetBBEC1yearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetBBEC1yearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_30j1ptWoNoisyJets_JetBBEC1yearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetEC2Down(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_26j1ptWoNoisyJets_JetEC2Down_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetEC2Up(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_24j1ptWoNoisyJets_JetEC2Up_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetEC2yearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_30j1ptWoNoisyJets_JetEC2yearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetEC2yearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_28j1ptWoNoisyJets_JetEC2yearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetFlavorQCDDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32j1ptWoNoisyJets_JetFlavorQCDDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetFlavorQCDUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_30j1ptWoNoisyJets_JetFlavorQCDUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetHFDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_25j1ptWoNoisyJets_JetHFDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetHFUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_23j1ptWoNoisyJets_JetHFUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetHFyearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_29j1ptWoNoisyJets_JetHFyearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetHFyearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_27j1ptWoNoisyJets_JetHFyearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetRelativeBalDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34j1ptWoNoisyJets_JetRelativeBalDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetRelativeBalUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32j1ptWoNoisyJets_JetRelativeBalUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetRelativeSampleDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_37j1ptWoNoisyJets_JetRelativeSampleDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetRelativeSampleUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35j1ptWoNoisyJets_JetRelativeSampleUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2csv(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5j2csv_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2csvWoNoisyJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16j2csvWoNoisyJets_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2eta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5j2eta_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2etaWoNoisyJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16j2etaWoNoisyJets_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2hadronflavor(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_14j2hadronflavor_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2hadronflavorWoNoisyJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_25j2hadronflavorWoNoisyJets_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5j2phi_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2phiWoNoisyJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16j2phiWoNoisyJets_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2pt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_4j2pt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_15j2ptWoNoisyJets_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JERDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_23j2ptWoNoisyJets_JERDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JERUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_21j2ptWoNoisyJets_JERUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetAbsoluteDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_31j2ptWoNoisyJets_JetAbsoluteDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetAbsoluteUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_29j2ptWoNoisyJets_JetAbsoluteUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetAbsoluteyearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35j2ptWoNoisyJets_JetAbsoluteyearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetAbsoluteyearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_33j2ptWoNoisyJets_JetAbsoluteyearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetBBEC1Down(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_28j2ptWoNoisyJets_JetBBEC1Down_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetBBEC1Up(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_26j2ptWoNoisyJets_JetBBEC1Up_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetBBEC1yearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32j2ptWoNoisyJets_JetBBEC1yearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetBBEC1yearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_30j2ptWoNoisyJets_JetBBEC1yearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetEC2Down(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_26j2ptWoNoisyJets_JetEC2Down_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetEC2Up(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_24j2ptWoNoisyJets_JetEC2Up_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetEC2yearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_30j2ptWoNoisyJets_JetEC2yearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetEC2yearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_28j2ptWoNoisyJets_JetEC2yearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetFlavorQCDDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32j2ptWoNoisyJets_JetFlavorQCDDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetFlavorQCDUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_30j2ptWoNoisyJets_JetFlavorQCDUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetHFDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_25j2ptWoNoisyJets_JetHFDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetHFUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_23j2ptWoNoisyJets_JetHFUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetHFyearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_29j2ptWoNoisyJets_JetHFyearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetHFyearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_27j2ptWoNoisyJets_JetHFyearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetRelativeBalDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34j2ptWoNoisyJets_JetRelativeBalDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetRelativeBalUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32j2ptWoNoisyJets_JetRelativeBalUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetRelativeSampleDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_37j2ptWoNoisyJets_JetRelativeSampleDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetRelativeSampleUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35j2ptWoNoisyJets_JetRelativeSampleUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb1eta_2016(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11jb1eta_2016_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb1eta_2017(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11jb1eta_2017_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb1eta_2018(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11jb1eta_2018_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb1hadronflavor_2016(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20jb1hadronflavor_2016_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb1hadronflavor_2017(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20jb1hadronflavor_2017_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb1hadronflavor_2018(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20jb1hadronflavor_2018_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb1phi_2016(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11jb1phi_2016_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb1phi_2017(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11jb1phi_2017_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb1phi_2018(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11jb1phi_2018_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb1pt_2016(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10jb1pt_2016_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb1pt_2017(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10jb1pt_2017_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb1pt_2018(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10jb1pt_2018_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb2eta_2016(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11jb2eta_2016_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb2eta_2017(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11jb2eta_2017_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb2eta_2018(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11jb2eta_2018_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb2hadronflavor_2016(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20jb2hadronflavor_2016_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb2hadronflavor_2017(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20jb2hadronflavor_2017_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb2hadronflavor_2018(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20jb2hadronflavor_2018_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb2phi_2016(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11jb2phi_2016_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb2phi_2017(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11jb2phi_2017_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb2phi_2018(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11jb2phi_2018_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb2pt_2016(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10jb2pt_2016_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb2pt_2017(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10jb2pt_2017_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jb2pt_2018(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10jb2pt_2018_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto20(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_9jetVeto20_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto20WoNoisyJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20jetVeto20WoNoisyJets_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_9jetVeto30_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20jetVeto30WoNoisyJets_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JERDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_28jetVeto30WoNoisyJets_JERDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JERUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_26jetVeto30WoNoisyJets_JERUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetAbsoluteDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_36jetVeto30WoNoisyJets_JetAbsoluteDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetAbsoluteUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34jetVeto30WoNoisyJets_JetAbsoluteUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetAbsoluteyearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_40jetVeto30WoNoisyJets_JetAbsoluteyearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetAbsoluteyearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_38jetVeto30WoNoisyJets_JetAbsoluteyearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetBBEC1Down(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetBBEC1Down_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetBBEC1Up(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetBBEC1Up_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetBBEC1yearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_37jetVeto30WoNoisyJets_JetBBEC1yearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetBBEC1yearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetBBEC1yearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetEC2Down(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetEC2Down_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetEC2Up(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_29jetVeto30WoNoisyJets_JetEC2Up_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetEC2yearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetEC2yearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetEC2yearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetEC2yearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetFlavorQCDDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_37jetVeto30WoNoisyJets_JetFlavorQCDDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetFlavorQCDUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35jetVeto30WoNoisyJets_JetFlavorQCDUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetHFDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_30jetVeto30WoNoisyJets_JetHFDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetHFUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_28jetVeto30WoNoisyJets_JetHFUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetHFyearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34jetVeto30WoNoisyJets_JetHFyearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetHFyearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32jetVeto30WoNoisyJets_JetHFyearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_50jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_48jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetRelativeSampleDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_42jetVeto30WoNoisyJets_JetRelativeSampleDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetRelativeSampleUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_40jetVeto30WoNoisyJets_JetRelativeSampleUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetTotalDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_33jetVeto30WoNoisyJets_JetTotalDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetTotalUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_31jetVeto30WoNoisyJets_JetTotalUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_lumi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_4lumi_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mCharge(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_7mCharge_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mComesFromHiggs(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_15mComesFromHiggs_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mEta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_4mEta_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mGenCharge(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10mGenCharge_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mGenDirectPromptTauDecayFinalState(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34mGenDirectPromptTauDecayFinalState_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mGenEnergy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10mGenEnergy_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mGenEta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_7mGenEta_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mGenIsPrompt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12mGenIsPrompt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mGenMotherPdgId(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_15mGenMotherPdgId_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mGenParticle(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12mGenParticle_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mGenPdgId(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_9mGenPdgId_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mGenPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_7mGenPhi_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mGenPrompt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10mGenPrompt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mGenPromptFinalState(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20mGenPromptFinalState_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mGenPromptTauDecay(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_18mGenPromptTauDecay_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mGenPt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6mGenPt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mGenTauDecay(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12mGenTauDecay_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mGenVZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6mGenVZ_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mGenVtxPVMatch(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_14mGenVtxPVMatch_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mIP3D(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5mIP3D_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mIP3DErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_8mIP3DErr_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mIsGlobal(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_9mIsGlobal_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mIsPFMuon(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_9mIsPFMuon_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mIsTracker(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10mIsTracker_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mJetArea(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_8mJetArea_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mJetBtag(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_8mJetBtag_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mJetDR(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6mJetDR_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mJetEtaEtaMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16mJetEtaEtaMoment_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mJetEtaPhiMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16mJetEtaPhiMoment_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mJetEtaPhiSpread(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16mJetEtaPhiSpread_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mJetHadronFlavour(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_17mJetHadronFlavour_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mJetPFCISVBtag(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_14mJetPFCISVBtag_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mJetPartonFlavour(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_17mJetPartonFlavour_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mJetPhiPhiMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16mJetPhiPhiMoment_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mJetPt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6mJetPt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5mMass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mMatchEmbeddedFilterMu24(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_24mMatchEmbeddedFilterMu24_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mMatchEmbeddedFilterMu27(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_24mMatchEmbeddedFilterMu27_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mMatchesIsoMu24Filter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_21mMatchesIsoMu24Filter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mMatchesIsoMu24Path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_19mMatchesIsoMu24Path_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mMatchesIsoMu27Filter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_21mMatchesIsoMu27Filter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mMatchesIsoMu27Path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_19mMatchesIsoMu27Path_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mMatchesMu23e12DZFilter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_23mMatchesMu23e12DZFilter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mMatchesMu23e12DZPath(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_21mMatchesMu23e12DZPath_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mMatchesMu23e12Filter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_21mMatchesMu23e12Filter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mMatchesMu23e12Path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_19mMatchesMu23e12Path_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mMatchesMu8e23DZFilter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_22mMatchesMu8e23DZFilter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mMatchesMu8e23DZPath(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20mMatchesMu8e23DZPath_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mMatchesMu8e23Filter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_20mMatchesMu8e23Filter_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mMatchesMu8e23Path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_18mMatchesMu8e23Path_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mPFIDLoose(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10mPFIDLoose_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mPFIDMedium(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11mPFIDMedium_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mPFIDTight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10mPFIDTight_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mPVDXY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6mPVDXY_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mPVDZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5mPVDZ_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_4mPhi_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mPt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_3mPt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mRelPFIsoDBDefaultR04(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_21mRelPFIsoDBDefaultR04_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mSIP2D(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6mSIP2D_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mSIP3D(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6mSIP3D_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mVZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_3mVZ_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mZTTGenMatching(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_15mZTTGenMatching_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mu12e23DZPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_13mu12e23DZPass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mu12e23Pass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11mu12e23Pass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mu23e12DZPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_13mu23e12DZPass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mu23e12Pass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11mu23e12Pass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mu8e23DZPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12mu8e23DZPass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_mu8e23Pass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10mu8e23Pass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_muGlbIsoVetoPt10(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16muGlbIsoVetoPt10_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_muVetoZTTp001dxyz(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_17muVetoZTTp001dxyz_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_nTruePU(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_7nTruePU_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_npNLO(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5npNLO_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_numGenJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10numGenJets_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_nvtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_4nvtx_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_prefiring_weight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16prefiring_weight_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_prefiring_weight_down(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_21prefiring_weight_down_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_prefiring_weight_up(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_19prefiring_weight_up_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_processID(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_9processID_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_puppiMetEt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10puppiMetEt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_puppiMetPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11puppiMetPhi_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_pvChi2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6pvChi2_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_pvDX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_4pvDX_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_pvDY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_4pvDY_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_pvDZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_4pvDZ_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_pvIsFake(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_8pvIsFake_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_pvIsValid(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_9pvIsValid_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_pvNormChi2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10pvNormChi2_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_pvRho(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5pvRho_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_pvX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_3pvX_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_pvY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_3pvY_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_pvZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_3pvZ_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_pvndof(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_6pvndof_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_recoilDaught(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12recoilDaught_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_recoilWithMet(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_13recoilWithMet_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_rho(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_3rho_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_run(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_3run_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_singleE25eta2p1TightPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_24singleE25eta2p1TightPass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_tauVetoPt20LooseMVALTVtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_24tauVetoPt20LooseMVALTVtx_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_tauVetoPtDeepVtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_16tauVetoPtDeepVtx_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_topQuarkPt1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11topQuarkPt1_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_topQuarkPt2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_11topQuarkPt2_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMetEt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_13type1_pfMetEt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMetPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_14type1_pfMetPhi_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JERDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JERDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JERUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_28type1_pfMet_shiftedPhi_JERUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetAbsoluteDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_38type1_pfMet_shiftedPhi_JetAbsoluteDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetAbsoluteUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPhi_JetAbsoluteUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetAbsoluteyearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_42type1_pfMet_shiftedPhi_JetAbsoluteyearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetAbsoluteyearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_40type1_pfMet_shiftedPhi_JetAbsoluteyearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetBBEC1Down(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetBBEC1Down_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetBBEC1Up(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetBBEC1Up_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetBBEC1yearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetBBEC1yearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetBBEC1yearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetBBEC1yearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetEC2Down(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetEC2Down_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetEC2Up(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPhi_JetEC2Up_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetEC2yearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetEC2yearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetEC2yearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetEC2yearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetEnDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_JetEnDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetEnUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JetEnUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetFlavorQCDDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetFlavorQCDDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetFlavorQCDUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_JetFlavorQCDUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetHFDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_JetHFDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetHFUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_JetHFUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetHFyearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPhi_JetHFyearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetHFyearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_JetHFyearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetRelativeBalDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_41type1_pfMet_shiftedPhi_JetRelativeBalDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetRelativeBalUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_39type1_pfMet_shiftedPhi_JetRelativeBalUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetRelativeSampleDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_44type1_pfMet_shiftedPhi_JetRelativeSampleDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetRelativeSampleUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_42type1_pfMet_shiftedPhi_JetRelativeSampleUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetResDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetResDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetResUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPhi_JetResUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetTotalDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_JetTotalDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetTotalUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPhi_JetTotalUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UesCHARGEDDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPhi_UesCHARGEDDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UesCHARGEDUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPhi_UesCHARGEDUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UesECALDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_UesECALDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UesECALUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesECALUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UesHCALDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPhi_UesHCALDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UesHCALUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesHCALUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UesHFDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPhi_UesHFDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UesHFUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPhi_UesHFUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UnclusteredEnDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_40type1_pfMet_shiftedPhi_UnclusteredEnDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UnclusteredEnUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_38type1_pfMet_shiftedPhi_UnclusteredEnUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JERDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JERDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JERUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_27type1_pfMet_shiftedPt_JERUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetAbsoluteDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPt_JetAbsoluteDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetAbsoluteUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPt_JetAbsoluteUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetAbsoluteyearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_41type1_pfMet_shiftedPt_JetAbsoluteyearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetAbsoluteyearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_39type1_pfMet_shiftedPt_JetAbsoluteyearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetBBEC1Down(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetBBEC1Down_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetBBEC1Up(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetBBEC1Up_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetBBEC1yearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetBBEC1yearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetBBEC1yearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetBBEC1yearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetEC2Down(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetEC2Down_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetEC2Up(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPt_JetEC2Up_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetEC2yearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetEC2yearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetEC2yearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetEC2yearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetEnDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPt_JetEnDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetEnUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JetEnUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetFlavorQCDDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetFlavorQCDDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetFlavorQCDUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPt_JetFlavorQCDUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetHFDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPt_JetHFDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetHFUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_29type1_pfMet_shiftedPt_JetHFUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetHFyearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35type1_pfMet_shiftedPt_JetHFyearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetHFyearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPt_JetHFyearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetRelativeBalDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_40type1_pfMet_shiftedPt_JetRelativeBalDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetRelativeBalUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_38type1_pfMet_shiftedPt_JetRelativeBalUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetRelativeSampleDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_43type1_pfMet_shiftedPt_JetRelativeSampleDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetRelativeSampleUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_41type1_pfMet_shiftedPt_JetRelativeSampleUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetResDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetResDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetResUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_30type1_pfMet_shiftedPt_JetResUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetTotalDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPt_JetTotalDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetTotalUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32type1_pfMet_shiftedPt_JetTotalUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UesCHARGEDDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_36type1_pfMet_shiftedPt_UesCHARGEDDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UesCHARGEDUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34type1_pfMet_shiftedPt_UesCHARGEDUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UesECALDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPt_UesECALDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UesECALUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesECALUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UesHCALDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_33type1_pfMet_shiftedPt_UesHCALDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UesHCALUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesHCALUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UesHFDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_31type1_pfMet_shiftedPt_UesHFDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UesHFUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_29type1_pfMet_shiftedPt_UesHFUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UnclusteredEnDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_39type1_pfMet_shiftedPt_UnclusteredEnDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UnclusteredEnUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_37type1_pfMet_shiftedPt_UnclusteredEnUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfDeta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_7vbfDeta_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfJetVeto20(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12vbfJetVeto20_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfJetVeto30(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_12vbfJetVeto30_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_7vbfMass_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_18vbfMassWoNoisyJets_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JERDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_26vbfMassWoNoisyJets_JERDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JERUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_24vbfMassWoNoisyJets_JERUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetAbsoluteDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_34vbfMassWoNoisyJets_JetAbsoluteDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetAbsoluteUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32vbfMassWoNoisyJets_JetAbsoluteUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetAbsoluteyearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_38vbfMassWoNoisyJets_JetAbsoluteyearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetAbsoluteyearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_36vbfMassWoNoisyJets_JetAbsoluteyearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetBBEC1Down(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetBBEC1Down_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetBBEC1Up(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetBBEC1Up_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetBBEC1yearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetBBEC1yearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetBBEC1yearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetBBEC1yearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetEC2Down(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetEC2Down_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetEC2Up(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_27vbfMassWoNoisyJets_JetEC2Up_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetEC2yearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetEC2yearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetEC2yearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetEC2yearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetFlavorQCDDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetFlavorQCDDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetFlavorQCDUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_33vbfMassWoNoisyJets_JetFlavorQCDUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetHFDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_28vbfMassWoNoisyJets_JetHFDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetHFUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_26vbfMassWoNoisyJets_JetHFUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetHFyearDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_32vbfMassWoNoisyJets_JetHFyearDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetHFyearUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_30vbfMassWoNoisyJets_JetHFyearUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetRelativeBalDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_37vbfMassWoNoisyJets_JetRelativeBalDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetRelativeBalUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_35vbfMassWoNoisyJets_JetRelativeBalUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetRelativeSampleDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_40vbfMassWoNoisyJets_JetRelativeSampleDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetRelativeSampleUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_38vbfMassWoNoisyJets_JetRelativeSampleUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetTotalDown(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_31vbfMassWoNoisyJets_JetTotalDown_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetTotalUp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_29vbfMassWoNoisyJets_JetTotalUp_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfNJets20(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10vbfNJets20_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfNJets30(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10vbfNJets30_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfj1eta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_8vbfj1eta_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfj1pt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_7vbfj1pt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfj2eta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_8vbfj2eta_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vbfj2pt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_7vbfj2pt_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vispX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5vispX_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_vispY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_5vispY_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_idx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_3idx_1__get__(o);
}

static PyObject *__pyx_getprop_6EMTree_6EMTree_complained(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6EMTree_6EMTree_10complained_1__get__(o);
}

static int __pyx_setprop_6EMTree_6EMTree_complained(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_6EMTree_6EMTree_10complained_3__set__(o, v);
  }
  else {
    return __pyx_pw_6EMTree_6EMTree_10complained_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_6EMTree_EMTree[] = {
  {"where", (PyCFunction)__pyx_pw_6EMTree_6EMTree_6where, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6EMTree_6EMTree_9__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6EMTree_6EMTree_11__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6EMTree_EMTree[] = {
  {(char *)"entry", __pyx_getprop_6EMTree_6EMTree_entry, __pyx_setprop_6EMTree_6EMTree_entry, (char *)0, 0},
  {(char *)"Ele24LooseHPSTau30Pass", __pyx_getprop_6EMTree_6EMTree_Ele24LooseHPSTau30Pass, 0, (char *)0, 0},
  {(char *)"Ele24LooseHPSTau30TightIDPass", __pyx_getprop_6EMTree_6EMTree_Ele24LooseHPSTau30TightIDPass, 0, (char *)0, 0},
  {(char *)"Ele24LooseTau30Pass", __pyx_getprop_6EMTree_6EMTree_Ele24LooseTau30Pass, 0, (char *)0, 0},
  {(char *)"Ele24LooseTau30TightIDPass", __pyx_getprop_6EMTree_6EMTree_Ele24LooseTau30TightIDPass, 0, (char *)0, 0},
  {(char *)"Ele27WPTightPass", __pyx_getprop_6EMTree_6EMTree_Ele27WPTightPass, 0, (char *)0, 0},
  {(char *)"Ele32WPTightPass", __pyx_getprop_6EMTree_6EMTree_Ele32WPTightPass, 0, (char *)0, 0},
  {(char *)"Ele35WPTightPass", __pyx_getprop_6EMTree_6EMTree_Ele35WPTightPass, 0, (char *)0, 0},
  {(char *)"EmbPtWeight", __pyx_getprop_6EMTree_6EMTree_EmbPtWeight, 0, (char *)0, 0},
  {(char *)"Eta", __pyx_getprop_6EMTree_6EMTree_Eta, 0, (char *)0, 0},
  {(char *)"Flag_BadChargedCandidateFilter", __pyx_getprop_6EMTree_6EMTree_Flag_BadChargedCandidateFilter, 0, (char *)0, 0},
  {(char *)"Flag_BadPFMuonFilter", __pyx_getprop_6EMTree_6EMTree_Flag_BadPFMuonFilter, 0, (char *)0, 0},
  {(char *)"Flag_EcalDeadCellTriggerPrimitiveFilter", __pyx_getprop_6EMTree_6EMTree_Flag_EcalDeadCellTriggerPrimitiveFilter, 0, (char *)0, 0},
  {(char *)"Flag_HBHENoiseFilter", __pyx_getprop_6EMTree_6EMTree_Flag_HBHENoiseFilter, 0, (char *)0, 0},
  {(char *)"Flag_HBHENoiseIsoFilter", __pyx_getprop_6EMTree_6EMTree_Flag_HBHENoiseIsoFilter, 0, (char *)0, 0},
  {(char *)"Flag_ecalBadCalibReducedMINIAODFilter", __pyx_getprop_6EMTree_6EMTree_Flag_ecalBadCalibReducedMINIAODFilter, 0, (char *)0, 0},
  {(char *)"Flag_eeBadScFilter", __pyx_getprop_6EMTree_6EMTree_Flag_eeBadScFilter, 0, (char *)0, 0},
  {(char *)"Flag_globalSuperTightHalo2016Filter", __pyx_getprop_6EMTree_6EMTree_Flag_globalSuperTightHalo2016Filter, 0, (char *)0, 0},
  {(char *)"Flag_goodVertices", __pyx_getprop_6EMTree_6EMTree_Flag_goodVertices, 0, (char *)0, 0},
  {(char *)"GenWeight", __pyx_getprop_6EMTree_6EMTree_GenWeight, 0, (char *)0, 0},
  {(char *)"Ht", __pyx_getprop_6EMTree_6EMTree_Ht, 0, (char *)0, 0},
  {(char *)"IsoMu24Pass", __pyx_getprop_6EMTree_6EMTree_IsoMu24Pass, 0, (char *)0, 0},
  {(char *)"IsoMu27Pass", __pyx_getprop_6EMTree_6EMTree_IsoMu27Pass, 0, (char *)0, 0},
  {(char *)"LT", __pyx_getprop_6EMTree_6EMTree_LT, 0, (char *)0, 0},
  {(char *)"Mass", __pyx_getprop_6EMTree_6EMTree_Mass, 0, (char *)0, 0},
  {(char *)"MassError", __pyx_getprop_6EMTree_6EMTree_MassError, 0, (char *)0, 0},
  {(char *)"MassErrord1", __pyx_getprop_6EMTree_6EMTree_MassErrord1, 0, (char *)0, 0},
  {(char *)"MassErrord2", __pyx_getprop_6EMTree_6EMTree_MassErrord2, 0, (char *)0, 0},
  {(char *)"MassErrord3", __pyx_getprop_6EMTree_6EMTree_MassErrord3, 0, (char *)0, 0},
  {(char *)"MassErrord4", __pyx_getprop_6EMTree_6EMTree_MassErrord4, 0, (char *)0, 0},
  {(char *)"Mt", __pyx_getprop_6EMTree_6EMTree_Mt, 0, (char *)0, 0},
  {(char *)"Mu50Pass", __pyx_getprop_6EMTree_6EMTree_Mu50Pass, 0, (char *)0, 0},
  {(char *)"NUP", __pyx_getprop_6EMTree_6EMTree_NUP, 0, (char *)0, 0},
  {(char *)"Phi", __pyx_getprop_6EMTree_6EMTree_Phi, 0, (char *)0, 0},
  {(char *)"Pt", __pyx_getprop_6EMTree_6EMTree_Pt, 0, (char *)0, 0},
  {(char *)"bjetDeepCSVVeto20Medium_2016_DR0p5", __pyx_getprop_6EMTree_6EMTree_bjetDeepCSVVeto20Medium_2016_DR0p5, 0, (char *)0, 0},
  {(char *)"bjetDeepCSVVeto20Medium_2017_DR0p5", __pyx_getprop_6EMTree_6EMTree_bjetDeepCSVVeto20Medium_2017_DR0p5, 0, (char *)0, 0},
  {(char *)"bjetDeepCSVVeto20Medium_2018_DR0p5", __pyx_getprop_6EMTree_6EMTree_bjetDeepCSVVeto20Medium_2018_DR0p5, 0, (char *)0, 0},
  {(char *)"bjetDeepCSVVeto30Medium_2016_DR0p5", __pyx_getprop_6EMTree_6EMTree_bjetDeepCSVVeto30Medium_2016_DR0p5, 0, (char *)0, 0},
  {(char *)"bjetDeepCSVVeto30Medium_2017_DR0p5", __pyx_getprop_6EMTree_6EMTree_bjetDeepCSVVeto30Medium_2017_DR0p5, 0, (char *)0, 0},
  {(char *)"bjetDeepCSVVeto30Medium_2018_DR0p5", __pyx_getprop_6EMTree_6EMTree_bjetDeepCSVVeto30Medium_2018_DR0p5, 0, (char *)0, 0},
  {(char *)"bweight_2016", __pyx_getprop_6EMTree_6EMTree_bweight_2016, 0, (char *)0, 0},
  {(char *)"bweight_2017", __pyx_getprop_6EMTree_6EMTree_bweight_2017, 0, (char *)0, 0},
  {(char *)"bweight_2018", __pyx_getprop_6EMTree_6EMTree_bweight_2018, 0, (char *)0, 0},
  {(char *)"charge", __pyx_getprop_6EMTree_6EMTree_charge, 0, (char *)0, 0},
  {(char *)"deepcsvb1_btagscore", __pyx_getprop_6EMTree_6EMTree_deepcsvb1_btagscore, 0, (char *)0, 0},
  {(char *)"deepcsvb1_eta", __pyx_getprop_6EMTree_6EMTree_deepcsvb1_eta, 0, (char *)0, 0},
  {(char *)"deepcsvb1_hadronflavour", __pyx_getprop_6EMTree_6EMTree_deepcsvb1_hadronflavour, 0, (char *)0, 0},
  {(char *)"deepcsvb1_m", __pyx_getprop_6EMTree_6EMTree_deepcsvb1_m, 0, (char *)0, 0},
  {(char *)"deepcsvb1_phi", __pyx_getprop_6EMTree_6EMTree_deepcsvb1_phi, 0, (char *)0, 0},
  {(char *)"deepcsvb1_pt", __pyx_getprop_6EMTree_6EMTree_deepcsvb1_pt, 0, (char *)0, 0},
  {(char *)"deepcsvb2_btagscore", __pyx_getprop_6EMTree_6EMTree_deepcsvb2_btagscore, 0, (char *)0, 0},
  {(char *)"deepcsvb2_eta", __pyx_getprop_6EMTree_6EMTree_deepcsvb2_eta, 0, (char *)0, 0},
  {(char *)"deepcsvb2_hadronflavour", __pyx_getprop_6EMTree_6EMTree_deepcsvb2_hadronflavour, 0, (char *)0, 0},
  {(char *)"deepcsvb2_m", __pyx_getprop_6EMTree_6EMTree_deepcsvb2_m, 0, (char *)0, 0},
  {(char *)"deepcsvb2_phi", __pyx_getprop_6EMTree_6EMTree_deepcsvb2_phi, 0, (char *)0, 0},
  {(char *)"deepcsvb2_pt", __pyx_getprop_6EMTree_6EMTree_deepcsvb2_pt, 0, (char *)0, 0},
  {(char *)"dielectronVeto", __pyx_getprop_6EMTree_6EMTree_dielectronVeto, 0, (char *)0, 0},
  {(char *)"dimuonVeto", __pyx_getprop_6EMTree_6EMTree_dimuonVeto, 0, (char *)0, 0},
  {(char *)"eCharge", __pyx_getprop_6EMTree_6EMTree_eCharge, 0, (char *)0, 0},
  {(char *)"eComesFromHiggs", __pyx_getprop_6EMTree_6EMTree_eComesFromHiggs, 0, (char *)0, 0},
  {(char *)"eCorrectedEt", __pyx_getprop_6EMTree_6EMTree_eCorrectedEt, 0, (char *)0, 0},
  {(char *)"eEnergyError", __pyx_getprop_6EMTree_6EMTree_eEnergyError, 0, (char *)0, 0},
  {(char *)"eEnergyScaleDown", __pyx_getprop_6EMTree_6EMTree_eEnergyScaleDown, 0, (char *)0, 0},
  {(char *)"eEnergyScaleGainDown", __pyx_getprop_6EMTree_6EMTree_eEnergyScaleGainDown, 0, (char *)0, 0},
  {(char *)"eEnergyScaleGainUp", __pyx_getprop_6EMTree_6EMTree_eEnergyScaleGainUp, 0, (char *)0, 0},
  {(char *)"eEnergyScaleStatDown", __pyx_getprop_6EMTree_6EMTree_eEnergyScaleStatDown, 0, (char *)0, 0},
  {(char *)"eEnergyScaleStatUp", __pyx_getprop_6EMTree_6EMTree_eEnergyScaleStatUp, 0, (char *)0, 0},
  {(char *)"eEnergyScaleSystDown", __pyx_getprop_6EMTree_6EMTree_eEnergyScaleSystDown, 0, (char *)0, 0},
  {(char *)"eEnergyScaleSystUp", __pyx_getprop_6EMTree_6EMTree_eEnergyScaleSystUp, 0, (char *)0, 0},
  {(char *)"eEnergyScaleUp", __pyx_getprop_6EMTree_6EMTree_eEnergyScaleUp, 0, (char *)0, 0},
  {(char *)"eEnergySigmaDown", __pyx_getprop_6EMTree_6EMTree_eEnergySigmaDown, 0, (char *)0, 0},
  {(char *)"eEnergySigmaPhiDown", __pyx_getprop_6EMTree_6EMTree_eEnergySigmaPhiDown, 0, (char *)0, 0},
  {(char *)"eEnergySigmaPhiUp", __pyx_getprop_6EMTree_6EMTree_eEnergySigmaPhiUp, 0, (char *)0, 0},
  {(char *)"eEnergySigmaRhoDown", __pyx_getprop_6EMTree_6EMTree_eEnergySigmaRhoDown, 0, (char *)0, 0},
  {(char *)"eEnergySigmaRhoUp", __pyx_getprop_6EMTree_6EMTree_eEnergySigmaRhoUp, 0, (char *)0, 0},
  {(char *)"eEnergySigmaUp", __pyx_getprop_6EMTree_6EMTree_eEnergySigmaUp, 0, (char *)0, 0},
  {(char *)"eEta", __pyx_getprop_6EMTree_6EMTree_eEta, 0, (char *)0, 0},
  {(char *)"eGenCharge", __pyx_getprop_6EMTree_6EMTree_eGenCharge, 0, (char *)0, 0},
  {(char *)"eGenDirectPromptTauDecay", __pyx_getprop_6EMTree_6EMTree_eGenDirectPromptTauDecay, 0, (char *)0, 0},
  {(char *)"eGenEnergy", __pyx_getprop_6EMTree_6EMTree_eGenEnergy, 0, (char *)0, 0},
  {(char *)"eGenEta", __pyx_getprop_6EMTree_6EMTree_eGenEta, 0, (char *)0, 0},
  {(char *)"eGenIsPrompt", __pyx_getprop_6EMTree_6EMTree_eGenIsPrompt, 0, (char *)0, 0},
  {(char *)"eGenMotherPdgId", __pyx_getprop_6EMTree_6EMTree_eGenMotherPdgId, 0, (char *)0, 0},
  {(char *)"eGenParticle", __pyx_getprop_6EMTree_6EMTree_eGenParticle, 0, (char *)0, 0},
  {(char *)"eGenPdgId", __pyx_getprop_6EMTree_6EMTree_eGenPdgId, 0, (char *)0, 0},
  {(char *)"eGenPhi", __pyx_getprop_6EMTree_6EMTree_eGenPhi, 0, (char *)0, 0},
  {(char *)"eGenPrompt", __pyx_getprop_6EMTree_6EMTree_eGenPrompt, 0, (char *)0, 0},
  {(char *)"eGenPromptTauDecay", __pyx_getprop_6EMTree_6EMTree_eGenPromptTauDecay, 0, (char *)0, 0},
  {(char *)"eGenPt", __pyx_getprop_6EMTree_6EMTree_eGenPt, 0, (char *)0, 0},
  {(char *)"eGenTauDecay", __pyx_getprop_6EMTree_6EMTree_eGenTauDecay, 0, (char *)0, 0},
  {(char *)"eGenVZ", __pyx_getprop_6EMTree_6EMTree_eGenVZ, 0, (char *)0, 0},
  {(char *)"eGenVtxPVMatch", __pyx_getprop_6EMTree_6EMTree_eGenVtxPVMatch, 0, (char *)0, 0},
  {(char *)"eIP3D", __pyx_getprop_6EMTree_6EMTree_eIP3D, 0, (char *)0, 0},
  {(char *)"eIP3DErr", __pyx_getprop_6EMTree_6EMTree_eIP3DErr, 0, (char *)0, 0},
  {(char *)"eIsoDB03", __pyx_getprop_6EMTree_6EMTree_eIsoDB03, 0, (char *)0, 0},
  {(char *)"eJetArea", __pyx_getprop_6EMTree_6EMTree_eJetArea, 0, (char *)0, 0},
  {(char *)"eJetBtag", __pyx_getprop_6EMTree_6EMTree_eJetBtag, 0, (char *)0, 0},
  {(char *)"eJetDR", __pyx_getprop_6EMTree_6EMTree_eJetDR, 0, (char *)0, 0},
  {(char *)"eJetEtaEtaMoment", __pyx_getprop_6EMTree_6EMTree_eJetEtaEtaMoment, 0, (char *)0, 0},
  {(char *)"eJetEtaPhiMoment", __pyx_getprop_6EMTree_6EMTree_eJetEtaPhiMoment, 0, (char *)0, 0},
  {(char *)"eJetEtaPhiSpread", __pyx_getprop_6EMTree_6EMTree_eJetEtaPhiSpread, 0, (char *)0, 0},
  {(char *)"eJetHadronFlavour", __pyx_getprop_6EMTree_6EMTree_eJetHadronFlavour, 0, (char *)0, 0},
  {(char *)"eJetPFCISVBtag", __pyx_getprop_6EMTree_6EMTree_eJetPFCISVBtag, 0, (char *)0, 0},
  {(char *)"eJetPartonFlavour", __pyx_getprop_6EMTree_6EMTree_eJetPartonFlavour, 0, (char *)0, 0},
  {(char *)"eJetPhiPhiMoment", __pyx_getprop_6EMTree_6EMTree_eJetPhiPhiMoment, 0, (char *)0, 0},
  {(char *)"eJetPt", __pyx_getprop_6EMTree_6EMTree_eJetPt, 0, (char *)0, 0},
  {(char *)"eMVAIsoWP80", __pyx_getprop_6EMTree_6EMTree_eMVAIsoWP80, 0, (char *)0, 0},
  {(char *)"eMVAIsoWP90", __pyx_getprop_6EMTree_6EMTree_eMVAIsoWP90, 0, (char *)0, 0},
  {(char *)"eMVANoisoWP80", __pyx_getprop_6EMTree_6EMTree_eMVANoisoWP80, 0, (char *)0, 0},
  {(char *)"eMVANoisoWP90", __pyx_getprop_6EMTree_6EMTree_eMVANoisoWP90, 0, (char *)0, 0},
  {(char *)"eMass", __pyx_getprop_6EMTree_6EMTree_eMass, 0, (char *)0, 0},
  {(char *)"eMatchEmbeddedFilterEle24Tau30", __pyx_getprop_6EMTree_6EMTree_eMatchEmbeddedFilterEle24Tau30, 0, (char *)0, 0},
  {(char *)"eMatchEmbeddedFilterEle27", __pyx_getprop_6EMTree_6EMTree_eMatchEmbeddedFilterEle27, 0, (char *)0, 0},
  {(char *)"eMatchEmbeddedFilterEle32", __pyx_getprop_6EMTree_6EMTree_eMatchEmbeddedFilterEle32, 0, (char *)0, 0},
  {(char *)"eMatchEmbeddedFilterEle32DoubleL1_v1", __pyx_getprop_6EMTree_6EMTree_eMatchEmbeddedFilterEle32DoubleL1_v1, 0, (char *)0, 0},
  {(char *)"eMatchEmbeddedFilterEle32DoubleL1_v2", __pyx_getprop_6EMTree_6EMTree_eMatchEmbeddedFilterEle32DoubleL1_v2, 0, (char *)0, 0},
  {(char *)"eMatchEmbeddedFilterEle35", __pyx_getprop_6EMTree_6EMTree_eMatchEmbeddedFilterEle35, 0, (char *)0, 0},
  {(char *)"eMatchesEle24HPSTau30Filter", __pyx_getprop_6EMTree_6EMTree_eMatchesEle24HPSTau30Filter, 0, (char *)0, 0},
  {(char *)"eMatchesEle24HPSTau30Path", __pyx_getprop_6EMTree_6EMTree_eMatchesEle24HPSTau30Path, 0, (char *)0, 0},
  {(char *)"eMatchesEle24Tau30Filter", __pyx_getprop_6EMTree_6EMTree_eMatchesEle24Tau30Filter, 0, (char *)0, 0},
  {(char *)"eMatchesEle24Tau30Path", __pyx_getprop_6EMTree_6EMTree_eMatchesEle24Tau30Path, 0, (char *)0, 0},
  {(char *)"eMatchesEle25Filter", __pyx_getprop_6EMTree_6EMTree_eMatchesEle25Filter, 0, (char *)0, 0},
  {(char *)"eMatchesEle25Path", __pyx_getprop_6EMTree_6EMTree_eMatchesEle25Path, 0, (char *)0, 0},
  {(char *)"eMatchesEle27Filter", __pyx_getprop_6EMTree_6EMTree_eMatchesEle27Filter, 0, (char *)0, 0},
  {(char *)"eMatchesEle27Path", __pyx_getprop_6EMTree_6EMTree_eMatchesEle27Path, 0, (char *)0, 0},
  {(char *)"eMatchesEle32Filter", __pyx_getprop_6EMTree_6EMTree_eMatchesEle32Filter, 0, (char *)0, 0},
  {(char *)"eMatchesEle32Path", __pyx_getprop_6EMTree_6EMTree_eMatchesEle32Path, 0, (char *)0, 0},
  {(char *)"eMatchesEle35Filter", __pyx_getprop_6EMTree_6EMTree_eMatchesEle35Filter, 0, (char *)0, 0},
  {(char *)"eMatchesEle35Path", __pyx_getprop_6EMTree_6EMTree_eMatchesEle35Path, 0, (char *)0, 0},
  {(char *)"eMatchesMu23e12DZFilter", __pyx_getprop_6EMTree_6EMTree_eMatchesMu23e12DZFilter, 0, (char *)0, 0},
  {(char *)"eMatchesMu23e12DZPath", __pyx_getprop_6EMTree_6EMTree_eMatchesMu23e12DZPath, 0, (char *)0, 0},
  {(char *)"eMatchesMu23e12Filter", __pyx_getprop_6EMTree_6EMTree_eMatchesMu23e12Filter, 0, (char *)0, 0},
  {(char *)"eMatchesMu23e12Path", __pyx_getprop_6EMTree_6EMTree_eMatchesMu23e12Path, 0, (char *)0, 0},
  {(char *)"eMatchesMu8e23DZFilter", __pyx_getprop_6EMTree_6EMTree_eMatchesMu8e23DZFilter, 0, (char *)0, 0},
  {(char *)"eMatchesMu8e23DZPath", __pyx_getprop_6EMTree_6EMTree_eMatchesMu8e23DZPath, 0, (char *)0, 0},
  {(char *)"eMatchesMu8e23Filter", __pyx_getprop_6EMTree_6EMTree_eMatchesMu8e23Filter, 0, (char *)0, 0},
  {(char *)"eMatchesMu8e23Path", __pyx_getprop_6EMTree_6EMTree_eMatchesMu8e23Path, 0, (char *)0, 0},
  {(char *)"eMissingHits", __pyx_getprop_6EMTree_6EMTree_eMissingHits, 0, (char *)0, 0},
  {(char *)"ePVDXY", __pyx_getprop_6EMTree_6EMTree_ePVDXY, 0, (char *)0, 0},
  {(char *)"ePVDZ", __pyx_getprop_6EMTree_6EMTree_ePVDZ, 0, (char *)0, 0},
  {(char *)"ePassesConversionVeto", __pyx_getprop_6EMTree_6EMTree_ePassesConversionVeto, 0, (char *)0, 0},
  {(char *)"ePhi", __pyx_getprop_6EMTree_6EMTree_ePhi, 0, (char *)0, 0},
  {(char *)"ePt", __pyx_getprop_6EMTree_6EMTree_ePt, 0, (char *)0, 0},
  {(char *)"eRelPFIsoRho", __pyx_getprop_6EMTree_6EMTree_eRelPFIsoRho, 0, (char *)0, 0},
  {(char *)"eSIP2D", __pyx_getprop_6EMTree_6EMTree_eSIP2D, 0, (char *)0, 0},
  {(char *)"eSIP3D", __pyx_getprop_6EMTree_6EMTree_eSIP3D, 0, (char *)0, 0},
  {(char *)"eVZ", __pyx_getprop_6EMTree_6EMTree_eVZ, 0, (char *)0, 0},
  {(char *)"eVetoMVAIsoVtx", __pyx_getprop_6EMTree_6EMTree_eVetoMVAIsoVtx, 0, (char *)0, 0},
  {(char *)"eVetoZTTp001dxyz", __pyx_getprop_6EMTree_6EMTree_eVetoZTTp001dxyz, 0, (char *)0, 0},
  {(char *)"eZTTGenMatching", __pyx_getprop_6EMTree_6EMTree_eZTTGenMatching, 0, (char *)0, 0},
  {(char *)"e_m_PZeta", __pyx_getprop_6EMTree_6EMTree_e_m_PZeta, 0, (char *)0, 0},
  {(char *)"e_m_PZetaVis", __pyx_getprop_6EMTree_6EMTree_e_m_PZetaVis, 0, (char *)0, 0},
  {(char *)"e_m_doubleL1IsoTauMatch", __pyx_getprop_6EMTree_6EMTree_e_m_doubleL1IsoTauMatch, 0, (char *)0, 0},
  {(char *)"eecalEnergy", __pyx_getprop_6EMTree_6EMTree_eecalEnergy, 0, (char *)0, 0},
  {(char *)"evt", __pyx_getprop_6EMTree_6EMTree_evt, 0, (char *)0, 0},
  {(char *)"genEta", __pyx_getprop_6EMTree_6EMTree_genEta, 0, (char *)0, 0},
  {(char *)"genHTT", __pyx_getprop_6EMTree_6EMTree_genHTT, 0, (char *)0, 0},
  {(char *)"genM", __pyx_getprop_6EMTree_6EMTree_genM, 0, (char *)0, 0},
  {(char *)"genMass", __pyx_getprop_6EMTree_6EMTree_genMass, 0, (char *)0, 0},
  {(char *)"genPhi", __pyx_getprop_6EMTree_6EMTree_genPhi, 0, (char *)0, 0},
  {(char *)"genpT", __pyx_getprop_6EMTree_6EMTree_genpT, 0, (char *)0, 0},
  {(char *)"genpX", __pyx_getprop_6EMTree_6EMTree_genpX, 0, (char *)0, 0},
  {(char *)"genpY", __pyx_getprop_6EMTree_6EMTree_genpY, 0, (char *)0, 0},
  {(char *)"isGtautau", __pyx_getprop_6EMTree_6EMTree_isGtautau, 0, (char *)0, 0},
  {(char *)"isWenu", __pyx_getprop_6EMTree_6EMTree_isWenu, 0, (char *)0, 0},
  {(char *)"isWmunu", __pyx_getprop_6EMTree_6EMTree_isWmunu, 0, (char *)0, 0},
  {(char *)"isWtaunu", __pyx_getprop_6EMTree_6EMTree_isWtaunu, 0, (char *)0, 0},
  {(char *)"isZee", __pyx_getprop_6EMTree_6EMTree_isZee, 0, (char *)0, 0},
  {(char *)"isZmumu", __pyx_getprop_6EMTree_6EMTree_isZmumu, 0, (char *)0, 0},
  {(char *)"isZtautau", __pyx_getprop_6EMTree_6EMTree_isZtautau, 0, (char *)0, 0},
  {(char *)"isdata", __pyx_getprop_6EMTree_6EMTree_isdata, 0, (char *)0, 0},
  {(char *)"isembed", __pyx_getprop_6EMTree_6EMTree_isembed, 0, (char *)0, 0},
  {(char *)"j1csv", __pyx_getprop_6EMTree_6EMTree_j1csv, 0, (char *)0, 0},
  {(char *)"j1csvWoNoisyJets", __pyx_getprop_6EMTree_6EMTree_j1csvWoNoisyJets, 0, (char *)0, 0},
  {(char *)"j1eta", __pyx_getprop_6EMTree_6EMTree_j1eta, 0, (char *)0, 0},
  {(char *)"j1etaWoNoisyJets", __pyx_getprop_6EMTree_6EMTree_j1etaWoNoisyJets, 0, (char *)0, 0},
  {(char *)"j1hadronflavor", __pyx_getprop_6EMTree_6EMTree_j1hadronflavor, 0, (char *)0, 0},
  {(char *)"j1hadronflavorWoNoisyJets", __pyx_getprop_6EMTree_6EMTree_j1hadronflavorWoNoisyJets, 0, (char *)0, 0},
  {(char *)"j1phi", __pyx_getprop_6EMTree_6EMTree_j1phi, 0, (char *)0, 0},
  {(char *)"j1phiWoNoisyJets", __pyx_getprop_6EMTree_6EMTree_j1phiWoNoisyJets, 0, (char *)0, 0},
  {(char *)"j1pt", __pyx_getprop_6EMTree_6EMTree_j1pt, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JERDown", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JERDown, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JERUp", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JERUp, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetAbsoluteDown", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetAbsoluteDown, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetAbsoluteUp", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetAbsoluteUp, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetAbsoluteyearDown", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetAbsoluteyearDown, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetAbsoluteyearUp", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetAbsoluteyearUp, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetBBEC1Down", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetBBEC1Down, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetBBEC1Up", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetBBEC1Up, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetBBEC1yearDown", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetBBEC1yearDown, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetBBEC1yearUp", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetBBEC1yearUp, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetEC2Down", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetEC2Down, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetEC2Up", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetEC2Up, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetEC2yearDown", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetEC2yearDown, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetEC2yearUp", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetEC2yearUp, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetFlavorQCDDown", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetFlavorQCDDown, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetFlavorQCDUp", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetFlavorQCDUp, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetHFDown", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetHFDown, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetHFUp", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetHFUp, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetHFyearDown", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetHFyearDown, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetHFyearUp", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetHFyearUp, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetRelativeBalDown", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetRelativeBalDown, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetRelativeBalUp", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetRelativeBalUp, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetRelativeSampleDown", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetRelativeSampleDown, 0, (char *)0, 0},
  {(char *)"j1ptWoNoisyJets_JetRelativeSampleUp", __pyx_getprop_6EMTree_6EMTree_j1ptWoNoisyJets_JetRelativeSampleUp, 0, (char *)0, 0},
  {(char *)"j2csv", __pyx_getprop_6EMTree_6EMTree_j2csv, 0, (char *)0, 0},
  {(char *)"j2csvWoNoisyJets", __pyx_getprop_6EMTree_6EMTree_j2csvWoNoisyJets, 0, (char *)0, 0},
  {(char *)"j2eta", __pyx_getprop_6EMTree_6EMTree_j2eta, 0, (char *)0, 0},
  {(char *)"j2etaWoNoisyJets", __pyx_getprop_6EMTree_6EMTree_j2etaWoNoisyJets, 0, (char *)0, 0},
  {(char *)"j2hadronflavor", __pyx_getprop_6EMTree_6EMTree_j2hadronflavor, 0, (char *)0, 0},
  {(char *)"j2hadronflavorWoNoisyJets", __pyx_getprop_6EMTree_6EMTree_j2hadronflavorWoNoisyJets, 0, (char *)0, 0},
  {(char *)"j2phi", __pyx_getprop_6EMTree_6EMTree_j2phi, 0, (char *)0, 0},
  {(char *)"j2phiWoNoisyJets", __pyx_getprop_6EMTree_6EMTree_j2phiWoNoisyJets, 0, (char *)0, 0},
  {(char *)"j2pt", __pyx_getprop_6EMTree_6EMTree_j2pt, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JERDown", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JERDown, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JERUp", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JERUp, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetAbsoluteDown", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetAbsoluteDown, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetAbsoluteUp", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetAbsoluteUp, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetAbsoluteyearDown", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetAbsoluteyearDown, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetAbsoluteyearUp", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetAbsoluteyearUp, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetBBEC1Down", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetBBEC1Down, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetBBEC1Up", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetBBEC1Up, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetBBEC1yearDown", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetBBEC1yearDown, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetBBEC1yearUp", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetBBEC1yearUp, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetEC2Down", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetEC2Down, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetEC2Up", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetEC2Up, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetEC2yearDown", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetEC2yearDown, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetEC2yearUp", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetEC2yearUp, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetFlavorQCDDown", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetFlavorQCDDown, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetFlavorQCDUp", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetFlavorQCDUp, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetHFDown", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetHFDown, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetHFUp", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetHFUp, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetHFyearDown", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetHFyearDown, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetHFyearUp", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetHFyearUp, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetRelativeBalDown", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetRelativeBalDown, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetRelativeBalUp", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetRelativeBalUp, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetRelativeSampleDown", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetRelativeSampleDown, 0, (char *)0, 0},
  {(char *)"j2ptWoNoisyJets_JetRelativeSampleUp", __pyx_getprop_6EMTree_6EMTree_j2ptWoNoisyJets_JetRelativeSampleUp, 0, (char *)0, 0},
  {(char *)"jb1eta_2016", __pyx_getprop_6EMTree_6EMTree_jb1eta_2016, 0, (char *)0, 0},
  {(char *)"jb1eta_2017", __pyx_getprop_6EMTree_6EMTree_jb1eta_2017, 0, (char *)0, 0},
  {(char *)"jb1eta_2018", __pyx_getprop_6EMTree_6EMTree_jb1eta_2018, 0, (char *)0, 0},
  {(char *)"jb1hadronflavor_2016", __pyx_getprop_6EMTree_6EMTree_jb1hadronflavor_2016, 0, (char *)0, 0},
  {(char *)"jb1hadronflavor_2017", __pyx_getprop_6EMTree_6EMTree_jb1hadronflavor_2017, 0, (char *)0, 0},
  {(char *)"jb1hadronflavor_2018", __pyx_getprop_6EMTree_6EMTree_jb1hadronflavor_2018, 0, (char *)0, 0},
  {(char *)"jb1phi_2016", __pyx_getprop_6EMTree_6EMTree_jb1phi_2016, 0, (char *)0, 0},
  {(char *)"jb1phi_2017", __pyx_getprop_6EMTree_6EMTree_jb1phi_2017, 0, (char *)0, 0},
  {(char *)"jb1phi_2018", __pyx_getprop_6EMTree_6EMTree_jb1phi_2018, 0, (char *)0, 0},
  {(char *)"jb1pt_2016", __pyx_getprop_6EMTree_6EMTree_jb1pt_2016, 0, (char *)0, 0},
  {(char *)"jb1pt_2017", __pyx_getprop_6EMTree_6EMTree_jb1pt_2017, 0, (char *)0, 0},
  {(char *)"jb1pt_2018", __pyx_getprop_6EMTree_6EMTree_jb1pt_2018, 0, (char *)0, 0},
  {(char *)"jb2eta_2016", __pyx_getprop_6EMTree_6EMTree_jb2eta_2016, 0, (char *)0, 0},
  {(char *)"jb2eta_2017", __pyx_getprop_6EMTree_6EMTree_jb2eta_2017, 0, (char *)0, 0},
  {(char *)"jb2eta_2018", __pyx_getprop_6EMTree_6EMTree_jb2eta_2018, 0, (char *)0, 0},
  {(char *)"jb2hadronflavor_2016", __pyx_getprop_6EMTree_6EMTree_jb2hadronflavor_2016, 0, (char *)0, 0},
  {(char *)"jb2hadronflavor_2017", __pyx_getprop_6EMTree_6EMTree_jb2hadronflavor_2017, 0, (char *)0, 0},
  {(char *)"jb2hadronflavor_2018", __pyx_getprop_6EMTree_6EMTree_jb2hadronflavor_2018, 0, (char *)0, 0},
  {(char *)"jb2phi_2016", __pyx_getprop_6EMTree_6EMTree_jb2phi_2016, 0, (char *)0, 0},
  {(char *)"jb2phi_2017", __pyx_getprop_6EMTree_6EMTree_jb2phi_2017, 0, (char *)0, 0},
  {(char *)"jb2phi_2018", __pyx_getprop_6EMTree_6EMTree_jb2phi_2018, 0, (char *)0, 0},
  {(char *)"jb2pt_2016", __pyx_getprop_6EMTree_6EMTree_jb2pt_2016, 0, (char *)0, 0},
  {(char *)"jb2pt_2017", __pyx_getprop_6EMTree_6EMTree_jb2pt_2017, 0, (char *)0, 0},
  {(char *)"jb2pt_2018", __pyx_getprop_6EMTree_6EMTree_jb2pt_2018, 0, (char *)0, 0},
  {(char *)"jetVeto20", __pyx_getprop_6EMTree_6EMTree_jetVeto20, 0, (char *)0, 0},
  {(char *)"jetVeto20WoNoisyJets", __pyx_getprop_6EMTree_6EMTree_jetVeto20WoNoisyJets, 0, (char *)0, 0},
  {(char *)"jetVeto30", __pyx_getprop_6EMTree_6EMTree_jetVeto30, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JERDown", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JERDown, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JERUp", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JERUp, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetAbsoluteDown", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetAbsoluteDown, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetAbsoluteUp", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetAbsoluteUp, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetAbsoluteyearDown", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetAbsoluteyearDown, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetAbsoluteyearUp", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetAbsoluteyearUp, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetBBEC1Down", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetBBEC1Down, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetBBEC1Up", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetBBEC1Up, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetBBEC1yearDown", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetBBEC1yearDown, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetBBEC1yearUp", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetBBEC1yearUp, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetEC2Down", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetEC2Down, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetEC2Up", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetEC2Up, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetEC2yearDown", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetEC2yearDown, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetEC2yearUp", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetEC2yearUp, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetFlavorQCDDown", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetFlavorQCDDown, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetFlavorQCDUp", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetFlavorQCDUp, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetHFDown", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetHFDown, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetHFUp", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetHFUp, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetHFyearDown", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetHFyearDown, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetHFyearUp", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetHFyearUp, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetRelativeSampleDown", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetRelativeSampleDown, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetRelativeSampleUp", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetRelativeSampleUp, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetTotalDown", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetTotalDown, 0, (char *)0, 0},
  {(char *)"jetVeto30WoNoisyJets_JetTotalUp", __pyx_getprop_6EMTree_6EMTree_jetVeto30WoNoisyJets_JetTotalUp, 0, (char *)0, 0},
  {(char *)"lumi", __pyx_getprop_6EMTree_6EMTree_lumi, 0, (char *)0, 0},
  {(char *)"mCharge", __pyx_getprop_6EMTree_6EMTree_mCharge, 0, (char *)0, 0},
  {(char *)"mComesFromHiggs", __pyx_getprop_6EMTree_6EMTree_mComesFromHiggs, 0, (char *)0, 0},
  {(char *)"mEta", __pyx_getprop_6EMTree_6EMTree_mEta, 0, (char *)0, 0},
  {(char *)"mGenCharge", __pyx_getprop_6EMTree_6EMTree_mGenCharge, 0, (char *)0, 0},
  {(char *)"mGenDirectPromptTauDecayFinalState", __pyx_getprop_6EMTree_6EMTree_mGenDirectPromptTauDecayFinalState, 0, (char *)0, 0},
  {(char *)"mGenEnergy", __pyx_getprop_6EMTree_6EMTree_mGenEnergy, 0, (char *)0, 0},
  {(char *)"mGenEta", __pyx_getprop_6EMTree_6EMTree_mGenEta, 0, (char *)0, 0},
  {(char *)"mGenIsPrompt", __pyx_getprop_6EMTree_6EMTree_mGenIsPrompt, 0, (char *)0, 0},
  {(char *)"mGenMotherPdgId", __pyx_getprop_6EMTree_6EMTree_mGenMotherPdgId, 0, (char *)0, 0},
  {(char *)"mGenParticle", __pyx_getprop_6EMTree_6EMTree_mGenParticle, 0, (char *)0, 0},
  {(char *)"mGenPdgId", __pyx_getprop_6EMTree_6EMTree_mGenPdgId, 0, (char *)0, 0},
  {(char *)"mGenPhi", __pyx_getprop_6EMTree_6EMTree_mGenPhi, 0, (char *)0, 0},
  {(char *)"mGenPrompt", __pyx_getprop_6EMTree_6EMTree_mGenPrompt, 0, (char *)0, 0},
  {(char *)"mGenPromptFinalState", __pyx_getprop_6EMTree_6EMTree_mGenPromptFinalState, 0, (char *)0, 0},
  {(char *)"mGenPromptTauDecay", __pyx_getprop_6EMTree_6EMTree_mGenPromptTauDecay, 0, (char *)0, 0},
  {(char *)"mGenPt", __pyx_getprop_6EMTree_6EMTree_mGenPt, 0, (char *)0, 0},
  {(char *)"mGenTauDecay", __pyx_getprop_6EMTree_6EMTree_mGenTauDecay, 0, (char *)0, 0},
  {(char *)"mGenVZ", __pyx_getprop_6EMTree_6EMTree_mGenVZ, 0, (char *)0, 0},
  {(char *)"mGenVtxPVMatch", __pyx_getprop_6EMTree_6EMTree_mGenVtxPVMatch, 0, (char *)0, 0},
  {(char *)"mIP3D", __pyx_getprop_6EMTree_6EMTree_mIP3D, 0, (char *)0, 0},
  {(char *)"mIP3DErr", __pyx_getprop_6EMTree_6EMTree_mIP3DErr, 0, (char *)0, 0},
  {(char *)"mIsGlobal", __pyx_getprop_6EMTree_6EMTree_mIsGlobal, 0, (char *)0, 0},
  {(char *)"mIsPFMuon", __pyx_getprop_6EMTree_6EMTree_mIsPFMuon, 0, (char *)0, 0},
  {(char *)"mIsTracker", __pyx_getprop_6EMTree_6EMTree_mIsTracker, 0, (char *)0, 0},
  {(char *)"mJetArea", __pyx_getprop_6EMTree_6EMTree_mJetArea, 0, (char *)0, 0},
  {(char *)"mJetBtag", __pyx_getprop_6EMTree_6EMTree_mJetBtag, 0, (char *)0, 0},
  {(char *)"mJetDR", __pyx_getprop_6EMTree_6EMTree_mJetDR, 0, (char *)0, 0},
  {(char *)"mJetEtaEtaMoment", __pyx_getprop_6EMTree_6EMTree_mJetEtaEtaMoment, 0, (char *)0, 0},
  {(char *)"mJetEtaPhiMoment", __pyx_getprop_6EMTree_6EMTree_mJetEtaPhiMoment, 0, (char *)0, 0},
  {(char *)"mJetEtaPhiSpread", __pyx_getprop_6EMTree_6EMTree_mJetEtaPhiSpread, 0, (char *)0, 0},
  {(char *)"mJetHadronFlavour", __pyx_getprop_6EMTree_6EMTree_mJetHadronFlavour, 0, (char *)0, 0},
  {(char *)"mJetPFCISVBtag", __pyx_getprop_6EMTree_6EMTree_mJetPFCISVBtag, 0, (char *)0, 0},
  {(char *)"mJetPartonFlavour", __pyx_getprop_6EMTree_6EMTree_mJetPartonFlavour, 0, (char *)0, 0},
  {(char *)"mJetPhiPhiMoment", __pyx_getprop_6EMTree_6EMTree_mJetPhiPhiMoment, 0, (char *)0, 0},
  {(char *)"mJetPt", __pyx_getprop_6EMTree_6EMTree_mJetPt, 0, (char *)0, 0},
  {(char *)"mMass", __pyx_getprop_6EMTree_6EMTree_mMass, 0, (char *)0, 0},
  {(char *)"mMatchEmbeddedFilterMu24", __pyx_getprop_6EMTree_6EMTree_mMatchEmbeddedFilterMu24, 0, (char *)0, 0},
  {(char *)"mMatchEmbeddedFilterMu27", __pyx_getprop_6EMTree_6EMTree_mMatchEmbeddedFilterMu27, 0, (char *)0, 0},
  {(char *)"mMatchesIsoMu24Filter", __pyx_getprop_6EMTree_6EMTree_mMatchesIsoMu24Filter, 0, (char *)0, 0},
  {(char *)"mMatchesIsoMu24Path", __pyx_getprop_6EMTree_6EMTree_mMatchesIsoMu24Path, 0, (char *)0, 0},
  {(char *)"mMatchesIsoMu27Filter", __pyx_getprop_6EMTree_6EMTree_mMatchesIsoMu27Filter, 0, (char *)0, 0},
  {(char *)"mMatchesIsoMu27Path", __pyx_getprop_6EMTree_6EMTree_mMatchesIsoMu27Path, 0, (char *)0, 0},
  {(char *)"mMatchesMu23e12DZFilter", __pyx_getprop_6EMTree_6EMTree_mMatchesMu23e12DZFilter, 0, (char *)0, 0},
  {(char *)"mMatchesMu23e12DZPath", __pyx_getprop_6EMTree_6EMTree_mMatchesMu23e12DZPath, 0, (char *)0, 0},
  {(char *)"mMatchesMu23e12Filter", __pyx_getprop_6EMTree_6EMTree_mMatchesMu23e12Filter, 0, (char *)0, 0},
  {(char *)"mMatchesMu23e12Path", __pyx_getprop_6EMTree_6EMTree_mMatchesMu23e12Path, 0, (char *)0, 0},
  {(char *)"mMatchesMu8e23DZFilter", __pyx_getprop_6EMTree_6EMTree_mMatchesMu8e23DZFilter, 0, (char *)0, 0},
  {(char *)"mMatchesMu8e23DZPath", __pyx_getprop_6EMTree_6EMTree_mMatchesMu8e23DZPath, 0, (char *)0, 0},
  {(char *)"mMatchesMu8e23Filter", __pyx_getprop_6EMTree_6EMTree_mMatchesMu8e23Filter, 0, (char *)0, 0},
  {(char *)"mMatchesMu8e23Path", __pyx_getprop_6EMTree_6EMTree_mMatchesMu8e23Path, 0, (char *)0, 0},
  {(char *)"mPFIDLoose", __pyx_getprop_6EMTree_6EMTree_mPFIDLoose, 0, (char *)0, 0},
  {(char *)"mPFIDMedium", __pyx_getprop_6EMTree_6EMTree_mPFIDMedium, 0, (char *)0, 0},
  {(char *)"mPFIDTight", __pyx_getprop_6EMTree_6EMTree_mPFIDTight, 0, (char *)0, 0},
  {(char *)"mPVDXY", __pyx_getprop_6EMTree_6EMTree_mPVDXY, 0, (char *)0, 0},
  {(char *)"mPVDZ", __pyx_getprop_6EMTree_6EMTree_mPVDZ, 0, (char *)0, 0},
  {(char *)"mPhi", __pyx_getprop_6EMTree_6EMTree_mPhi, 0, (char *)0, 0},
  {(char *)"mPt", __pyx_getprop_6EMTree_6EMTree_mPt, 0, (char *)0, 0},
  {(char *)"mRelPFIsoDBDefaultR04", __pyx_getprop_6EMTree_6EMTree_mRelPFIsoDBDefaultR04, 0, (char *)0, 0},
  {(char *)"mSIP2D", __pyx_getprop_6EMTree_6EMTree_mSIP2D, 0, (char *)0, 0},
  {(char *)"mSIP3D", __pyx_getprop_6EMTree_6EMTree_mSIP3D, 0, (char *)0, 0},
  {(char *)"mVZ", __pyx_getprop_6EMTree_6EMTree_mVZ, 0, (char *)0, 0},
  {(char *)"mZTTGenMatching", __pyx_getprop_6EMTree_6EMTree_mZTTGenMatching, 0, (char *)0, 0},
  {(char *)"mu12e23DZPass", __pyx_getprop_6EMTree_6EMTree_mu12e23DZPass, 0, (char *)0, 0},
  {(char *)"mu12e23Pass", __pyx_getprop_6EMTree_6EMTree_mu12e23Pass, 0, (char *)0, 0},
  {(char *)"mu23e12DZPass", __pyx_getprop_6EMTree_6EMTree_mu23e12DZPass, 0, (char *)0, 0},
  {(char *)"mu23e12Pass", __pyx_getprop_6EMTree_6EMTree_mu23e12Pass, 0, (char *)0, 0},
  {(char *)"mu8e23DZPass", __pyx_getprop_6EMTree_6EMTree_mu8e23DZPass, 0, (char *)0, 0},
  {(char *)"mu8e23Pass", __pyx_getprop_6EMTree_6EMTree_mu8e23Pass, 0, (char *)0, 0},
  {(char *)"muGlbIsoVetoPt10", __pyx_getprop_6EMTree_6EMTree_muGlbIsoVetoPt10, 0, (char *)0, 0},
  {(char *)"muVetoZTTp001dxyz", __pyx_getprop_6EMTree_6EMTree_muVetoZTTp001dxyz, 0, (char *)0, 0},
  {(char *)"nTruePU", __pyx_getprop_6EMTree_6EMTree_nTruePU, 0, (char *)0, 0},
  {(char *)"npNLO", __pyx_getprop_6EMTree_6EMTree_npNLO, 0, (char *)0, 0},
  {(char *)"numGenJets", __pyx_getprop_6EMTree_6EMTree_numGenJets, 0, (char *)0, 0},
  {(char *)"nvtx", __pyx_getprop_6EMTree_6EMTree_nvtx, 0, (char *)0, 0},
  {(char *)"prefiring_weight", __pyx_getprop_6EMTree_6EMTree_prefiring_weight, 0, (char *)0, 0},
  {(char *)"prefiring_weight_down", __pyx_getprop_6EMTree_6EMTree_prefiring_weight_down, 0, (char *)0, 0},
  {(char *)"prefiring_weight_up", __pyx_getprop_6EMTree_6EMTree_prefiring_weight_up, 0, (char *)0, 0},
  {(char *)"processID", __pyx_getprop_6EMTree_6EMTree_processID, 0, (char *)0, 0},
  {(char *)"puppiMetEt", __pyx_getprop_6EMTree_6EMTree_puppiMetEt, 0, (char *)0, 0},
  {(char *)"puppiMetPhi", __pyx_getprop_6EMTree_6EMTree_puppiMetPhi, 0, (char *)0, 0},
  {(char *)"pvChi2", __pyx_getprop_6EMTree_6EMTree_pvChi2, 0, (char *)0, 0},
  {(char *)"pvDX", __pyx_getprop_6EMTree_6EMTree_pvDX, 0, (char *)0, 0},
  {(char *)"pvDY", __pyx_getprop_6EMTree_6EMTree_pvDY, 0, (char *)0, 0},
  {(char *)"pvDZ", __pyx_getprop_6EMTree_6EMTree_pvDZ, 0, (char *)0, 0},
  {(char *)"pvIsFake", __pyx_getprop_6EMTree_6EMTree_pvIsFake, 0, (char *)0, 0},
  {(char *)"pvIsValid", __pyx_getprop_6EMTree_6EMTree_pvIsValid, 0, (char *)0, 0},
  {(char *)"pvNormChi2", __pyx_getprop_6EMTree_6EMTree_pvNormChi2, 0, (char *)0, 0},
  {(char *)"pvRho", __pyx_getprop_6EMTree_6EMTree_pvRho, 0, (char *)0, 0},
  {(char *)"pvX", __pyx_getprop_6EMTree_6EMTree_pvX, 0, (char *)0, 0},
  {(char *)"pvY", __pyx_getprop_6EMTree_6EMTree_pvY, 0, (char *)0, 0},
  {(char *)"pvZ", __pyx_getprop_6EMTree_6EMTree_pvZ, 0, (char *)0, 0},
  {(char *)"pvndof", __pyx_getprop_6EMTree_6EMTree_pvndof, 0, (char *)0, 0},
  {(char *)"recoilDaught", __pyx_getprop_6EMTree_6EMTree_recoilDaught, 0, (char *)0, 0},
  {(char *)"recoilWithMet", __pyx_getprop_6EMTree_6EMTree_recoilWithMet, 0, (char *)0, 0},
  {(char *)"rho", __pyx_getprop_6EMTree_6EMTree_rho, 0, (char *)0, 0},
  {(char *)"run", __pyx_getprop_6EMTree_6EMTree_run, 0, (char *)0, 0},
  {(char *)"singleE25eta2p1TightPass", __pyx_getprop_6EMTree_6EMTree_singleE25eta2p1TightPass, 0, (char *)0, 0},
  {(char *)"tauVetoPt20LooseMVALTVtx", __pyx_getprop_6EMTree_6EMTree_tauVetoPt20LooseMVALTVtx, 0, (char *)0, 0},
  {(char *)"tauVetoPtDeepVtx", __pyx_getprop_6EMTree_6EMTree_tauVetoPtDeepVtx, 0, (char *)0, 0},
  {(char *)"topQuarkPt1", __pyx_getprop_6EMTree_6EMTree_topQuarkPt1, 0, (char *)0, 0},
  {(char *)"topQuarkPt2", __pyx_getprop_6EMTree_6EMTree_topQuarkPt2, 0, (char *)0, 0},
  {(char *)"type1_pfMetEt", __pyx_getprop_6EMTree_6EMTree_type1_pfMetEt, 0, (char *)0, 0},
  {(char *)"type1_pfMetPhi", __pyx_getprop_6EMTree_6EMTree_type1_pfMetPhi, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JERDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JERDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JERUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JERUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetAbsoluteDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetAbsoluteDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetAbsoluteUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetAbsoluteUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetAbsoluteyearDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetAbsoluteyearDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetAbsoluteyearUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetAbsoluteyearUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetBBEC1Down", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetBBEC1Down, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetBBEC1Up", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetBBEC1Up, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetBBEC1yearDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetBBEC1yearDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetBBEC1yearUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetBBEC1yearUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetEC2Down", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetEC2Down, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetEC2Up", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetEC2Up, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetEC2yearDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetEC2yearDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetEC2yearUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetEC2yearUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetEnDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetEnDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetEnUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetEnUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetFlavorQCDDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetFlavorQCDDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetFlavorQCDUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetFlavorQCDUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetHFDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetHFDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetHFUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetHFUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetHFyearDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetHFyearDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetHFyearUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetHFyearUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetRelativeBalDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetRelativeBalDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetRelativeBalUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetRelativeBalUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetRelativeSampleDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetRelativeSampleDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetRelativeSampleUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetRelativeSampleUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetResDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetResDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetResUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetResUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetTotalDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetTotalDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_JetTotalUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_JetTotalUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_UesCHARGEDDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UesCHARGEDDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_UesCHARGEDUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UesCHARGEDUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_UesECALDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UesECALDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_UesECALUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UesECALUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_UesHCALDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UesHCALDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_UesHCALUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UesHCALUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_UesHFDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UesHFDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_UesHFUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UesHFUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_UnclusteredEnDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UnclusteredEnDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPhi_UnclusteredEnUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPhi_UnclusteredEnUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JERDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JERDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JERUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JERUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetAbsoluteDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetAbsoluteDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetAbsoluteUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetAbsoluteUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetAbsoluteyearDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetAbsoluteyearDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetAbsoluteyearUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetAbsoluteyearUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetBBEC1Down", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetBBEC1Down, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetBBEC1Up", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetBBEC1Up, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetBBEC1yearDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetBBEC1yearDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetBBEC1yearUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetBBEC1yearUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetEC2Down", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetEC2Down, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetEC2Up", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetEC2Up, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetEC2yearDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetEC2yearDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetEC2yearUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetEC2yearUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetEnDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetEnDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetEnUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetEnUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetFlavorQCDDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetFlavorQCDDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetFlavorQCDUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetFlavorQCDUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetHFDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetHFDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetHFUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetHFUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetHFyearDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetHFyearDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetHFyearUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetHFyearUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetRelativeBalDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetRelativeBalDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetRelativeBalUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetRelativeBalUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetRelativeSampleDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetRelativeSampleDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetRelativeSampleUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetRelativeSampleUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetResDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetResDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetResUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetResUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetTotalDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetTotalDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_JetTotalUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_JetTotalUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_UesCHARGEDDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UesCHARGEDDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_UesCHARGEDUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UesCHARGEDUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_UesECALDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UesECALDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_UesECALUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UesECALUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_UesHCALDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UesHCALDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_UesHCALUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UesHCALUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_UesHFDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UesHFDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_UesHFUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UesHFUp, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_UnclusteredEnDown", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UnclusteredEnDown, 0, (char *)0, 0},
  {(char *)"type1_pfMet_shiftedPt_UnclusteredEnUp", __pyx_getprop_6EMTree_6EMTree_type1_pfMet_shiftedPt_UnclusteredEnUp, 0, (char *)0, 0},
  {(char *)"vbfDeta", __pyx_getprop_6EMTree_6EMTree_vbfDeta, 0, (char *)0, 0},
  {(char *)"vbfJetVeto20", __pyx_getprop_6EMTree_6EMTree_vbfJetVeto20, 0, (char *)0, 0},
  {(char *)"vbfJetVeto30", __pyx_getprop_6EMTree_6EMTree_vbfJetVeto30, 0, (char *)0, 0},
  {(char *)"vbfMass", __pyx_getprop_6EMTree_6EMTree_vbfMass, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JERDown", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JERDown, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JERUp", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JERUp, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetAbsoluteDown", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetAbsoluteDown, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetAbsoluteUp", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetAbsoluteUp, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetAbsoluteyearDown", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetAbsoluteyearDown, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetAbsoluteyearUp", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetAbsoluteyearUp, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetBBEC1Down", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetBBEC1Down, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetBBEC1Up", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetBBEC1Up, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetBBEC1yearDown", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetBBEC1yearDown, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetBBEC1yearUp", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetBBEC1yearUp, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetEC2Down", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetEC2Down, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetEC2Up", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetEC2Up, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetEC2yearDown", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetEC2yearDown, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetEC2yearUp", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetEC2yearUp, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetFlavorQCDDown", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetFlavorQCDDown, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetFlavorQCDUp", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetFlavorQCDUp, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetHFDown", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetHFDown, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetHFUp", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetHFUp, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetHFyearDown", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetHFyearDown, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetHFyearUp", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetHFyearUp, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetRelativeBalDown", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetRelativeBalDown, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetRelativeBalUp", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetRelativeBalUp, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetRelativeSampleDown", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetRelativeSampleDown, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetRelativeSampleUp", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetRelativeSampleUp, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetTotalDown", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetTotalDown, 0, (char *)0, 0},
  {(char *)"vbfMassWoNoisyJets_JetTotalUp", __pyx_getprop_6EMTree_6EMTree_vbfMassWoNoisyJets_JetTotalUp, 0, (char *)0, 0},
  {(char *)"vbfNJets20", __pyx_getprop_6EMTree_6EMTree_vbfNJets20, 0, (char *)0, 0},
  {(char *)"vbfNJets30", __pyx_getprop_6EMTree_6EMTree_vbfNJets30, 0, (char *)0, 0},
  {(char *)"vbfj1eta", __pyx_getprop_6EMTree_6EMTree_vbfj1eta, 0, (char *)0, 0},
  {(char *)"vbfj1pt", __pyx_getprop_6EMTree_6EMTree_vbfj1pt, 0, (char *)0, 0},
  {(char *)"vbfj2eta", __pyx_getprop_6EMTree_6EMTree_vbfj2eta, 0, (char *)0, 0},
  {(char *)"vbfj2pt", __pyx_getprop_6EMTree_6EMTree_vbfj2pt, 0, (char *)0, 0},
  {(char *)"vispX", __pyx_getprop_6EMTree_6EMTree_vispX, 0, (char *)0, 0},
  {(char *)"vispY", __pyx_getprop_6EMTree_6EMTree_vispY, 0, (char *)0, 0},
  {(char *)"idx", __pyx_getprop_6EMTree_6EMTree_idx, 0, (char *)0, 0},
  {(char *)"complained", __pyx_getprop_6EMTree_6EMTree_complained, __pyx_setprop_6EMTree_6EMTree_complained, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6EMTree_EMTree = {
  PyVarObject_HEAD_INIT(0, 0)
  "EMTree.EMTree", /*tp_name*/
  sizeof(struct __pyx_obj_6EMTree_EMTree), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6EMTree_EMTree, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6EMTree_EMTree, /*tp_traverse*/
  __pyx_tp_clear_6EMTree_EMTree, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_6EMTree_6EMTree_3__iter__, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6EMTree_EMTree, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6EMTree_EMTree, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6EMTree_EMTree, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_6EMTree___pyx_scope_struct____iter__ *__pyx_freelist_6EMTree___pyx_scope_struct____iter__[8];
static int __pyx_freecount_6EMTree___pyx_scope_struct____iter__ = 0;

static PyObject *__pyx_tp_new_6EMTree___pyx_scope_struct____iter__(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_6EMTree___pyx_scope_struct____iter__ > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_6EMTree___pyx_scope_struct____iter__)))) {
    o = (PyObject*)__pyx_freelist_6EMTree___pyx_scope_struct____iter__[--__pyx_freecount_6EMTree___pyx_scope_struct____iter__];
    memset(o, 0, sizeof(struct __pyx_obj_6EMTree___pyx_scope_struct____iter__));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6EMTree___pyx_scope_struct____iter__(PyObject *o) {
  struct __pyx_obj_6EMTree___pyx_scope_struct____iter__ *p = (struct __pyx_obj_6EMTree___pyx_scope_struct____iter__ *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_6EMTree___pyx_scope_struct____iter__ < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_6EMTree___pyx_scope_struct____iter__)))) {
    __pyx_freelist_6EMTree___pyx_scope_struct____iter__[__pyx_freecount_6EMTree___pyx_scope_struct____iter__++] = ((struct __pyx_obj_6EMTree___pyx_scope_struct____iter__ *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_6EMTree___pyx_scope_struct____iter__(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6EMTree___pyx_scope_struct____iter__ *p = (struct __pyx_obj_6EMTree___pyx_scope_struct____iter__ *)o;
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_6EMTree___pyx_scope_struct____iter__ = {
  PyVarObject_HEAD_INIT(0, 0)
  "EMTree.__pyx_scope_struct____iter__", /*tp_name*/
  sizeof(struct __pyx_obj_6EMTree___pyx_scope_struct____iter__), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6EMTree___pyx_scope_struct____iter__, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6EMTree___pyx_scope_struct____iter__, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6EMTree___pyx_scope_struct____iter__, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_6EMTree___pyx_scope_struct_1_where *__pyx_freelist_6EMTree___pyx_scope_struct_1_where[8];
static int __pyx_freecount_6EMTree___pyx_scope_struct_1_where = 0;

static PyObject *__pyx_tp_new_6EMTree___pyx_scope_struct_1_where(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_6EMTree___pyx_scope_struct_1_where > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_6EMTree___pyx_scope_struct_1_where)))) {
    o = (PyObject*)__pyx_freelist_6EMTree___pyx_scope_struct_1_where[--__pyx_freecount_6EMTree___pyx_scope_struct_1_where];
    memset(o, 0, sizeof(struct __pyx_obj_6EMTree___pyx_scope_struct_1_where));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6EMTree___pyx_scope_struct_1_where(PyObject *o) {
  struct __pyx_obj_6EMTree___pyx_scope_struct_1_where *p = (struct __pyx_obj_6EMTree___pyx_scope_struct_1_where *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_filter);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_6EMTree___pyx_scope_struct_1_where < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_6EMTree___pyx_scope_struct_1_where)))) {
    __pyx_freelist_6EMTree___pyx_scope_struct_1_where[__pyx_freecount_6EMTree___pyx_scope_struct_1_where++] = ((struct __pyx_obj_6EMTree___pyx_scope_struct_1_where *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_6EMTree___pyx_scope_struct_1_where(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6EMTree___pyx_scope_struct_1_where *p = (struct __pyx_obj_6EMTree___pyx_scope_struct_1_where *)o;
  if (p->__pyx_v_filter) {
    e = (*v)(p->__pyx_v_filter, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_6EMTree___pyx_scope_struct_1_where = {
  PyVarObject_HEAD_INIT(0, 0)
  "EMTree.__pyx_scope_struct_1_where", /*tp_name*/
  sizeof(struct __pyx_obj_6EMTree___pyx_scope_struct_1_where), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6EMTree___pyx_scope_struct_1_where, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6EMTree___pyx_scope_struct_1_where, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6EMTree___pyx_scope_struct_1_where, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_EMTree(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_EMTree},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "EMTree",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_, __pyx_k_, sizeof(__pyx_k_), 0, 0, 1, 0},
  {&__pyx_n_s_AsCObject, __pyx_k_AsCObject, sizeof(__pyx_k_AsCObject), 0, 0, 1, 1},
  {&__pyx_n_s_EMTree, __pyx_k_EMTree, sizeof(__pyx_k_EMTree), 0, 0, 1, 1},
  {&__pyx_kp_s_EMTree_Expected_branch_Ele24Loos, __pyx_k_EMTree_Expected_branch_Ele24Loos, sizeof(__pyx_k_EMTree_Expected_branch_Ele24Loos), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Ele24Loos_2, __pyx_k_EMTree_Expected_branch_Ele24Loos_2, sizeof(__pyx_k_EMTree_Expected_branch_Ele24Loos_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Ele24Loos_3, __pyx_k_EMTree_Expected_branch_Ele24Loos_3, sizeof(__pyx_k_EMTree_Expected_branch_Ele24Loos_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Ele24Loos_4, __pyx_k_EMTree_Expected_branch_Ele24Loos_4, sizeof(__pyx_k_EMTree_Expected_branch_Ele24Loos_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Ele27WPTi, __pyx_k_EMTree_Expected_branch_Ele27WPTi, sizeof(__pyx_k_EMTree_Expected_branch_Ele27WPTi), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Ele32WPTi, __pyx_k_EMTree_Expected_branch_Ele32WPTi, sizeof(__pyx_k_EMTree_Expected_branch_Ele32WPTi), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Ele35WPTi, __pyx_k_EMTree_Expected_branch_Ele35WPTi, sizeof(__pyx_k_EMTree_Expected_branch_Ele35WPTi), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_EmbPtWeig, __pyx_k_EMTree_Expected_branch_EmbPtWeig, sizeof(__pyx_k_EMTree_Expected_branch_EmbPtWeig), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Eta_does, __pyx_k_EMTree_Expected_branch_Eta_does, sizeof(__pyx_k_EMTree_Expected_branch_Eta_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Flag_BadC, __pyx_k_EMTree_Expected_branch_Flag_BadC, sizeof(__pyx_k_EMTree_Expected_branch_Flag_BadC), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Flag_BadP, __pyx_k_EMTree_Expected_branch_Flag_BadP, sizeof(__pyx_k_EMTree_Expected_branch_Flag_BadP), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Flag_Ecal, __pyx_k_EMTree_Expected_branch_Flag_Ecal, sizeof(__pyx_k_EMTree_Expected_branch_Flag_Ecal), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Flag_HBHE, __pyx_k_EMTree_Expected_branch_Flag_HBHE, sizeof(__pyx_k_EMTree_Expected_branch_Flag_HBHE), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Flag_HBHE_2, __pyx_k_EMTree_Expected_branch_Flag_HBHE_2, sizeof(__pyx_k_EMTree_Expected_branch_Flag_HBHE_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Flag_ecal, __pyx_k_EMTree_Expected_branch_Flag_ecal, sizeof(__pyx_k_EMTree_Expected_branch_Flag_ecal), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Flag_eeBa, __pyx_k_EMTree_Expected_branch_Flag_eeBa, sizeof(__pyx_k_EMTree_Expected_branch_Flag_eeBa), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Flag_glob, __pyx_k_EMTree_Expected_branch_Flag_glob, sizeof(__pyx_k_EMTree_Expected_branch_Flag_glob), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Flag_good, __pyx_k_EMTree_Expected_branch_Flag_good, sizeof(__pyx_k_EMTree_Expected_branch_Flag_good), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_GenWeight, __pyx_k_EMTree_Expected_branch_GenWeight, sizeof(__pyx_k_EMTree_Expected_branch_GenWeight), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Ht_does_n, __pyx_k_EMTree_Expected_branch_Ht_does_n, sizeof(__pyx_k_EMTree_Expected_branch_Ht_does_n), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_IsoMu24Pa, __pyx_k_EMTree_Expected_branch_IsoMu24Pa, sizeof(__pyx_k_EMTree_Expected_branch_IsoMu24Pa), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_IsoMu27Pa, __pyx_k_EMTree_Expected_branch_IsoMu27Pa, sizeof(__pyx_k_EMTree_Expected_branch_IsoMu27Pa), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_LT_does_n, __pyx_k_EMTree_Expected_branch_LT_does_n, sizeof(__pyx_k_EMTree_Expected_branch_LT_does_n), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_MassError, __pyx_k_EMTree_Expected_branch_MassError, sizeof(__pyx_k_EMTree_Expected_branch_MassError), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_MassError_2, __pyx_k_EMTree_Expected_branch_MassError_2, sizeof(__pyx_k_EMTree_Expected_branch_MassError_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_MassError_3, __pyx_k_EMTree_Expected_branch_MassError_3, sizeof(__pyx_k_EMTree_Expected_branch_MassError_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_MassError_4, __pyx_k_EMTree_Expected_branch_MassError_4, sizeof(__pyx_k_EMTree_Expected_branch_MassError_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_MassError_5, __pyx_k_EMTree_Expected_branch_MassError_5, sizeof(__pyx_k_EMTree_Expected_branch_MassError_5), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Mass_does, __pyx_k_EMTree_Expected_branch_Mass_does, sizeof(__pyx_k_EMTree_Expected_branch_Mass_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Mt_does_n, __pyx_k_EMTree_Expected_branch_Mt_does_n, sizeof(__pyx_k_EMTree_Expected_branch_Mt_does_n), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Mu50Pass, __pyx_k_EMTree_Expected_branch_Mu50Pass, sizeof(__pyx_k_EMTree_Expected_branch_Mu50Pass), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_NUP_does, __pyx_k_EMTree_Expected_branch_NUP_does, sizeof(__pyx_k_EMTree_Expected_branch_NUP_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Phi_does, __pyx_k_EMTree_Expected_branch_Phi_does, sizeof(__pyx_k_EMTree_Expected_branch_Phi_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_Pt_does_n, __pyx_k_EMTree_Expected_branch_Pt_does_n, sizeof(__pyx_k_EMTree_Expected_branch_Pt_does_n), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_bjetDeepC, __pyx_k_EMTree_Expected_branch_bjetDeepC, sizeof(__pyx_k_EMTree_Expected_branch_bjetDeepC), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_bjetDeepC_2, __pyx_k_EMTree_Expected_branch_bjetDeepC_2, sizeof(__pyx_k_EMTree_Expected_branch_bjetDeepC_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_bjetDeepC_3, __pyx_k_EMTree_Expected_branch_bjetDeepC_3, sizeof(__pyx_k_EMTree_Expected_branch_bjetDeepC_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_bjetDeepC_4, __pyx_k_EMTree_Expected_branch_bjetDeepC_4, sizeof(__pyx_k_EMTree_Expected_branch_bjetDeepC_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_bjetDeepC_5, __pyx_k_EMTree_Expected_branch_bjetDeepC_5, sizeof(__pyx_k_EMTree_Expected_branch_bjetDeepC_5), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_bjetDeepC_6, __pyx_k_EMTree_Expected_branch_bjetDeepC_6, sizeof(__pyx_k_EMTree_Expected_branch_bjetDeepC_6), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_bweight_2, __pyx_k_EMTree_Expected_branch_bweight_2, sizeof(__pyx_k_EMTree_Expected_branch_bweight_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_bweight_2_2, __pyx_k_EMTree_Expected_branch_bweight_2_2, sizeof(__pyx_k_EMTree_Expected_branch_bweight_2_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_bweight_2_3, __pyx_k_EMTree_Expected_branch_bweight_2_3, sizeof(__pyx_k_EMTree_Expected_branch_bweight_2_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_charge_do, __pyx_k_EMTree_Expected_branch_charge_do, sizeof(__pyx_k_EMTree_Expected_branch_charge_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_deepcsvb1, __pyx_k_EMTree_Expected_branch_deepcsvb1, sizeof(__pyx_k_EMTree_Expected_branch_deepcsvb1), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_deepcsvb1_2, __pyx_k_EMTree_Expected_branch_deepcsvb1_2, sizeof(__pyx_k_EMTree_Expected_branch_deepcsvb1_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_deepcsvb1_3, __pyx_k_EMTree_Expected_branch_deepcsvb1_3, sizeof(__pyx_k_EMTree_Expected_branch_deepcsvb1_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_deepcsvb1_4, __pyx_k_EMTree_Expected_branch_deepcsvb1_4, sizeof(__pyx_k_EMTree_Expected_branch_deepcsvb1_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_deepcsvb1_5, __pyx_k_EMTree_Expected_branch_deepcsvb1_5, sizeof(__pyx_k_EMTree_Expected_branch_deepcsvb1_5), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_deepcsvb1_6, __pyx_k_EMTree_Expected_branch_deepcsvb1_6, sizeof(__pyx_k_EMTree_Expected_branch_deepcsvb1_6), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_deepcsvb2, __pyx_k_EMTree_Expected_branch_deepcsvb2, sizeof(__pyx_k_EMTree_Expected_branch_deepcsvb2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_deepcsvb2_2, __pyx_k_EMTree_Expected_branch_deepcsvb2_2, sizeof(__pyx_k_EMTree_Expected_branch_deepcsvb2_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_deepcsvb2_3, __pyx_k_EMTree_Expected_branch_deepcsvb2_3, sizeof(__pyx_k_EMTree_Expected_branch_deepcsvb2_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_deepcsvb2_4, __pyx_k_EMTree_Expected_branch_deepcsvb2_4, sizeof(__pyx_k_EMTree_Expected_branch_deepcsvb2_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_deepcsvb2_5, __pyx_k_EMTree_Expected_branch_deepcsvb2_5, sizeof(__pyx_k_EMTree_Expected_branch_deepcsvb2_5), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_deepcsvb2_6, __pyx_k_EMTree_Expected_branch_deepcsvb2_6, sizeof(__pyx_k_EMTree_Expected_branch_deepcsvb2_6), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_dielectro, __pyx_k_EMTree_Expected_branch_dielectro, sizeof(__pyx_k_EMTree_Expected_branch_dielectro), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_dimuonVet, __pyx_k_EMTree_Expected_branch_dimuonVet, sizeof(__pyx_k_EMTree_Expected_branch_dimuonVet), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eCharge_d, __pyx_k_EMTree_Expected_branch_eCharge_d, sizeof(__pyx_k_EMTree_Expected_branch_eCharge_d), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eComesFro, __pyx_k_EMTree_Expected_branch_eComesFro, sizeof(__pyx_k_EMTree_Expected_branch_eComesFro), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eCorrecte, __pyx_k_EMTree_Expected_branch_eCorrecte, sizeof(__pyx_k_EMTree_Expected_branch_eCorrecte), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eEnergyEr, __pyx_k_EMTree_Expected_branch_eEnergyEr, sizeof(__pyx_k_EMTree_Expected_branch_eEnergyEr), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eEnergySc, __pyx_k_EMTree_Expected_branch_eEnergySc, sizeof(__pyx_k_EMTree_Expected_branch_eEnergySc), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eEnergySc_2, __pyx_k_EMTree_Expected_branch_eEnergySc_2, sizeof(__pyx_k_EMTree_Expected_branch_eEnergySc_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eEnergySc_3, __pyx_k_EMTree_Expected_branch_eEnergySc_3, sizeof(__pyx_k_EMTree_Expected_branch_eEnergySc_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eEnergySc_4, __pyx_k_EMTree_Expected_branch_eEnergySc_4, sizeof(__pyx_k_EMTree_Expected_branch_eEnergySc_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eEnergySc_5, __pyx_k_EMTree_Expected_branch_eEnergySc_5, sizeof(__pyx_k_EMTree_Expected_branch_eEnergySc_5), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eEnergySc_6, __pyx_k_EMTree_Expected_branch_eEnergySc_6, sizeof(__pyx_k_EMTree_Expected_branch_eEnergySc_6), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eEnergySc_7, __pyx_k_EMTree_Expected_branch_eEnergySc_7, sizeof(__pyx_k_EMTree_Expected_branch_eEnergySc_7), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eEnergySc_8, __pyx_k_EMTree_Expected_branch_eEnergySc_8, sizeof(__pyx_k_EMTree_Expected_branch_eEnergySc_8), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eEnergySi, __pyx_k_EMTree_Expected_branch_eEnergySi, sizeof(__pyx_k_EMTree_Expected_branch_eEnergySi), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eEnergySi_2, __pyx_k_EMTree_Expected_branch_eEnergySi_2, sizeof(__pyx_k_EMTree_Expected_branch_eEnergySi_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eEnergySi_3, __pyx_k_EMTree_Expected_branch_eEnergySi_3, sizeof(__pyx_k_EMTree_Expected_branch_eEnergySi_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eEnergySi_4, __pyx_k_EMTree_Expected_branch_eEnergySi_4, sizeof(__pyx_k_EMTree_Expected_branch_eEnergySi_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eEnergySi_5, __pyx_k_EMTree_Expected_branch_eEnergySi_5, sizeof(__pyx_k_EMTree_Expected_branch_eEnergySi_5), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eEnergySi_6, __pyx_k_EMTree_Expected_branch_eEnergySi_6, sizeof(__pyx_k_EMTree_Expected_branch_eEnergySi_6), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eEta_does, __pyx_k_EMTree_Expected_branch_eEta_does, sizeof(__pyx_k_EMTree_Expected_branch_eEta_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eGenCharg, __pyx_k_EMTree_Expected_branch_eGenCharg, sizeof(__pyx_k_EMTree_Expected_branch_eGenCharg), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eGenDirec, __pyx_k_EMTree_Expected_branch_eGenDirec, sizeof(__pyx_k_EMTree_Expected_branch_eGenDirec), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eGenEnerg, __pyx_k_EMTree_Expected_branch_eGenEnerg, sizeof(__pyx_k_EMTree_Expected_branch_eGenEnerg), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eGenEta_d, __pyx_k_EMTree_Expected_branch_eGenEta_d, sizeof(__pyx_k_EMTree_Expected_branch_eGenEta_d), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eGenIsPro, __pyx_k_EMTree_Expected_branch_eGenIsPro, sizeof(__pyx_k_EMTree_Expected_branch_eGenIsPro), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eGenMothe, __pyx_k_EMTree_Expected_branch_eGenMothe, sizeof(__pyx_k_EMTree_Expected_branch_eGenMothe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eGenParti, __pyx_k_EMTree_Expected_branch_eGenParti, sizeof(__pyx_k_EMTree_Expected_branch_eGenParti), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eGenPdgId, __pyx_k_EMTree_Expected_branch_eGenPdgId, sizeof(__pyx_k_EMTree_Expected_branch_eGenPdgId), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eGenPhi_d, __pyx_k_EMTree_Expected_branch_eGenPhi_d, sizeof(__pyx_k_EMTree_Expected_branch_eGenPhi_d), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eGenPromp, __pyx_k_EMTree_Expected_branch_eGenPromp, sizeof(__pyx_k_EMTree_Expected_branch_eGenPromp), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eGenPromp_2, __pyx_k_EMTree_Expected_branch_eGenPromp_2, sizeof(__pyx_k_EMTree_Expected_branch_eGenPromp_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eGenPt_do, __pyx_k_EMTree_Expected_branch_eGenPt_do, sizeof(__pyx_k_EMTree_Expected_branch_eGenPt_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eGenTauDe, __pyx_k_EMTree_Expected_branch_eGenTauDe, sizeof(__pyx_k_EMTree_Expected_branch_eGenTauDe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eGenVZ_do, __pyx_k_EMTree_Expected_branch_eGenVZ_do, sizeof(__pyx_k_EMTree_Expected_branch_eGenVZ_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eGenVtxPV, __pyx_k_EMTree_Expected_branch_eGenVtxPV, sizeof(__pyx_k_EMTree_Expected_branch_eGenVtxPV), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eIP3DErr, __pyx_k_EMTree_Expected_branch_eIP3DErr, sizeof(__pyx_k_EMTree_Expected_branch_eIP3DErr), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eIP3D_doe, __pyx_k_EMTree_Expected_branch_eIP3D_doe, sizeof(__pyx_k_EMTree_Expected_branch_eIP3D_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eIsoDB03, __pyx_k_EMTree_Expected_branch_eIsoDB03, sizeof(__pyx_k_EMTree_Expected_branch_eIsoDB03), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eJetArea, __pyx_k_EMTree_Expected_branch_eJetArea, sizeof(__pyx_k_EMTree_Expected_branch_eJetArea), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eJetBtag, __pyx_k_EMTree_Expected_branch_eJetBtag, sizeof(__pyx_k_EMTree_Expected_branch_eJetBtag), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eJetDR_do, __pyx_k_EMTree_Expected_branch_eJetDR_do, sizeof(__pyx_k_EMTree_Expected_branch_eJetDR_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eJetEtaEt, __pyx_k_EMTree_Expected_branch_eJetEtaEt, sizeof(__pyx_k_EMTree_Expected_branch_eJetEtaEt), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eJetEtaPh, __pyx_k_EMTree_Expected_branch_eJetEtaPh, sizeof(__pyx_k_EMTree_Expected_branch_eJetEtaPh), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eJetEtaPh_2, __pyx_k_EMTree_Expected_branch_eJetEtaPh_2, sizeof(__pyx_k_EMTree_Expected_branch_eJetEtaPh_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eJetHadro, __pyx_k_EMTree_Expected_branch_eJetHadro, sizeof(__pyx_k_EMTree_Expected_branch_eJetHadro), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eJetPFCIS, __pyx_k_EMTree_Expected_branch_eJetPFCIS, sizeof(__pyx_k_EMTree_Expected_branch_eJetPFCIS), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eJetParto, __pyx_k_EMTree_Expected_branch_eJetParto, sizeof(__pyx_k_EMTree_Expected_branch_eJetParto), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eJetPhiPh, __pyx_k_EMTree_Expected_branch_eJetPhiPh, sizeof(__pyx_k_EMTree_Expected_branch_eJetPhiPh), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eJetPt_do, __pyx_k_EMTree_Expected_branch_eJetPt_do, sizeof(__pyx_k_EMTree_Expected_branch_eJetPt_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMVAIsoWP, __pyx_k_EMTree_Expected_branch_eMVAIsoWP, sizeof(__pyx_k_EMTree_Expected_branch_eMVAIsoWP), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMVAIsoWP_2, __pyx_k_EMTree_Expected_branch_eMVAIsoWP_2, sizeof(__pyx_k_EMTree_Expected_branch_eMVAIsoWP_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMVANoiso, __pyx_k_EMTree_Expected_branch_eMVANoiso, sizeof(__pyx_k_EMTree_Expected_branch_eMVANoiso), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMVANoiso_2, __pyx_k_EMTree_Expected_branch_eMVANoiso_2, sizeof(__pyx_k_EMTree_Expected_branch_eMVANoiso_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMass_doe, __pyx_k_EMTree_Expected_branch_eMass_doe, sizeof(__pyx_k_EMTree_Expected_branch_eMass_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchEmb, __pyx_k_EMTree_Expected_branch_eMatchEmb, sizeof(__pyx_k_EMTree_Expected_branch_eMatchEmb), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchEmb_2, __pyx_k_EMTree_Expected_branch_eMatchEmb_2, sizeof(__pyx_k_EMTree_Expected_branch_eMatchEmb_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchEmb_3, __pyx_k_EMTree_Expected_branch_eMatchEmb_3, sizeof(__pyx_k_EMTree_Expected_branch_eMatchEmb_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchEmb_4, __pyx_k_EMTree_Expected_branch_eMatchEmb_4, sizeof(__pyx_k_EMTree_Expected_branch_eMatchEmb_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchEmb_5, __pyx_k_EMTree_Expected_branch_eMatchEmb_5, sizeof(__pyx_k_EMTree_Expected_branch_eMatchEmb_5), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchEmb_6, __pyx_k_EMTree_Expected_branch_eMatchEmb_6, sizeof(__pyx_k_EMTree_Expected_branch_eMatchEmb_6), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesE, __pyx_k_EMTree_Expected_branch_eMatchesE, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesE), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesE_10, __pyx_k_EMTree_Expected_branch_eMatchesE_10, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesE_10), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesE_11, __pyx_k_EMTree_Expected_branch_eMatchesE_11, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesE_11), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesE_12, __pyx_k_EMTree_Expected_branch_eMatchesE_12, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesE_12), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesE_2, __pyx_k_EMTree_Expected_branch_eMatchesE_2, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesE_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesE_3, __pyx_k_EMTree_Expected_branch_eMatchesE_3, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesE_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesE_4, __pyx_k_EMTree_Expected_branch_eMatchesE_4, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesE_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesE_5, __pyx_k_EMTree_Expected_branch_eMatchesE_5, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesE_5), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesE_6, __pyx_k_EMTree_Expected_branch_eMatchesE_6, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesE_6), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesE_7, __pyx_k_EMTree_Expected_branch_eMatchesE_7, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesE_7), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesE_8, __pyx_k_EMTree_Expected_branch_eMatchesE_8, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesE_8), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesE_9, __pyx_k_EMTree_Expected_branch_eMatchesE_9, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesE_9), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesM, __pyx_k_EMTree_Expected_branch_eMatchesM, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesM), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesM_2, __pyx_k_EMTree_Expected_branch_eMatchesM_2, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesM_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesM_3, __pyx_k_EMTree_Expected_branch_eMatchesM_3, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesM_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesM_4, __pyx_k_EMTree_Expected_branch_eMatchesM_4, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesM_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesM_5, __pyx_k_EMTree_Expected_branch_eMatchesM_5, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesM_5), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesM_6, __pyx_k_EMTree_Expected_branch_eMatchesM_6, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesM_6), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesM_7, __pyx_k_EMTree_Expected_branch_eMatchesM_7, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesM_7), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMatchesM_8, __pyx_k_EMTree_Expected_branch_eMatchesM_8, sizeof(__pyx_k_EMTree_Expected_branch_eMatchesM_8), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eMissingH, __pyx_k_EMTree_Expected_branch_eMissingH, sizeof(__pyx_k_EMTree_Expected_branch_eMissingH), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_ePVDXY_do, __pyx_k_EMTree_Expected_branch_ePVDXY_do, sizeof(__pyx_k_EMTree_Expected_branch_ePVDXY_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_ePVDZ_doe, __pyx_k_EMTree_Expected_branch_ePVDZ_doe, sizeof(__pyx_k_EMTree_Expected_branch_ePVDZ_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_ePassesCo, __pyx_k_EMTree_Expected_branch_ePassesCo, sizeof(__pyx_k_EMTree_Expected_branch_ePassesCo), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_ePhi_does, __pyx_k_EMTree_Expected_branch_ePhi_does, sizeof(__pyx_k_EMTree_Expected_branch_ePhi_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_ePt_does, __pyx_k_EMTree_Expected_branch_ePt_does, sizeof(__pyx_k_EMTree_Expected_branch_ePt_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eRelPFIso, __pyx_k_EMTree_Expected_branch_eRelPFIso, sizeof(__pyx_k_EMTree_Expected_branch_eRelPFIso), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eSIP2D_do, __pyx_k_EMTree_Expected_branch_eSIP2D_do, sizeof(__pyx_k_EMTree_Expected_branch_eSIP2D_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eSIP3D_do, __pyx_k_EMTree_Expected_branch_eSIP3D_do, sizeof(__pyx_k_EMTree_Expected_branch_eSIP3D_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eVZ_does, __pyx_k_EMTree_Expected_branch_eVZ_does, sizeof(__pyx_k_EMTree_Expected_branch_eVZ_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eVetoMVAI, __pyx_k_EMTree_Expected_branch_eVetoMVAI, sizeof(__pyx_k_EMTree_Expected_branch_eVetoMVAI), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eVetoZTTp, __pyx_k_EMTree_Expected_branch_eVetoZTTp, sizeof(__pyx_k_EMTree_Expected_branch_eVetoZTTp), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eZTTGenMa, __pyx_k_EMTree_Expected_branch_eZTTGenMa, sizeof(__pyx_k_EMTree_Expected_branch_eZTTGenMa), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_e_m_PZeta, __pyx_k_EMTree_Expected_branch_e_m_PZeta, sizeof(__pyx_k_EMTree_Expected_branch_e_m_PZeta), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_e_m_PZeta_2, __pyx_k_EMTree_Expected_branch_e_m_PZeta_2, sizeof(__pyx_k_EMTree_Expected_branch_e_m_PZeta_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_e_m_doubl, __pyx_k_EMTree_Expected_branch_e_m_doubl, sizeof(__pyx_k_EMTree_Expected_branch_e_m_doubl), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_eecalEner, __pyx_k_EMTree_Expected_branch_eecalEner, sizeof(__pyx_k_EMTree_Expected_branch_eecalEner), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_evt_does, __pyx_k_EMTree_Expected_branch_evt_does, sizeof(__pyx_k_EMTree_Expected_branch_evt_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_genEta_do, __pyx_k_EMTree_Expected_branch_genEta_do, sizeof(__pyx_k_EMTree_Expected_branch_genEta_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_genHTT_do, __pyx_k_EMTree_Expected_branch_genHTT_do, sizeof(__pyx_k_EMTree_Expected_branch_genHTT_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_genM_does, __pyx_k_EMTree_Expected_branch_genM_does, sizeof(__pyx_k_EMTree_Expected_branch_genM_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_genMass_d, __pyx_k_EMTree_Expected_branch_genMass_d, sizeof(__pyx_k_EMTree_Expected_branch_genMass_d), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_genPhi_do, __pyx_k_EMTree_Expected_branch_genPhi_do, sizeof(__pyx_k_EMTree_Expected_branch_genPhi_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_genpT_doe, __pyx_k_EMTree_Expected_branch_genpT_doe, sizeof(__pyx_k_EMTree_Expected_branch_genpT_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_genpX_doe, __pyx_k_EMTree_Expected_branch_genpX_doe, sizeof(__pyx_k_EMTree_Expected_branch_genpX_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_genpY_doe, __pyx_k_EMTree_Expected_branch_genpY_doe, sizeof(__pyx_k_EMTree_Expected_branch_genpY_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_idx_does, __pyx_k_EMTree_Expected_branch_idx_does, sizeof(__pyx_k_EMTree_Expected_branch_idx_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_isGtautau, __pyx_k_EMTree_Expected_branch_isGtautau, sizeof(__pyx_k_EMTree_Expected_branch_isGtautau), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_isWenu_do, __pyx_k_EMTree_Expected_branch_isWenu_do, sizeof(__pyx_k_EMTree_Expected_branch_isWenu_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_isWmunu_d, __pyx_k_EMTree_Expected_branch_isWmunu_d, sizeof(__pyx_k_EMTree_Expected_branch_isWmunu_d), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_isWtaunu, __pyx_k_EMTree_Expected_branch_isWtaunu, sizeof(__pyx_k_EMTree_Expected_branch_isWtaunu), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_isZee_doe, __pyx_k_EMTree_Expected_branch_isZee_doe, sizeof(__pyx_k_EMTree_Expected_branch_isZee_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_isZmumu_d, __pyx_k_EMTree_Expected_branch_isZmumu_d, sizeof(__pyx_k_EMTree_Expected_branch_isZmumu_d), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_isZtautau, __pyx_k_EMTree_Expected_branch_isZtautau, sizeof(__pyx_k_EMTree_Expected_branch_isZtautau), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_isdata_do, __pyx_k_EMTree_Expected_branch_isdata_do, sizeof(__pyx_k_EMTree_Expected_branch_isdata_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_isembed_d, __pyx_k_EMTree_Expected_branch_isembed_d, sizeof(__pyx_k_EMTree_Expected_branch_isembed_d), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1csvWoNo, __pyx_k_EMTree_Expected_branch_j1csvWoNo, sizeof(__pyx_k_EMTree_Expected_branch_j1csvWoNo), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1csv_doe, __pyx_k_EMTree_Expected_branch_j1csv_doe, sizeof(__pyx_k_EMTree_Expected_branch_j1csv_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1etaWoNo, __pyx_k_EMTree_Expected_branch_j1etaWoNo, sizeof(__pyx_k_EMTree_Expected_branch_j1etaWoNo), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1eta_doe, __pyx_k_EMTree_Expected_branch_j1eta_doe, sizeof(__pyx_k_EMTree_Expected_branch_j1eta_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1hadronf, __pyx_k_EMTree_Expected_branch_j1hadronf, sizeof(__pyx_k_EMTree_Expected_branch_j1hadronf), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1hadronf_2, __pyx_k_EMTree_Expected_branch_j1hadronf_2, sizeof(__pyx_k_EMTree_Expected_branch_j1hadronf_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1phiWoNo, __pyx_k_EMTree_Expected_branch_j1phiWoNo, sizeof(__pyx_k_EMTree_Expected_branch_j1phiWoNo), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1phi_doe, __pyx_k_EMTree_Expected_branch_j1phi_doe, sizeof(__pyx_k_EMTree_Expected_branch_j1phi_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi, __pyx_k_EMTree_Expected_branch_j1ptWoNoi, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_10, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_10, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_10), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_11, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_11, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_11), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_12, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_12, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_12), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_13, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_13, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_13), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_14, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_14, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_14), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_15, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_15, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_15), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_16, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_16, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_16), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_17, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_17, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_17), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_18, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_18, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_18), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_19, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_19, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_19), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_2, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_2, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_20, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_20, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_20), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_21, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_21, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_21), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_22, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_22, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_22), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_23, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_23, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_23), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_24, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_24, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_24), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_25, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_25, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_25), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_3, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_3, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_4, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_4, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_5, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_5, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_5), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_6, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_6, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_6), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_7, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_7, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_7), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_8, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_8, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_8), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_9, __pyx_k_EMTree_Expected_branch_j1ptWoNoi_9, sizeof(__pyx_k_EMTree_Expected_branch_j1ptWoNoi_9), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j1pt_does, __pyx_k_EMTree_Expected_branch_j1pt_does, sizeof(__pyx_k_EMTree_Expected_branch_j1pt_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2csvWoNo, __pyx_k_EMTree_Expected_branch_j2csvWoNo, sizeof(__pyx_k_EMTree_Expected_branch_j2csvWoNo), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2csv_doe, __pyx_k_EMTree_Expected_branch_j2csv_doe, sizeof(__pyx_k_EMTree_Expected_branch_j2csv_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2etaWoNo, __pyx_k_EMTree_Expected_branch_j2etaWoNo, sizeof(__pyx_k_EMTree_Expected_branch_j2etaWoNo), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2eta_doe, __pyx_k_EMTree_Expected_branch_j2eta_doe, sizeof(__pyx_k_EMTree_Expected_branch_j2eta_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2hadronf, __pyx_k_EMTree_Expected_branch_j2hadronf, sizeof(__pyx_k_EMTree_Expected_branch_j2hadronf), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2hadronf_2, __pyx_k_EMTree_Expected_branch_j2hadronf_2, sizeof(__pyx_k_EMTree_Expected_branch_j2hadronf_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2phiWoNo, __pyx_k_EMTree_Expected_branch_j2phiWoNo, sizeof(__pyx_k_EMTree_Expected_branch_j2phiWoNo), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2phi_doe, __pyx_k_EMTree_Expected_branch_j2phi_doe, sizeof(__pyx_k_EMTree_Expected_branch_j2phi_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi, __pyx_k_EMTree_Expected_branch_j2ptWoNoi, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_10, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_10, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_10), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_11, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_11, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_11), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_12, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_12, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_12), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_13, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_13, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_13), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_14, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_14, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_14), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_15, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_15, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_15), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_16, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_16, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_16), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_17, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_17, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_17), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_18, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_18, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_18), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_19, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_19, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_19), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_2, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_2, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_20, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_20, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_20), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_21, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_21, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_21), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_22, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_22, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_22), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_23, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_23, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_23), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_24, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_24, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_24), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_25, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_25, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_25), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_3, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_3, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_4, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_4, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_5, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_5, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_5), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_6, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_6, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_6), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_7, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_7, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_7), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_8, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_8, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_8), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_9, __pyx_k_EMTree_Expected_branch_j2ptWoNoi_9, sizeof(__pyx_k_EMTree_Expected_branch_j2ptWoNoi_9), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_j2pt_does, __pyx_k_EMTree_Expected_branch_j2pt_does, sizeof(__pyx_k_EMTree_Expected_branch_j2pt_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb1eta_20, __pyx_k_EMTree_Expected_branch_jb1eta_20, sizeof(__pyx_k_EMTree_Expected_branch_jb1eta_20), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb1eta_20_2, __pyx_k_EMTree_Expected_branch_jb1eta_20_2, sizeof(__pyx_k_EMTree_Expected_branch_jb1eta_20_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb1eta_20_3, __pyx_k_EMTree_Expected_branch_jb1eta_20_3, sizeof(__pyx_k_EMTree_Expected_branch_jb1eta_20_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb1hadron, __pyx_k_EMTree_Expected_branch_jb1hadron, sizeof(__pyx_k_EMTree_Expected_branch_jb1hadron), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb1hadron_2, __pyx_k_EMTree_Expected_branch_jb1hadron_2, sizeof(__pyx_k_EMTree_Expected_branch_jb1hadron_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb1hadron_3, __pyx_k_EMTree_Expected_branch_jb1hadron_3, sizeof(__pyx_k_EMTree_Expected_branch_jb1hadron_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb1phi_20, __pyx_k_EMTree_Expected_branch_jb1phi_20, sizeof(__pyx_k_EMTree_Expected_branch_jb1phi_20), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb1phi_20_2, __pyx_k_EMTree_Expected_branch_jb1phi_20_2, sizeof(__pyx_k_EMTree_Expected_branch_jb1phi_20_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb1phi_20_3, __pyx_k_EMTree_Expected_branch_jb1phi_20_3, sizeof(__pyx_k_EMTree_Expected_branch_jb1phi_20_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb1pt_201, __pyx_k_EMTree_Expected_branch_jb1pt_201, sizeof(__pyx_k_EMTree_Expected_branch_jb1pt_201), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb1pt_201_2, __pyx_k_EMTree_Expected_branch_jb1pt_201_2, sizeof(__pyx_k_EMTree_Expected_branch_jb1pt_201_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb1pt_201_3, __pyx_k_EMTree_Expected_branch_jb1pt_201_3, sizeof(__pyx_k_EMTree_Expected_branch_jb1pt_201_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb2eta_20, __pyx_k_EMTree_Expected_branch_jb2eta_20, sizeof(__pyx_k_EMTree_Expected_branch_jb2eta_20), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb2eta_20_2, __pyx_k_EMTree_Expected_branch_jb2eta_20_2, sizeof(__pyx_k_EMTree_Expected_branch_jb2eta_20_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb2eta_20_3, __pyx_k_EMTree_Expected_branch_jb2eta_20_3, sizeof(__pyx_k_EMTree_Expected_branch_jb2eta_20_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb2hadron, __pyx_k_EMTree_Expected_branch_jb2hadron, sizeof(__pyx_k_EMTree_Expected_branch_jb2hadron), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb2hadron_2, __pyx_k_EMTree_Expected_branch_jb2hadron_2, sizeof(__pyx_k_EMTree_Expected_branch_jb2hadron_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb2hadron_3, __pyx_k_EMTree_Expected_branch_jb2hadron_3, sizeof(__pyx_k_EMTree_Expected_branch_jb2hadron_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb2phi_20, __pyx_k_EMTree_Expected_branch_jb2phi_20, sizeof(__pyx_k_EMTree_Expected_branch_jb2phi_20), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb2phi_20_2, __pyx_k_EMTree_Expected_branch_jb2phi_20_2, sizeof(__pyx_k_EMTree_Expected_branch_jb2phi_20_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb2phi_20_3, __pyx_k_EMTree_Expected_branch_jb2phi_20_3, sizeof(__pyx_k_EMTree_Expected_branch_jb2phi_20_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb2pt_201, __pyx_k_EMTree_Expected_branch_jb2pt_201, sizeof(__pyx_k_EMTree_Expected_branch_jb2pt_201), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb2pt_201_2, __pyx_k_EMTree_Expected_branch_jb2pt_201_2, sizeof(__pyx_k_EMTree_Expected_branch_jb2pt_201_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jb2pt_201_3, __pyx_k_EMTree_Expected_branch_jb2pt_201_3, sizeof(__pyx_k_EMTree_Expected_branch_jb2pt_201_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto20, __pyx_k_EMTree_Expected_branch_jetVeto20, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto20), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto20_2, __pyx_k_EMTree_Expected_branch_jetVeto20_2, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto20_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30, __pyx_k_EMTree_Expected_branch_jetVeto30, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_10, __pyx_k_EMTree_Expected_branch_jetVeto30_10, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_10), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_11, __pyx_k_EMTree_Expected_branch_jetVeto30_11, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_11), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_12, __pyx_k_EMTree_Expected_branch_jetVeto30_12, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_12), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_13, __pyx_k_EMTree_Expected_branch_jetVeto30_13, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_13), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_14, __pyx_k_EMTree_Expected_branch_jetVeto30_14, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_14), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_15, __pyx_k_EMTree_Expected_branch_jetVeto30_15, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_15), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_16, __pyx_k_EMTree_Expected_branch_jetVeto30_16, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_16), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_17, __pyx_k_EMTree_Expected_branch_jetVeto30_17, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_17), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_18, __pyx_k_EMTree_Expected_branch_jetVeto30_18, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_18), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_19, __pyx_k_EMTree_Expected_branch_jetVeto30_19, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_19), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_2, __pyx_k_EMTree_Expected_branch_jetVeto30_2, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_20, __pyx_k_EMTree_Expected_branch_jetVeto30_20, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_20), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_21, __pyx_k_EMTree_Expected_branch_jetVeto30_21, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_21), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_22, __pyx_k_EMTree_Expected_branch_jetVeto30_22, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_22), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_23, __pyx_k_EMTree_Expected_branch_jetVeto30_23, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_23), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_24, __pyx_k_EMTree_Expected_branch_jetVeto30_24, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_24), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_25, __pyx_k_EMTree_Expected_branch_jetVeto30_25, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_25), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_26, __pyx_k_EMTree_Expected_branch_jetVeto30_26, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_26), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_27, __pyx_k_EMTree_Expected_branch_jetVeto30_27, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_27), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_28, __pyx_k_EMTree_Expected_branch_jetVeto30_28, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_28), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_3, __pyx_k_EMTree_Expected_branch_jetVeto30_3, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_4, __pyx_k_EMTree_Expected_branch_jetVeto30_4, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_5, __pyx_k_EMTree_Expected_branch_jetVeto30_5, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_5), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_6, __pyx_k_EMTree_Expected_branch_jetVeto30_6, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_6), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_7, __pyx_k_EMTree_Expected_branch_jetVeto30_7, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_7), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_8, __pyx_k_EMTree_Expected_branch_jetVeto30_8, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_8), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_jetVeto30_9, __pyx_k_EMTree_Expected_branch_jetVeto30_9, sizeof(__pyx_k_EMTree_Expected_branch_jetVeto30_9), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_lumi_does, __pyx_k_EMTree_Expected_branch_lumi_does, sizeof(__pyx_k_EMTree_Expected_branch_lumi_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mCharge_d, __pyx_k_EMTree_Expected_branch_mCharge_d, sizeof(__pyx_k_EMTree_Expected_branch_mCharge_d), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mComesFro, __pyx_k_EMTree_Expected_branch_mComesFro, sizeof(__pyx_k_EMTree_Expected_branch_mComesFro), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mEta_does, __pyx_k_EMTree_Expected_branch_mEta_does, sizeof(__pyx_k_EMTree_Expected_branch_mEta_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mGenCharg, __pyx_k_EMTree_Expected_branch_mGenCharg, sizeof(__pyx_k_EMTree_Expected_branch_mGenCharg), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mGenDirec, __pyx_k_EMTree_Expected_branch_mGenDirec, sizeof(__pyx_k_EMTree_Expected_branch_mGenDirec), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mGenEnerg, __pyx_k_EMTree_Expected_branch_mGenEnerg, sizeof(__pyx_k_EMTree_Expected_branch_mGenEnerg), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mGenEta_d, __pyx_k_EMTree_Expected_branch_mGenEta_d, sizeof(__pyx_k_EMTree_Expected_branch_mGenEta_d), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mGenIsPro, __pyx_k_EMTree_Expected_branch_mGenIsPro, sizeof(__pyx_k_EMTree_Expected_branch_mGenIsPro), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mGenMothe, __pyx_k_EMTree_Expected_branch_mGenMothe, sizeof(__pyx_k_EMTree_Expected_branch_mGenMothe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mGenParti, __pyx_k_EMTree_Expected_branch_mGenParti, sizeof(__pyx_k_EMTree_Expected_branch_mGenParti), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mGenPdgId, __pyx_k_EMTree_Expected_branch_mGenPdgId, sizeof(__pyx_k_EMTree_Expected_branch_mGenPdgId), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mGenPhi_d, __pyx_k_EMTree_Expected_branch_mGenPhi_d, sizeof(__pyx_k_EMTree_Expected_branch_mGenPhi_d), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mGenPromp, __pyx_k_EMTree_Expected_branch_mGenPromp, sizeof(__pyx_k_EMTree_Expected_branch_mGenPromp), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mGenPromp_2, __pyx_k_EMTree_Expected_branch_mGenPromp_2, sizeof(__pyx_k_EMTree_Expected_branch_mGenPromp_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mGenPromp_3, __pyx_k_EMTree_Expected_branch_mGenPromp_3, sizeof(__pyx_k_EMTree_Expected_branch_mGenPromp_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mGenPt_do, __pyx_k_EMTree_Expected_branch_mGenPt_do, sizeof(__pyx_k_EMTree_Expected_branch_mGenPt_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mGenTauDe, __pyx_k_EMTree_Expected_branch_mGenTauDe, sizeof(__pyx_k_EMTree_Expected_branch_mGenTauDe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mGenVZ_do, __pyx_k_EMTree_Expected_branch_mGenVZ_do, sizeof(__pyx_k_EMTree_Expected_branch_mGenVZ_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mGenVtxPV, __pyx_k_EMTree_Expected_branch_mGenVtxPV, sizeof(__pyx_k_EMTree_Expected_branch_mGenVtxPV), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mIP3DErr, __pyx_k_EMTree_Expected_branch_mIP3DErr, sizeof(__pyx_k_EMTree_Expected_branch_mIP3DErr), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mIP3D_doe, __pyx_k_EMTree_Expected_branch_mIP3D_doe, sizeof(__pyx_k_EMTree_Expected_branch_mIP3D_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mIsGlobal, __pyx_k_EMTree_Expected_branch_mIsGlobal, sizeof(__pyx_k_EMTree_Expected_branch_mIsGlobal), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mIsPFMuon, __pyx_k_EMTree_Expected_branch_mIsPFMuon, sizeof(__pyx_k_EMTree_Expected_branch_mIsPFMuon), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mIsTracke, __pyx_k_EMTree_Expected_branch_mIsTracke, sizeof(__pyx_k_EMTree_Expected_branch_mIsTracke), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mJetArea, __pyx_k_EMTree_Expected_branch_mJetArea, sizeof(__pyx_k_EMTree_Expected_branch_mJetArea), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mJetBtag, __pyx_k_EMTree_Expected_branch_mJetBtag, sizeof(__pyx_k_EMTree_Expected_branch_mJetBtag), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mJetDR_do, __pyx_k_EMTree_Expected_branch_mJetDR_do, sizeof(__pyx_k_EMTree_Expected_branch_mJetDR_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mJetEtaEt, __pyx_k_EMTree_Expected_branch_mJetEtaEt, sizeof(__pyx_k_EMTree_Expected_branch_mJetEtaEt), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mJetEtaPh, __pyx_k_EMTree_Expected_branch_mJetEtaPh, sizeof(__pyx_k_EMTree_Expected_branch_mJetEtaPh), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mJetEtaPh_2, __pyx_k_EMTree_Expected_branch_mJetEtaPh_2, sizeof(__pyx_k_EMTree_Expected_branch_mJetEtaPh_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mJetHadro, __pyx_k_EMTree_Expected_branch_mJetHadro, sizeof(__pyx_k_EMTree_Expected_branch_mJetHadro), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mJetPFCIS, __pyx_k_EMTree_Expected_branch_mJetPFCIS, sizeof(__pyx_k_EMTree_Expected_branch_mJetPFCIS), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mJetParto, __pyx_k_EMTree_Expected_branch_mJetParto, sizeof(__pyx_k_EMTree_Expected_branch_mJetParto), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mJetPhiPh, __pyx_k_EMTree_Expected_branch_mJetPhiPh, sizeof(__pyx_k_EMTree_Expected_branch_mJetPhiPh), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mJetPt_do, __pyx_k_EMTree_Expected_branch_mJetPt_do, sizeof(__pyx_k_EMTree_Expected_branch_mJetPt_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mMass_doe, __pyx_k_EMTree_Expected_branch_mMass_doe, sizeof(__pyx_k_EMTree_Expected_branch_mMass_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mMatchEmb, __pyx_k_EMTree_Expected_branch_mMatchEmb, sizeof(__pyx_k_EMTree_Expected_branch_mMatchEmb), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mMatchEmb_2, __pyx_k_EMTree_Expected_branch_mMatchEmb_2, sizeof(__pyx_k_EMTree_Expected_branch_mMatchEmb_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mMatchesI, __pyx_k_EMTree_Expected_branch_mMatchesI, sizeof(__pyx_k_EMTree_Expected_branch_mMatchesI), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mMatchesI_2, __pyx_k_EMTree_Expected_branch_mMatchesI_2, sizeof(__pyx_k_EMTree_Expected_branch_mMatchesI_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mMatchesI_3, __pyx_k_EMTree_Expected_branch_mMatchesI_3, sizeof(__pyx_k_EMTree_Expected_branch_mMatchesI_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mMatchesI_4, __pyx_k_EMTree_Expected_branch_mMatchesI_4, sizeof(__pyx_k_EMTree_Expected_branch_mMatchesI_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mMatchesM, __pyx_k_EMTree_Expected_branch_mMatchesM, sizeof(__pyx_k_EMTree_Expected_branch_mMatchesM), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mMatchesM_2, __pyx_k_EMTree_Expected_branch_mMatchesM_2, sizeof(__pyx_k_EMTree_Expected_branch_mMatchesM_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mMatchesM_3, __pyx_k_EMTree_Expected_branch_mMatchesM_3, sizeof(__pyx_k_EMTree_Expected_branch_mMatchesM_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mMatchesM_4, __pyx_k_EMTree_Expected_branch_mMatchesM_4, sizeof(__pyx_k_EMTree_Expected_branch_mMatchesM_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mMatchesM_5, __pyx_k_EMTree_Expected_branch_mMatchesM_5, sizeof(__pyx_k_EMTree_Expected_branch_mMatchesM_5), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mMatchesM_6, __pyx_k_EMTree_Expected_branch_mMatchesM_6, sizeof(__pyx_k_EMTree_Expected_branch_mMatchesM_6), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mMatchesM_7, __pyx_k_EMTree_Expected_branch_mMatchesM_7, sizeof(__pyx_k_EMTree_Expected_branch_mMatchesM_7), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mMatchesM_8, __pyx_k_EMTree_Expected_branch_mMatchesM_8, sizeof(__pyx_k_EMTree_Expected_branch_mMatchesM_8), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mPFIDLoos, __pyx_k_EMTree_Expected_branch_mPFIDLoos, sizeof(__pyx_k_EMTree_Expected_branch_mPFIDLoos), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mPFIDMedi, __pyx_k_EMTree_Expected_branch_mPFIDMedi, sizeof(__pyx_k_EMTree_Expected_branch_mPFIDMedi), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mPFIDTigh, __pyx_k_EMTree_Expected_branch_mPFIDTigh, sizeof(__pyx_k_EMTree_Expected_branch_mPFIDTigh), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mPVDXY_do, __pyx_k_EMTree_Expected_branch_mPVDXY_do, sizeof(__pyx_k_EMTree_Expected_branch_mPVDXY_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mPVDZ_doe, __pyx_k_EMTree_Expected_branch_mPVDZ_doe, sizeof(__pyx_k_EMTree_Expected_branch_mPVDZ_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mPhi_does, __pyx_k_EMTree_Expected_branch_mPhi_does, sizeof(__pyx_k_EMTree_Expected_branch_mPhi_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mPt_does, __pyx_k_EMTree_Expected_branch_mPt_does, sizeof(__pyx_k_EMTree_Expected_branch_mPt_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mRelPFIso, __pyx_k_EMTree_Expected_branch_mRelPFIso, sizeof(__pyx_k_EMTree_Expected_branch_mRelPFIso), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mSIP2D_do, __pyx_k_EMTree_Expected_branch_mSIP2D_do, sizeof(__pyx_k_EMTree_Expected_branch_mSIP2D_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mSIP3D_do, __pyx_k_EMTree_Expected_branch_mSIP3D_do, sizeof(__pyx_k_EMTree_Expected_branch_mSIP3D_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mVZ_does, __pyx_k_EMTree_Expected_branch_mVZ_does, sizeof(__pyx_k_EMTree_Expected_branch_mVZ_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mZTTGenMa, __pyx_k_EMTree_Expected_branch_mZTTGenMa, sizeof(__pyx_k_EMTree_Expected_branch_mZTTGenMa), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mu12e23DZ, __pyx_k_EMTree_Expected_branch_mu12e23DZ, sizeof(__pyx_k_EMTree_Expected_branch_mu12e23DZ), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mu12e23Pa, __pyx_k_EMTree_Expected_branch_mu12e23Pa, sizeof(__pyx_k_EMTree_Expected_branch_mu12e23Pa), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mu23e12DZ, __pyx_k_EMTree_Expected_branch_mu23e12DZ, sizeof(__pyx_k_EMTree_Expected_branch_mu23e12DZ), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mu23e12Pa, __pyx_k_EMTree_Expected_branch_mu23e12Pa, sizeof(__pyx_k_EMTree_Expected_branch_mu23e12Pa), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mu8e23DZP, __pyx_k_EMTree_Expected_branch_mu8e23DZP, sizeof(__pyx_k_EMTree_Expected_branch_mu8e23DZP), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_mu8e23Pas, __pyx_k_EMTree_Expected_branch_mu8e23Pas, sizeof(__pyx_k_EMTree_Expected_branch_mu8e23Pas), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_muGlbIsoV, __pyx_k_EMTree_Expected_branch_muGlbIsoV, sizeof(__pyx_k_EMTree_Expected_branch_muGlbIsoV), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_muVetoZTT, __pyx_k_EMTree_Expected_branch_muVetoZTT, sizeof(__pyx_k_EMTree_Expected_branch_muVetoZTT), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_nTruePU_d, __pyx_k_EMTree_Expected_branch_nTruePU_d, sizeof(__pyx_k_EMTree_Expected_branch_nTruePU_d), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_npNLO_doe, __pyx_k_EMTree_Expected_branch_npNLO_doe, sizeof(__pyx_k_EMTree_Expected_branch_npNLO_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_numGenJet, __pyx_k_EMTree_Expected_branch_numGenJet, sizeof(__pyx_k_EMTree_Expected_branch_numGenJet), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_nvtx_does, __pyx_k_EMTree_Expected_branch_nvtx_does, sizeof(__pyx_k_EMTree_Expected_branch_nvtx_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_prefiring, __pyx_k_EMTree_Expected_branch_prefiring, sizeof(__pyx_k_EMTree_Expected_branch_prefiring), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_prefiring_2, __pyx_k_EMTree_Expected_branch_prefiring_2, sizeof(__pyx_k_EMTree_Expected_branch_prefiring_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_prefiring_3, __pyx_k_EMTree_Expected_branch_prefiring_3, sizeof(__pyx_k_EMTree_Expected_branch_prefiring_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_processID, __pyx_k_EMTree_Expected_branch_processID, sizeof(__pyx_k_EMTree_Expected_branch_processID), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_puppiMetE, __pyx_k_EMTree_Expected_branch_puppiMetE, sizeof(__pyx_k_EMTree_Expected_branch_puppiMetE), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_puppiMetP, __pyx_k_EMTree_Expected_branch_puppiMetP, sizeof(__pyx_k_EMTree_Expected_branch_puppiMetP), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_pvChi2_do, __pyx_k_EMTree_Expected_branch_pvChi2_do, sizeof(__pyx_k_EMTree_Expected_branch_pvChi2_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_pvDX_does, __pyx_k_EMTree_Expected_branch_pvDX_does, sizeof(__pyx_k_EMTree_Expected_branch_pvDX_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_pvDY_does, __pyx_k_EMTree_Expected_branch_pvDY_does, sizeof(__pyx_k_EMTree_Expected_branch_pvDY_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_pvDZ_does, __pyx_k_EMTree_Expected_branch_pvDZ_does, sizeof(__pyx_k_EMTree_Expected_branch_pvDZ_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_pvIsFake, __pyx_k_EMTree_Expected_branch_pvIsFake, sizeof(__pyx_k_EMTree_Expected_branch_pvIsFake), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_pvIsValid, __pyx_k_EMTree_Expected_branch_pvIsValid, sizeof(__pyx_k_EMTree_Expected_branch_pvIsValid), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_pvNormChi, __pyx_k_EMTree_Expected_branch_pvNormChi, sizeof(__pyx_k_EMTree_Expected_branch_pvNormChi), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_pvRho_doe, __pyx_k_EMTree_Expected_branch_pvRho_doe, sizeof(__pyx_k_EMTree_Expected_branch_pvRho_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_pvX_does, __pyx_k_EMTree_Expected_branch_pvX_does, sizeof(__pyx_k_EMTree_Expected_branch_pvX_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_pvY_does, __pyx_k_EMTree_Expected_branch_pvY_does, sizeof(__pyx_k_EMTree_Expected_branch_pvY_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_pvZ_does, __pyx_k_EMTree_Expected_branch_pvZ_does, sizeof(__pyx_k_EMTree_Expected_branch_pvZ_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_pvndof_do, __pyx_k_EMTree_Expected_branch_pvndof_do, sizeof(__pyx_k_EMTree_Expected_branch_pvndof_do), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_recoilDau, __pyx_k_EMTree_Expected_branch_recoilDau, sizeof(__pyx_k_EMTree_Expected_branch_recoilDau), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_recoilWit, __pyx_k_EMTree_Expected_branch_recoilWit, sizeof(__pyx_k_EMTree_Expected_branch_recoilWit), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_rho_does, __pyx_k_EMTree_Expected_branch_rho_does, sizeof(__pyx_k_EMTree_Expected_branch_rho_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_run_does, __pyx_k_EMTree_Expected_branch_run_does, sizeof(__pyx_k_EMTree_Expected_branch_run_does), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_singleE25, __pyx_k_EMTree_Expected_branch_singleE25, sizeof(__pyx_k_EMTree_Expected_branch_singleE25), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_tauVetoPt, __pyx_k_EMTree_Expected_branch_tauVetoPt, sizeof(__pyx_k_EMTree_Expected_branch_tauVetoPt), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_tauVetoPt_2, __pyx_k_EMTree_Expected_branch_tauVetoPt_2, sizeof(__pyx_k_EMTree_Expected_branch_tauVetoPt_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_topQuarkP, __pyx_k_EMTree_Expected_branch_topQuarkP, sizeof(__pyx_k_EMTree_Expected_branch_topQuarkP), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_topQuarkP_2, __pyx_k_EMTree_Expected_branch_topQuarkP_2, sizeof(__pyx_k_EMTree_Expected_branch_topQuarkP_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM, __pyx_k_EMTree_Expected_branch_type1_pfM, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_10, __pyx_k_EMTree_Expected_branch_type1_pfM_10, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_10), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_11, __pyx_k_EMTree_Expected_branch_type1_pfM_11, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_11), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_12, __pyx_k_EMTree_Expected_branch_type1_pfM_12, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_12), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_13, __pyx_k_EMTree_Expected_branch_type1_pfM_13, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_13), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_14, __pyx_k_EMTree_Expected_branch_type1_pfM_14, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_14), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_15, __pyx_k_EMTree_Expected_branch_type1_pfM_15, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_15), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_16, __pyx_k_EMTree_Expected_branch_type1_pfM_16, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_16), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_17, __pyx_k_EMTree_Expected_branch_type1_pfM_17, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_17), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_18, __pyx_k_EMTree_Expected_branch_type1_pfM_18, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_18), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_19, __pyx_k_EMTree_Expected_branch_type1_pfM_19, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_19), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_2, __pyx_k_EMTree_Expected_branch_type1_pfM_2, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_20, __pyx_k_EMTree_Expected_branch_type1_pfM_20, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_20), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_21, __pyx_k_EMTree_Expected_branch_type1_pfM_21, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_21), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_22, __pyx_k_EMTree_Expected_branch_type1_pfM_22, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_22), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_23, __pyx_k_EMTree_Expected_branch_type1_pfM_23, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_23), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_24, __pyx_k_EMTree_Expected_branch_type1_pfM_24, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_24), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_25, __pyx_k_EMTree_Expected_branch_type1_pfM_25, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_25), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_26, __pyx_k_EMTree_Expected_branch_type1_pfM_26, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_26), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_27, __pyx_k_EMTree_Expected_branch_type1_pfM_27, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_27), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_28, __pyx_k_EMTree_Expected_branch_type1_pfM_28, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_28), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_29, __pyx_k_EMTree_Expected_branch_type1_pfM_29, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_29), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_3, __pyx_k_EMTree_Expected_branch_type1_pfM_3, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_30, __pyx_k_EMTree_Expected_branch_type1_pfM_30, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_30), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_31, __pyx_k_EMTree_Expected_branch_type1_pfM_31, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_31), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_32, __pyx_k_EMTree_Expected_branch_type1_pfM_32, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_32), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_33, __pyx_k_EMTree_Expected_branch_type1_pfM_33, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_33), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_34, __pyx_k_EMTree_Expected_branch_type1_pfM_34, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_34), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_35, __pyx_k_EMTree_Expected_branch_type1_pfM_35, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_35), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_36, __pyx_k_EMTree_Expected_branch_type1_pfM_36, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_36), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_37, __pyx_k_EMTree_Expected_branch_type1_pfM_37, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_37), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_38, __pyx_k_EMTree_Expected_branch_type1_pfM_38, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_38), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_39, __pyx_k_EMTree_Expected_branch_type1_pfM_39, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_39), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_4, __pyx_k_EMTree_Expected_branch_type1_pfM_4, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_40, __pyx_k_EMTree_Expected_branch_type1_pfM_40, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_40), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_41, __pyx_k_EMTree_Expected_branch_type1_pfM_41, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_41), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_42, __pyx_k_EMTree_Expected_branch_type1_pfM_42, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_42), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_43, __pyx_k_EMTree_Expected_branch_type1_pfM_43, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_43), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_44, __pyx_k_EMTree_Expected_branch_type1_pfM_44, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_44), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_45, __pyx_k_EMTree_Expected_branch_type1_pfM_45, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_45), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_46, __pyx_k_EMTree_Expected_branch_type1_pfM_46, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_46), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_47, __pyx_k_EMTree_Expected_branch_type1_pfM_47, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_47), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_48, __pyx_k_EMTree_Expected_branch_type1_pfM_48, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_48), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_49, __pyx_k_EMTree_Expected_branch_type1_pfM_49, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_49), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_5, __pyx_k_EMTree_Expected_branch_type1_pfM_5, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_5), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_50, __pyx_k_EMTree_Expected_branch_type1_pfM_50, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_50), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_51, __pyx_k_EMTree_Expected_branch_type1_pfM_51, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_51), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_52, __pyx_k_EMTree_Expected_branch_type1_pfM_52, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_52), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_53, __pyx_k_EMTree_Expected_branch_type1_pfM_53, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_53), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_54, __pyx_k_EMTree_Expected_branch_type1_pfM_54, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_54), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_55, __pyx_k_EMTree_Expected_branch_type1_pfM_55, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_55), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_56, __pyx_k_EMTree_Expected_branch_type1_pfM_56, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_56), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_57, __pyx_k_EMTree_Expected_branch_type1_pfM_57, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_57), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_58, __pyx_k_EMTree_Expected_branch_type1_pfM_58, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_58), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_59, __pyx_k_EMTree_Expected_branch_type1_pfM_59, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_59), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_6, __pyx_k_EMTree_Expected_branch_type1_pfM_6, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_6), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_60, __pyx_k_EMTree_Expected_branch_type1_pfM_60, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_60), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_61, __pyx_k_EMTree_Expected_branch_type1_pfM_61, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_61), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_62, __pyx_k_EMTree_Expected_branch_type1_pfM_62, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_62), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_63, __pyx_k_EMTree_Expected_branch_type1_pfM_63, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_63), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_64, __pyx_k_EMTree_Expected_branch_type1_pfM_64, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_64), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_65, __pyx_k_EMTree_Expected_branch_type1_pfM_65, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_65), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_66, __pyx_k_EMTree_Expected_branch_type1_pfM_66, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_66), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_67, __pyx_k_EMTree_Expected_branch_type1_pfM_67, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_67), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_68, __pyx_k_EMTree_Expected_branch_type1_pfM_68, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_68), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_69, __pyx_k_EMTree_Expected_branch_type1_pfM_69, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_69), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_7, __pyx_k_EMTree_Expected_branch_type1_pfM_7, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_7), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_70, __pyx_k_EMTree_Expected_branch_type1_pfM_70, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_70), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_71, __pyx_k_EMTree_Expected_branch_type1_pfM_71, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_71), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_72, __pyx_k_EMTree_Expected_branch_type1_pfM_72, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_72), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_73, __pyx_k_EMTree_Expected_branch_type1_pfM_73, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_73), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_74, __pyx_k_EMTree_Expected_branch_type1_pfM_74, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_74), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_75, __pyx_k_EMTree_Expected_branch_type1_pfM_75, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_75), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_76, __pyx_k_EMTree_Expected_branch_type1_pfM_76, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_76), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_77, __pyx_k_EMTree_Expected_branch_type1_pfM_77, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_77), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_78, __pyx_k_EMTree_Expected_branch_type1_pfM_78, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_78), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_79, __pyx_k_EMTree_Expected_branch_type1_pfM_79, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_79), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_8, __pyx_k_EMTree_Expected_branch_type1_pfM_8, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_8), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_80, __pyx_k_EMTree_Expected_branch_type1_pfM_80, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_80), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_81, __pyx_k_EMTree_Expected_branch_type1_pfM_81, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_81), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_82, __pyx_k_EMTree_Expected_branch_type1_pfM_82, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_82), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_type1_pfM_9, __pyx_k_EMTree_Expected_branch_type1_pfM_9, sizeof(__pyx_k_EMTree_Expected_branch_type1_pfM_9), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfDeta_d, __pyx_k_EMTree_Expected_branch_vbfDeta_d, sizeof(__pyx_k_EMTree_Expected_branch_vbfDeta_d), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfJetVet, __pyx_k_EMTree_Expected_branch_vbfJetVet, sizeof(__pyx_k_EMTree_Expected_branch_vbfJetVet), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfJetVet_2, __pyx_k_EMTree_Expected_branch_vbfJetVet_2, sizeof(__pyx_k_EMTree_Expected_branch_vbfJetVet_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo, __pyx_k_EMTree_Expected_branch_vbfMassWo, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_10, __pyx_k_EMTree_Expected_branch_vbfMassWo_10, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_10), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_11, __pyx_k_EMTree_Expected_branch_vbfMassWo_11, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_11), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_12, __pyx_k_EMTree_Expected_branch_vbfMassWo_12, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_12), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_13, __pyx_k_EMTree_Expected_branch_vbfMassWo_13, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_13), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_14, __pyx_k_EMTree_Expected_branch_vbfMassWo_14, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_14), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_15, __pyx_k_EMTree_Expected_branch_vbfMassWo_15, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_15), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_16, __pyx_k_EMTree_Expected_branch_vbfMassWo_16, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_16), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_17, __pyx_k_EMTree_Expected_branch_vbfMassWo_17, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_17), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_18, __pyx_k_EMTree_Expected_branch_vbfMassWo_18, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_18), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_19, __pyx_k_EMTree_Expected_branch_vbfMassWo_19, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_19), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_2, __pyx_k_EMTree_Expected_branch_vbfMassWo_2, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_20, __pyx_k_EMTree_Expected_branch_vbfMassWo_20, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_20), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_21, __pyx_k_EMTree_Expected_branch_vbfMassWo_21, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_21), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_22, __pyx_k_EMTree_Expected_branch_vbfMassWo_22, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_22), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_23, __pyx_k_EMTree_Expected_branch_vbfMassWo_23, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_23), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_24, __pyx_k_EMTree_Expected_branch_vbfMassWo_24, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_24), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_25, __pyx_k_EMTree_Expected_branch_vbfMassWo_25, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_25), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_26, __pyx_k_EMTree_Expected_branch_vbfMassWo_26, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_26), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_27, __pyx_k_EMTree_Expected_branch_vbfMassWo_27, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_27), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_3, __pyx_k_EMTree_Expected_branch_vbfMassWo_3, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_4, __pyx_k_EMTree_Expected_branch_vbfMassWo_4, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_4), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_5, __pyx_k_EMTree_Expected_branch_vbfMassWo_5, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_5), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_6, __pyx_k_EMTree_Expected_branch_vbfMassWo_6, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_6), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_7, __pyx_k_EMTree_Expected_branch_vbfMassWo_7, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_7), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_8, __pyx_k_EMTree_Expected_branch_vbfMassWo_8, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_8), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMassWo_9, __pyx_k_EMTree_Expected_branch_vbfMassWo_9, sizeof(__pyx_k_EMTree_Expected_branch_vbfMassWo_9), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfMass_d, __pyx_k_EMTree_Expected_branch_vbfMass_d, sizeof(__pyx_k_EMTree_Expected_branch_vbfMass_d), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfNJets2, __pyx_k_EMTree_Expected_branch_vbfNJets2, sizeof(__pyx_k_EMTree_Expected_branch_vbfNJets2), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfNJets3, __pyx_k_EMTree_Expected_branch_vbfNJets3, sizeof(__pyx_k_EMTree_Expected_branch_vbfNJets3), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfj1eta, __pyx_k_EMTree_Expected_branch_vbfj1eta, sizeof(__pyx_k_EMTree_Expected_branch_vbfj1eta), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfj1pt_d, __pyx_k_EMTree_Expected_branch_vbfj1pt_d, sizeof(__pyx_k_EMTree_Expected_branch_vbfj1pt_d), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfj2eta, __pyx_k_EMTree_Expected_branch_vbfj2eta, sizeof(__pyx_k_EMTree_Expected_branch_vbfj2eta), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vbfj2pt_d, __pyx_k_EMTree_Expected_branch_vbfj2pt_d, sizeof(__pyx_k_EMTree_Expected_branch_vbfj2pt_d), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vispX_doe, __pyx_k_EMTree_Expected_branch_vispX_doe, sizeof(__pyx_k_EMTree_Expected_branch_vispX_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_EMTree_Expected_branch_vispY_doe, __pyx_k_EMTree_Expected_branch_vispY_doe, sizeof(__pyx_k_EMTree_Expected_branch_vispY_doe), 0, 0, 1, 0},
  {&__pyx_n_s_EMTree___iter, __pyx_k_EMTree___iter, sizeof(__pyx_k_EMTree___iter), 0, 0, 1, 1},
  {&__pyx_kp_s_EMTree_pyx, __pyx_k_EMTree_pyx, sizeof(__pyx_k_EMTree_pyx), 0, 0, 1, 0},
  {&__pyx_n_s_EMTree_where, __pyx_k_EMTree_where, sizeof(__pyx_k_EMTree_where), 0, 0, 1, 1},
  {&__pyx_n_s_ROOT, __pyx_k_ROOT, sizeof(__pyx_k_ROOT), 0, 0, 1, 1},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_n_s_Warning, __pyx_k_Warning, sizeof(__pyx_k_Warning), 0, 0, 1, 1},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_category, __pyx_k_category, sizeof(__pyx_k_category), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
  {&__pyx_n_s_end, __pyx_k_end, sizeof(__pyx_k_end), 0, 0, 1, 1},
  {&__pyx_n_s_file, __pyx_k_file, sizeof(__pyx_k_file), 0, 0, 1, 1},
  {&__pyx_n_s_filename, __pyx_k_filename, sizeof(__pyx_k_filename), 0, 0, 1, 1},
  {&__pyx_n_s_formatwarning, __pyx_k_formatwarning, sizeof(__pyx_k_formatwarning), 0, 0, 1, 1},
  {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_iter, __pyx_k_iter, sizeof(__pyx_k_iter), 0, 0, 1, 1},
  {&__pyx_n_s_line, __pyx_k_line, sizeof(__pyx_k_line), 0, 0, 1, 1},
  {&__pyx_n_s_lineno, __pyx_k_lineno, sizeof(__pyx_k_lineno), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_message, __pyx_k_message, sizeof(__pyx_k_message), 0, 0, 1, 1},
  {&__pyx_n_s_my_warning_format, __pyx_k_my_warning_format, sizeof(__pyx_k_my_warning_format), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_kp_s_no_default___reduce___due_to_non, __pyx_k_no_default___reduce___due_to_non, sizeof(__pyx_k_no_default___reduce___due_to_non), 0, 0, 1, 0},
  {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
  {&__pyx_kp_s_s_s, __pyx_k_s_s, sizeof(__pyx_k_s_s), 0, 0, 1, 0},
  {&__pyx_n_s_send, __pyx_k_send, sizeof(__pyx_k_send), 0, 0, 1, 1},
  {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
  {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_throw, __pyx_k_throw, sizeof(__pyx_k_throw), 0, 0, 1, 1},
  {&__pyx_n_s_ttree, __pyx_k_ttree, sizeof(__pyx_k_ttree), 0, 0, 1, 1},
  {&__pyx_n_s_warn, __pyx_k_warn, sizeof(__pyx_k_warn), 0, 0, 1, 1},
  {&__pyx_n_s_warnings, __pyx_k_warnings, sizeof(__pyx_k_warnings), 0, 0, 1, 1},
  {&__pyx_n_s_where, __pyx_k_where, sizeof(__pyx_k_where), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_Warning = __Pyx_GetBuiltinName(__pyx_n_s_Warning); if (!__pyx_builtin_Warning) __PYX_ERR(0, 1643, __pyx_L1_error)
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(1, 2, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "EMTree.pyx":1643
 *         #if not self.Ele24LooseHPSTau30Pass_branch and "Ele24LooseHPSTau30Pass" not in self.complained:
 *         if not self.Ele24LooseHPSTau30Pass_branch and "Ele24LooseHPSTau30Pass":
 *             warnings.warn( "EMTree: Expected branch Ele24LooseHPSTau30Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ele24LooseHPSTau30Pass")
 *         else:
 */
  __pyx_tuple__2 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Ele24Loos, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 1643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "EMTree.pyx":1652
 *         #if not self.Ele24LooseHPSTau30TightIDPass_branch and "Ele24LooseHPSTau30TightIDPass" not in self.complained:
 *         if not self.Ele24LooseHPSTau30TightIDPass_branch and "Ele24LooseHPSTau30TightIDPass":
 *             warnings.warn( "EMTree: Expected branch Ele24LooseHPSTau30TightIDPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ele24LooseHPSTau30TightIDPass")
 *         else:
 */
  __pyx_tuple__3 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Ele24Loos_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 1652, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "EMTree.pyx":1661
 *         #if not self.Ele24LooseTau30Pass_branch and "Ele24LooseTau30Pass" not in self.complained:
 *         if not self.Ele24LooseTau30Pass_branch and "Ele24LooseTau30Pass":
 *             warnings.warn( "EMTree: Expected branch Ele24LooseTau30Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ele24LooseTau30Pass")
 *         else:
 */
  __pyx_tuple__4 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Ele24Loos_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(0, 1661, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "EMTree.pyx":1670
 *         #if not self.Ele24LooseTau30TightIDPass_branch and "Ele24LooseTau30TightIDPass" not in self.complained:
 *         if not self.Ele24LooseTau30TightIDPass_branch and "Ele24LooseTau30TightIDPass":
 *             warnings.warn( "EMTree: Expected branch Ele24LooseTau30TightIDPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ele24LooseTau30TightIDPass")
 *         else:
 */
  __pyx_tuple__5 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Ele24Loos_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(0, 1670, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "EMTree.pyx":1679
 *         #if not self.Ele27WPTightPass_branch and "Ele27WPTightPass" not in self.complained:
 *         if not self.Ele27WPTightPass_branch and "Ele27WPTightPass":
 *             warnings.warn( "EMTree: Expected branch Ele27WPTightPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ele27WPTightPass")
 *         else:
 */
  __pyx_tuple__6 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Ele27WPTi, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 1679, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "EMTree.pyx":1688
 *         #if not self.Ele32WPTightPass_branch and "Ele32WPTightPass" not in self.complained:
 *         if not self.Ele32WPTightPass_branch and "Ele32WPTightPass":
 *             warnings.warn( "EMTree: Expected branch Ele32WPTightPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ele32WPTightPass")
 *         else:
 */
  __pyx_tuple__7 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Ele32WPTi, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 1688, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "EMTree.pyx":1697
 *         #if not self.Ele35WPTightPass_branch and "Ele35WPTightPass" not in self.complained:
 *         if not self.Ele35WPTightPass_branch and "Ele35WPTightPass":
 *             warnings.warn( "EMTree: Expected branch Ele35WPTightPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ele35WPTightPass")
 *         else:
 */
  __pyx_tuple__8 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Ele35WPTi, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(0, 1697, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "EMTree.pyx":1706
 *         #if not self.EmbPtWeight_branch and "EmbPtWeight" not in self.complained:
 *         if not self.EmbPtWeight_branch and "EmbPtWeight":
 *             warnings.warn( "EMTree: Expected branch EmbPtWeight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("EmbPtWeight")
 *         else:
 */
  __pyx_tuple__9 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_EmbPtWeig, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(0, 1706, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "EMTree.pyx":1715
 *         #if not self.Eta_branch and "Eta" not in self.complained:
 *         if not self.Eta_branch and "Eta":
 *             warnings.warn( "EMTree: Expected branch Eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Eta")
 *         else:
 */
  __pyx_tuple__10 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Eta_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(0, 1715, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "EMTree.pyx":1724
 *         #if not self.Flag_BadChargedCandidateFilter_branch and "Flag_BadChargedCandidateFilter" not in self.complained:
 *         if not self.Flag_BadChargedCandidateFilter_branch and "Flag_BadChargedCandidateFilter":
 *             warnings.warn( "EMTree: Expected branch Flag_BadChargedCandidateFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_BadChargedCandidateFilter")
 *         else:
 */
  __pyx_tuple__11 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Flag_BadC, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 1724, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "EMTree.pyx":1733
 *         #if not self.Flag_BadPFMuonFilter_branch and "Flag_BadPFMuonFilter" not in self.complained:
 *         if not self.Flag_BadPFMuonFilter_branch and "Flag_BadPFMuonFilter":
 *             warnings.warn( "EMTree: Expected branch Flag_BadPFMuonFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_BadPFMuonFilter")
 *         else:
 */
  __pyx_tuple__12 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Flag_BadP, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 1733, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "EMTree.pyx":1742
 *         #if not self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch and "Flag_EcalDeadCellTriggerPrimitiveFilter" not in self.complained:
 *         if not self.Flag_EcalDeadCellTriggerPrimitiveFilter_branch and "Flag_EcalDeadCellTriggerPrimitiveFilter":
 *             warnings.warn( "EMTree: Expected branch Flag_EcalDeadCellTriggerPrimitiveFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_EcalDeadCellTriggerPrimitiveFilter")
 *         else:
 */
  __pyx_tuple__13 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Flag_Ecal, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 1742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "EMTree.pyx":1751
 *         #if not self.Flag_HBHENoiseFilter_branch and "Flag_HBHENoiseFilter" not in self.complained:
 *         if not self.Flag_HBHENoiseFilter_branch and "Flag_HBHENoiseFilter":
 *             warnings.warn( "EMTree: Expected branch Flag_HBHENoiseFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_HBHENoiseFilter")
 *         else:
 */
  __pyx_tuple__14 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Flag_HBHE, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 1751, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "EMTree.pyx":1760
 *         #if not self.Flag_HBHENoiseIsoFilter_branch and "Flag_HBHENoiseIsoFilter" not in self.complained:
 *         if not self.Flag_HBHENoiseIsoFilter_branch and "Flag_HBHENoiseIsoFilter":
 *             warnings.warn( "EMTree: Expected branch Flag_HBHENoiseIsoFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_HBHENoiseIsoFilter")
 *         else:
 */
  __pyx_tuple__15 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Flag_HBHE_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 1760, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "EMTree.pyx":1769
 *         #if not self.Flag_ecalBadCalibReducedMINIAODFilter_branch and "Flag_ecalBadCalibReducedMINIAODFilter" not in self.complained:
 *         if not self.Flag_ecalBadCalibReducedMINIAODFilter_branch and "Flag_ecalBadCalibReducedMINIAODFilter":
 *             warnings.warn( "EMTree: Expected branch Flag_ecalBadCalibReducedMINIAODFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_ecalBadCalibReducedMINIAODFilter")
 *         else:
 */
  __pyx_tuple__16 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Flag_ecal, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 1769, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "EMTree.pyx":1778
 *         #if not self.Flag_eeBadScFilter_branch and "Flag_eeBadScFilter" not in self.complained:
 *         if not self.Flag_eeBadScFilter_branch and "Flag_eeBadScFilter":
 *             warnings.warn( "EMTree: Expected branch Flag_eeBadScFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_eeBadScFilter")
 *         else:
 */
  __pyx_tuple__17 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Flag_eeBa, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 1778, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "EMTree.pyx":1787
 *         #if not self.Flag_globalSuperTightHalo2016Filter_branch and "Flag_globalSuperTightHalo2016Filter" not in self.complained:
 *         if not self.Flag_globalSuperTightHalo2016Filter_branch and "Flag_globalSuperTightHalo2016Filter":
 *             warnings.warn( "EMTree: Expected branch Flag_globalSuperTightHalo2016Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_globalSuperTightHalo2016Filter")
 *         else:
 */
  __pyx_tuple__18 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Flag_glob, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 1787, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "EMTree.pyx":1796
 *         #if not self.Flag_goodVertices_branch and "Flag_goodVertices" not in self.complained:
 *         if not self.Flag_goodVertices_branch and "Flag_goodVertices":
 *             warnings.warn( "EMTree: Expected branch Flag_goodVertices does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Flag_goodVertices")
 *         else:
 */
  __pyx_tuple__19 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Flag_good, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(0, 1796, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "EMTree.pyx":1805
 *         #if not self.GenWeight_branch and "GenWeight" not in self.complained:
 *         if not self.GenWeight_branch and "GenWeight":
 *             warnings.warn( "EMTree: Expected branch GenWeight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("GenWeight")
 *         else:
 */
  __pyx_tuple__20 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_GenWeight, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(0, 1805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "EMTree.pyx":1814
 *         #if not self.Ht_branch and "Ht" not in self.complained:
 *         if not self.Ht_branch and "Ht":
 *             warnings.warn( "EMTree: Expected branch Ht does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ht")
 *         else:
 */
  __pyx_tuple__21 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Ht_does_n, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(0, 1814, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "EMTree.pyx":1823
 *         #if not self.IsoMu24Pass_branch and "IsoMu24Pass" not in self.complained:
 *         if not self.IsoMu24Pass_branch and "IsoMu24Pass":
 *             warnings.warn( "EMTree: Expected branch IsoMu24Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("IsoMu24Pass")
 *         else:
 */
  __pyx_tuple__22 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_IsoMu24Pa, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(0, 1823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "EMTree.pyx":1832
 *         #if not self.IsoMu27Pass_branch and "IsoMu27Pass" not in self.complained:
 *         if not self.IsoMu27Pass_branch and "IsoMu27Pass":
 *             warnings.warn( "EMTree: Expected branch IsoMu27Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("IsoMu27Pass")
 *         else:
 */
  __pyx_tuple__23 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_IsoMu27Pa, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 1832, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "EMTree.pyx":1841
 *         #if not self.LT_branch and "LT" not in self.complained:
 *         if not self.LT_branch and "LT":
 *             warnings.warn( "EMTree: Expected branch LT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("LT")
 *         else:
 */
  __pyx_tuple__24 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_LT_does_n, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 1841, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "EMTree.pyx":1850
 *         #if not self.Mass_branch and "Mass" not in self.complained:
 *         if not self.Mass_branch and "Mass":
 *             warnings.warn( "EMTree: Expected branch Mass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Mass")
 *         else:
 */
  __pyx_tuple__25 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Mass_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(0, 1850, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "EMTree.pyx":1859
 *         #if not self.MassError_branch and "MassError" not in self.complained:
 *         if not self.MassError_branch and "MassError":
 *             warnings.warn( "EMTree: Expected branch MassError does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassError")
 *         else:
 */
  __pyx_tuple__26 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_MassError, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 1859, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "EMTree.pyx":1868
 *         #if not self.MassErrord1_branch and "MassErrord1" not in self.complained:
 *         if not self.MassErrord1_branch and "MassErrord1":
 *             warnings.warn( "EMTree: Expected branch MassErrord1 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassErrord1")
 *         else:
 */
  __pyx_tuple__27 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_MassError_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 1868, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);

  /* "EMTree.pyx":1877
 *         #if not self.MassErrord2_branch and "MassErrord2" not in self.complained:
 *         if not self.MassErrord2_branch and "MassErrord2":
 *             warnings.warn( "EMTree: Expected branch MassErrord2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassErrord2")
 *         else:
 */
  __pyx_tuple__28 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_MassError_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 1877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "EMTree.pyx":1886
 *         #if not self.MassErrord3_branch and "MassErrord3" not in self.complained:
 *         if not self.MassErrord3_branch and "MassErrord3":
 *             warnings.warn( "EMTree: Expected branch MassErrord3 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassErrord3")
 *         else:
 */
  __pyx_tuple__29 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_MassError_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(0, 1886, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__29);
  __Pyx_GIVEREF(__pyx_tuple__29);

  /* "EMTree.pyx":1895
 *         #if not self.MassErrord4_branch and "MassErrord4" not in self.complained:
 *         if not self.MassErrord4_branch and "MassErrord4":
 *             warnings.warn( "EMTree: Expected branch MassErrord4 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassErrord4")
 *         else:
 */
  __pyx_tuple__30 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_MassError_5, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(0, 1895, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "EMTree.pyx":1904
 *         #if not self.Mt_branch and "Mt" not in self.complained:
 *         if not self.Mt_branch and "Mt":
 *             warnings.warn( "EMTree: Expected branch Mt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Mt")
 *         else:
 */
  __pyx_tuple__31 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Mt_does_n, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__31)) __PYX_ERR(0, 1904, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__31);
  __Pyx_GIVEREF(__pyx_tuple__31);

  /* "EMTree.pyx":1913
 *         #if not self.Mu50Pass_branch and "Mu50Pass" not in self.complained:
 *         if not self.Mu50Pass_branch and "Mu50Pass":
 *             warnings.warn( "EMTree: Expected branch Mu50Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Mu50Pass")
 *         else:
 */
  __pyx_tuple__32 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Mu50Pass, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(0, 1913, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);

  /* "EMTree.pyx":1922
 *         #if not self.NUP_branch and "NUP" not in self.complained:
 *         if not self.NUP_branch and "NUP":
 *             warnings.warn( "EMTree: Expected branch NUP does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("NUP")
 *         else:
 */
  __pyx_tuple__33 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_NUP_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__33)) __PYX_ERR(0, 1922, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);

  /* "EMTree.pyx":1931
 *         #if not self.Phi_branch and "Phi" not in self.complained:
 *         if not self.Phi_branch and "Phi":
 *             warnings.warn( "EMTree: Expected branch Phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Phi")
 *         else:
 */
  __pyx_tuple__34 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Phi_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(0, 1931, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);

  /* "EMTree.pyx":1940
 *         #if not self.Pt_branch and "Pt" not in self.complained:
 *         if not self.Pt_branch and "Pt":
 *             warnings.warn( "EMTree: Expected branch Pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Pt")
 *         else:
 */
  __pyx_tuple__35 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_Pt_does_n, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__35)) __PYX_ERR(0, 1940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);

  /* "EMTree.pyx":1949
 *         #if not self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch and "bjetDeepCSVVeto20Medium_2016_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto20Medium_2016_DR0p5_branch and "bjetDeepCSVVeto20Medium_2016_DR0p5":
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto20Medium_2016_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetDeepCSVVeto20Medium_2016_DR0p5")
 *         else:
 */
  __pyx_tuple__36 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_bjetDeepC, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(0, 1949, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);

  /* "EMTree.pyx":1958
 *         #if not self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch and "bjetDeepCSVVeto20Medium_2017_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto20Medium_2017_DR0p5_branch and "bjetDeepCSVVeto20Medium_2017_DR0p5":
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto20Medium_2017_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetDeepCSVVeto20Medium_2017_DR0p5")
 *         else:
 */
  __pyx_tuple__37 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_bjetDeepC_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__37)) __PYX_ERR(0, 1958, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);

  /* "EMTree.pyx":1967
 *         #if not self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch and "bjetDeepCSVVeto20Medium_2018_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto20Medium_2018_DR0p5_branch and "bjetDeepCSVVeto20Medium_2018_DR0p5":
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto20Medium_2018_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetDeepCSVVeto20Medium_2018_DR0p5")
 *         else:
 */
  __pyx_tuple__38 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_bjetDeepC_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(0, 1967, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);

  /* "EMTree.pyx":1976
 *         #if not self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch and "bjetDeepCSVVeto30Medium_2016_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto30Medium_2016_DR0p5_branch and "bjetDeepCSVVeto30Medium_2016_DR0p5":
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto30Medium_2016_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetDeepCSVVeto30Medium_2016_DR0p5")
 *         else:
 */
  __pyx_tuple__39 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_bjetDeepC_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(0, 1976, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);

  /* "EMTree.pyx":1985
 *         #if not self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch and "bjetDeepCSVVeto30Medium_2017_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto30Medium_2017_DR0p5_branch and "bjetDeepCSVVeto30Medium_2017_DR0p5":
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto30Medium_2017_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetDeepCSVVeto30Medium_2017_DR0p5")
 *         else:
 */
  __pyx_tuple__40 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_bjetDeepC_5, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(0, 1985, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);

  /* "EMTree.pyx":1994
 *         #if not self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch and "bjetDeepCSVVeto30Medium_2018_DR0p5" not in self.complained:
 *         if not self.bjetDeepCSVVeto30Medium_2018_DR0p5_branch and "bjetDeepCSVVeto30Medium_2018_DR0p5":
 *             warnings.warn( "EMTree: Expected branch bjetDeepCSVVeto30Medium_2018_DR0p5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetDeepCSVVeto30Medium_2018_DR0p5")
 *         else:
 */
  __pyx_tuple__41 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_bjetDeepC_6, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(0, 1994, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);

  /* "EMTree.pyx":2003
 *         #if not self.bweight_2016_branch and "bweight_2016" not in self.complained:
 *         if not self.bweight_2016_branch and "bweight_2016":
 *             warnings.warn( "EMTree: Expected branch bweight_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bweight_2016")
 *         else:
 */
  __pyx_tuple__42 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_bweight_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(0, 2003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);

  /* "EMTree.pyx":2012
 *         #if not self.bweight_2017_branch and "bweight_2017" not in self.complained:
 *         if not self.bweight_2017_branch and "bweight_2017":
 *             warnings.warn( "EMTree: Expected branch bweight_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bweight_2017")
 *         else:
 */
  __pyx_tuple__43 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_bweight_2_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__43)) __PYX_ERR(0, 2012, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__43);
  __Pyx_GIVEREF(__pyx_tuple__43);

  /* "EMTree.pyx":2021
 *         #if not self.bweight_2018_branch and "bweight_2018" not in self.complained:
 *         if not self.bweight_2018_branch and "bweight_2018":
 *             warnings.warn( "EMTree: Expected branch bweight_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bweight_2018")
 *         else:
 */
  __pyx_tuple__44 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_bweight_2_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(0, 2021, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);

  /* "EMTree.pyx":2030
 *         #if not self.charge_branch and "charge" not in self.complained:
 *         if not self.charge_branch and "charge":
 *             warnings.warn( "EMTree: Expected branch charge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("charge")
 *         else:
 */
  __pyx_tuple__45 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_charge_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__45)) __PYX_ERR(0, 2030, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__45);
  __Pyx_GIVEREF(__pyx_tuple__45);

  /* "EMTree.pyx":2039
 *         #if not self.deepcsvb1_btagscore_branch and "deepcsvb1_btagscore" not in self.complained:
 *         if not self.deepcsvb1_btagscore_branch and "deepcsvb1_btagscore":
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_btagscore does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb1_btagscore")
 *         else:
 */
  __pyx_tuple__46 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_deepcsvb1, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__46)) __PYX_ERR(0, 2039, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);

  /* "EMTree.pyx":2048
 *         #if not self.deepcsvb1_eta_branch and "deepcsvb1_eta" not in self.complained:
 *         if not self.deepcsvb1_eta_branch and "deepcsvb1_eta":
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb1_eta")
 *         else:
 */
  __pyx_tuple__47 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_deepcsvb1_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__47)) __PYX_ERR(0, 2048, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__47);
  __Pyx_GIVEREF(__pyx_tuple__47);

  /* "EMTree.pyx":2057
 *         #if not self.deepcsvb1_hadronflavour_branch and "deepcsvb1_hadronflavour" not in self.complained:
 *         if not self.deepcsvb1_hadronflavour_branch and "deepcsvb1_hadronflavour":
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_hadronflavour does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb1_hadronflavour")
 *         else:
 */
  __pyx_tuple__48 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_deepcsvb1_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__48)) __PYX_ERR(0, 2057, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);

  /* "EMTree.pyx":2066
 *         #if not self.deepcsvb1_m_branch and "deepcsvb1_m" not in self.complained:
 *         if not self.deepcsvb1_m_branch and "deepcsvb1_m":
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_m does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb1_m")
 *         else:
 */
  __pyx_tuple__49 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_deepcsvb1_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__49)) __PYX_ERR(0, 2066, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__49);
  __Pyx_GIVEREF(__pyx_tuple__49);

  /* "EMTree.pyx":2075
 *         #if not self.deepcsvb1_phi_branch and "deepcsvb1_phi" not in self.complained:
 *         if not self.deepcsvb1_phi_branch and "deepcsvb1_phi":
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb1_phi")
 *         else:
 */
  __pyx_tuple__50 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_deepcsvb1_5, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__50)) __PYX_ERR(0, 2075, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);

  /* "EMTree.pyx":2084
 *         #if not self.deepcsvb1_pt_branch and "deepcsvb1_pt" not in self.complained:
 *         if not self.deepcsvb1_pt_branch and "deepcsvb1_pt":
 *             warnings.warn( "EMTree: Expected branch deepcsvb1_pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb1_pt")
 *         else:
 */
  __pyx_tuple__51 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_deepcsvb1_6, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__51)) __PYX_ERR(0, 2084, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__51);
  __Pyx_GIVEREF(__pyx_tuple__51);

  /* "EMTree.pyx":2093
 *         #if not self.deepcsvb2_btagscore_branch and "deepcsvb2_btagscore" not in self.complained:
 *         if not self.deepcsvb2_btagscore_branch and "deepcsvb2_btagscore":
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_btagscore does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb2_btagscore")
 *         else:
 */
  __pyx_tuple__52 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_deepcsvb2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__52)) __PYX_ERR(0, 2093, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__52);
  __Pyx_GIVEREF(__pyx_tuple__52);

  /* "EMTree.pyx":2102
 *         #if not self.deepcsvb2_eta_branch and "deepcsvb2_eta" not in self.complained:
 *         if not self.deepcsvb2_eta_branch and "deepcsvb2_eta":
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb2_eta")
 *         else:
 */
  __pyx_tuple__53 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_deepcsvb2_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__53)) __PYX_ERR(0, 2102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__53);
  __Pyx_GIVEREF(__pyx_tuple__53);

  /* "EMTree.pyx":2111
 *         #if not self.deepcsvb2_hadronflavour_branch and "deepcsvb2_hadronflavour" not in self.complained:
 *         if not self.deepcsvb2_hadronflavour_branch and "deepcsvb2_hadronflavour":
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_hadronflavour does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb2_hadronflavour")
 *         else:
 */
  __pyx_tuple__54 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_deepcsvb2_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__54)) __PYX_ERR(0, 2111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__54);
  __Pyx_GIVEREF(__pyx_tuple__54);

  /* "EMTree.pyx":2120
 *         #if not self.deepcsvb2_m_branch and "deepcsvb2_m" not in self.complained:
 *         if not self.deepcsvb2_m_branch and "deepcsvb2_m":
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_m does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb2_m")
 *         else:
 */
  __pyx_tuple__55 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_deepcsvb2_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__55)) __PYX_ERR(0, 2120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__55);
  __Pyx_GIVEREF(__pyx_tuple__55);

  /* "EMTree.pyx":2129
 *         #if not self.deepcsvb2_phi_branch and "deepcsvb2_phi" not in self.complained:
 *         if not self.deepcsvb2_phi_branch and "deepcsvb2_phi":
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb2_phi")
 *         else:
 */
  __pyx_tuple__56 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_deepcsvb2_5, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__56)) __PYX_ERR(0, 2129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__56);
  __Pyx_GIVEREF(__pyx_tuple__56);

  /* "EMTree.pyx":2138
 *         #if not self.deepcsvb2_pt_branch and "deepcsvb2_pt" not in self.complained:
 *         if not self.deepcsvb2_pt_branch and "deepcsvb2_pt":
 *             warnings.warn( "EMTree: Expected branch deepcsvb2_pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("deepcsvb2_pt")
 *         else:
 */
  __pyx_tuple__57 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_deepcsvb2_6, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__57)) __PYX_ERR(0, 2138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__57);
  __Pyx_GIVEREF(__pyx_tuple__57);

  /* "EMTree.pyx":2147
 *         #if not self.dielectronVeto_branch and "dielectronVeto" not in self.complained:
 *         if not self.dielectronVeto_branch and "dielectronVeto":
 *             warnings.warn( "EMTree: Expected branch dielectronVeto does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("dielectronVeto")
 *         else:
 */
  __pyx_tuple__58 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_dielectro, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__58)) __PYX_ERR(0, 2147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__58);
  __Pyx_GIVEREF(__pyx_tuple__58);

  /* "EMTree.pyx":2156
 *         #if not self.dimuonVeto_branch and "dimuonVeto" not in self.complained:
 *         if not self.dimuonVeto_branch and "dimuonVeto":
 *             warnings.warn( "EMTree: Expected branch dimuonVeto does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("dimuonVeto")
 *         else:
 */
  __pyx_tuple__59 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_dimuonVet, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__59)) __PYX_ERR(0, 2156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__59);
  __Pyx_GIVEREF(__pyx_tuple__59);

  /* "EMTree.pyx":2165
 *         #if not self.eCharge_branch and "eCharge" not in self.complained:
 *         if not self.eCharge_branch and "eCharge":
 *             warnings.warn( "EMTree: Expected branch eCharge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eCharge")
 *         else:
 */
  __pyx_tuple__60 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eCharge_d, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(0, 2165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_GIVEREF(__pyx_tuple__60);

  /* "EMTree.pyx":2174
 *         #if not self.eComesFromHiggs_branch and "eComesFromHiggs" not in self.complained:
 *         if not self.eComesFromHiggs_branch and "eComesFromHiggs":
 *             warnings.warn( "EMTree: Expected branch eComesFromHiggs does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eComesFromHiggs")
 *         else:
 */
  __pyx_tuple__61 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eComesFro, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__61)) __PYX_ERR(0, 2174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__61);
  __Pyx_GIVEREF(__pyx_tuple__61);

  /* "EMTree.pyx":2183
 *         #if not self.eCorrectedEt_branch and "eCorrectedEt" not in self.complained:
 *         if not self.eCorrectedEt_branch and "eCorrectedEt":
 *             warnings.warn( "EMTree: Expected branch eCorrectedEt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eCorrectedEt")
 *         else:
 */
  __pyx_tuple__62 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eCorrecte, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__62)) __PYX_ERR(0, 2183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__62);
  __Pyx_GIVEREF(__pyx_tuple__62);

  /* "EMTree.pyx":2192
 *         #if not self.eEnergyError_branch and "eEnergyError" not in self.complained:
 *         if not self.eEnergyError_branch and "eEnergyError":
 *             warnings.warn( "EMTree: Expected branch eEnergyError does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyError")
 *         else:
 */
  __pyx_tuple__63 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eEnergyEr, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__63)) __PYX_ERR(0, 2192, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__63);
  __Pyx_GIVEREF(__pyx_tuple__63);

  /* "EMTree.pyx":2201
 *         #if not self.eEnergyScaleDown_branch and "eEnergyScaleDown" not in self.complained:
 *         if not self.eEnergyScaleDown_branch and "eEnergyScaleDown":
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyScaleDown")
 *         else:
 */
  __pyx_tuple__64 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eEnergySc, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__64)) __PYX_ERR(0, 2201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__64);
  __Pyx_GIVEREF(__pyx_tuple__64);

  /* "EMTree.pyx":2210
 *         #if not self.eEnergyScaleGainDown_branch and "eEnergyScaleGainDown" not in self.complained:
 *         if not self.eEnergyScaleGainDown_branch and "eEnergyScaleGainDown":
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleGainDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyScaleGainDown")
 *         else:
 */
  __pyx_tuple__65 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eEnergySc_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__65)) __PYX_ERR(0, 2210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__65);
  __Pyx_GIVEREF(__pyx_tuple__65);

  /* "EMTree.pyx":2219
 *         #if not self.eEnergyScaleGainUp_branch and "eEnergyScaleGainUp" not in self.complained:
 *         if not self.eEnergyScaleGainUp_branch and "eEnergyScaleGainUp":
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleGainUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyScaleGainUp")
 *         else:
 */
  __pyx_tuple__66 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eEnergySc_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__66)) __PYX_ERR(0, 2219, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__66);
  __Pyx_GIVEREF(__pyx_tuple__66);

  /* "EMTree.pyx":2228
 *         #if not self.eEnergyScaleStatDown_branch and "eEnergyScaleStatDown" not in self.complained:
 *         if not self.eEnergyScaleStatDown_branch and "eEnergyScaleStatDown":
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleStatDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyScaleStatDown")
 *         else:
 */
  __pyx_tuple__67 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eEnergySc_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__67)) __PYX_ERR(0, 2228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__67);
  __Pyx_GIVEREF(__pyx_tuple__67);

  /* "EMTree.pyx":2237
 *         #if not self.eEnergyScaleStatUp_branch and "eEnergyScaleStatUp" not in self.complained:
 *         if not self.eEnergyScaleStatUp_branch and "eEnergyScaleStatUp":
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleStatUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyScaleStatUp")
 *         else:
 */
  __pyx_tuple__68 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eEnergySc_5, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__68)) __PYX_ERR(0, 2237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__68);
  __Pyx_GIVEREF(__pyx_tuple__68);

  /* "EMTree.pyx":2246
 *         #if not self.eEnergyScaleSystDown_branch and "eEnergyScaleSystDown" not in self.complained:
 *         if not self.eEnergyScaleSystDown_branch and "eEnergyScaleSystDown":
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleSystDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyScaleSystDown")
 *         else:
 */
  __pyx_tuple__69 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eEnergySc_6, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__69)) __PYX_ERR(0, 2246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__69);
  __Pyx_GIVEREF(__pyx_tuple__69);

  /* "EMTree.pyx":2255
 *         #if not self.eEnergyScaleSystUp_branch and "eEnergyScaleSystUp" not in self.complained:
 *         if not self.eEnergyScaleSystUp_branch and "eEnergyScaleSystUp":
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleSystUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyScaleSystUp")
 *         else:
 */
  __pyx_tuple__70 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eEnergySc_7, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__70)) __PYX_ERR(0, 2255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__70);
  __Pyx_GIVEREF(__pyx_tuple__70);

  /* "EMTree.pyx":2264
 *         #if not self.eEnergyScaleUp_branch and "eEnergyScaleUp" not in self.complained:
 *         if not self.eEnergyScaleUp_branch and "eEnergyScaleUp":
 *             warnings.warn( "EMTree: Expected branch eEnergyScaleUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergyScaleUp")
 *         else:
 */
  __pyx_tuple__71 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eEnergySc_8, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__71)) __PYX_ERR(0, 2264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__71);
  __Pyx_GIVEREF(__pyx_tuple__71);

  /* "EMTree.pyx":2273
 *         #if not self.eEnergySigmaDown_branch and "eEnergySigmaDown" not in self.complained:
 *         if not self.eEnergySigmaDown_branch and "eEnergySigmaDown":
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergySigmaDown")
 *         else:
 */
  __pyx_tuple__72 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eEnergySi, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__72)) __PYX_ERR(0, 2273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__72);
  __Pyx_GIVEREF(__pyx_tuple__72);

  /* "EMTree.pyx":2282
 *         #if not self.eEnergySigmaPhiDown_branch and "eEnergySigmaPhiDown" not in self.complained:
 *         if not self.eEnergySigmaPhiDown_branch and "eEnergySigmaPhiDown":
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaPhiDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergySigmaPhiDown")
 *         else:
 */
  __pyx_tuple__73 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eEnergySi_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__73)) __PYX_ERR(0, 2282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__73);
  __Pyx_GIVEREF(__pyx_tuple__73);

  /* "EMTree.pyx":2291
 *         #if not self.eEnergySigmaPhiUp_branch and "eEnergySigmaPhiUp" not in self.complained:
 *         if not self.eEnergySigmaPhiUp_branch and "eEnergySigmaPhiUp":
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaPhiUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergySigmaPhiUp")
 *         else:
 */
  __pyx_tuple__74 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eEnergySi_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__74)) __PYX_ERR(0, 2291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__74);
  __Pyx_GIVEREF(__pyx_tuple__74);

  /* "EMTree.pyx":2300
 *         #if not self.eEnergySigmaRhoDown_branch and "eEnergySigmaRhoDown" not in self.complained:
 *         if not self.eEnergySigmaRhoDown_branch and "eEnergySigmaRhoDown":
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaRhoDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergySigmaRhoDown")
 *         else:
 */
  __pyx_tuple__75 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eEnergySi_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__75)) __PYX_ERR(0, 2300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__75);
  __Pyx_GIVEREF(__pyx_tuple__75);

  /* "EMTree.pyx":2309
 *         #if not self.eEnergySigmaRhoUp_branch and "eEnergySigmaRhoUp" not in self.complained:
 *         if not self.eEnergySigmaRhoUp_branch and "eEnergySigmaRhoUp":
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaRhoUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergySigmaRhoUp")
 *         else:
 */
  __pyx_tuple__76 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eEnergySi_5, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__76)) __PYX_ERR(0, 2309, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__76);
  __Pyx_GIVEREF(__pyx_tuple__76);

  /* "EMTree.pyx":2318
 *         #if not self.eEnergySigmaUp_branch and "eEnergySigmaUp" not in self.complained:
 *         if not self.eEnergySigmaUp_branch and "eEnergySigmaUp":
 *             warnings.warn( "EMTree: Expected branch eEnergySigmaUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEnergySigmaUp")
 *         else:
 */
  __pyx_tuple__77 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eEnergySi_6, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__77)) __PYX_ERR(0, 2318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__77);
  __Pyx_GIVEREF(__pyx_tuple__77);

  /* "EMTree.pyx":2327
 *         #if not self.eEta_branch and "eEta" not in self.complained:
 *         if not self.eEta_branch and "eEta":
 *             warnings.warn( "EMTree: Expected branch eEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eEta")
 *         else:
 */
  __pyx_tuple__78 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eEta_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__78)) __PYX_ERR(0, 2327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__78);
  __Pyx_GIVEREF(__pyx_tuple__78);

  /* "EMTree.pyx":2336
 *         #if not self.eGenCharge_branch and "eGenCharge" not in self.complained:
 *         if not self.eGenCharge_branch and "eGenCharge":
 *             warnings.warn( "EMTree: Expected branch eGenCharge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenCharge")
 *         else:
 */
  __pyx_tuple__79 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eGenCharg, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__79)) __PYX_ERR(0, 2336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__79);
  __Pyx_GIVEREF(__pyx_tuple__79);

  /* "EMTree.pyx":2345
 *         #if not self.eGenDirectPromptTauDecay_branch and "eGenDirectPromptTauDecay" not in self.complained:
 *         if not self.eGenDirectPromptTauDecay_branch and "eGenDirectPromptTauDecay":
 *             warnings.warn( "EMTree: Expected branch eGenDirectPromptTauDecay does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenDirectPromptTauDecay")
 *         else:
 */
  __pyx_tuple__80 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eGenDirec, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__80)) __PYX_ERR(0, 2345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__80);
  __Pyx_GIVEREF(__pyx_tuple__80);

  /* "EMTree.pyx":2354
 *         #if not self.eGenEnergy_branch and "eGenEnergy" not in self.complained:
 *         if not self.eGenEnergy_branch and "eGenEnergy":
 *             warnings.warn( "EMTree: Expected branch eGenEnergy does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenEnergy")
 *         else:
 */
  __pyx_tuple__81 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eGenEnerg, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__81)) __PYX_ERR(0, 2354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__81);
  __Pyx_GIVEREF(__pyx_tuple__81);

  /* "EMTree.pyx":2363
 *         #if not self.eGenEta_branch and "eGenEta" not in self.complained:
 *         if not self.eGenEta_branch and "eGenEta":
 *             warnings.warn( "EMTree: Expected branch eGenEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenEta")
 *         else:
 */
  __pyx_tuple__82 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eGenEta_d, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__82)) __PYX_ERR(0, 2363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__82);
  __Pyx_GIVEREF(__pyx_tuple__82);

  /* "EMTree.pyx":2372
 *         #if not self.eGenIsPrompt_branch and "eGenIsPrompt" not in self.complained:
 *         if not self.eGenIsPrompt_branch and "eGenIsPrompt":
 *             warnings.warn( "EMTree: Expected branch eGenIsPrompt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenIsPrompt")
 *         else:
 */
  __pyx_tuple__83 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eGenIsPro, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__83)) __PYX_ERR(0, 2372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__83);
  __Pyx_GIVEREF(__pyx_tuple__83);

  /* "EMTree.pyx":2381
 *         #if not self.eGenMotherPdgId_branch and "eGenMotherPdgId" not in self.complained:
 *         if not self.eGenMotherPdgId_branch and "eGenMotherPdgId":
 *             warnings.warn( "EMTree: Expected branch eGenMotherPdgId does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenMotherPdgId")
 *         else:
 */
  __pyx_tuple__84 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eGenMothe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__84)) __PYX_ERR(0, 2381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__84);
  __Pyx_GIVEREF(__pyx_tuple__84);

  /* "EMTree.pyx":2390
 *         #if not self.eGenParticle_branch and "eGenParticle" not in self.complained:
 *         if not self.eGenParticle_branch and "eGenParticle":
 *             warnings.warn( "EMTree: Expected branch eGenParticle does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenParticle")
 *         else:
 */
  __pyx_tuple__85 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eGenParti, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__85)) __PYX_ERR(0, 2390, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__85);
  __Pyx_GIVEREF(__pyx_tuple__85);

  /* "EMTree.pyx":2399
 *         #if not self.eGenPdgId_branch and "eGenPdgId" not in self.complained:
 *         if not self.eGenPdgId_branch and "eGenPdgId":
 *             warnings.warn( "EMTree: Expected branch eGenPdgId does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenPdgId")
 *         else:
 */
  __pyx_tuple__86 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eGenPdgId, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__86)) __PYX_ERR(0, 2399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__86);
  __Pyx_GIVEREF(__pyx_tuple__86);

  /* "EMTree.pyx":2408
 *         #if not self.eGenPhi_branch and "eGenPhi" not in self.complained:
 *         if not self.eGenPhi_branch and "eGenPhi":
 *             warnings.warn( "EMTree: Expected branch eGenPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenPhi")
 *         else:
 */
  __pyx_tuple__87 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eGenPhi_d, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__87)) __PYX_ERR(0, 2408, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__87);
  __Pyx_GIVEREF(__pyx_tuple__87);

  /* "EMTree.pyx":2417
 *         #if not self.eGenPrompt_branch and "eGenPrompt" not in self.complained:
 *         if not self.eGenPrompt_branch and "eGenPrompt":
 *             warnings.warn( "EMTree: Expected branch eGenPrompt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenPrompt")
 *         else:
 */
  __pyx_tuple__88 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eGenPromp, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__88)) __PYX_ERR(0, 2417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__88);
  __Pyx_GIVEREF(__pyx_tuple__88);

  /* "EMTree.pyx":2426
 *         #if not self.eGenPromptTauDecay_branch and "eGenPromptTauDecay" not in self.complained:
 *         if not self.eGenPromptTauDecay_branch and "eGenPromptTauDecay":
 *             warnings.warn( "EMTree: Expected branch eGenPromptTauDecay does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenPromptTauDecay")
 *         else:
 */
  __pyx_tuple__89 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eGenPromp_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__89)) __PYX_ERR(0, 2426, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__89);
  __Pyx_GIVEREF(__pyx_tuple__89);

  /* "EMTree.pyx":2435
 *         #if not self.eGenPt_branch and "eGenPt" not in self.complained:
 *         if not self.eGenPt_branch and "eGenPt":
 *             warnings.warn( "EMTree: Expected branch eGenPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenPt")
 *         else:
 */
  __pyx_tuple__90 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eGenPt_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__90)) __PYX_ERR(0, 2435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__90);
  __Pyx_GIVEREF(__pyx_tuple__90);

  /* "EMTree.pyx":2444
 *         #if not self.eGenTauDecay_branch and "eGenTauDecay" not in self.complained:
 *         if not self.eGenTauDecay_branch and "eGenTauDecay":
 *             warnings.warn( "EMTree: Expected branch eGenTauDecay does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenTauDecay")
 *         else:
 */
  __pyx_tuple__91 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eGenTauDe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__91)) __PYX_ERR(0, 2444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__91);
  __Pyx_GIVEREF(__pyx_tuple__91);

  /* "EMTree.pyx":2453
 *         #if not self.eGenVZ_branch and "eGenVZ" not in self.complained:
 *         if not self.eGenVZ_branch and "eGenVZ":
 *             warnings.warn( "EMTree: Expected branch eGenVZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenVZ")
 *         else:
 */
  __pyx_tuple__92 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eGenVZ_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__92)) __PYX_ERR(0, 2453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__92);
  __Pyx_GIVEREF(__pyx_tuple__92);

  /* "EMTree.pyx":2462
 *         #if not self.eGenVtxPVMatch_branch and "eGenVtxPVMatch" not in self.complained:
 *         if not self.eGenVtxPVMatch_branch and "eGenVtxPVMatch":
 *             warnings.warn( "EMTree: Expected branch eGenVtxPVMatch does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eGenVtxPVMatch")
 *         else:
 */
  __pyx_tuple__93 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eGenVtxPV, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__93)) __PYX_ERR(0, 2462, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__93);
  __Pyx_GIVEREF(__pyx_tuple__93);

  /* "EMTree.pyx":2471
 *         #if not self.eIP3D_branch and "eIP3D" not in self.complained:
 *         if not self.eIP3D_branch and "eIP3D":
 *             warnings.warn( "EMTree: Expected branch eIP3D does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eIP3D")
 *         else:
 */
  __pyx_tuple__94 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eIP3D_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__94)) __PYX_ERR(0, 2471, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__94);
  __Pyx_GIVEREF(__pyx_tuple__94);

  /* "EMTree.pyx":2480
 *         #if not self.eIP3DErr_branch and "eIP3DErr" not in self.complained:
 *         if not self.eIP3DErr_branch and "eIP3DErr":
 *             warnings.warn( "EMTree: Expected branch eIP3DErr does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eIP3DErr")
 *         else:
 */
  __pyx_tuple__95 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eIP3DErr, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__95)) __PYX_ERR(0, 2480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__95);
  __Pyx_GIVEREF(__pyx_tuple__95);

  /* "EMTree.pyx":2489
 *         #if not self.eIsoDB03_branch and "eIsoDB03" not in self.complained:
 *         if not self.eIsoDB03_branch and "eIsoDB03":
 *             warnings.warn( "EMTree: Expected branch eIsoDB03 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eIsoDB03")
 *         else:
 */
  __pyx_tuple__96 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eIsoDB03, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__96)) __PYX_ERR(0, 2489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__96);
  __Pyx_GIVEREF(__pyx_tuple__96);

  /* "EMTree.pyx":2498
 *         #if not self.eJetArea_branch and "eJetArea" not in self.complained:
 *         if not self.eJetArea_branch and "eJetArea":
 *             warnings.warn( "EMTree: Expected branch eJetArea does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetArea")
 *         else:
 */
  __pyx_tuple__97 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eJetArea, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__97)) __PYX_ERR(0, 2498, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__97);
  __Pyx_GIVEREF(__pyx_tuple__97);

  /* "EMTree.pyx":2507
 *         #if not self.eJetBtag_branch and "eJetBtag" not in self.complained:
 *         if not self.eJetBtag_branch and "eJetBtag":
 *             warnings.warn( "EMTree: Expected branch eJetBtag does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetBtag")
 *         else:
 */
  __pyx_tuple__98 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eJetBtag, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__98)) __PYX_ERR(0, 2507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__98);
  __Pyx_GIVEREF(__pyx_tuple__98);

  /* "EMTree.pyx":2516
 *         #if not self.eJetDR_branch and "eJetDR" not in self.complained:
 *         if not self.eJetDR_branch and "eJetDR":
 *             warnings.warn( "EMTree: Expected branch eJetDR does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetDR")
 *         else:
 */
  __pyx_tuple__99 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eJetDR_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__99)) __PYX_ERR(0, 2516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__99);
  __Pyx_GIVEREF(__pyx_tuple__99);

  /* "EMTree.pyx":2525
 *         #if not self.eJetEtaEtaMoment_branch and "eJetEtaEtaMoment" not in self.complained:
 *         if not self.eJetEtaEtaMoment_branch and "eJetEtaEtaMoment":
 *             warnings.warn( "EMTree: Expected branch eJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetEtaEtaMoment")
 *         else:
 */
  __pyx_tuple__100 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eJetEtaEt, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__100)) __PYX_ERR(0, 2525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__100);
  __Pyx_GIVEREF(__pyx_tuple__100);

  /* "EMTree.pyx":2534
 *         #if not self.eJetEtaPhiMoment_branch and "eJetEtaPhiMoment" not in self.complained:
 *         if not self.eJetEtaPhiMoment_branch and "eJetEtaPhiMoment":
 *             warnings.warn( "EMTree: Expected branch eJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetEtaPhiMoment")
 *         else:
 */
  __pyx_tuple__101 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eJetEtaPh, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__101)) __PYX_ERR(0, 2534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__101);
  __Pyx_GIVEREF(__pyx_tuple__101);

  /* "EMTree.pyx":2543
 *         #if not self.eJetEtaPhiSpread_branch and "eJetEtaPhiSpread" not in self.complained:
 *         if not self.eJetEtaPhiSpread_branch and "eJetEtaPhiSpread":
 *             warnings.warn( "EMTree: Expected branch eJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetEtaPhiSpread")
 *         else:
 */
  __pyx_tuple__102 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eJetEtaPh_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__102)) __PYX_ERR(0, 2543, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__102);
  __Pyx_GIVEREF(__pyx_tuple__102);

  /* "EMTree.pyx":2552
 *         #if not self.eJetHadronFlavour_branch and "eJetHadronFlavour" not in self.complained:
 *         if not self.eJetHadronFlavour_branch and "eJetHadronFlavour":
 *             warnings.warn( "EMTree: Expected branch eJetHadronFlavour does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetHadronFlavour")
 *         else:
 */
  __pyx_tuple__103 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eJetHadro, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__103)) __PYX_ERR(0, 2552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__103);
  __Pyx_GIVEREF(__pyx_tuple__103);

  /* "EMTree.pyx":2561
 *         #if not self.eJetPFCISVBtag_branch and "eJetPFCISVBtag" not in self.complained:
 *         if not self.eJetPFCISVBtag_branch and "eJetPFCISVBtag":
 *             warnings.warn( "EMTree: Expected branch eJetPFCISVBtag does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetPFCISVBtag")
 *         else:
 */
  __pyx_tuple__104 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eJetPFCIS, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__104)) __PYX_ERR(0, 2561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__104);
  __Pyx_GIVEREF(__pyx_tuple__104);

  /* "EMTree.pyx":2570
 *         #if not self.eJetPartonFlavour_branch and "eJetPartonFlavour" not in self.complained:
 *         if not self.eJetPartonFlavour_branch and "eJetPartonFlavour":
 *             warnings.warn( "EMTree: Expected branch eJetPartonFlavour does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetPartonFlavour")
 *         else:
 */
  __pyx_tuple__105 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eJetParto, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__105)) __PYX_ERR(0, 2570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__105);
  __Pyx_GIVEREF(__pyx_tuple__105);

  /* "EMTree.pyx":2579
 *         #if not self.eJetPhiPhiMoment_branch and "eJetPhiPhiMoment" not in self.complained:
 *         if not self.eJetPhiPhiMoment_branch and "eJetPhiPhiMoment":
 *             warnings.warn( "EMTree: Expected branch eJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetPhiPhiMoment")
 *         else:
 */
  __pyx_tuple__106 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eJetPhiPh, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__106)) __PYX_ERR(0, 2579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__106);
  __Pyx_GIVEREF(__pyx_tuple__106);

  /* "EMTree.pyx":2588
 *         #if not self.eJetPt_branch and "eJetPt" not in self.complained:
 *         if not self.eJetPt_branch and "eJetPt":
 *             warnings.warn( "EMTree: Expected branch eJetPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eJetPt")
 *         else:
 */
  __pyx_tuple__107 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eJetPt_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__107)) __PYX_ERR(0, 2588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__107);
  __Pyx_GIVEREF(__pyx_tuple__107);

  /* "EMTree.pyx":2597
 *         #if not self.eMVAIsoWP80_branch and "eMVAIsoWP80" not in self.complained:
 *         if not self.eMVAIsoWP80_branch and "eMVAIsoWP80":
 *             warnings.warn( "EMTree: Expected branch eMVAIsoWP80 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMVAIsoWP80")
 *         else:
 */
  __pyx_tuple__108 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMVAIsoWP, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__108)) __PYX_ERR(0, 2597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__108);
  __Pyx_GIVEREF(__pyx_tuple__108);

  /* "EMTree.pyx":2606
 *         #if not self.eMVAIsoWP90_branch and "eMVAIsoWP90" not in self.complained:
 *         if not self.eMVAIsoWP90_branch and "eMVAIsoWP90":
 *             warnings.warn( "EMTree: Expected branch eMVAIsoWP90 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMVAIsoWP90")
 *         else:
 */
  __pyx_tuple__109 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMVAIsoWP_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__109)) __PYX_ERR(0, 2606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__109);
  __Pyx_GIVEREF(__pyx_tuple__109);

  /* "EMTree.pyx":2615
 *         #if not self.eMVANoisoWP80_branch and "eMVANoisoWP80" not in self.complained:
 *         if not self.eMVANoisoWP80_branch and "eMVANoisoWP80":
 *             warnings.warn( "EMTree: Expected branch eMVANoisoWP80 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMVANoisoWP80")
 *         else:
 */
  __pyx_tuple__110 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMVANoiso, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__110)) __PYX_ERR(0, 2615, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__110);
  __Pyx_GIVEREF(__pyx_tuple__110);

  /* "EMTree.pyx":2624
 *         #if not self.eMVANoisoWP90_branch and "eMVANoisoWP90" not in self.complained:
 *         if not self.eMVANoisoWP90_branch and "eMVANoisoWP90":
 *             warnings.warn( "EMTree: Expected branch eMVANoisoWP90 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMVANoisoWP90")
 *         else:
 */
  __pyx_tuple__111 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMVANoiso_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__111)) __PYX_ERR(0, 2624, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__111);
  __Pyx_GIVEREF(__pyx_tuple__111);

  /* "EMTree.pyx":2633
 *         #if not self.eMass_branch and "eMass" not in self.complained:
 *         if not self.eMass_branch and "eMass":
 *             warnings.warn( "EMTree: Expected branch eMass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMass")
 *         else:
 */
  __pyx_tuple__112 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMass_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__112)) __PYX_ERR(0, 2633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__112);
  __Pyx_GIVEREF(__pyx_tuple__112);

  /* "EMTree.pyx":2642
 *         #if not self.eMatchEmbeddedFilterEle24Tau30_branch and "eMatchEmbeddedFilterEle24Tau30" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle24Tau30_branch and "eMatchEmbeddedFilterEle24Tau30":
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle24Tau30 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchEmbeddedFilterEle24Tau30")
 *         else:
 */
  __pyx_tuple__113 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchEmb, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__113)) __PYX_ERR(0, 2642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__113);
  __Pyx_GIVEREF(__pyx_tuple__113);

  /* "EMTree.pyx":2651
 *         #if not self.eMatchEmbeddedFilterEle27_branch and "eMatchEmbeddedFilterEle27" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle27_branch and "eMatchEmbeddedFilterEle27":
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle27 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchEmbeddedFilterEle27")
 *         else:
 */
  __pyx_tuple__114 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchEmb_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__114)) __PYX_ERR(0, 2651, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__114);
  __Pyx_GIVEREF(__pyx_tuple__114);

  /* "EMTree.pyx":2660
 *         #if not self.eMatchEmbeddedFilterEle32_branch and "eMatchEmbeddedFilterEle32" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle32_branch and "eMatchEmbeddedFilterEle32":
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle32 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchEmbeddedFilterEle32")
 *         else:
 */
  __pyx_tuple__115 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchEmb_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__115)) __PYX_ERR(0, 2660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__115);
  __Pyx_GIVEREF(__pyx_tuple__115);

  /* "EMTree.pyx":2669
 *         #if not self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch and "eMatchEmbeddedFilterEle32DoubleL1_v1" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle32DoubleL1_v1_branch and "eMatchEmbeddedFilterEle32DoubleL1_v1":
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle32DoubleL1_v1 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchEmbeddedFilterEle32DoubleL1_v1")
 *         else:
 */
  __pyx_tuple__116 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchEmb_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__116)) __PYX_ERR(0, 2669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__116);
  __Pyx_GIVEREF(__pyx_tuple__116);

  /* "EMTree.pyx":2678
 *         #if not self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch and "eMatchEmbeddedFilterEle32DoubleL1_v2" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle32DoubleL1_v2_branch and "eMatchEmbeddedFilterEle32DoubleL1_v2":
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle32DoubleL1_v2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchEmbeddedFilterEle32DoubleL1_v2")
 *         else:
 */
  __pyx_tuple__117 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchEmb_5, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__117)) __PYX_ERR(0, 2678, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__117);
  __Pyx_GIVEREF(__pyx_tuple__117);

  /* "EMTree.pyx":2687
 *         #if not self.eMatchEmbeddedFilterEle35_branch and "eMatchEmbeddedFilterEle35" not in self.complained:
 *         if not self.eMatchEmbeddedFilterEle35_branch and "eMatchEmbeddedFilterEle35":
 *             warnings.warn( "EMTree: Expected branch eMatchEmbeddedFilterEle35 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchEmbeddedFilterEle35")
 *         else:
 */
  __pyx_tuple__118 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchEmb_6, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__118)) __PYX_ERR(0, 2687, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__118);
  __Pyx_GIVEREF(__pyx_tuple__118);

  /* "EMTree.pyx":2696
 *         #if not self.eMatchesEle24HPSTau30Filter_branch and "eMatchesEle24HPSTau30Filter" not in self.complained:
 *         if not self.eMatchesEle24HPSTau30Filter_branch and "eMatchesEle24HPSTau30Filter":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle24HPSTau30Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle24HPSTau30Filter")
 *         else:
 */
  __pyx_tuple__119 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesE, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__119)) __PYX_ERR(0, 2696, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__119);
  __Pyx_GIVEREF(__pyx_tuple__119);

  /* "EMTree.pyx":2705
 *         #if not self.eMatchesEle24HPSTau30Path_branch and "eMatchesEle24HPSTau30Path" not in self.complained:
 *         if not self.eMatchesEle24HPSTau30Path_branch and "eMatchesEle24HPSTau30Path":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle24HPSTau30Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle24HPSTau30Path")
 *         else:
 */
  __pyx_tuple__120 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesE_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__120)) __PYX_ERR(0, 2705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__120);
  __Pyx_GIVEREF(__pyx_tuple__120);

  /* "EMTree.pyx":2714
 *         #if not self.eMatchesEle24Tau30Filter_branch and "eMatchesEle24Tau30Filter" not in self.complained:
 *         if not self.eMatchesEle24Tau30Filter_branch and "eMatchesEle24Tau30Filter":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle24Tau30Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle24Tau30Filter")
 *         else:
 */
  __pyx_tuple__121 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesE_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__121)) __PYX_ERR(0, 2714, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__121);
  __Pyx_GIVEREF(__pyx_tuple__121);

  /* "EMTree.pyx":2723
 *         #if not self.eMatchesEle24Tau30Path_branch and "eMatchesEle24Tau30Path" not in self.complained:
 *         if not self.eMatchesEle24Tau30Path_branch and "eMatchesEle24Tau30Path":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle24Tau30Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle24Tau30Path")
 *         else:
 */
  __pyx_tuple__122 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesE_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__122)) __PYX_ERR(0, 2723, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__122);
  __Pyx_GIVEREF(__pyx_tuple__122);

  /* "EMTree.pyx":2732
 *         #if not self.eMatchesEle25Filter_branch and "eMatchesEle25Filter" not in self.complained:
 *         if not self.eMatchesEle25Filter_branch and "eMatchesEle25Filter":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle25Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle25Filter")
 *         else:
 */
  __pyx_tuple__123 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesE_5, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__123)) __PYX_ERR(0, 2732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__123);
  __Pyx_GIVEREF(__pyx_tuple__123);

  /* "EMTree.pyx":2741
 *         #if not self.eMatchesEle25Path_branch and "eMatchesEle25Path" not in self.complained:
 *         if not self.eMatchesEle25Path_branch and "eMatchesEle25Path":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle25Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle25Path")
 *         else:
 */
  __pyx_tuple__124 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesE_6, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__124)) __PYX_ERR(0, 2741, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__124);
  __Pyx_GIVEREF(__pyx_tuple__124);

  /* "EMTree.pyx":2750
 *         #if not self.eMatchesEle27Filter_branch and "eMatchesEle27Filter" not in self.complained:
 *         if not self.eMatchesEle27Filter_branch and "eMatchesEle27Filter":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle27Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle27Filter")
 *         else:
 */
  __pyx_tuple__125 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesE_7, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__125)) __PYX_ERR(0, 2750, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__125);
  __Pyx_GIVEREF(__pyx_tuple__125);

  /* "EMTree.pyx":2759
 *         #if not self.eMatchesEle27Path_branch and "eMatchesEle27Path" not in self.complained:
 *         if not self.eMatchesEle27Path_branch and "eMatchesEle27Path":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle27Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle27Path")
 *         else:
 */
  __pyx_tuple__126 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesE_8, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__126)) __PYX_ERR(0, 2759, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__126);
  __Pyx_GIVEREF(__pyx_tuple__126);

  /* "EMTree.pyx":2768
 *         #if not self.eMatchesEle32Filter_branch and "eMatchesEle32Filter" not in self.complained:
 *         if not self.eMatchesEle32Filter_branch and "eMatchesEle32Filter":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle32Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle32Filter")
 *         else:
 */
  __pyx_tuple__127 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesE_9, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__127)) __PYX_ERR(0, 2768, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__127);
  __Pyx_GIVEREF(__pyx_tuple__127);

  /* "EMTree.pyx":2777
 *         #if not self.eMatchesEle32Path_branch and "eMatchesEle32Path" not in self.complained:
 *         if not self.eMatchesEle32Path_branch and "eMatchesEle32Path":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle32Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle32Path")
 *         else:
 */
  __pyx_tuple__128 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesE_10, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__128)) __PYX_ERR(0, 2777, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__128);
  __Pyx_GIVEREF(__pyx_tuple__128);

  /* "EMTree.pyx":2786
 *         #if not self.eMatchesEle35Filter_branch and "eMatchesEle35Filter" not in self.complained:
 *         if not self.eMatchesEle35Filter_branch and "eMatchesEle35Filter":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle35Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle35Filter")
 *         else:
 */
  __pyx_tuple__129 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesE_11, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__129)) __PYX_ERR(0, 2786, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__129);
  __Pyx_GIVEREF(__pyx_tuple__129);

  /* "EMTree.pyx":2795
 *         #if not self.eMatchesEle35Path_branch and "eMatchesEle35Path" not in self.complained:
 *         if not self.eMatchesEle35Path_branch and "eMatchesEle35Path":
 *             warnings.warn( "EMTree: Expected branch eMatchesEle35Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesEle35Path")
 *         else:
 */
  __pyx_tuple__130 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesE_12, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__130)) __PYX_ERR(0, 2795, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__130);
  __Pyx_GIVEREF(__pyx_tuple__130);

  /* "EMTree.pyx":2804
 *         #if not self.eMatchesMu23e12DZFilter_branch and "eMatchesMu23e12DZFilter" not in self.complained:
 *         if not self.eMatchesMu23e12DZFilter_branch and "eMatchesMu23e12DZFilter":
 *             warnings.warn( "EMTree: Expected branch eMatchesMu23e12DZFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesMu23e12DZFilter")
 *         else:
 */
  __pyx_tuple__131 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesM, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__131)) __PYX_ERR(0, 2804, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__131);
  __Pyx_GIVEREF(__pyx_tuple__131);

  /* "EMTree.pyx":2813
 *         #if not self.eMatchesMu23e12DZPath_branch and "eMatchesMu23e12DZPath" not in self.complained:
 *         if not self.eMatchesMu23e12DZPath_branch and "eMatchesMu23e12DZPath":
 *             warnings.warn( "EMTree: Expected branch eMatchesMu23e12DZPath does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesMu23e12DZPath")
 *         else:
 */
  __pyx_tuple__132 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesM_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__132)) __PYX_ERR(0, 2813, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__132);
  __Pyx_GIVEREF(__pyx_tuple__132);

  /* "EMTree.pyx":2822
 *         #if not self.eMatchesMu23e12Filter_branch and "eMatchesMu23e12Filter" not in self.complained:
 *         if not self.eMatchesMu23e12Filter_branch and "eMatchesMu23e12Filter":
 *             warnings.warn( "EMTree: Expected branch eMatchesMu23e12Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesMu23e12Filter")
 *         else:
 */
  __pyx_tuple__133 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesM_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__133)) __PYX_ERR(0, 2822, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__133);
  __Pyx_GIVEREF(__pyx_tuple__133);

  /* "EMTree.pyx":2831
 *         #if not self.eMatchesMu23e12Path_branch and "eMatchesMu23e12Path" not in self.complained:
 *         if not self.eMatchesMu23e12Path_branch and "eMatchesMu23e12Path":
 *             warnings.warn( "EMTree: Expected branch eMatchesMu23e12Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesMu23e12Path")
 *         else:
 */
  __pyx_tuple__134 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesM_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__134)) __PYX_ERR(0, 2831, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__134);
  __Pyx_GIVEREF(__pyx_tuple__134);

  /* "EMTree.pyx":2840
 *         #if not self.eMatchesMu8e23DZFilter_branch and "eMatchesMu8e23DZFilter" not in self.complained:
 *         if not self.eMatchesMu8e23DZFilter_branch and "eMatchesMu8e23DZFilter":
 *             warnings.warn( "EMTree: Expected branch eMatchesMu8e23DZFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesMu8e23DZFilter")
 *         else:
 */
  __pyx_tuple__135 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesM_5, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__135)) __PYX_ERR(0, 2840, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__135);
  __Pyx_GIVEREF(__pyx_tuple__135);

  /* "EMTree.pyx":2849
 *         #if not self.eMatchesMu8e23DZPath_branch and "eMatchesMu8e23DZPath" not in self.complained:
 *         if not self.eMatchesMu8e23DZPath_branch and "eMatchesMu8e23DZPath":
 *             warnings.warn( "EMTree: Expected branch eMatchesMu8e23DZPath does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesMu8e23DZPath")
 *         else:
 */
  __pyx_tuple__136 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesM_6, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__136)) __PYX_ERR(0, 2849, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__136);
  __Pyx_GIVEREF(__pyx_tuple__136);

  /* "EMTree.pyx":2858
 *         #if not self.eMatchesMu8e23Filter_branch and "eMatchesMu8e23Filter" not in self.complained:
 *         if not self.eMatchesMu8e23Filter_branch and "eMatchesMu8e23Filter":
 *             warnings.warn( "EMTree: Expected branch eMatchesMu8e23Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesMu8e23Filter")
 *         else:
 */
  __pyx_tuple__137 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesM_7, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__137)) __PYX_ERR(0, 2858, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__137);
  __Pyx_GIVEREF(__pyx_tuple__137);

  /* "EMTree.pyx":2867
 *         #if not self.eMatchesMu8e23Path_branch and "eMatchesMu8e23Path" not in self.complained:
 *         if not self.eMatchesMu8e23Path_branch and "eMatchesMu8e23Path":
 *             warnings.warn( "EMTree: Expected branch eMatchesMu8e23Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMatchesMu8e23Path")
 *         else:
 */
  __pyx_tuple__138 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMatchesM_8, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__138)) __PYX_ERR(0, 2867, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__138);
  __Pyx_GIVEREF(__pyx_tuple__138);

  /* "EMTree.pyx":2876
 *         #if not self.eMissingHits_branch and "eMissingHits" not in self.complained:
 *         if not self.eMissingHits_branch and "eMissingHits":
 *             warnings.warn( "EMTree: Expected branch eMissingHits does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eMissingHits")
 *         else:
 */
  __pyx_tuple__139 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eMissingH, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__139)) __PYX_ERR(0, 2876, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__139);
  __Pyx_GIVEREF(__pyx_tuple__139);

  /* "EMTree.pyx":2885
 *         #if not self.ePVDXY_branch and "ePVDXY" not in self.complained:
 *         if not self.ePVDXY_branch and "ePVDXY":
 *             warnings.warn( "EMTree: Expected branch ePVDXY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("ePVDXY")
 *         else:
 */
  __pyx_tuple__140 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_ePVDXY_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__140)) __PYX_ERR(0, 2885, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__140);
  __Pyx_GIVEREF(__pyx_tuple__140);

  /* "EMTree.pyx":2894
 *         #if not self.ePVDZ_branch and "ePVDZ" not in self.complained:
 *         if not self.ePVDZ_branch and "ePVDZ":
 *             warnings.warn( "EMTree: Expected branch ePVDZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("ePVDZ")
 *         else:
 */
  __pyx_tuple__141 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_ePVDZ_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__141)) __PYX_ERR(0, 2894, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__141);
  __Pyx_GIVEREF(__pyx_tuple__141);

  /* "EMTree.pyx":2903
 *         #if not self.ePassesConversionVeto_branch and "ePassesConversionVeto" not in self.complained:
 *         if not self.ePassesConversionVeto_branch and "ePassesConversionVeto":
 *             warnings.warn( "EMTree: Expected branch ePassesConversionVeto does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("ePassesConversionVeto")
 *         else:
 */
  __pyx_tuple__142 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_ePassesCo, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__142)) __PYX_ERR(0, 2903, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__142);
  __Pyx_GIVEREF(__pyx_tuple__142);

  /* "EMTree.pyx":2912
 *         #if not self.ePhi_branch and "ePhi" not in self.complained:
 *         if not self.ePhi_branch and "ePhi":
 *             warnings.warn( "EMTree: Expected branch ePhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("ePhi")
 *         else:
 */
  __pyx_tuple__143 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_ePhi_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__143)) __PYX_ERR(0, 2912, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__143);
  __Pyx_GIVEREF(__pyx_tuple__143);

  /* "EMTree.pyx":2921
 *         #if not self.ePt_branch and "ePt" not in self.complained:
 *         if not self.ePt_branch and "ePt":
 *             warnings.warn( "EMTree: Expected branch ePt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("ePt")
 *         else:
 */
  __pyx_tuple__144 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_ePt_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__144)) __PYX_ERR(0, 2921, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__144);
  __Pyx_GIVEREF(__pyx_tuple__144);

  /* "EMTree.pyx":2930
 *         #if not self.eRelPFIsoRho_branch and "eRelPFIsoRho" not in self.complained:
 *         if not self.eRelPFIsoRho_branch and "eRelPFIsoRho":
 *             warnings.warn( "EMTree: Expected branch eRelPFIsoRho does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eRelPFIsoRho")
 *         else:
 */
  __pyx_tuple__145 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eRelPFIso, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__145)) __PYX_ERR(0, 2930, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__145);
  __Pyx_GIVEREF(__pyx_tuple__145);

  /* "EMTree.pyx":2939
 *         #if not self.eSIP2D_branch and "eSIP2D" not in self.complained:
 *         if not self.eSIP2D_branch and "eSIP2D":
 *             warnings.warn( "EMTree: Expected branch eSIP2D does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eSIP2D")
 *         else:
 */
  __pyx_tuple__146 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eSIP2D_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__146)) __PYX_ERR(0, 2939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__146);
  __Pyx_GIVEREF(__pyx_tuple__146);

  /* "EMTree.pyx":2948
 *         #if not self.eSIP3D_branch and "eSIP3D" not in self.complained:
 *         if not self.eSIP3D_branch and "eSIP3D":
 *             warnings.warn( "EMTree: Expected branch eSIP3D does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eSIP3D")
 *         else:
 */
  __pyx_tuple__147 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eSIP3D_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__147)) __PYX_ERR(0, 2948, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__147);
  __Pyx_GIVEREF(__pyx_tuple__147);

  /* "EMTree.pyx":2957
 *         #if not self.eVZ_branch and "eVZ" not in self.complained:
 *         if not self.eVZ_branch and "eVZ":
 *             warnings.warn( "EMTree: Expected branch eVZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eVZ")
 *         else:
 */
  __pyx_tuple__148 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eVZ_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__148)) __PYX_ERR(0, 2957, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__148);
  __Pyx_GIVEREF(__pyx_tuple__148);

  /* "EMTree.pyx":2966
 *         #if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx" not in self.complained:
 *         if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx":
 *             warnings.warn( "EMTree: Expected branch eVetoMVAIsoVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eVetoMVAIsoVtx")
 *         else:
 */
  __pyx_tuple__149 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eVetoMVAI, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__149)) __PYX_ERR(0, 2966, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__149);
  __Pyx_GIVEREF(__pyx_tuple__149);

  /* "EMTree.pyx":2975
 *         #if not self.eVetoZTTp001dxyz_branch and "eVetoZTTp001dxyz" not in self.complained:
 *         if not self.eVetoZTTp001dxyz_branch and "eVetoZTTp001dxyz":
 *             warnings.warn( "EMTree: Expected branch eVetoZTTp001dxyz does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eVetoZTTp001dxyz")
 *         else:
 */
  __pyx_tuple__150 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eVetoZTTp, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__150)) __PYX_ERR(0, 2975, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__150);
  __Pyx_GIVEREF(__pyx_tuple__150);

  /* "EMTree.pyx":2984
 *         #if not self.eZTTGenMatching_branch and "eZTTGenMatching" not in self.complained:
 *         if not self.eZTTGenMatching_branch and "eZTTGenMatching":
 *             warnings.warn( "EMTree: Expected branch eZTTGenMatching does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eZTTGenMatching")
 *         else:
 */
  __pyx_tuple__151 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eZTTGenMa, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__151)) __PYX_ERR(0, 2984, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__151);
  __Pyx_GIVEREF(__pyx_tuple__151);

  /* "EMTree.pyx":2993
 *         #if not self.e_m_PZeta_branch and "e_m_PZeta" not in self.complained:
 *         if not self.e_m_PZeta_branch and "e_m_PZeta":
 *             warnings.warn( "EMTree: Expected branch e_m_PZeta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("e_m_PZeta")
 *         else:
 */
  __pyx_tuple__152 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_e_m_PZeta, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__152)) __PYX_ERR(0, 2993, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__152);
  __Pyx_GIVEREF(__pyx_tuple__152);

  /* "EMTree.pyx":3002
 *         #if not self.e_m_PZetaVis_branch and "e_m_PZetaVis" not in self.complained:
 *         if not self.e_m_PZetaVis_branch and "e_m_PZetaVis":
 *             warnings.warn( "EMTree: Expected branch e_m_PZetaVis does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("e_m_PZetaVis")
 *         else:
 */
  __pyx_tuple__153 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_e_m_PZeta_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__153)) __PYX_ERR(0, 3002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__153);
  __Pyx_GIVEREF(__pyx_tuple__153);

  /* "EMTree.pyx":3011
 *         #if not self.e_m_doubleL1IsoTauMatch_branch and "e_m_doubleL1IsoTauMatch" not in self.complained:
 *         if not self.e_m_doubleL1IsoTauMatch_branch and "e_m_doubleL1IsoTauMatch":
 *             warnings.warn( "EMTree: Expected branch e_m_doubleL1IsoTauMatch does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("e_m_doubleL1IsoTauMatch")
 *         else:
 */
  __pyx_tuple__154 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_e_m_doubl, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__154)) __PYX_ERR(0, 3011, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__154);
  __Pyx_GIVEREF(__pyx_tuple__154);

  /* "EMTree.pyx":3020
 *         #if not self.eecalEnergy_branch and "eecalEnergy" not in self.complained:
 *         if not self.eecalEnergy_branch and "eecalEnergy":
 *             warnings.warn( "EMTree: Expected branch eecalEnergy does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eecalEnergy")
 *         else:
 */
  __pyx_tuple__155 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_eecalEner, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__155)) __PYX_ERR(0, 3020, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__155);
  __Pyx_GIVEREF(__pyx_tuple__155);

  /* "EMTree.pyx":3029
 *         #if not self.evt_branch and "evt" not in self.complained:
 *         if not self.evt_branch and "evt":
 *             warnings.warn( "EMTree: Expected branch evt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("evt")
 *         else:
 */
  __pyx_tuple__156 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_evt_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__156)) __PYX_ERR(0, 3029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__156);
  __Pyx_GIVEREF(__pyx_tuple__156);

  /* "EMTree.pyx":3038
 *         #if not self.genEta_branch and "genEta" not in self.complained:
 *         if not self.genEta_branch and "genEta":
 *             warnings.warn( "EMTree: Expected branch genEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("genEta")
 *         else:
 */
  __pyx_tuple__157 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_genEta_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__157)) __PYX_ERR(0, 3038, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__157);
  __Pyx_GIVEREF(__pyx_tuple__157);

  /* "EMTree.pyx":3047
 *         #if not self.genHTT_branch and "genHTT" not in self.complained:
 *         if not self.genHTT_branch and "genHTT":
 *             warnings.warn( "EMTree: Expected branch genHTT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("genHTT")
 *         else:
 */
  __pyx_tuple__158 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_genHTT_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__158)) __PYX_ERR(0, 3047, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__158);
  __Pyx_GIVEREF(__pyx_tuple__158);

  /* "EMTree.pyx":3056
 *         #if not self.genM_branch and "genM" not in self.complained:
 *         if not self.genM_branch and "genM":
 *             warnings.warn( "EMTree: Expected branch genM does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("genM")
 *         else:
 */
  __pyx_tuple__159 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_genM_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__159)) __PYX_ERR(0, 3056, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__159);
  __Pyx_GIVEREF(__pyx_tuple__159);

  /* "EMTree.pyx":3065
 *         #if not self.genMass_branch and "genMass" not in self.complained:
 *         if not self.genMass_branch and "genMass":
 *             warnings.warn( "EMTree: Expected branch genMass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("genMass")
 *         else:
 */
  __pyx_tuple__160 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_genMass_d, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__160)) __PYX_ERR(0, 3065, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__160);
  __Pyx_GIVEREF(__pyx_tuple__160);

  /* "EMTree.pyx":3074
 *         #if not self.genPhi_branch and "genPhi" not in self.complained:
 *         if not self.genPhi_branch and "genPhi":
 *             warnings.warn( "EMTree: Expected branch genPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("genPhi")
 *         else:
 */
  __pyx_tuple__161 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_genPhi_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__161)) __PYX_ERR(0, 3074, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__161);
  __Pyx_GIVEREF(__pyx_tuple__161);

  /* "EMTree.pyx":3083
 *         #if not self.genpT_branch and "genpT" not in self.complained:
 *         if not self.genpT_branch and "genpT":
 *             warnings.warn( "EMTree: Expected branch genpT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("genpT")
 *         else:
 */
  __pyx_tuple__162 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_genpT_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__162)) __PYX_ERR(0, 3083, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__162);
  __Pyx_GIVEREF(__pyx_tuple__162);

  /* "EMTree.pyx":3092
 *         #if not self.genpX_branch and "genpX" not in self.complained:
 *         if not self.genpX_branch and "genpX":
 *             warnings.warn( "EMTree: Expected branch genpX does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("genpX")
 *         else:
 */
  __pyx_tuple__163 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_genpX_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__163)) __PYX_ERR(0, 3092, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__163);
  __Pyx_GIVEREF(__pyx_tuple__163);

  /* "EMTree.pyx":3101
 *         #if not self.genpY_branch and "genpY" not in self.complained:
 *         if not self.genpY_branch and "genpY":
 *             warnings.warn( "EMTree: Expected branch genpY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("genpY")
 *         else:
 */
  __pyx_tuple__164 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_genpY_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__164)) __PYX_ERR(0, 3101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__164);
  __Pyx_GIVEREF(__pyx_tuple__164);

  /* "EMTree.pyx":3110
 *         #if not self.isGtautau_branch and "isGtautau" not in self.complained:
 *         if not self.isGtautau_branch and "isGtautau":
 *             warnings.warn( "EMTree: Expected branch isGtautau does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isGtautau")
 *         else:
 */
  __pyx_tuple__165 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_isGtautau, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__165)) __PYX_ERR(0, 3110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__165);
  __Pyx_GIVEREF(__pyx_tuple__165);

  /* "EMTree.pyx":3119
 *         #if not self.isWenu_branch and "isWenu" not in self.complained:
 *         if not self.isWenu_branch and "isWenu":
 *             warnings.warn( "EMTree: Expected branch isWenu does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isWenu")
 *         else:
 */
  __pyx_tuple__166 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_isWenu_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__166)) __PYX_ERR(0, 3119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__166);
  __Pyx_GIVEREF(__pyx_tuple__166);

  /* "EMTree.pyx":3128
 *         #if not self.isWmunu_branch and "isWmunu" not in self.complained:
 *         if not self.isWmunu_branch and "isWmunu":
 *             warnings.warn( "EMTree: Expected branch isWmunu does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isWmunu")
 *         else:
 */
  __pyx_tuple__167 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_isWmunu_d, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__167)) __PYX_ERR(0, 3128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__167);
  __Pyx_GIVEREF(__pyx_tuple__167);

  /* "EMTree.pyx":3137
 *         #if not self.isWtaunu_branch and "isWtaunu" not in self.complained:
 *         if not self.isWtaunu_branch and "isWtaunu":
 *             warnings.warn( "EMTree: Expected branch isWtaunu does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isWtaunu")
 *         else:
 */
  __pyx_tuple__168 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_isWtaunu, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__168)) __PYX_ERR(0, 3137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__168);
  __Pyx_GIVEREF(__pyx_tuple__168);

  /* "EMTree.pyx":3146
 *         #if not self.isZee_branch and "isZee" not in self.complained:
 *         if not self.isZee_branch and "isZee":
 *             warnings.warn( "EMTree: Expected branch isZee does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isZee")
 *         else:
 */
  __pyx_tuple__169 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_isZee_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__169)) __PYX_ERR(0, 3146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__169);
  __Pyx_GIVEREF(__pyx_tuple__169);

  /* "EMTree.pyx":3155
 *         #if not self.isZmumu_branch and "isZmumu" not in self.complained:
 *         if not self.isZmumu_branch and "isZmumu":
 *             warnings.warn( "EMTree: Expected branch isZmumu does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isZmumu")
 *         else:
 */
  __pyx_tuple__170 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_isZmumu_d, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__170)) __PYX_ERR(0, 3155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__170);
  __Pyx_GIVEREF(__pyx_tuple__170);

  /* "EMTree.pyx":3164
 *         #if not self.isZtautau_branch and "isZtautau" not in self.complained:
 *         if not self.isZtautau_branch and "isZtautau":
 *             warnings.warn( "EMTree: Expected branch isZtautau does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isZtautau")
 *         else:
 */
  __pyx_tuple__171 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_isZtautau, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__171)) __PYX_ERR(0, 3164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__171);
  __Pyx_GIVEREF(__pyx_tuple__171);

  /* "EMTree.pyx":3173
 *         #if not self.isdata_branch and "isdata" not in self.complained:
 *         if not self.isdata_branch and "isdata":
 *             warnings.warn( "EMTree: Expected branch isdata does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isdata")
 *         else:
 */
  __pyx_tuple__172 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_isdata_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__172)) __PYX_ERR(0, 3173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__172);
  __Pyx_GIVEREF(__pyx_tuple__172);

  /* "EMTree.pyx":3182
 *         #if not self.isembed_branch and "isembed" not in self.complained:
 *         if not self.isembed_branch and "isembed":
 *             warnings.warn( "EMTree: Expected branch isembed does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isembed")
 *         else:
 */
  __pyx_tuple__173 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_isembed_d, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__173)) __PYX_ERR(0, 3182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__173);
  __Pyx_GIVEREF(__pyx_tuple__173);

  /* "EMTree.pyx":3191
 *         #if not self.j1csv_branch and "j1csv" not in self.complained:
 *         if not self.j1csv_branch and "j1csv":
 *             warnings.warn( "EMTree: Expected branch j1csv does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1csv")
 *         else:
 */
  __pyx_tuple__174 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1csv_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__174)) __PYX_ERR(0, 3191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__174);
  __Pyx_GIVEREF(__pyx_tuple__174);

  /* "EMTree.pyx":3200
 *         #if not self.j1csvWoNoisyJets_branch and "j1csvWoNoisyJets" not in self.complained:
 *         if not self.j1csvWoNoisyJets_branch and "j1csvWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j1csvWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1csvWoNoisyJets")
 *         else:
 */
  __pyx_tuple__175 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1csvWoNo, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__175)) __PYX_ERR(0, 3200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__175);
  __Pyx_GIVEREF(__pyx_tuple__175);

  /* "EMTree.pyx":3209
 *         #if not self.j1eta_branch and "j1eta" not in self.complained:
 *         if not self.j1eta_branch and "j1eta":
 *             warnings.warn( "EMTree: Expected branch j1eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1eta")
 *         else:
 */
  __pyx_tuple__176 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1eta_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__176)) __PYX_ERR(0, 3209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__176);
  __Pyx_GIVEREF(__pyx_tuple__176);

  /* "EMTree.pyx":3218
 *         #if not self.j1etaWoNoisyJets_branch and "j1etaWoNoisyJets" not in self.complained:
 *         if not self.j1etaWoNoisyJets_branch and "j1etaWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j1etaWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1etaWoNoisyJets")
 *         else:
 */
  __pyx_tuple__177 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1etaWoNo, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__177)) __PYX_ERR(0, 3218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__177);
  __Pyx_GIVEREF(__pyx_tuple__177);

  /* "EMTree.pyx":3227
 *         #if not self.j1hadronflavor_branch and "j1hadronflavor" not in self.complained:
 *         if not self.j1hadronflavor_branch and "j1hadronflavor":
 *             warnings.warn( "EMTree: Expected branch j1hadronflavor does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1hadronflavor")
 *         else:
 */
  __pyx_tuple__178 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1hadronf, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__178)) __PYX_ERR(0, 3227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__178);
  __Pyx_GIVEREF(__pyx_tuple__178);

  /* "EMTree.pyx":3236
 *         #if not self.j1hadronflavorWoNoisyJets_branch and "j1hadronflavorWoNoisyJets" not in self.complained:
 *         if not self.j1hadronflavorWoNoisyJets_branch and "j1hadronflavorWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j1hadronflavorWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1hadronflavorWoNoisyJets")
 *         else:
 */
  __pyx_tuple__179 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1hadronf_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__179)) __PYX_ERR(0, 3236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__179);
  __Pyx_GIVEREF(__pyx_tuple__179);

  /* "EMTree.pyx":3245
 *         #if not self.j1phi_branch and "j1phi" not in self.complained:
 *         if not self.j1phi_branch and "j1phi":
 *             warnings.warn( "EMTree: Expected branch j1phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1phi")
 *         else:
 */
  __pyx_tuple__180 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1phi_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__180)) __PYX_ERR(0, 3245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__180);
  __Pyx_GIVEREF(__pyx_tuple__180);

  /* "EMTree.pyx":3254
 *         #if not self.j1phiWoNoisyJets_branch and "j1phiWoNoisyJets" not in self.complained:
 *         if not self.j1phiWoNoisyJets_branch and "j1phiWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j1phiWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1phiWoNoisyJets")
 *         else:
 */
  __pyx_tuple__181 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1phiWoNo, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__181)) __PYX_ERR(0, 3254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__181);
  __Pyx_GIVEREF(__pyx_tuple__181);

  /* "EMTree.pyx":3263
 *         #if not self.j1pt_branch and "j1pt" not in self.complained:
 *         if not self.j1pt_branch and "j1pt":
 *             warnings.warn( "EMTree: Expected branch j1pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1pt")
 *         else:
 */
  __pyx_tuple__182 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1pt_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__182)) __PYX_ERR(0, 3263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__182);
  __Pyx_GIVEREF(__pyx_tuple__182);

  /* "EMTree.pyx":3272
 *         #if not self.j1ptWoNoisyJets_branch and "j1ptWoNoisyJets" not in self.complained:
 *         if not self.j1ptWoNoisyJets_branch and "j1ptWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets")
 *         else:
 */
  __pyx_tuple__183 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__183)) __PYX_ERR(0, 3272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__183);
  __Pyx_GIVEREF(__pyx_tuple__183);

  /* "EMTree.pyx":3281
 *         #if not self.j1ptWoNoisyJets_JERDown_branch and "j1ptWoNoisyJets_JERDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JERDown_branch and "j1ptWoNoisyJets_JERDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JERDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JERDown")
 *         else:
 */
  __pyx_tuple__184 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__184)) __PYX_ERR(0, 3281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__184);
  __Pyx_GIVEREF(__pyx_tuple__184);

  /* "EMTree.pyx":3290
 *         #if not self.j1ptWoNoisyJets_JERUp_branch and "j1ptWoNoisyJets_JERUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JERUp_branch and "j1ptWoNoisyJets_JERUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JERUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JERUp")
 *         else:
 */
  __pyx_tuple__185 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__185)) __PYX_ERR(0, 3290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__185);
  __Pyx_GIVEREF(__pyx_tuple__185);

  /* "EMTree.pyx":3299
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteDown_branch and "j1ptWoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteDown_branch and "j1ptWoNoisyJets_JetAbsoluteDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteDown")
 *         else:
 */
  __pyx_tuple__186 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__186)) __PYX_ERR(0, 3299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__186);
  __Pyx_GIVEREF(__pyx_tuple__186);

  /* "EMTree.pyx":3308
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteUp_branch and "j1ptWoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteUp_branch and "j1ptWoNoisyJets_JetAbsoluteUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteUp")
 *         else:
 */
  __pyx_tuple__187 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_5, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__187)) __PYX_ERR(0, 3308, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__187);
  __Pyx_GIVEREF(__pyx_tuple__187);

  /* "EMTree.pyx":3317
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch and "j1ptWoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteyearDown_branch and "j1ptWoNoisyJets_JetAbsoluteyearDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteyearDown")
 *         else:
 */
  __pyx_tuple__188 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_6, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__188)) __PYX_ERR(0, 3317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__188);
  __Pyx_GIVEREF(__pyx_tuple__188);

  /* "EMTree.pyx":3326
 *         #if not self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch and "j1ptWoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetAbsoluteyearUp_branch and "j1ptWoNoisyJets_JetAbsoluteyearUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetAbsoluteyearUp")
 *         else:
 */
  __pyx_tuple__189 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_7, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__189)) __PYX_ERR(0, 3326, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__189);
  __Pyx_GIVEREF(__pyx_tuple__189);

  /* "EMTree.pyx":3335
 *         #if not self.j1ptWoNoisyJets_JetBBEC1Down_branch and "j1ptWoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1Down_branch and "j1ptWoNoisyJets_JetBBEC1Down":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1Down")
 *         else:
 */
  __pyx_tuple__190 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_8, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__190)) __PYX_ERR(0, 3335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__190);
  __Pyx_GIVEREF(__pyx_tuple__190);

  /* "EMTree.pyx":3344
 *         #if not self.j1ptWoNoisyJets_JetBBEC1Up_branch and "j1ptWoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1Up_branch and "j1ptWoNoisyJets_JetBBEC1Up":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1Up")
 *         else:
 */
  __pyx_tuple__191 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_9, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__191)) __PYX_ERR(0, 3344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__191);
  __Pyx_GIVEREF(__pyx_tuple__191);

  /* "EMTree.pyx":3353
 *         #if not self.j1ptWoNoisyJets_JetBBEC1yearDown_branch and "j1ptWoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1yearDown_branch and "j1ptWoNoisyJets_JetBBEC1yearDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1yearDown")
 *         else:
 */
  __pyx_tuple__192 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_10, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__192)) __PYX_ERR(0, 3353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__192);
  __Pyx_GIVEREF(__pyx_tuple__192);

  /* "EMTree.pyx":3362
 *         #if not self.j1ptWoNoisyJets_JetBBEC1yearUp_branch and "j1ptWoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetBBEC1yearUp_branch and "j1ptWoNoisyJets_JetBBEC1yearUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetBBEC1yearUp")
 *         else:
 */
  __pyx_tuple__193 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_11, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__193)) __PYX_ERR(0, 3362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__193);
  __Pyx_GIVEREF(__pyx_tuple__193);

  /* "EMTree.pyx":3371
 *         #if not self.j1ptWoNoisyJets_JetEC2Down_branch and "j1ptWoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2Down_branch and "j1ptWoNoisyJets_JetEC2Down":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2Down")
 *         else:
 */
  __pyx_tuple__194 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_12, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__194)) __PYX_ERR(0, 3371, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__194);
  __Pyx_GIVEREF(__pyx_tuple__194);

  /* "EMTree.pyx":3380
 *         #if not self.j1ptWoNoisyJets_JetEC2Up_branch and "j1ptWoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2Up_branch and "j1ptWoNoisyJets_JetEC2Up":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2Up")
 *         else:
 */
  __pyx_tuple__195 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_13, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__195)) __PYX_ERR(0, 3380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__195);
  __Pyx_GIVEREF(__pyx_tuple__195);

  /* "EMTree.pyx":3389
 *         #if not self.j1ptWoNoisyJets_JetEC2yearDown_branch and "j1ptWoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2yearDown_branch and "j1ptWoNoisyJets_JetEC2yearDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2yearDown")
 *         else:
 */
  __pyx_tuple__196 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_14, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__196)) __PYX_ERR(0, 3389, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__196);
  __Pyx_GIVEREF(__pyx_tuple__196);

  /* "EMTree.pyx":3398
 *         #if not self.j1ptWoNoisyJets_JetEC2yearUp_branch and "j1ptWoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetEC2yearUp_branch and "j1ptWoNoisyJets_JetEC2yearUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetEC2yearUp")
 *         else:
 */
  __pyx_tuple__197 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_15, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__197)) __PYX_ERR(0, 3398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__197);
  __Pyx_GIVEREF(__pyx_tuple__197);

  /* "EMTree.pyx":3407
 *         #if not self.j1ptWoNoisyJets_JetFlavorQCDDown_branch and "j1ptWoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetFlavorQCDDown_branch and "j1ptWoNoisyJets_JetFlavorQCDDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetFlavorQCDDown")
 *         else:
 */
  __pyx_tuple__198 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_16, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__198)) __PYX_ERR(0, 3407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__198);
  __Pyx_GIVEREF(__pyx_tuple__198);

  /* "EMTree.pyx":3416
 *         #if not self.j1ptWoNoisyJets_JetFlavorQCDUp_branch and "j1ptWoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetFlavorQCDUp_branch and "j1ptWoNoisyJets_JetFlavorQCDUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetFlavorQCDUp")
 *         else:
 */
  __pyx_tuple__199 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_17, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__199)) __PYX_ERR(0, 3416, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__199);
  __Pyx_GIVEREF(__pyx_tuple__199);

  /* "EMTree.pyx":3425
 *         #if not self.j1ptWoNoisyJets_JetHFDown_branch and "j1ptWoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFDown_branch and "j1ptWoNoisyJets_JetHFDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetHFDown")
 *         else:
 */
  __pyx_tuple__200 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_18, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__200)) __PYX_ERR(0, 3425, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__200);
  __Pyx_GIVEREF(__pyx_tuple__200);

  /* "EMTree.pyx":3434
 *         #if not self.j1ptWoNoisyJets_JetHFUp_branch and "j1ptWoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFUp_branch and "j1ptWoNoisyJets_JetHFUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetHFUp")
 *         else:
 */
  __pyx_tuple__201 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_19, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__201)) __PYX_ERR(0, 3434, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__201);
  __Pyx_GIVEREF(__pyx_tuple__201);

  /* "EMTree.pyx":3443
 *         #if not self.j1ptWoNoisyJets_JetHFyearDown_branch and "j1ptWoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFyearDown_branch and "j1ptWoNoisyJets_JetHFyearDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetHFyearDown")
 *         else:
 */
  __pyx_tuple__202 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_20, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__202)) __PYX_ERR(0, 3443, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__202);
  __Pyx_GIVEREF(__pyx_tuple__202);

  /* "EMTree.pyx":3452
 *         #if not self.j1ptWoNoisyJets_JetHFyearUp_branch and "j1ptWoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetHFyearUp_branch and "j1ptWoNoisyJets_JetHFyearUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetHFyearUp")
 *         else:
 */
  __pyx_tuple__203 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_21, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__203)) __PYX_ERR(0, 3452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__203);
  __Pyx_GIVEREF(__pyx_tuple__203);

  /* "EMTree.pyx":3461
 *         #if not self.j1ptWoNoisyJets_JetRelativeBalDown_branch and "j1ptWoNoisyJets_JetRelativeBalDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeBalDown_branch and "j1ptWoNoisyJets_JetRelativeBalDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeBalDown")
 *         else:
 */
  __pyx_tuple__204 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_22, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__204)) __PYX_ERR(0, 3461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__204);
  __Pyx_GIVEREF(__pyx_tuple__204);

  /* "EMTree.pyx":3470
 *         #if not self.j1ptWoNoisyJets_JetRelativeBalUp_branch and "j1ptWoNoisyJets_JetRelativeBalUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeBalUp_branch and "j1ptWoNoisyJets_JetRelativeBalUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeBalUp")
 *         else:
 */
  __pyx_tuple__205 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_23, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__205)) __PYX_ERR(0, 3470, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__205);
  __Pyx_GIVEREF(__pyx_tuple__205);

  /* "EMTree.pyx":3479
 *         #if not self.j1ptWoNoisyJets_JetRelativeSampleDown_branch and "j1ptWoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeSampleDown_branch and "j1ptWoNoisyJets_JetRelativeSampleDown":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeSampleDown")
 *         else:
 */
  __pyx_tuple__206 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_24, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__206)) __PYX_ERR(0, 3479, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__206);
  __Pyx_GIVEREF(__pyx_tuple__206);

  /* "EMTree.pyx":3488
 *         #if not self.j1ptWoNoisyJets_JetRelativeSampleUp_branch and "j1ptWoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.j1ptWoNoisyJets_JetRelativeSampleUp_branch and "j1ptWoNoisyJets_JetRelativeSampleUp":
 *             warnings.warn( "EMTree: Expected branch j1ptWoNoisyJets_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j1ptWoNoisyJets_JetRelativeSampleUp")
 *         else:
 */
  __pyx_tuple__207 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j1ptWoNoi_25, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__207)) __PYX_ERR(0, 3488, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__207);
  __Pyx_GIVEREF(__pyx_tuple__207);

  /* "EMTree.pyx":3497
 *         #if not self.j2csv_branch and "j2csv" not in self.complained:
 *         if not self.j2csv_branch and "j2csv":
 *             warnings.warn( "EMTree: Expected branch j2csv does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2csv")
 *         else:
 */
  __pyx_tuple__208 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2csv_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__208)) __PYX_ERR(0, 3497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__208);
  __Pyx_GIVEREF(__pyx_tuple__208);

  /* "EMTree.pyx":3506
 *         #if not self.j2csvWoNoisyJets_branch and "j2csvWoNoisyJets" not in self.complained:
 *         if not self.j2csvWoNoisyJets_branch and "j2csvWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j2csvWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2csvWoNoisyJets")
 *         else:
 */
  __pyx_tuple__209 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2csvWoNo, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__209)) __PYX_ERR(0, 3506, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__209);
  __Pyx_GIVEREF(__pyx_tuple__209);

  /* "EMTree.pyx":3515
 *         #if not self.j2eta_branch and "j2eta" not in self.complained:
 *         if not self.j2eta_branch and "j2eta":
 *             warnings.warn( "EMTree: Expected branch j2eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2eta")
 *         else:
 */
  __pyx_tuple__210 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2eta_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__210)) __PYX_ERR(0, 3515, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__210);
  __Pyx_GIVEREF(__pyx_tuple__210);

  /* "EMTree.pyx":3524
 *         #if not self.j2etaWoNoisyJets_branch and "j2etaWoNoisyJets" not in self.complained:
 *         if not self.j2etaWoNoisyJets_branch and "j2etaWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j2etaWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2etaWoNoisyJets")
 *         else:
 */
  __pyx_tuple__211 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2etaWoNo, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__211)) __PYX_ERR(0, 3524, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__211);
  __Pyx_GIVEREF(__pyx_tuple__211);

  /* "EMTree.pyx":3533
 *         #if not self.j2hadronflavor_branch and "j2hadronflavor" not in self.complained:
 *         if not self.j2hadronflavor_branch and "j2hadronflavor":
 *             warnings.warn( "EMTree: Expected branch j2hadronflavor does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2hadronflavor")
 *         else:
 */
  __pyx_tuple__212 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2hadronf, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__212)) __PYX_ERR(0, 3533, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__212);
  __Pyx_GIVEREF(__pyx_tuple__212);

  /* "EMTree.pyx":3542
 *         #if not self.j2hadronflavorWoNoisyJets_branch and "j2hadronflavorWoNoisyJets" not in self.complained:
 *         if not self.j2hadronflavorWoNoisyJets_branch and "j2hadronflavorWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j2hadronflavorWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2hadronflavorWoNoisyJets")
 *         else:
 */
  __pyx_tuple__213 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2hadronf_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__213)) __PYX_ERR(0, 3542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__213);
  __Pyx_GIVEREF(__pyx_tuple__213);

  /* "EMTree.pyx":3551
 *         #if not self.j2phi_branch and "j2phi" not in self.complained:
 *         if not self.j2phi_branch and "j2phi":
 *             warnings.warn( "EMTree: Expected branch j2phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2phi")
 *         else:
 */
  __pyx_tuple__214 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2phi_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__214)) __PYX_ERR(0, 3551, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__214);
  __Pyx_GIVEREF(__pyx_tuple__214);

  /* "EMTree.pyx":3560
 *         #if not self.j2phiWoNoisyJets_branch and "j2phiWoNoisyJets" not in self.complained:
 *         if not self.j2phiWoNoisyJets_branch and "j2phiWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j2phiWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2phiWoNoisyJets")
 *         else:
 */
  __pyx_tuple__215 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2phiWoNo, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__215)) __PYX_ERR(0, 3560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__215);
  __Pyx_GIVEREF(__pyx_tuple__215);

  /* "EMTree.pyx":3569
 *         #if not self.j2pt_branch and "j2pt" not in self.complained:
 *         if not self.j2pt_branch and "j2pt":
 *             warnings.warn( "EMTree: Expected branch j2pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2pt")
 *         else:
 */
  __pyx_tuple__216 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2pt_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__216)) __PYX_ERR(0, 3569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__216);
  __Pyx_GIVEREF(__pyx_tuple__216);

  /* "EMTree.pyx":3578
 *         #if not self.j2ptWoNoisyJets_branch and "j2ptWoNoisyJets" not in self.complained:
 *         if not self.j2ptWoNoisyJets_branch and "j2ptWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets")
 *         else:
 */
  __pyx_tuple__217 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__217)) __PYX_ERR(0, 3578, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__217);
  __Pyx_GIVEREF(__pyx_tuple__217);

  /* "EMTree.pyx":3587
 *         #if not self.j2ptWoNoisyJets_JERDown_branch and "j2ptWoNoisyJets_JERDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JERDown_branch and "j2ptWoNoisyJets_JERDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JERDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JERDown")
 *         else:
 */
  __pyx_tuple__218 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__218)) __PYX_ERR(0, 3587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__218);
  __Pyx_GIVEREF(__pyx_tuple__218);

  /* "EMTree.pyx":3596
 *         #if not self.j2ptWoNoisyJets_JERUp_branch and "j2ptWoNoisyJets_JERUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JERUp_branch and "j2ptWoNoisyJets_JERUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JERUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JERUp")
 *         else:
 */
  __pyx_tuple__219 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__219)) __PYX_ERR(0, 3596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__219);
  __Pyx_GIVEREF(__pyx_tuple__219);

  /* "EMTree.pyx":3605
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteDown_branch and "j2ptWoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteDown_branch and "j2ptWoNoisyJets_JetAbsoluteDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteDown")
 *         else:
 */
  __pyx_tuple__220 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__220)) __PYX_ERR(0, 3605, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__220);
  __Pyx_GIVEREF(__pyx_tuple__220);

  /* "EMTree.pyx":3614
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteUp_branch and "j2ptWoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteUp_branch and "j2ptWoNoisyJets_JetAbsoluteUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteUp")
 *         else:
 */
  __pyx_tuple__221 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_5, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__221)) __PYX_ERR(0, 3614, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__221);
  __Pyx_GIVEREF(__pyx_tuple__221);

  /* "EMTree.pyx":3623
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch and "j2ptWoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteyearDown_branch and "j2ptWoNoisyJets_JetAbsoluteyearDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteyearDown")
 *         else:
 */
  __pyx_tuple__222 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_6, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__222)) __PYX_ERR(0, 3623, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__222);
  __Pyx_GIVEREF(__pyx_tuple__222);

  /* "EMTree.pyx":3632
 *         #if not self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch and "j2ptWoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetAbsoluteyearUp_branch and "j2ptWoNoisyJets_JetAbsoluteyearUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetAbsoluteyearUp")
 *         else:
 */
  __pyx_tuple__223 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_7, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__223)) __PYX_ERR(0, 3632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__223);
  __Pyx_GIVEREF(__pyx_tuple__223);

  /* "EMTree.pyx":3641
 *         #if not self.j2ptWoNoisyJets_JetBBEC1Down_branch and "j2ptWoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1Down_branch and "j2ptWoNoisyJets_JetBBEC1Down":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1Down")
 *         else:
 */
  __pyx_tuple__224 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_8, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__224)) __PYX_ERR(0, 3641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__224);
  __Pyx_GIVEREF(__pyx_tuple__224);

  /* "EMTree.pyx":3650
 *         #if not self.j2ptWoNoisyJets_JetBBEC1Up_branch and "j2ptWoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1Up_branch and "j2ptWoNoisyJets_JetBBEC1Up":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1Up")
 *         else:
 */
  __pyx_tuple__225 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_9, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__225)) __PYX_ERR(0, 3650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__225);
  __Pyx_GIVEREF(__pyx_tuple__225);

  /* "EMTree.pyx":3659
 *         #if not self.j2ptWoNoisyJets_JetBBEC1yearDown_branch and "j2ptWoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1yearDown_branch and "j2ptWoNoisyJets_JetBBEC1yearDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1yearDown")
 *         else:
 */
  __pyx_tuple__226 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_10, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__226)) __PYX_ERR(0, 3659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__226);
  __Pyx_GIVEREF(__pyx_tuple__226);

  /* "EMTree.pyx":3668
 *         #if not self.j2ptWoNoisyJets_JetBBEC1yearUp_branch and "j2ptWoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetBBEC1yearUp_branch and "j2ptWoNoisyJets_JetBBEC1yearUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetBBEC1yearUp")
 *         else:
 */
  __pyx_tuple__227 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_11, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__227)) __PYX_ERR(0, 3668, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__227);
  __Pyx_GIVEREF(__pyx_tuple__227);

  /* "EMTree.pyx":3677
 *         #if not self.j2ptWoNoisyJets_JetEC2Down_branch and "j2ptWoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2Down_branch and "j2ptWoNoisyJets_JetEC2Down":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2Down")
 *         else:
 */
  __pyx_tuple__228 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_12, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__228)) __PYX_ERR(0, 3677, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__228);
  __Pyx_GIVEREF(__pyx_tuple__228);

  /* "EMTree.pyx":3686
 *         #if not self.j2ptWoNoisyJets_JetEC2Up_branch and "j2ptWoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2Up_branch and "j2ptWoNoisyJets_JetEC2Up":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2Up")
 *         else:
 */
  __pyx_tuple__229 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_13, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__229)) __PYX_ERR(0, 3686, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__229);
  __Pyx_GIVEREF(__pyx_tuple__229);

  /* "EMTree.pyx":3695
 *         #if not self.j2ptWoNoisyJets_JetEC2yearDown_branch and "j2ptWoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2yearDown_branch and "j2ptWoNoisyJets_JetEC2yearDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2yearDown")
 *         else:
 */
  __pyx_tuple__230 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_14, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__230)) __PYX_ERR(0, 3695, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__230);
  __Pyx_GIVEREF(__pyx_tuple__230);

  /* "EMTree.pyx":3704
 *         #if not self.j2ptWoNoisyJets_JetEC2yearUp_branch and "j2ptWoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetEC2yearUp_branch and "j2ptWoNoisyJets_JetEC2yearUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetEC2yearUp")
 *         else:
 */
  __pyx_tuple__231 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_15, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__231)) __PYX_ERR(0, 3704, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__231);
  __Pyx_GIVEREF(__pyx_tuple__231);

  /* "EMTree.pyx":3713
 *         #if not self.j2ptWoNoisyJets_JetFlavorQCDDown_branch and "j2ptWoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetFlavorQCDDown_branch and "j2ptWoNoisyJets_JetFlavorQCDDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetFlavorQCDDown")
 *         else:
 */
  __pyx_tuple__232 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_16, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__232)) __PYX_ERR(0, 3713, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__232);
  __Pyx_GIVEREF(__pyx_tuple__232);

  /* "EMTree.pyx":3722
 *         #if not self.j2ptWoNoisyJets_JetFlavorQCDUp_branch and "j2ptWoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetFlavorQCDUp_branch and "j2ptWoNoisyJets_JetFlavorQCDUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetFlavorQCDUp")
 *         else:
 */
  __pyx_tuple__233 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_17, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__233)) __PYX_ERR(0, 3722, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__233);
  __Pyx_GIVEREF(__pyx_tuple__233);

  /* "EMTree.pyx":3731
 *         #if not self.j2ptWoNoisyJets_JetHFDown_branch and "j2ptWoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFDown_branch and "j2ptWoNoisyJets_JetHFDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetHFDown")
 *         else:
 */
  __pyx_tuple__234 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_18, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__234)) __PYX_ERR(0, 3731, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__234);
  __Pyx_GIVEREF(__pyx_tuple__234);

  /* "EMTree.pyx":3740
 *         #if not self.j2ptWoNoisyJets_JetHFUp_branch and "j2ptWoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFUp_branch and "j2ptWoNoisyJets_JetHFUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetHFUp")
 *         else:
 */
  __pyx_tuple__235 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_19, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__235)) __PYX_ERR(0, 3740, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__235);
  __Pyx_GIVEREF(__pyx_tuple__235);

  /* "EMTree.pyx":3749
 *         #if not self.j2ptWoNoisyJets_JetHFyearDown_branch and "j2ptWoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFyearDown_branch and "j2ptWoNoisyJets_JetHFyearDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetHFyearDown")
 *         else:
 */
  __pyx_tuple__236 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_20, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__236)) __PYX_ERR(0, 3749, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__236);
  __Pyx_GIVEREF(__pyx_tuple__236);

  /* "EMTree.pyx":3758
 *         #if not self.j2ptWoNoisyJets_JetHFyearUp_branch and "j2ptWoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetHFyearUp_branch and "j2ptWoNoisyJets_JetHFyearUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetHFyearUp")
 *         else:
 */
  __pyx_tuple__237 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_21, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__237)) __PYX_ERR(0, 3758, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__237);
  __Pyx_GIVEREF(__pyx_tuple__237);

  /* "EMTree.pyx":3767
 *         #if not self.j2ptWoNoisyJets_JetRelativeBalDown_branch and "j2ptWoNoisyJets_JetRelativeBalDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeBalDown_branch and "j2ptWoNoisyJets_JetRelativeBalDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeBalDown")
 *         else:
 */
  __pyx_tuple__238 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_22, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__238)) __PYX_ERR(0, 3767, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__238);
  __Pyx_GIVEREF(__pyx_tuple__238);

  /* "EMTree.pyx":3776
 *         #if not self.j2ptWoNoisyJets_JetRelativeBalUp_branch and "j2ptWoNoisyJets_JetRelativeBalUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeBalUp_branch and "j2ptWoNoisyJets_JetRelativeBalUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeBalUp")
 *         else:
 */
  __pyx_tuple__239 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_23, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__239)) __PYX_ERR(0, 3776, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__239);
  __Pyx_GIVEREF(__pyx_tuple__239);

  /* "EMTree.pyx":3785
 *         #if not self.j2ptWoNoisyJets_JetRelativeSampleDown_branch and "j2ptWoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeSampleDown_branch and "j2ptWoNoisyJets_JetRelativeSampleDown":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeSampleDown")
 *         else:
 */
  __pyx_tuple__240 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_24, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__240)) __PYX_ERR(0, 3785, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__240);
  __Pyx_GIVEREF(__pyx_tuple__240);

  /* "EMTree.pyx":3794
 *         #if not self.j2ptWoNoisyJets_JetRelativeSampleUp_branch and "j2ptWoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.j2ptWoNoisyJets_JetRelativeSampleUp_branch and "j2ptWoNoisyJets_JetRelativeSampleUp":
 *             warnings.warn( "EMTree: Expected branch j2ptWoNoisyJets_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("j2ptWoNoisyJets_JetRelativeSampleUp")
 *         else:
 */
  __pyx_tuple__241 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_j2ptWoNoi_25, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__241)) __PYX_ERR(0, 3794, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__241);
  __Pyx_GIVEREF(__pyx_tuple__241);

  /* "EMTree.pyx":3803
 *         #if not self.jb1eta_2016_branch and "jb1eta_2016" not in self.complained:
 *         if not self.jb1eta_2016_branch and "jb1eta_2016":
 *             warnings.warn( "EMTree: Expected branch jb1eta_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1eta_2016")
 *         else:
 */
  __pyx_tuple__242 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb1eta_20, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__242)) __PYX_ERR(0, 3803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__242);
  __Pyx_GIVEREF(__pyx_tuple__242);

  /* "EMTree.pyx":3812
 *         #if not self.jb1eta_2017_branch and "jb1eta_2017" not in self.complained:
 *         if not self.jb1eta_2017_branch and "jb1eta_2017":
 *             warnings.warn( "EMTree: Expected branch jb1eta_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1eta_2017")
 *         else:
 */
  __pyx_tuple__243 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb1eta_20_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__243)) __PYX_ERR(0, 3812, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__243);
  __Pyx_GIVEREF(__pyx_tuple__243);

  /* "EMTree.pyx":3821
 *         #if not self.jb1eta_2018_branch and "jb1eta_2018" not in self.complained:
 *         if not self.jb1eta_2018_branch and "jb1eta_2018":
 *             warnings.warn( "EMTree: Expected branch jb1eta_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1eta_2018")
 *         else:
 */
  __pyx_tuple__244 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb1eta_20_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__244)) __PYX_ERR(0, 3821, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__244);
  __Pyx_GIVEREF(__pyx_tuple__244);

  /* "EMTree.pyx":3830
 *         #if not self.jb1hadronflavor_2016_branch and "jb1hadronflavor_2016" not in self.complained:
 *         if not self.jb1hadronflavor_2016_branch and "jb1hadronflavor_2016":
 *             warnings.warn( "EMTree: Expected branch jb1hadronflavor_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1hadronflavor_2016")
 *         else:
 */
  __pyx_tuple__245 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb1hadron, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__245)) __PYX_ERR(0, 3830, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__245);
  __Pyx_GIVEREF(__pyx_tuple__245);

  /* "EMTree.pyx":3839
 *         #if not self.jb1hadronflavor_2017_branch and "jb1hadronflavor_2017" not in self.complained:
 *         if not self.jb1hadronflavor_2017_branch and "jb1hadronflavor_2017":
 *             warnings.warn( "EMTree: Expected branch jb1hadronflavor_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1hadronflavor_2017")
 *         else:
 */
  __pyx_tuple__246 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb1hadron_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__246)) __PYX_ERR(0, 3839, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__246);
  __Pyx_GIVEREF(__pyx_tuple__246);

  /* "EMTree.pyx":3848
 *         #if not self.jb1hadronflavor_2018_branch and "jb1hadronflavor_2018" not in self.complained:
 *         if not self.jb1hadronflavor_2018_branch and "jb1hadronflavor_2018":
 *             warnings.warn( "EMTree: Expected branch jb1hadronflavor_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1hadronflavor_2018")
 *         else:
 */
  __pyx_tuple__247 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb1hadron_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__247)) __PYX_ERR(0, 3848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__247);
  __Pyx_GIVEREF(__pyx_tuple__247);

  /* "EMTree.pyx":3857
 *         #if not self.jb1phi_2016_branch and "jb1phi_2016" not in self.complained:
 *         if not self.jb1phi_2016_branch and "jb1phi_2016":
 *             warnings.warn( "EMTree: Expected branch jb1phi_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1phi_2016")
 *         else:
 */
  __pyx_tuple__248 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb1phi_20, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__248)) __PYX_ERR(0, 3857, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__248);
  __Pyx_GIVEREF(__pyx_tuple__248);

  /* "EMTree.pyx":3866
 *         #if not self.jb1phi_2017_branch and "jb1phi_2017" not in self.complained:
 *         if not self.jb1phi_2017_branch and "jb1phi_2017":
 *             warnings.warn( "EMTree: Expected branch jb1phi_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1phi_2017")
 *         else:
 */
  __pyx_tuple__249 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb1phi_20_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__249)) __PYX_ERR(0, 3866, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__249);
  __Pyx_GIVEREF(__pyx_tuple__249);

  /* "EMTree.pyx":3875
 *         #if not self.jb1phi_2018_branch and "jb1phi_2018" not in self.complained:
 *         if not self.jb1phi_2018_branch and "jb1phi_2018":
 *             warnings.warn( "EMTree: Expected branch jb1phi_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1phi_2018")
 *         else:
 */
  __pyx_tuple__250 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb1phi_20_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__250)) __PYX_ERR(0, 3875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__250);
  __Pyx_GIVEREF(__pyx_tuple__250);

  /* "EMTree.pyx":3884
 *         #if not self.jb1pt_2016_branch and "jb1pt_2016" not in self.complained:
 *         if not self.jb1pt_2016_branch and "jb1pt_2016":
 *             warnings.warn( "EMTree: Expected branch jb1pt_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1pt_2016")
 *         else:
 */
  __pyx_tuple__251 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb1pt_201, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__251)) __PYX_ERR(0, 3884, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__251);
  __Pyx_GIVEREF(__pyx_tuple__251);

  /* "EMTree.pyx":3893
 *         #if not self.jb1pt_2017_branch and "jb1pt_2017" not in self.complained:
 *         if not self.jb1pt_2017_branch and "jb1pt_2017":
 *             warnings.warn( "EMTree: Expected branch jb1pt_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1pt_2017")
 *         else:
 */
  __pyx_tuple__252 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb1pt_201_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__252)) __PYX_ERR(0, 3893, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__252);
  __Pyx_GIVEREF(__pyx_tuple__252);

  /* "EMTree.pyx":3902
 *         #if not self.jb1pt_2018_branch and "jb1pt_2018" not in self.complained:
 *         if not self.jb1pt_2018_branch and "jb1pt_2018":
 *             warnings.warn( "EMTree: Expected branch jb1pt_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb1pt_2018")
 *         else:
 */
  __pyx_tuple__253 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb1pt_201_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__253)) __PYX_ERR(0, 3902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__253);
  __Pyx_GIVEREF(__pyx_tuple__253);

  /* "EMTree.pyx":3911
 *         #if not self.jb2eta_2016_branch and "jb2eta_2016" not in self.complained:
 *         if not self.jb2eta_2016_branch and "jb2eta_2016":
 *             warnings.warn( "EMTree: Expected branch jb2eta_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2eta_2016")
 *         else:
 */
  __pyx_tuple__254 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb2eta_20, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__254)) __PYX_ERR(0, 3911, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__254);
  __Pyx_GIVEREF(__pyx_tuple__254);

  /* "EMTree.pyx":3920
 *         #if not self.jb2eta_2017_branch and "jb2eta_2017" not in self.complained:
 *         if not self.jb2eta_2017_branch and "jb2eta_2017":
 *             warnings.warn( "EMTree: Expected branch jb2eta_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2eta_2017")
 *         else:
 */
  __pyx_tuple__255 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb2eta_20_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__255)) __PYX_ERR(0, 3920, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__255);
  __Pyx_GIVEREF(__pyx_tuple__255);

  /* "EMTree.pyx":3929
 *         #if not self.jb2eta_2018_branch and "jb2eta_2018" not in self.complained:
 *         if not self.jb2eta_2018_branch and "jb2eta_2018":
 *             warnings.warn( "EMTree: Expected branch jb2eta_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2eta_2018")
 *         else:
 */
  __pyx_tuple__256 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb2eta_20_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__256)) __PYX_ERR(0, 3929, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__256);
  __Pyx_GIVEREF(__pyx_tuple__256);

  /* "EMTree.pyx":3938
 *         #if not self.jb2hadronflavor_2016_branch and "jb2hadronflavor_2016" not in self.complained:
 *         if not self.jb2hadronflavor_2016_branch and "jb2hadronflavor_2016":
 *             warnings.warn( "EMTree: Expected branch jb2hadronflavor_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2hadronflavor_2016")
 *         else:
 */
  __pyx_tuple__257 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb2hadron, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__257)) __PYX_ERR(0, 3938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__257);
  __Pyx_GIVEREF(__pyx_tuple__257);

  /* "EMTree.pyx":3947
 *         #if not self.jb2hadronflavor_2017_branch and "jb2hadronflavor_2017" not in self.complained:
 *         if not self.jb2hadronflavor_2017_branch and "jb2hadronflavor_2017":
 *             warnings.warn( "EMTree: Expected branch jb2hadronflavor_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2hadronflavor_2017")
 *         else:
 */
  __pyx_tuple__258 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb2hadron_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__258)) __PYX_ERR(0, 3947, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__258);
  __Pyx_GIVEREF(__pyx_tuple__258);

  /* "EMTree.pyx":3956
 *         #if not self.jb2hadronflavor_2018_branch and "jb2hadronflavor_2018" not in self.complained:
 *         if not self.jb2hadronflavor_2018_branch and "jb2hadronflavor_2018":
 *             warnings.warn( "EMTree: Expected branch jb2hadronflavor_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2hadronflavor_2018")
 *         else:
 */
  __pyx_tuple__259 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb2hadron_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__259)) __PYX_ERR(0, 3956, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__259);
  __Pyx_GIVEREF(__pyx_tuple__259);

  /* "EMTree.pyx":3965
 *         #if not self.jb2phi_2016_branch and "jb2phi_2016" not in self.complained:
 *         if not self.jb2phi_2016_branch and "jb2phi_2016":
 *             warnings.warn( "EMTree: Expected branch jb2phi_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2phi_2016")
 *         else:
 */
  __pyx_tuple__260 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb2phi_20, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__260)) __PYX_ERR(0, 3965, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__260);
  __Pyx_GIVEREF(__pyx_tuple__260);

  /* "EMTree.pyx":3974
 *         #if not self.jb2phi_2017_branch and "jb2phi_2017" not in self.complained:
 *         if not self.jb2phi_2017_branch and "jb2phi_2017":
 *             warnings.warn( "EMTree: Expected branch jb2phi_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2phi_2017")
 *         else:
 */
  __pyx_tuple__261 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb2phi_20_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__261)) __PYX_ERR(0, 3974, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__261);
  __Pyx_GIVEREF(__pyx_tuple__261);

  /* "EMTree.pyx":3983
 *         #if not self.jb2phi_2018_branch and "jb2phi_2018" not in self.complained:
 *         if not self.jb2phi_2018_branch and "jb2phi_2018":
 *             warnings.warn( "EMTree: Expected branch jb2phi_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2phi_2018")
 *         else:
 */
  __pyx_tuple__262 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb2phi_20_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__262)) __PYX_ERR(0, 3983, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__262);
  __Pyx_GIVEREF(__pyx_tuple__262);

  /* "EMTree.pyx":3992
 *         #if not self.jb2pt_2016_branch and "jb2pt_2016" not in self.complained:
 *         if not self.jb2pt_2016_branch and "jb2pt_2016":
 *             warnings.warn( "EMTree: Expected branch jb2pt_2016 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2pt_2016")
 *         else:
 */
  __pyx_tuple__263 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb2pt_201, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__263)) __PYX_ERR(0, 3992, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__263);
  __Pyx_GIVEREF(__pyx_tuple__263);

  /* "EMTree.pyx":4001
 *         #if not self.jb2pt_2017_branch and "jb2pt_2017" not in self.complained:
 *         if not self.jb2pt_2017_branch and "jb2pt_2017":
 *             warnings.warn( "EMTree: Expected branch jb2pt_2017 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2pt_2017")
 *         else:
 */
  __pyx_tuple__264 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb2pt_201_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__264)) __PYX_ERR(0, 4001, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__264);
  __Pyx_GIVEREF(__pyx_tuple__264);

  /* "EMTree.pyx":4010
 *         #if not self.jb2pt_2018_branch and "jb2pt_2018" not in self.complained:
 *         if not self.jb2pt_2018_branch and "jb2pt_2018":
 *             warnings.warn( "EMTree: Expected branch jb2pt_2018 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jb2pt_2018")
 *         else:
 */
  __pyx_tuple__265 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jb2pt_201_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__265)) __PYX_ERR(0, 4010, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__265);
  __Pyx_GIVEREF(__pyx_tuple__265);

  /* "EMTree.pyx":4019
 *         #if not self.jetVeto20_branch and "jetVeto20" not in self.complained:
 *         if not self.jetVeto20_branch and "jetVeto20":
 *             warnings.warn( "EMTree: Expected branch jetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto20")
 *         else:
 */
  __pyx_tuple__266 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto20, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__266)) __PYX_ERR(0, 4019, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__266);
  __Pyx_GIVEREF(__pyx_tuple__266);

  /* "EMTree.pyx":4028
 *         #if not self.jetVeto20WoNoisyJets_branch and "jetVeto20WoNoisyJets" not in self.complained:
 *         if not self.jetVeto20WoNoisyJets_branch and "jetVeto20WoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch jetVeto20WoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto20WoNoisyJets")
 *         else:
 */
  __pyx_tuple__267 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto20_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__267)) __PYX_ERR(0, 4028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__267);
  __Pyx_GIVEREF(__pyx_tuple__267);

  /* "EMTree.pyx":4037
 *         #if not self.jetVeto30_branch and "jetVeto30" not in self.complained:
 *         if not self.jetVeto30_branch and "jetVeto30":
 *             warnings.warn( "EMTree: Expected branch jetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30")
 *         else:
 */
  __pyx_tuple__268 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__268)) __PYX_ERR(0, 4037, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__268);
  __Pyx_GIVEREF(__pyx_tuple__268);

  /* "EMTree.pyx":4046
 *         #if not self.jetVeto30WoNoisyJets_branch and "jetVeto30WoNoisyJets" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_branch and "jetVeto30WoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets")
 *         else:
 */
  __pyx_tuple__269 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__269)) __PYX_ERR(0, 4046, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__269);
  __Pyx_GIVEREF(__pyx_tuple__269);

  /* "EMTree.pyx":4055
 *         #if not self.jetVeto30WoNoisyJets_JERDown_branch and "jetVeto30WoNoisyJets_JERDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JERDown_branch and "jetVeto30WoNoisyJets_JERDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JERDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JERDown")
 *         else:
 */
  __pyx_tuple__270 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__270)) __PYX_ERR(0, 4055, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__270);
  __Pyx_GIVEREF(__pyx_tuple__270);

  /* "EMTree.pyx":4064
 *         #if not self.jetVeto30WoNoisyJets_JERUp_branch and "jetVeto30WoNoisyJets_JERUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JERUp_branch and "jetVeto30WoNoisyJets_JERUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JERUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JERUp")
 *         else:
 */
  __pyx_tuple__271 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__271)) __PYX_ERR(0, 4064, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__271);
  __Pyx_GIVEREF(__pyx_tuple__271);

  /* "EMTree.pyx":4073
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteDown")
 *         else:
 */
  __pyx_tuple__272 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_5, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__272)) __PYX_ERR(0, 4073, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__272);
  __Pyx_GIVEREF(__pyx_tuple__272);

  /* "EMTree.pyx":4082
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteUp")
 *         else:
 */
  __pyx_tuple__273 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_6, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__273)) __PYX_ERR(0, 4082, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__273);
  __Pyx_GIVEREF(__pyx_tuple__273);

  /* "EMTree.pyx":4091
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteyearDown_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteyearDown")
 *         else:
 */
  __pyx_tuple__274 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_7, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__274)) __PYX_ERR(0, 4091, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__274);
  __Pyx_GIVEREF(__pyx_tuple__274);

  /* "EMTree.pyx":4100
 *         #if not self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetAbsoluteyearUp_branch and "jetVeto30WoNoisyJets_JetAbsoluteyearUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetAbsoluteyearUp")
 *         else:
 */
  __pyx_tuple__275 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_8, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__275)) __PYX_ERR(0, 4100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__275);
  __Pyx_GIVEREF(__pyx_tuple__275);

  /* "EMTree.pyx":4109
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1Down_branch and "jetVeto30WoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1Down_branch and "jetVeto30WoNoisyJets_JetBBEC1Down":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1Down")
 *         else:
 */
  __pyx_tuple__276 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_9, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__276)) __PYX_ERR(0, 4109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__276);
  __Pyx_GIVEREF(__pyx_tuple__276);

  /* "EMTree.pyx":4118
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1Up_branch and "jetVeto30WoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1Up_branch and "jetVeto30WoNoisyJets_JetBBEC1Up":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1Up")
 *         else:
 */
  __pyx_tuple__277 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_10, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__277)) __PYX_ERR(0, 4118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__277);
  __Pyx_GIVEREF(__pyx_tuple__277);

  /* "EMTree.pyx":4127
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch and "jetVeto30WoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1yearDown_branch and "jetVeto30WoNoisyJets_JetBBEC1yearDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1yearDown")
 *         else:
 */
  __pyx_tuple__278 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_11, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__278)) __PYX_ERR(0, 4127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__278);
  __Pyx_GIVEREF(__pyx_tuple__278);

  /* "EMTree.pyx":4136
 *         #if not self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch and "jetVeto30WoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetBBEC1yearUp_branch and "jetVeto30WoNoisyJets_JetBBEC1yearUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetBBEC1yearUp")
 *         else:
 */
  __pyx_tuple__279 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_12, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__279)) __PYX_ERR(0, 4136, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__279);
  __Pyx_GIVEREF(__pyx_tuple__279);

  /* "EMTree.pyx":4145
 *         #if not self.jetVeto30WoNoisyJets_JetEC2Down_branch and "jetVeto30WoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2Down_branch and "jetVeto30WoNoisyJets_JetEC2Down":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2Down")
 *         else:
 */
  __pyx_tuple__280 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_13, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__280)) __PYX_ERR(0, 4145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__280);
  __Pyx_GIVEREF(__pyx_tuple__280);

  /* "EMTree.pyx":4154
 *         #if not self.jetVeto30WoNoisyJets_JetEC2Up_branch and "jetVeto30WoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2Up_branch and "jetVeto30WoNoisyJets_JetEC2Up":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2Up")
 *         else:
 */
  __pyx_tuple__281 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_14, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__281)) __PYX_ERR(0, 4154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__281);
  __Pyx_GIVEREF(__pyx_tuple__281);

  /* "EMTree.pyx":4163
 *         #if not self.jetVeto30WoNoisyJets_JetEC2yearDown_branch and "jetVeto30WoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2yearDown_branch and "jetVeto30WoNoisyJets_JetEC2yearDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2yearDown")
 *         else:
 */
  __pyx_tuple__282 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_15, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__282)) __PYX_ERR(0, 4163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__282);
  __Pyx_GIVEREF(__pyx_tuple__282);

  /* "EMTree.pyx":4172
 *         #if not self.jetVeto30WoNoisyJets_JetEC2yearUp_branch and "jetVeto30WoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetEC2yearUp_branch and "jetVeto30WoNoisyJets_JetEC2yearUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetEC2yearUp")
 *         else:
 */
  __pyx_tuple__283 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_16, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__283)) __PYX_ERR(0, 4172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__283);
  __Pyx_GIVEREF(__pyx_tuple__283);

  /* "EMTree.pyx":4181
 *         #if not self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch and "jetVeto30WoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetFlavorQCDDown_branch and "jetVeto30WoNoisyJets_JetFlavorQCDDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetFlavorQCDDown")
 *         else:
 */
  __pyx_tuple__284 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_17, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__284)) __PYX_ERR(0, 4181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__284);
  __Pyx_GIVEREF(__pyx_tuple__284);

  /* "EMTree.pyx":4190
 *         #if not self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch and "jetVeto30WoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetFlavorQCDUp_branch and "jetVeto30WoNoisyJets_JetFlavorQCDUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetFlavorQCDUp")
 *         else:
 */
  __pyx_tuple__285 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_18, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__285)) __PYX_ERR(0, 4190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__285);
  __Pyx_GIVEREF(__pyx_tuple__285);

  /* "EMTree.pyx":4199
 *         #if not self.jetVeto30WoNoisyJets_JetHFDown_branch and "jetVeto30WoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFDown_branch and "jetVeto30WoNoisyJets_JetHFDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFDown")
 *         else:
 */
  __pyx_tuple__286 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_19, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__286)) __PYX_ERR(0, 4199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__286);
  __Pyx_GIVEREF(__pyx_tuple__286);

  /* "EMTree.pyx":4208
 *         #if not self.jetVeto30WoNoisyJets_JetHFUp_branch and "jetVeto30WoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFUp_branch and "jetVeto30WoNoisyJets_JetHFUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFUp")
 *         else:
 */
  __pyx_tuple__287 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_20, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__287)) __PYX_ERR(0, 4208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__287);
  __Pyx_GIVEREF(__pyx_tuple__287);

  /* "EMTree.pyx":4217
 *         #if not self.jetVeto30WoNoisyJets_JetHFyearDown_branch and "jetVeto30WoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFyearDown_branch and "jetVeto30WoNoisyJets_JetHFyearDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFyearDown")
 *         else:
 */
  __pyx_tuple__288 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_21, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__288)) __PYX_ERR(0, 4217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__288);
  __Pyx_GIVEREF(__pyx_tuple__288);

  /* "EMTree.pyx":4226
 *         #if not self.jetVeto30WoNoisyJets_JetHFyearUp_branch and "jetVeto30WoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetHFyearUp_branch and "jetVeto30WoNoisyJets_JetHFyearUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetHFyearUp")
 *         else:
 */
  __pyx_tuple__289 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_22, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__289)) __PYX_ERR(0, 4226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__289);
  __Pyx_GIVEREF(__pyx_tuple__289);

  /* "EMTree.pyx":4235
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeBalDownWoNoisyJets")
 *         else:
 */
  __pyx_tuple__290 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_23, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__290)) __PYX_ERR(0, 4235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__290);
  __Pyx_GIVEREF(__pyx_tuple__290);

  /* "EMTree.pyx":4244
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets_branch and "jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeBalUpWoNoisyJets")
 *         else:
 */
  __pyx_tuple__291 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_24, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__291)) __PYX_ERR(0, 4244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__291);
  __Pyx_GIVEREF(__pyx_tuple__291);

  /* "EMTree.pyx":4253
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch and "jetVeto30WoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeSampleDown_branch and "jetVeto30WoNoisyJets_JetRelativeSampleDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeSampleDown")
 *         else:
 */
  __pyx_tuple__292 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_25, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__292)) __PYX_ERR(0, 4253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__292);
  __Pyx_GIVEREF(__pyx_tuple__292);

  /* "EMTree.pyx":4262
 *         #if not self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch and "jetVeto30WoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetRelativeSampleUp_branch and "jetVeto30WoNoisyJets_JetRelativeSampleUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetRelativeSampleUp")
 *         else:
 */
  __pyx_tuple__293 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_26, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__293)) __PYX_ERR(0, 4262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__293);
  __Pyx_GIVEREF(__pyx_tuple__293);

  /* "EMTree.pyx":4271
 *         #if not self.jetVeto30WoNoisyJets_JetTotalDown_branch and "jetVeto30WoNoisyJets_JetTotalDown" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetTotalDown_branch and "jetVeto30WoNoisyJets_JetTotalDown":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetTotalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetTotalDown")
 *         else:
 */
  __pyx_tuple__294 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_27, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__294)) __PYX_ERR(0, 4271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__294);
  __Pyx_GIVEREF(__pyx_tuple__294);

  /* "EMTree.pyx":4280
 *         #if not self.jetVeto30WoNoisyJets_JetTotalUp_branch and "jetVeto30WoNoisyJets_JetTotalUp" not in self.complained:
 *         if not self.jetVeto30WoNoisyJets_JetTotalUp_branch and "jetVeto30WoNoisyJets_JetTotalUp":
 *             warnings.warn( "EMTree: Expected branch jetVeto30WoNoisyJets_JetTotalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30WoNoisyJets_JetTotalUp")
 *         else:
 */
  __pyx_tuple__295 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_jetVeto30_28, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__295)) __PYX_ERR(0, 4280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__295);
  __Pyx_GIVEREF(__pyx_tuple__295);

  /* "EMTree.pyx":4289
 *         #if not self.lumi_branch and "lumi" not in self.complained:
 *         if not self.lumi_branch and "lumi":
 *             warnings.warn( "EMTree: Expected branch lumi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("lumi")
 *         else:
 */
  __pyx_tuple__296 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_lumi_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__296)) __PYX_ERR(0, 4289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__296);
  __Pyx_GIVEREF(__pyx_tuple__296);

  /* "EMTree.pyx":4298
 *         #if not self.mCharge_branch and "mCharge" not in self.complained:
 *         if not self.mCharge_branch and "mCharge":
 *             warnings.warn( "EMTree: Expected branch mCharge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mCharge")
 *         else:
 */
  __pyx_tuple__297 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mCharge_d, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__297)) __PYX_ERR(0, 4298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__297);
  __Pyx_GIVEREF(__pyx_tuple__297);

  /* "EMTree.pyx":4307
 *         #if not self.mComesFromHiggs_branch and "mComesFromHiggs" not in self.complained:
 *         if not self.mComesFromHiggs_branch and "mComesFromHiggs":
 *             warnings.warn( "EMTree: Expected branch mComesFromHiggs does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mComesFromHiggs")
 *         else:
 */
  __pyx_tuple__298 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mComesFro, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__298)) __PYX_ERR(0, 4307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__298);
  __Pyx_GIVEREF(__pyx_tuple__298);

  /* "EMTree.pyx":4316
 *         #if not self.mEta_branch and "mEta" not in self.complained:
 *         if not self.mEta_branch and "mEta":
 *             warnings.warn( "EMTree: Expected branch mEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mEta")
 *         else:
 */
  __pyx_tuple__299 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mEta_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__299)) __PYX_ERR(0, 4316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__299);
  __Pyx_GIVEREF(__pyx_tuple__299);

  /* "EMTree.pyx":4325
 *         #if not self.mGenCharge_branch and "mGenCharge" not in self.complained:
 *         if not self.mGenCharge_branch and "mGenCharge":
 *             warnings.warn( "EMTree: Expected branch mGenCharge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenCharge")
 *         else:
 */
  __pyx_tuple__300 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mGenCharg, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__300)) __PYX_ERR(0, 4325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__300);
  __Pyx_GIVEREF(__pyx_tuple__300);

  /* "EMTree.pyx":4334
 *         #if not self.mGenDirectPromptTauDecayFinalState_branch and "mGenDirectPromptTauDecayFinalState" not in self.complained:
 *         if not self.mGenDirectPromptTauDecayFinalState_branch and "mGenDirectPromptTauDecayFinalState":
 *             warnings.warn( "EMTree: Expected branch mGenDirectPromptTauDecayFinalState does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenDirectPromptTauDecayFinalState")
 *         else:
 */
  __pyx_tuple__301 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mGenDirec, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__301)) __PYX_ERR(0, 4334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__301);
  __Pyx_GIVEREF(__pyx_tuple__301);

  /* "EMTree.pyx":4343
 *         #if not self.mGenEnergy_branch and "mGenEnergy" not in self.complained:
 *         if not self.mGenEnergy_branch and "mGenEnergy":
 *             warnings.warn( "EMTree: Expected branch mGenEnergy does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenEnergy")
 *         else:
 */
  __pyx_tuple__302 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mGenEnerg, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__302)) __PYX_ERR(0, 4343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__302);
  __Pyx_GIVEREF(__pyx_tuple__302);

  /* "EMTree.pyx":4352
 *         #if not self.mGenEta_branch and "mGenEta" not in self.complained:
 *         if not self.mGenEta_branch and "mGenEta":
 *             warnings.warn( "EMTree: Expected branch mGenEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenEta")
 *         else:
 */
  __pyx_tuple__303 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mGenEta_d, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__303)) __PYX_ERR(0, 4352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__303);
  __Pyx_GIVEREF(__pyx_tuple__303);

  /* "EMTree.pyx":4361
 *         #if not self.mGenIsPrompt_branch and "mGenIsPrompt" not in self.complained:
 *         if not self.mGenIsPrompt_branch and "mGenIsPrompt":
 *             warnings.warn( "EMTree: Expected branch mGenIsPrompt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenIsPrompt")
 *         else:
 */
  __pyx_tuple__304 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mGenIsPro, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__304)) __PYX_ERR(0, 4361, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__304);
  __Pyx_GIVEREF(__pyx_tuple__304);

  /* "EMTree.pyx":4370
 *         #if not self.mGenMotherPdgId_branch and "mGenMotherPdgId" not in self.complained:
 *         if not self.mGenMotherPdgId_branch and "mGenMotherPdgId":
 *             warnings.warn( "EMTree: Expected branch mGenMotherPdgId does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenMotherPdgId")
 *         else:
 */
  __pyx_tuple__305 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mGenMothe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__305)) __PYX_ERR(0, 4370, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__305);
  __Pyx_GIVEREF(__pyx_tuple__305);

  /* "EMTree.pyx":4379
 *         #if not self.mGenParticle_branch and "mGenParticle" not in self.complained:
 *         if not self.mGenParticle_branch and "mGenParticle":
 *             warnings.warn( "EMTree: Expected branch mGenParticle does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenParticle")
 *         else:
 */
  __pyx_tuple__306 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mGenParti, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__306)) __PYX_ERR(0, 4379, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__306);
  __Pyx_GIVEREF(__pyx_tuple__306);

  /* "EMTree.pyx":4388
 *         #if not self.mGenPdgId_branch and "mGenPdgId" not in self.complained:
 *         if not self.mGenPdgId_branch and "mGenPdgId":
 *             warnings.warn( "EMTree: Expected branch mGenPdgId does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenPdgId")
 *         else:
 */
  __pyx_tuple__307 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mGenPdgId, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__307)) __PYX_ERR(0, 4388, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__307);
  __Pyx_GIVEREF(__pyx_tuple__307);

  /* "EMTree.pyx":4397
 *         #if not self.mGenPhi_branch and "mGenPhi" not in self.complained:
 *         if not self.mGenPhi_branch and "mGenPhi":
 *             warnings.warn( "EMTree: Expected branch mGenPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenPhi")
 *         else:
 */
  __pyx_tuple__308 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mGenPhi_d, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__308)) __PYX_ERR(0, 4397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__308);
  __Pyx_GIVEREF(__pyx_tuple__308);

  /* "EMTree.pyx":4406
 *         #if not self.mGenPrompt_branch and "mGenPrompt" not in self.complained:
 *         if not self.mGenPrompt_branch and "mGenPrompt":
 *             warnings.warn( "EMTree: Expected branch mGenPrompt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenPrompt")
 *         else:
 */
  __pyx_tuple__309 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mGenPromp, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__309)) __PYX_ERR(0, 4406, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__309);
  __Pyx_GIVEREF(__pyx_tuple__309);

  /* "EMTree.pyx":4415
 *         #if not self.mGenPromptFinalState_branch and "mGenPromptFinalState" not in self.complained:
 *         if not self.mGenPromptFinalState_branch and "mGenPromptFinalState":
 *             warnings.warn( "EMTree: Expected branch mGenPromptFinalState does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenPromptFinalState")
 *         else:
 */
  __pyx_tuple__310 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mGenPromp_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__310)) __PYX_ERR(0, 4415, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__310);
  __Pyx_GIVEREF(__pyx_tuple__310);

  /* "EMTree.pyx":4424
 *         #if not self.mGenPromptTauDecay_branch and "mGenPromptTauDecay" not in self.complained:
 *         if not self.mGenPromptTauDecay_branch and "mGenPromptTauDecay":
 *             warnings.warn( "EMTree: Expected branch mGenPromptTauDecay does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenPromptTauDecay")
 *         else:
 */
  __pyx_tuple__311 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mGenPromp_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__311)) __PYX_ERR(0, 4424, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__311);
  __Pyx_GIVEREF(__pyx_tuple__311);

  /* "EMTree.pyx":4433
 *         #if not self.mGenPt_branch and "mGenPt" not in self.complained:
 *         if not self.mGenPt_branch and "mGenPt":
 *             warnings.warn( "EMTree: Expected branch mGenPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenPt")
 *         else:
 */
  __pyx_tuple__312 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mGenPt_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__312)) __PYX_ERR(0, 4433, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__312);
  __Pyx_GIVEREF(__pyx_tuple__312);

  /* "EMTree.pyx":4442
 *         #if not self.mGenTauDecay_branch and "mGenTauDecay" not in self.complained:
 *         if not self.mGenTauDecay_branch and "mGenTauDecay":
 *             warnings.warn( "EMTree: Expected branch mGenTauDecay does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenTauDecay")
 *         else:
 */
  __pyx_tuple__313 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mGenTauDe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__313)) __PYX_ERR(0, 4442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__313);
  __Pyx_GIVEREF(__pyx_tuple__313);

  /* "EMTree.pyx":4451
 *         #if not self.mGenVZ_branch and "mGenVZ" not in self.complained:
 *         if not self.mGenVZ_branch and "mGenVZ":
 *             warnings.warn( "EMTree: Expected branch mGenVZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenVZ")
 *         else:
 */
  __pyx_tuple__314 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mGenVZ_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__314)) __PYX_ERR(0, 4451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__314);
  __Pyx_GIVEREF(__pyx_tuple__314);

  /* "EMTree.pyx":4460
 *         #if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch" not in self.complained:
 *         if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch":
 *             warnings.warn( "EMTree: Expected branch mGenVtxPVMatch does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenVtxPVMatch")
 *         else:
 */
  __pyx_tuple__315 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mGenVtxPV, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__315)) __PYX_ERR(0, 4460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__315);
  __Pyx_GIVEREF(__pyx_tuple__315);

  /* "EMTree.pyx":4469
 *         #if not self.mIP3D_branch and "mIP3D" not in self.complained:
 *         if not self.mIP3D_branch and "mIP3D":
 *             warnings.warn( "EMTree: Expected branch mIP3D does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIP3D")
 *         else:
 */
  __pyx_tuple__316 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mIP3D_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__316)) __PYX_ERR(0, 4469, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__316);
  __Pyx_GIVEREF(__pyx_tuple__316);

  /* "EMTree.pyx":4478
 *         #if not self.mIP3DErr_branch and "mIP3DErr" not in self.complained:
 *         if not self.mIP3DErr_branch and "mIP3DErr":
 *             warnings.warn( "EMTree: Expected branch mIP3DErr does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIP3DErr")
 *         else:
 */
  __pyx_tuple__317 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mIP3DErr, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__317)) __PYX_ERR(0, 4478, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__317);
  __Pyx_GIVEREF(__pyx_tuple__317);

  /* "EMTree.pyx":4487
 *         #if not self.mIsGlobal_branch and "mIsGlobal" not in self.complained:
 *         if not self.mIsGlobal_branch and "mIsGlobal":
 *             warnings.warn( "EMTree: Expected branch mIsGlobal does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIsGlobal")
 *         else:
 */
  __pyx_tuple__318 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mIsGlobal, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__318)) __PYX_ERR(0, 4487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__318);
  __Pyx_GIVEREF(__pyx_tuple__318);

  /* "EMTree.pyx":4496
 *         #if not self.mIsPFMuon_branch and "mIsPFMuon" not in self.complained:
 *         if not self.mIsPFMuon_branch and "mIsPFMuon":
 *             warnings.warn( "EMTree: Expected branch mIsPFMuon does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIsPFMuon")
 *         else:
 */
  __pyx_tuple__319 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mIsPFMuon, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__319)) __PYX_ERR(0, 4496, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__319);
  __Pyx_GIVEREF(__pyx_tuple__319);

  /* "EMTree.pyx":4505
 *         #if not self.mIsTracker_branch and "mIsTracker" not in self.complained:
 *         if not self.mIsTracker_branch and "mIsTracker":
 *             warnings.warn( "EMTree: Expected branch mIsTracker does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIsTracker")
 *         else:
 */
  __pyx_tuple__320 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mIsTracke, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__320)) __PYX_ERR(0, 4505, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__320);
  __Pyx_GIVEREF(__pyx_tuple__320);

  /* "EMTree.pyx":4514
 *         #if not self.mJetArea_branch and "mJetArea" not in self.complained:
 *         if not self.mJetArea_branch and "mJetArea":
 *             warnings.warn( "EMTree: Expected branch mJetArea does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetArea")
 *         else:
 */
  __pyx_tuple__321 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mJetArea, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__321)) __PYX_ERR(0, 4514, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__321);
  __Pyx_GIVEREF(__pyx_tuple__321);

  /* "EMTree.pyx":4523
 *         #if not self.mJetBtag_branch and "mJetBtag" not in self.complained:
 *         if not self.mJetBtag_branch and "mJetBtag":
 *             warnings.warn( "EMTree: Expected branch mJetBtag does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetBtag")
 *         else:
 */
  __pyx_tuple__322 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mJetBtag, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__322)) __PYX_ERR(0, 4523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__322);
  __Pyx_GIVEREF(__pyx_tuple__322);

  /* "EMTree.pyx":4532
 *         #if not self.mJetDR_branch and "mJetDR" not in self.complained:
 *         if not self.mJetDR_branch and "mJetDR":
 *             warnings.warn( "EMTree: Expected branch mJetDR does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetDR")
 *         else:
 */
  __pyx_tuple__323 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mJetDR_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__323)) __PYX_ERR(0, 4532, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__323);
  __Pyx_GIVEREF(__pyx_tuple__323);

  /* "EMTree.pyx":4541
 *         #if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment" not in self.complained:
 *         if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment":
 *             warnings.warn( "EMTree: Expected branch mJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetEtaEtaMoment")
 *         else:
 */
  __pyx_tuple__324 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mJetEtaEt, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__324)) __PYX_ERR(0, 4541, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__324);
  __Pyx_GIVEREF(__pyx_tuple__324);

  /* "EMTree.pyx":4550
 *         #if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment" not in self.complained:
 *         if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment":
 *             warnings.warn( "EMTree: Expected branch mJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetEtaPhiMoment")
 *         else:
 */
  __pyx_tuple__325 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mJetEtaPh, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__325)) __PYX_ERR(0, 4550, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__325);
  __Pyx_GIVEREF(__pyx_tuple__325);

  /* "EMTree.pyx":4559
 *         #if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread" not in self.complained:
 *         if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread":
 *             warnings.warn( "EMTree: Expected branch mJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetEtaPhiSpread")
 *         else:
 */
  __pyx_tuple__326 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mJetEtaPh_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__326)) __PYX_ERR(0, 4559, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__326);
  __Pyx_GIVEREF(__pyx_tuple__326);

  /* "EMTree.pyx":4568
 *         #if not self.mJetHadronFlavour_branch and "mJetHadronFlavour" not in self.complained:
 *         if not self.mJetHadronFlavour_branch and "mJetHadronFlavour":
 *             warnings.warn( "EMTree: Expected branch mJetHadronFlavour does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetHadronFlavour")
 *         else:
 */
  __pyx_tuple__327 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mJetHadro, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__327)) __PYX_ERR(0, 4568, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__327);
  __Pyx_GIVEREF(__pyx_tuple__327);

  /* "EMTree.pyx":4577
 *         #if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag" not in self.complained:
 *         if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag":
 *             warnings.warn( "EMTree: Expected branch mJetPFCISVBtag does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetPFCISVBtag")
 *         else:
 */
  __pyx_tuple__328 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mJetPFCIS, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__328)) __PYX_ERR(0, 4577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__328);
  __Pyx_GIVEREF(__pyx_tuple__328);

  /* "EMTree.pyx":4586
 *         #if not self.mJetPartonFlavour_branch and "mJetPartonFlavour" not in self.complained:
 *         if not self.mJetPartonFlavour_branch and "mJetPartonFlavour":
 *             warnings.warn( "EMTree: Expected branch mJetPartonFlavour does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetPartonFlavour")
 *         else:
 */
  __pyx_tuple__329 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mJetParto, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__329)) __PYX_ERR(0, 4586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__329);
  __Pyx_GIVEREF(__pyx_tuple__329);

  /* "EMTree.pyx":4595
 *         #if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment" not in self.complained:
 *         if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment":
 *             warnings.warn( "EMTree: Expected branch mJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetPhiPhiMoment")
 *         else:
 */
  __pyx_tuple__330 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mJetPhiPh, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__330)) __PYX_ERR(0, 4595, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__330);
  __Pyx_GIVEREF(__pyx_tuple__330);

  /* "EMTree.pyx":4604
 *         #if not self.mJetPt_branch and "mJetPt" not in self.complained:
 *         if not self.mJetPt_branch and "mJetPt":
 *             warnings.warn( "EMTree: Expected branch mJetPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetPt")
 *         else:
 */
  __pyx_tuple__331 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mJetPt_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__331)) __PYX_ERR(0, 4604, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__331);
  __Pyx_GIVEREF(__pyx_tuple__331);

  /* "EMTree.pyx":4613
 *         #if not self.mMass_branch and "mMass" not in self.complained:
 *         if not self.mMass_branch and "mMass":
 *             warnings.warn( "EMTree: Expected branch mMass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMass")
 *         else:
 */
  __pyx_tuple__332 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mMass_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__332)) __PYX_ERR(0, 4613, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__332);
  __Pyx_GIVEREF(__pyx_tuple__332);

  /* "EMTree.pyx":4622
 *         #if not self.mMatchEmbeddedFilterMu24_branch and "mMatchEmbeddedFilterMu24" not in self.complained:
 *         if not self.mMatchEmbeddedFilterMu24_branch and "mMatchEmbeddedFilterMu24":
 *             warnings.warn( "EMTree: Expected branch mMatchEmbeddedFilterMu24 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchEmbeddedFilterMu24")
 *         else:
 */
  __pyx_tuple__333 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mMatchEmb, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__333)) __PYX_ERR(0, 4622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__333);
  __Pyx_GIVEREF(__pyx_tuple__333);

  /* "EMTree.pyx":4631
 *         #if not self.mMatchEmbeddedFilterMu27_branch and "mMatchEmbeddedFilterMu27" not in self.complained:
 *         if not self.mMatchEmbeddedFilterMu27_branch and "mMatchEmbeddedFilterMu27":
 *             warnings.warn( "EMTree: Expected branch mMatchEmbeddedFilterMu27 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchEmbeddedFilterMu27")
 *         else:
 */
  __pyx_tuple__334 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mMatchEmb_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__334)) __PYX_ERR(0, 4631, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__334);
  __Pyx_GIVEREF(__pyx_tuple__334);

  /* "EMTree.pyx":4640
 *         #if not self.mMatchesIsoMu24Filter_branch and "mMatchesIsoMu24Filter" not in self.complained:
 *         if not self.mMatchesIsoMu24Filter_branch and "mMatchesIsoMu24Filter":
 *             warnings.warn( "EMTree: Expected branch mMatchesIsoMu24Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesIsoMu24Filter")
 *         else:
 */
  __pyx_tuple__335 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mMatchesI, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__335)) __PYX_ERR(0, 4640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__335);
  __Pyx_GIVEREF(__pyx_tuple__335);

  /* "EMTree.pyx":4649
 *         #if not self.mMatchesIsoMu24Path_branch and "mMatchesIsoMu24Path" not in self.complained:
 *         if not self.mMatchesIsoMu24Path_branch and "mMatchesIsoMu24Path":
 *             warnings.warn( "EMTree: Expected branch mMatchesIsoMu24Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesIsoMu24Path")
 *         else:
 */
  __pyx_tuple__336 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mMatchesI_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__336)) __PYX_ERR(0, 4649, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__336);
  __Pyx_GIVEREF(__pyx_tuple__336);

  /* "EMTree.pyx":4658
 *         #if not self.mMatchesIsoMu27Filter_branch and "mMatchesIsoMu27Filter" not in self.complained:
 *         if not self.mMatchesIsoMu27Filter_branch and "mMatchesIsoMu27Filter":
 *             warnings.warn( "EMTree: Expected branch mMatchesIsoMu27Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesIsoMu27Filter")
 *         else:
 */
  __pyx_tuple__337 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mMatchesI_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__337)) __PYX_ERR(0, 4658, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__337);
  __Pyx_GIVEREF(__pyx_tuple__337);

  /* "EMTree.pyx":4667
 *         #if not self.mMatchesIsoMu27Path_branch and "mMatchesIsoMu27Path" not in self.complained:
 *         if not self.mMatchesIsoMu27Path_branch and "mMatchesIsoMu27Path":
 *             warnings.warn( "EMTree: Expected branch mMatchesIsoMu27Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesIsoMu27Path")
 *         else:
 */
  __pyx_tuple__338 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mMatchesI_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__338)) __PYX_ERR(0, 4667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__338);
  __Pyx_GIVEREF(__pyx_tuple__338);

  /* "EMTree.pyx":4676
 *         #if not self.mMatchesMu23e12DZFilter_branch and "mMatchesMu23e12DZFilter" not in self.complained:
 *         if not self.mMatchesMu23e12DZFilter_branch and "mMatchesMu23e12DZFilter":
 *             warnings.warn( "EMTree: Expected branch mMatchesMu23e12DZFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu23e12DZFilter")
 *         else:
 */
  __pyx_tuple__339 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mMatchesM, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__339)) __PYX_ERR(0, 4676, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__339);
  __Pyx_GIVEREF(__pyx_tuple__339);

  /* "EMTree.pyx":4685
 *         #if not self.mMatchesMu23e12DZPath_branch and "mMatchesMu23e12DZPath" not in self.complained:
 *         if not self.mMatchesMu23e12DZPath_branch and "mMatchesMu23e12DZPath":
 *             warnings.warn( "EMTree: Expected branch mMatchesMu23e12DZPath does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu23e12DZPath")
 *         else:
 */
  __pyx_tuple__340 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mMatchesM_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__340)) __PYX_ERR(0, 4685, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__340);
  __Pyx_GIVEREF(__pyx_tuple__340);

  /* "EMTree.pyx":4694
 *         #if not self.mMatchesMu23e12Filter_branch and "mMatchesMu23e12Filter" not in self.complained:
 *         if not self.mMatchesMu23e12Filter_branch and "mMatchesMu23e12Filter":
 *             warnings.warn( "EMTree: Expected branch mMatchesMu23e12Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu23e12Filter")
 *         else:
 */
  __pyx_tuple__341 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mMatchesM_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__341)) __PYX_ERR(0, 4694, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__341);
  __Pyx_GIVEREF(__pyx_tuple__341);

  /* "EMTree.pyx":4703
 *         #if not self.mMatchesMu23e12Path_branch and "mMatchesMu23e12Path" not in self.complained:
 *         if not self.mMatchesMu23e12Path_branch and "mMatchesMu23e12Path":
 *             warnings.warn( "EMTree: Expected branch mMatchesMu23e12Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu23e12Path")
 *         else:
 */
  __pyx_tuple__342 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mMatchesM_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__342)) __PYX_ERR(0, 4703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__342);
  __Pyx_GIVEREF(__pyx_tuple__342);

  /* "EMTree.pyx":4712
 *         #if not self.mMatchesMu8e23DZFilter_branch and "mMatchesMu8e23DZFilter" not in self.complained:
 *         if not self.mMatchesMu8e23DZFilter_branch and "mMatchesMu8e23DZFilter":
 *             warnings.warn( "EMTree: Expected branch mMatchesMu8e23DZFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu8e23DZFilter")
 *         else:
 */
  __pyx_tuple__343 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mMatchesM_5, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__343)) __PYX_ERR(0, 4712, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__343);
  __Pyx_GIVEREF(__pyx_tuple__343);

  /* "EMTree.pyx":4721
 *         #if not self.mMatchesMu8e23DZPath_branch and "mMatchesMu8e23DZPath" not in self.complained:
 *         if not self.mMatchesMu8e23DZPath_branch and "mMatchesMu8e23DZPath":
 *             warnings.warn( "EMTree: Expected branch mMatchesMu8e23DZPath does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu8e23DZPath")
 *         else:
 */
  __pyx_tuple__344 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mMatchesM_6, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__344)) __PYX_ERR(0, 4721, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__344);
  __Pyx_GIVEREF(__pyx_tuple__344);

  /* "EMTree.pyx":4730
 *         #if not self.mMatchesMu8e23Filter_branch and "mMatchesMu8e23Filter" not in self.complained:
 *         if not self.mMatchesMu8e23Filter_branch and "mMatchesMu8e23Filter":
 *             warnings.warn( "EMTree: Expected branch mMatchesMu8e23Filter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu8e23Filter")
 *         else:
 */
  __pyx_tuple__345 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mMatchesM_7, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__345)) __PYX_ERR(0, 4730, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__345);
  __Pyx_GIVEREF(__pyx_tuple__345);

  /* "EMTree.pyx":4739
 *         #if not self.mMatchesMu8e23Path_branch and "mMatchesMu8e23Path" not in self.complained:
 *         if not self.mMatchesMu8e23Path_branch and "mMatchesMu8e23Path":
 *             warnings.warn( "EMTree: Expected branch mMatchesMu8e23Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu8e23Path")
 *         else:
 */
  __pyx_tuple__346 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mMatchesM_8, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__346)) __PYX_ERR(0, 4739, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__346);
  __Pyx_GIVEREF(__pyx_tuple__346);

  /* "EMTree.pyx":4748
 *         #if not self.mPFIDLoose_branch and "mPFIDLoose" not in self.complained:
 *         if not self.mPFIDLoose_branch and "mPFIDLoose":
 *             warnings.warn( "EMTree: Expected branch mPFIDLoose does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFIDLoose")
 *         else:
 */
  __pyx_tuple__347 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mPFIDLoos, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__347)) __PYX_ERR(0, 4748, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__347);
  __Pyx_GIVEREF(__pyx_tuple__347);

  /* "EMTree.pyx":4757
 *         #if not self.mPFIDMedium_branch and "mPFIDMedium" not in self.complained:
 *         if not self.mPFIDMedium_branch and "mPFIDMedium":
 *             warnings.warn( "EMTree: Expected branch mPFIDMedium does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFIDMedium")
 *         else:
 */
  __pyx_tuple__348 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mPFIDMedi, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__348)) __PYX_ERR(0, 4757, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__348);
  __Pyx_GIVEREF(__pyx_tuple__348);

  /* "EMTree.pyx":4766
 *         #if not self.mPFIDTight_branch and "mPFIDTight" not in self.complained:
 *         if not self.mPFIDTight_branch and "mPFIDTight":
 *             warnings.warn( "EMTree: Expected branch mPFIDTight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFIDTight")
 *         else:
 */
  __pyx_tuple__349 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mPFIDTigh, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__349)) __PYX_ERR(0, 4766, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__349);
  __Pyx_GIVEREF(__pyx_tuple__349);

  /* "EMTree.pyx":4775
 *         #if not self.mPVDXY_branch and "mPVDXY" not in self.complained:
 *         if not self.mPVDXY_branch and "mPVDXY":
 *             warnings.warn( "EMTree: Expected branch mPVDXY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPVDXY")
 *         else:
 */
  __pyx_tuple__350 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mPVDXY_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__350)) __PYX_ERR(0, 4775, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__350);
  __Pyx_GIVEREF(__pyx_tuple__350);

  /* "EMTree.pyx":4784
 *         #if not self.mPVDZ_branch and "mPVDZ" not in self.complained:
 *         if not self.mPVDZ_branch and "mPVDZ":
 *             warnings.warn( "EMTree: Expected branch mPVDZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPVDZ")
 *         else:
 */
  __pyx_tuple__351 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mPVDZ_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__351)) __PYX_ERR(0, 4784, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__351);
  __Pyx_GIVEREF(__pyx_tuple__351);

  /* "EMTree.pyx":4793
 *         #if not self.mPhi_branch and "mPhi" not in self.complained:
 *         if not self.mPhi_branch and "mPhi":
 *             warnings.warn( "EMTree: Expected branch mPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPhi")
 *         else:
 */
  __pyx_tuple__352 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mPhi_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__352)) __PYX_ERR(0, 4793, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__352);
  __Pyx_GIVEREF(__pyx_tuple__352);

  /* "EMTree.pyx":4802
 *         #if not self.mPt_branch and "mPt" not in self.complained:
 *         if not self.mPt_branch and "mPt":
 *             warnings.warn( "EMTree: Expected branch mPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPt")
 *         else:
 */
  __pyx_tuple__353 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mPt_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__353)) __PYX_ERR(0, 4802, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__353);
  __Pyx_GIVEREF(__pyx_tuple__353);

  /* "EMTree.pyx":4811
 *         #if not self.mRelPFIsoDBDefaultR04_branch and "mRelPFIsoDBDefaultR04" not in self.complained:
 *         if not self.mRelPFIsoDBDefaultR04_branch and "mRelPFIsoDBDefaultR04":
 *             warnings.warn( "EMTree: Expected branch mRelPFIsoDBDefaultR04 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mRelPFIsoDBDefaultR04")
 *         else:
 */
  __pyx_tuple__354 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mRelPFIso, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__354)) __PYX_ERR(0, 4811, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__354);
  __Pyx_GIVEREF(__pyx_tuple__354);

  /* "EMTree.pyx":4820
 *         #if not self.mSIP2D_branch and "mSIP2D" not in self.complained:
 *         if not self.mSIP2D_branch and "mSIP2D":
 *             warnings.warn( "EMTree: Expected branch mSIP2D does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mSIP2D")
 *         else:
 */
  __pyx_tuple__355 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mSIP2D_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__355)) __PYX_ERR(0, 4820, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__355);
  __Pyx_GIVEREF(__pyx_tuple__355);

  /* "EMTree.pyx":4829
 *         #if not self.mSIP3D_branch and "mSIP3D" not in self.complained:
 *         if not self.mSIP3D_branch and "mSIP3D":
 *             warnings.warn( "EMTree: Expected branch mSIP3D does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mSIP3D")
 *         else:
 */
  __pyx_tuple__356 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mSIP3D_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__356)) __PYX_ERR(0, 4829, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__356);
  __Pyx_GIVEREF(__pyx_tuple__356);

  /* "EMTree.pyx":4838
 *         #if not self.mVZ_branch and "mVZ" not in self.complained:
 *         if not self.mVZ_branch and "mVZ":
 *             warnings.warn( "EMTree: Expected branch mVZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mVZ")
 *         else:
 */
  __pyx_tuple__357 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mVZ_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__357)) __PYX_ERR(0, 4838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__357);
  __Pyx_GIVEREF(__pyx_tuple__357);

  /* "EMTree.pyx":4847
 *         #if not self.mZTTGenMatching_branch and "mZTTGenMatching" not in self.complained:
 *         if not self.mZTTGenMatching_branch and "mZTTGenMatching":
 *             warnings.warn( "EMTree: Expected branch mZTTGenMatching does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mZTTGenMatching")
 *         else:
 */
  __pyx_tuple__358 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mZTTGenMa, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__358)) __PYX_ERR(0, 4847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__358);
  __Pyx_GIVEREF(__pyx_tuple__358);

  /* "EMTree.pyx":4856
 *         #if not self.mu12e23DZPass_branch and "mu12e23DZPass" not in self.complained:
 *         if not self.mu12e23DZPass_branch and "mu12e23DZPass":
 *             warnings.warn( "EMTree: Expected branch mu12e23DZPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu12e23DZPass")
 *         else:
 */
  __pyx_tuple__359 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mu12e23DZ, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__359)) __PYX_ERR(0, 4856, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__359);
  __Pyx_GIVEREF(__pyx_tuple__359);

  /* "EMTree.pyx":4865
 *         #if not self.mu12e23Pass_branch and "mu12e23Pass" not in self.complained:
 *         if not self.mu12e23Pass_branch and "mu12e23Pass":
 *             warnings.warn( "EMTree: Expected branch mu12e23Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu12e23Pass")
 *         else:
 */
  __pyx_tuple__360 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mu12e23Pa, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__360)) __PYX_ERR(0, 4865, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__360);
  __Pyx_GIVEREF(__pyx_tuple__360);

  /* "EMTree.pyx":4874
 *         #if not self.mu23e12DZPass_branch and "mu23e12DZPass" not in self.complained:
 *         if not self.mu23e12DZPass_branch and "mu23e12DZPass":
 *             warnings.warn( "EMTree: Expected branch mu23e12DZPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu23e12DZPass")
 *         else:
 */
  __pyx_tuple__361 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mu23e12DZ, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__361)) __PYX_ERR(0, 4874, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__361);
  __Pyx_GIVEREF(__pyx_tuple__361);

  /* "EMTree.pyx":4883
 *         #if not self.mu23e12Pass_branch and "mu23e12Pass" not in self.complained:
 *         if not self.mu23e12Pass_branch and "mu23e12Pass":
 *             warnings.warn( "EMTree: Expected branch mu23e12Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu23e12Pass")
 *         else:
 */
  __pyx_tuple__362 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mu23e12Pa, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__362)) __PYX_ERR(0, 4883, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__362);
  __Pyx_GIVEREF(__pyx_tuple__362);

  /* "EMTree.pyx":4892
 *         #if not self.mu8e23DZPass_branch and "mu8e23DZPass" not in self.complained:
 *         if not self.mu8e23DZPass_branch and "mu8e23DZPass":
 *             warnings.warn( "EMTree: Expected branch mu8e23DZPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu8e23DZPass")
 *         else:
 */
  __pyx_tuple__363 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mu8e23DZP, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__363)) __PYX_ERR(0, 4892, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__363);
  __Pyx_GIVEREF(__pyx_tuple__363);

  /* "EMTree.pyx":4901
 *         #if not self.mu8e23Pass_branch and "mu8e23Pass" not in self.complained:
 *         if not self.mu8e23Pass_branch and "mu8e23Pass":
 *             warnings.warn( "EMTree: Expected branch mu8e23Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu8e23Pass")
 *         else:
 */
  __pyx_tuple__364 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_mu8e23Pas, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__364)) __PYX_ERR(0, 4901, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__364);
  __Pyx_GIVEREF(__pyx_tuple__364);

  /* "EMTree.pyx":4910
 *         #if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10" not in self.complained:
 *         if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10":
 *             warnings.warn( "EMTree: Expected branch muGlbIsoVetoPt10 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muGlbIsoVetoPt10")
 *         else:
 */
  __pyx_tuple__365 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_muGlbIsoV, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__365)) __PYX_ERR(0, 4910, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__365);
  __Pyx_GIVEREF(__pyx_tuple__365);

  /* "EMTree.pyx":4919
 *         #if not self.muVetoZTTp001dxyz_branch and "muVetoZTTp001dxyz" not in self.complained:
 *         if not self.muVetoZTTp001dxyz_branch and "muVetoZTTp001dxyz":
 *             warnings.warn( "EMTree: Expected branch muVetoZTTp001dxyz does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muVetoZTTp001dxyz")
 *         else:
 */
  __pyx_tuple__366 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_muVetoZTT, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__366)) __PYX_ERR(0, 4919, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__366);
  __Pyx_GIVEREF(__pyx_tuple__366);

  /* "EMTree.pyx":4928
 *         #if not self.nTruePU_branch and "nTruePU" not in self.complained:
 *         if not self.nTruePU_branch and "nTruePU":
 *             warnings.warn( "EMTree: Expected branch nTruePU does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("nTruePU")
 *         else:
 */
  __pyx_tuple__367 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_nTruePU_d, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__367)) __PYX_ERR(0, 4928, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__367);
  __Pyx_GIVEREF(__pyx_tuple__367);

  /* "EMTree.pyx":4937
 *         #if not self.npNLO_branch and "npNLO" not in self.complained:
 *         if not self.npNLO_branch and "npNLO":
 *             warnings.warn( "EMTree: Expected branch npNLO does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("npNLO")
 *         else:
 */
  __pyx_tuple__368 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_npNLO_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__368)) __PYX_ERR(0, 4937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__368);
  __Pyx_GIVEREF(__pyx_tuple__368);

  /* "EMTree.pyx":4946
 *         #if not self.numGenJets_branch and "numGenJets" not in self.complained:
 *         if not self.numGenJets_branch and "numGenJets":
 *             warnings.warn( "EMTree: Expected branch numGenJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("numGenJets")
 *         else:
 */
  __pyx_tuple__369 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_numGenJet, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__369)) __PYX_ERR(0, 4946, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__369);
  __Pyx_GIVEREF(__pyx_tuple__369);

  /* "EMTree.pyx":4955
 *         #if not self.nvtx_branch and "nvtx" not in self.complained:
 *         if not self.nvtx_branch and "nvtx":
 *             warnings.warn( "EMTree: Expected branch nvtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("nvtx")
 *         else:
 */
  __pyx_tuple__370 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_nvtx_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__370)) __PYX_ERR(0, 4955, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__370);
  __Pyx_GIVEREF(__pyx_tuple__370);

  /* "EMTree.pyx":4964
 *         #if not self.prefiring_weight_branch and "prefiring_weight" not in self.complained:
 *         if not self.prefiring_weight_branch and "prefiring_weight":
 *             warnings.warn( "EMTree: Expected branch prefiring_weight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("prefiring_weight")
 *         else:
 */
  __pyx_tuple__371 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_prefiring, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__371)) __PYX_ERR(0, 4964, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__371);
  __Pyx_GIVEREF(__pyx_tuple__371);

  /* "EMTree.pyx":4973
 *         #if not self.prefiring_weight_down_branch and "prefiring_weight_down" not in self.complained:
 *         if not self.prefiring_weight_down_branch and "prefiring_weight_down":
 *             warnings.warn( "EMTree: Expected branch prefiring_weight_down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("prefiring_weight_down")
 *         else:
 */
  __pyx_tuple__372 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_prefiring_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__372)) __PYX_ERR(0, 4973, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__372);
  __Pyx_GIVEREF(__pyx_tuple__372);

  /* "EMTree.pyx":4982
 *         #if not self.prefiring_weight_up_branch and "prefiring_weight_up" not in self.complained:
 *         if not self.prefiring_weight_up_branch and "prefiring_weight_up":
 *             warnings.warn( "EMTree: Expected branch prefiring_weight_up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("prefiring_weight_up")
 *         else:
 */
  __pyx_tuple__373 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_prefiring_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__373)) __PYX_ERR(0, 4982, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__373);
  __Pyx_GIVEREF(__pyx_tuple__373);

  /* "EMTree.pyx":4991
 *         #if not self.processID_branch and "processID" not in self.complained:
 *         if not self.processID_branch and "processID":
 *             warnings.warn( "EMTree: Expected branch processID does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("processID")
 *         else:
 */
  __pyx_tuple__374 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_processID, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__374)) __PYX_ERR(0, 4991, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__374);
  __Pyx_GIVEREF(__pyx_tuple__374);

  /* "EMTree.pyx":5000
 *         #if not self.puppiMetEt_branch and "puppiMetEt" not in self.complained:
 *         if not self.puppiMetEt_branch and "puppiMetEt":
 *             warnings.warn( "EMTree: Expected branch puppiMetEt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("puppiMetEt")
 *         else:
 */
  __pyx_tuple__375 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_puppiMetE, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__375)) __PYX_ERR(0, 5000, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__375);
  __Pyx_GIVEREF(__pyx_tuple__375);

  /* "EMTree.pyx":5009
 *         #if not self.puppiMetPhi_branch and "puppiMetPhi" not in self.complained:
 *         if not self.puppiMetPhi_branch and "puppiMetPhi":
 *             warnings.warn( "EMTree: Expected branch puppiMetPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("puppiMetPhi")
 *         else:
 */
  __pyx_tuple__376 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_puppiMetP, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__376)) __PYX_ERR(0, 5009, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__376);
  __Pyx_GIVEREF(__pyx_tuple__376);

  /* "EMTree.pyx":5018
 *         #if not self.pvChi2_branch and "pvChi2" not in self.complained:
 *         if not self.pvChi2_branch and "pvChi2":
 *             warnings.warn( "EMTree: Expected branch pvChi2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvChi2")
 *         else:
 */
  __pyx_tuple__377 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_pvChi2_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__377)) __PYX_ERR(0, 5018, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__377);
  __Pyx_GIVEREF(__pyx_tuple__377);

  /* "EMTree.pyx":5027
 *         #if not self.pvDX_branch and "pvDX" not in self.complained:
 *         if not self.pvDX_branch and "pvDX":
 *             warnings.warn( "EMTree: Expected branch pvDX does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvDX")
 *         else:
 */
  __pyx_tuple__378 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_pvDX_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__378)) __PYX_ERR(0, 5027, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__378);
  __Pyx_GIVEREF(__pyx_tuple__378);

  /* "EMTree.pyx":5036
 *         #if not self.pvDY_branch and "pvDY" not in self.complained:
 *         if not self.pvDY_branch and "pvDY":
 *             warnings.warn( "EMTree: Expected branch pvDY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvDY")
 *         else:
 */
  __pyx_tuple__379 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_pvDY_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__379)) __PYX_ERR(0, 5036, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__379);
  __Pyx_GIVEREF(__pyx_tuple__379);

  /* "EMTree.pyx":5045
 *         #if not self.pvDZ_branch and "pvDZ" not in self.complained:
 *         if not self.pvDZ_branch and "pvDZ":
 *             warnings.warn( "EMTree: Expected branch pvDZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvDZ")
 *         else:
 */
  __pyx_tuple__380 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_pvDZ_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__380)) __PYX_ERR(0, 5045, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__380);
  __Pyx_GIVEREF(__pyx_tuple__380);

  /* "EMTree.pyx":5054
 *         #if not self.pvIsFake_branch and "pvIsFake" not in self.complained:
 *         if not self.pvIsFake_branch and "pvIsFake":
 *             warnings.warn( "EMTree: Expected branch pvIsFake does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvIsFake")
 *         else:
 */
  __pyx_tuple__381 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_pvIsFake, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__381)) __PYX_ERR(0, 5054, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__381);
  __Pyx_GIVEREF(__pyx_tuple__381);

  /* "EMTree.pyx":5063
 *         #if not self.pvIsValid_branch and "pvIsValid" not in self.complained:
 *         if not self.pvIsValid_branch and "pvIsValid":
 *             warnings.warn( "EMTree: Expected branch pvIsValid does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvIsValid")
 *         else:
 */
  __pyx_tuple__382 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_pvIsValid, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__382)) __PYX_ERR(0, 5063, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__382);
  __Pyx_GIVEREF(__pyx_tuple__382);

  /* "EMTree.pyx":5072
 *         #if not self.pvNormChi2_branch and "pvNormChi2" not in self.complained:
 *         if not self.pvNormChi2_branch and "pvNormChi2":
 *             warnings.warn( "EMTree: Expected branch pvNormChi2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvNormChi2")
 *         else:
 */
  __pyx_tuple__383 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_pvNormChi, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__383)) __PYX_ERR(0, 5072, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__383);
  __Pyx_GIVEREF(__pyx_tuple__383);

  /* "EMTree.pyx":5081
 *         #if not self.pvRho_branch and "pvRho" not in self.complained:
 *         if not self.pvRho_branch and "pvRho":
 *             warnings.warn( "EMTree: Expected branch pvRho does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvRho")
 *         else:
 */
  __pyx_tuple__384 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_pvRho_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__384)) __PYX_ERR(0, 5081, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__384);
  __Pyx_GIVEREF(__pyx_tuple__384);

  /* "EMTree.pyx":5090
 *         #if not self.pvX_branch and "pvX" not in self.complained:
 *         if not self.pvX_branch and "pvX":
 *             warnings.warn( "EMTree: Expected branch pvX does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvX")
 *         else:
 */
  __pyx_tuple__385 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_pvX_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__385)) __PYX_ERR(0, 5090, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__385);
  __Pyx_GIVEREF(__pyx_tuple__385);

  /* "EMTree.pyx":5099
 *         #if not self.pvY_branch and "pvY" not in self.complained:
 *         if not self.pvY_branch and "pvY":
 *             warnings.warn( "EMTree: Expected branch pvY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvY")
 *         else:
 */
  __pyx_tuple__386 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_pvY_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__386)) __PYX_ERR(0, 5099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__386);
  __Pyx_GIVEREF(__pyx_tuple__386);

  /* "EMTree.pyx":5108
 *         #if not self.pvZ_branch and "pvZ" not in self.complained:
 *         if not self.pvZ_branch and "pvZ":
 *             warnings.warn( "EMTree: Expected branch pvZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvZ")
 *         else:
 */
  __pyx_tuple__387 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_pvZ_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__387)) __PYX_ERR(0, 5108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__387);
  __Pyx_GIVEREF(__pyx_tuple__387);

  /* "EMTree.pyx":5117
 *         #if not self.pvndof_branch and "pvndof" not in self.complained:
 *         if not self.pvndof_branch and "pvndof":
 *             warnings.warn( "EMTree: Expected branch pvndof does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvndof")
 *         else:
 */
  __pyx_tuple__388 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_pvndof_do, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__388)) __PYX_ERR(0, 5117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__388);
  __Pyx_GIVEREF(__pyx_tuple__388);

  /* "EMTree.pyx":5126
 *         #if not self.recoilDaught_branch and "recoilDaught" not in self.complained:
 *         if not self.recoilDaught_branch and "recoilDaught":
 *             warnings.warn( "EMTree: Expected branch recoilDaught does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("recoilDaught")
 *         else:
 */
  __pyx_tuple__389 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_recoilDau, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__389)) __PYX_ERR(0, 5126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__389);
  __Pyx_GIVEREF(__pyx_tuple__389);

  /* "EMTree.pyx":5135
 *         #if not self.recoilWithMet_branch and "recoilWithMet" not in self.complained:
 *         if not self.recoilWithMet_branch and "recoilWithMet":
 *             warnings.warn( "EMTree: Expected branch recoilWithMet does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("recoilWithMet")
 *         else:
 */
  __pyx_tuple__390 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_recoilWit, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__390)) __PYX_ERR(0, 5135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__390);
  __Pyx_GIVEREF(__pyx_tuple__390);

  /* "EMTree.pyx":5144
 *         #if not self.rho_branch and "rho" not in self.complained:
 *         if not self.rho_branch and "rho":
 *             warnings.warn( "EMTree: Expected branch rho does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("rho")
 *         else:
 */
  __pyx_tuple__391 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_rho_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__391)) __PYX_ERR(0, 5144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__391);
  __Pyx_GIVEREF(__pyx_tuple__391);

  /* "EMTree.pyx":5153
 *         #if not self.run_branch and "run" not in self.complained:
 *         if not self.run_branch and "run":
 *             warnings.warn( "EMTree: Expected branch run does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("run")
 *         else:
 */
  __pyx_tuple__392 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_run_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__392)) __PYX_ERR(0, 5153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__392);
  __Pyx_GIVEREF(__pyx_tuple__392);

  /* "EMTree.pyx":5162
 *         #if not self.singleE25eta2p1TightPass_branch and "singleE25eta2p1TightPass" not in self.complained:
 *         if not self.singleE25eta2p1TightPass_branch and "singleE25eta2p1TightPass":
 *             warnings.warn( "EMTree: Expected branch singleE25eta2p1TightPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleE25eta2p1TightPass")
 *         else:
 */
  __pyx_tuple__393 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_singleE25, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__393)) __PYX_ERR(0, 5162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__393);
  __Pyx_GIVEREF(__pyx_tuple__393);

  /* "EMTree.pyx":5171
 *         #if not self.tauVetoPt20LooseMVALTVtx_branch and "tauVetoPt20LooseMVALTVtx" not in self.complained:
 *         if not self.tauVetoPt20LooseMVALTVtx_branch and "tauVetoPt20LooseMVALTVtx":
 *             warnings.warn( "EMTree: Expected branch tauVetoPt20LooseMVALTVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tauVetoPt20LooseMVALTVtx")
 *         else:
 */
  __pyx_tuple__394 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_tauVetoPt, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__394)) __PYX_ERR(0, 5171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__394);
  __Pyx_GIVEREF(__pyx_tuple__394);

  /* "EMTree.pyx":5180
 *         #if not self.tauVetoPtDeepVtx_branch and "tauVetoPtDeepVtx" not in self.complained:
 *         if not self.tauVetoPtDeepVtx_branch and "tauVetoPtDeepVtx":
 *             warnings.warn( "EMTree: Expected branch tauVetoPtDeepVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tauVetoPtDeepVtx")
 *         else:
 */
  __pyx_tuple__395 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_tauVetoPt_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__395)) __PYX_ERR(0, 5180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__395);
  __Pyx_GIVEREF(__pyx_tuple__395);

  /* "EMTree.pyx":5189
 *         #if not self.topQuarkPt1_branch and "topQuarkPt1" not in self.complained:
 *         if not self.topQuarkPt1_branch and "topQuarkPt1":
 *             warnings.warn( "EMTree: Expected branch topQuarkPt1 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("topQuarkPt1")
 *         else:
 */
  __pyx_tuple__396 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_topQuarkP, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__396)) __PYX_ERR(0, 5189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__396);
  __Pyx_GIVEREF(__pyx_tuple__396);

  /* "EMTree.pyx":5198
 *         #if not self.topQuarkPt2_branch and "topQuarkPt2" not in self.complained:
 *         if not self.topQuarkPt2_branch and "topQuarkPt2":
 *             warnings.warn( "EMTree: Expected branch topQuarkPt2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("topQuarkPt2")
 *         else:
 */
  __pyx_tuple__397 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_topQuarkP_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__397)) __PYX_ERR(0, 5198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__397);
  __Pyx_GIVEREF(__pyx_tuple__397);

  /* "EMTree.pyx":5207
 *         #if not self.type1_pfMetEt_branch and "type1_pfMetEt" not in self.complained:
 *         if not self.type1_pfMetEt_branch and "type1_pfMetEt":
 *             warnings.warn( "EMTree: Expected branch type1_pfMetEt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMetEt")
 *         else:
 */
  __pyx_tuple__398 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__398)) __PYX_ERR(0, 5207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__398);
  __Pyx_GIVEREF(__pyx_tuple__398);

  /* "EMTree.pyx":5216
 *         #if not self.type1_pfMetPhi_branch and "type1_pfMetPhi" not in self.complained:
 *         if not self.type1_pfMetPhi_branch and "type1_pfMetPhi":
 *             warnings.warn( "EMTree: Expected branch type1_pfMetPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMetPhi")
 *         else:
 */
  __pyx_tuple__399 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__399)) __PYX_ERR(0, 5216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__399);
  __Pyx_GIVEREF(__pyx_tuple__399);

  /* "EMTree.pyx":5225
 *         #if not self.type1_pfMet_shiftedPhi_JERDown_branch and "type1_pfMet_shiftedPhi_JERDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JERDown_branch and "type1_pfMet_shiftedPhi_JERDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JERDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JERDown")
 *         else:
 */
  __pyx_tuple__400 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__400)) __PYX_ERR(0, 5225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__400);
  __Pyx_GIVEREF(__pyx_tuple__400);

  /* "EMTree.pyx":5234
 *         #if not self.type1_pfMet_shiftedPhi_JERUp_branch and "type1_pfMet_shiftedPhi_JERUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JERUp_branch and "type1_pfMet_shiftedPhi_JERUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JERUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JERUp")
 *         else:
 */
  __pyx_tuple__401 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__401)) __PYX_ERR(0, 5234, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__401);
  __Pyx_GIVEREF(__pyx_tuple__401);

  /* "EMTree.pyx":5243
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteDown")
 *         else:
 */
  __pyx_tuple__402 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_5, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__402)) __PYX_ERR(0, 5243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__402);
  __Pyx_GIVEREF(__pyx_tuple__402);

  /* "EMTree.pyx":5252
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteUp")
 *         else:
 */
  __pyx_tuple__403 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_6, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__403)) __PYX_ERR(0, 5252, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__403);
  __Pyx_GIVEREF(__pyx_tuple__403);

  /* "EMTree.pyx":5261
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteyearDown")
 *         else:
 */
  __pyx_tuple__404 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_7, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__404)) __PYX_ERR(0, 5261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__404);
  __Pyx_GIVEREF(__pyx_tuple__404);

  /* "EMTree.pyx":5270
 *         #if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPhi_JetAbsoluteyearUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetAbsoluteyearUp")
 *         else:
 */
  __pyx_tuple__405 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_8, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__405)) __PYX_ERR(0, 5270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__405);
  __Pyx_GIVEREF(__pyx_tuple__405);

  /* "EMTree.pyx":5279
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch and "type1_pfMet_shiftedPhi_JetBBEC1Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1Down_branch and "type1_pfMet_shiftedPhi_JetBBEC1Down":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1Down")
 *         else:
 */
  __pyx_tuple__406 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_9, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__406)) __PYX_ERR(0, 5279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__406);
  __Pyx_GIVEREF(__pyx_tuple__406);

  /* "EMTree.pyx":5288
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch and "type1_pfMet_shiftedPhi_JetBBEC1Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1Up_branch and "type1_pfMet_shiftedPhi_JetBBEC1Up":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1Up")
 *         else:
 */
  __pyx_tuple__407 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_10, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__407)) __PYX_ERR(0, 5288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__407);
  __Pyx_GIVEREF(__pyx_tuple__407);

  /* "EMTree.pyx":5297
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1yearDown")
 *         else:
 */
  __pyx_tuple__408 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_11, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__408)) __PYX_ERR(0, 5297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__408);
  __Pyx_GIVEREF(__pyx_tuple__408);

  /* "EMTree.pyx":5306
 *         #if not self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPhi_JetBBEC1yearUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetBBEC1yearUp")
 *         else:
 */
  __pyx_tuple__409 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_12, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__409)) __PYX_ERR(0, 5306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__409);
  __Pyx_GIVEREF(__pyx_tuple__409);

  /* "EMTree.pyx":5315
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2Down_branch and "type1_pfMet_shiftedPhi_JetEC2Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2Down_branch and "type1_pfMet_shiftedPhi_JetEC2Down":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2Down")
 *         else:
 */
  __pyx_tuple__410 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_13, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__410)) __PYX_ERR(0, 5315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__410);
  __Pyx_GIVEREF(__pyx_tuple__410);

  /* "EMTree.pyx":5324
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2Up_branch and "type1_pfMet_shiftedPhi_JetEC2Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2Up_branch and "type1_pfMet_shiftedPhi_JetEC2Up":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2Up")
 *         else:
 */
  __pyx_tuple__411 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_14, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__411)) __PYX_ERR(0, 5324, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__411);
  __Pyx_GIVEREF(__pyx_tuple__411);

  /* "EMTree.pyx":5333
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch and "type1_pfMet_shiftedPhi_JetEC2yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2yearDown_branch and "type1_pfMet_shiftedPhi_JetEC2yearDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2yearDown")
 *         else:
 */
  __pyx_tuple__412 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_15, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__412)) __PYX_ERR(0, 5333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__412);
  __Pyx_GIVEREF(__pyx_tuple__412);

  /* "EMTree.pyx":5342
 *         #if not self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch and "type1_pfMet_shiftedPhi_JetEC2yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEC2yearUp_branch and "type1_pfMet_shiftedPhi_JetEC2yearUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEC2yearUp")
 *         else:
 */
  __pyx_tuple__413 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_16, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__413)) __PYX_ERR(0, 5342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__413);
  __Pyx_GIVEREF(__pyx_tuple__413);

  /* "EMTree.pyx":5351
 *         #if not self.type1_pfMet_shiftedPhi_JetEnDown_branch and "type1_pfMet_shiftedPhi_JetEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEnDown_branch and "type1_pfMet_shiftedPhi_JetEnDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEnDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEnDown")
 *         else:
 */
  __pyx_tuple__414 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_17, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__414)) __PYX_ERR(0, 5351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__414);
  __Pyx_GIVEREF(__pyx_tuple__414);

  /* "EMTree.pyx":5360
 *         #if not self.type1_pfMet_shiftedPhi_JetEnUp_branch and "type1_pfMet_shiftedPhi_JetEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetEnUp_branch and "type1_pfMet_shiftedPhi_JetEnUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetEnUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetEnUp")
 *         else:
 */
  __pyx_tuple__415 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_18, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__415)) __PYX_ERR(0, 5360, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__415);
  __Pyx_GIVEREF(__pyx_tuple__415);

  /* "EMTree.pyx":5369
 *         #if not self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetFlavorQCDDown")
 *         else:
 */
  __pyx_tuple__416 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_19, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__416)) __PYX_ERR(0, 5369, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__416);
  __Pyx_GIVEREF(__pyx_tuple__416);

  /* "EMTree.pyx":5378
 *         #if not self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPhi_JetFlavorQCDUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetFlavorQCDUp")
 *         else:
 */
  __pyx_tuple__417 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_20, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__417)) __PYX_ERR(0, 5378, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__417);
  __Pyx_GIVEREF(__pyx_tuple__417);

  /* "EMTree.pyx":5387
 *         #if not self.type1_pfMet_shiftedPhi_JetHFDown_branch and "type1_pfMet_shiftedPhi_JetHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFDown_branch and "type1_pfMet_shiftedPhi_JetHFDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFDown")
 *         else:
 */
  __pyx_tuple__418 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_21, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__418)) __PYX_ERR(0, 5387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__418);
  __Pyx_GIVEREF(__pyx_tuple__418);

  /* "EMTree.pyx":5396
 *         #if not self.type1_pfMet_shiftedPhi_JetHFUp_branch and "type1_pfMet_shiftedPhi_JetHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFUp_branch and "type1_pfMet_shiftedPhi_JetHFUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFUp")
 *         else:
 */
  __pyx_tuple__419 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_22, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__419)) __PYX_ERR(0, 5396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__419);
  __Pyx_GIVEREF(__pyx_tuple__419);

  /* "EMTree.pyx":5405
 *         #if not self.type1_pfMet_shiftedPhi_JetHFyearDown_branch and "type1_pfMet_shiftedPhi_JetHFyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFyearDown_branch and "type1_pfMet_shiftedPhi_JetHFyearDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFyearDown")
 *         else:
 */
  __pyx_tuple__420 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_23, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__420)) __PYX_ERR(0, 5405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__420);
  __Pyx_GIVEREF(__pyx_tuple__420);

  /* "EMTree.pyx":5414
 *         #if not self.type1_pfMet_shiftedPhi_JetHFyearUp_branch and "type1_pfMet_shiftedPhi_JetHFyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetHFyearUp_branch and "type1_pfMet_shiftedPhi_JetHFyearUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetHFyearUp")
 *         else:
 */
  __pyx_tuple__421 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_24, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__421)) __PYX_ERR(0, 5414, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__421);
  __Pyx_GIVEREF(__pyx_tuple__421);

  /* "EMTree.pyx":5423
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch and "type1_pfMet_shiftedPhi_JetRelativeBalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeBalDown_branch and "type1_pfMet_shiftedPhi_JetRelativeBalDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeBalDown")
 *         else:
 */
  __pyx_tuple__422 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_25, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__422)) __PYX_ERR(0, 5423, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__422);
  __Pyx_GIVEREF(__pyx_tuple__422);

  /* "EMTree.pyx":5432
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch and "type1_pfMet_shiftedPhi_JetRelativeBalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeBalUp_branch and "type1_pfMet_shiftedPhi_JetRelativeBalUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeBalUp")
 *         else:
 */
  __pyx_tuple__423 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_26, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__423)) __PYX_ERR(0, 5432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__423);
  __Pyx_GIVEREF(__pyx_tuple__423);

  /* "EMTree.pyx":5441
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeSampleDown")
 *         else:
 */
  __pyx_tuple__424 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_27, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__424)) __PYX_ERR(0, 5441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__424);
  __Pyx_GIVEREF(__pyx_tuple__424);

  /* "EMTree.pyx":5450
 *         #if not self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPhi_JetRelativeSampleUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetRelativeSampleUp")
 *         else:
 */
  __pyx_tuple__425 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_28, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__425)) __PYX_ERR(0, 5450, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__425);
  __Pyx_GIVEREF(__pyx_tuple__425);

  /* "EMTree.pyx":5459
 *         #if not self.type1_pfMet_shiftedPhi_JetResDown_branch and "type1_pfMet_shiftedPhi_JetResDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetResDown_branch and "type1_pfMet_shiftedPhi_JetResDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetResDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetResDown")
 *         else:
 */
  __pyx_tuple__426 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_29, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__426)) __PYX_ERR(0, 5459, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__426);
  __Pyx_GIVEREF(__pyx_tuple__426);

  /* "EMTree.pyx":5468
 *         #if not self.type1_pfMet_shiftedPhi_JetResUp_branch and "type1_pfMet_shiftedPhi_JetResUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetResUp_branch and "type1_pfMet_shiftedPhi_JetResUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetResUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetResUp")
 *         else:
 */
  __pyx_tuple__427 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_30, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__427)) __PYX_ERR(0, 5468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__427);
  __Pyx_GIVEREF(__pyx_tuple__427);

  /* "EMTree.pyx":5477
 *         #if not self.type1_pfMet_shiftedPhi_JetTotalDown_branch and "type1_pfMet_shiftedPhi_JetTotalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetTotalDown_branch and "type1_pfMet_shiftedPhi_JetTotalDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetTotalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetTotalDown")
 *         else:
 */
  __pyx_tuple__428 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_31, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__428)) __PYX_ERR(0, 5477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__428);
  __Pyx_GIVEREF(__pyx_tuple__428);

  /* "EMTree.pyx":5486
 *         #if not self.type1_pfMet_shiftedPhi_JetTotalUp_branch and "type1_pfMet_shiftedPhi_JetTotalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_JetTotalUp_branch and "type1_pfMet_shiftedPhi_JetTotalUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_JetTotalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_JetTotalUp")
 *         else:
 */
  __pyx_tuple__429 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_32, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__429)) __PYX_ERR(0, 5486, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__429);
  __Pyx_GIVEREF(__pyx_tuple__429);

  /* "EMTree.pyx":5495
 *         #if not self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch and "type1_pfMet_shiftedPhi_UesCHARGEDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesCHARGEDDown_branch and "type1_pfMet_shiftedPhi_UesCHARGEDDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesCHARGEDDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesCHARGEDDown")
 *         else:
 */
  __pyx_tuple__430 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_33, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__430)) __PYX_ERR(0, 5495, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__430);
  __Pyx_GIVEREF(__pyx_tuple__430);

  /* "EMTree.pyx":5504
 *         #if not self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch and "type1_pfMet_shiftedPhi_UesCHARGEDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesCHARGEDUp_branch and "type1_pfMet_shiftedPhi_UesCHARGEDUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesCHARGEDUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesCHARGEDUp")
 *         else:
 */
  __pyx_tuple__431 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_34, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__431)) __PYX_ERR(0, 5504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__431);
  __Pyx_GIVEREF(__pyx_tuple__431);

  /* "EMTree.pyx":5513
 *         #if not self.type1_pfMet_shiftedPhi_UesECALDown_branch and "type1_pfMet_shiftedPhi_UesECALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesECALDown_branch and "type1_pfMet_shiftedPhi_UesECALDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesECALDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesECALDown")
 *         else:
 */
  __pyx_tuple__432 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_35, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__432)) __PYX_ERR(0, 5513, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__432);
  __Pyx_GIVEREF(__pyx_tuple__432);

  /* "EMTree.pyx":5522
 *         #if not self.type1_pfMet_shiftedPhi_UesECALUp_branch and "type1_pfMet_shiftedPhi_UesECALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesECALUp_branch and "type1_pfMet_shiftedPhi_UesECALUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesECALUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesECALUp")
 *         else:
 */
  __pyx_tuple__433 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_36, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__433)) __PYX_ERR(0, 5522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__433);
  __Pyx_GIVEREF(__pyx_tuple__433);

  /* "EMTree.pyx":5531
 *         #if not self.type1_pfMet_shiftedPhi_UesHCALDown_branch and "type1_pfMet_shiftedPhi_UesHCALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHCALDown_branch and "type1_pfMet_shiftedPhi_UesHCALDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHCALDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHCALDown")
 *         else:
 */
  __pyx_tuple__434 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_37, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__434)) __PYX_ERR(0, 5531, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__434);
  __Pyx_GIVEREF(__pyx_tuple__434);

  /* "EMTree.pyx":5540
 *         #if not self.type1_pfMet_shiftedPhi_UesHCALUp_branch and "type1_pfMet_shiftedPhi_UesHCALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHCALUp_branch and "type1_pfMet_shiftedPhi_UesHCALUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHCALUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHCALUp")
 *         else:
 */
  __pyx_tuple__435 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_38, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__435)) __PYX_ERR(0, 5540, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__435);
  __Pyx_GIVEREF(__pyx_tuple__435);

  /* "EMTree.pyx":5549
 *         #if not self.type1_pfMet_shiftedPhi_UesHFDown_branch and "type1_pfMet_shiftedPhi_UesHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHFDown_branch and "type1_pfMet_shiftedPhi_UesHFDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHFDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHFDown")
 *         else:
 */
  __pyx_tuple__436 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_39, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__436)) __PYX_ERR(0, 5549, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__436);
  __Pyx_GIVEREF(__pyx_tuple__436);

  /* "EMTree.pyx":5558
 *         #if not self.type1_pfMet_shiftedPhi_UesHFUp_branch and "type1_pfMet_shiftedPhi_UesHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UesHFUp_branch and "type1_pfMet_shiftedPhi_UesHFUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UesHFUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UesHFUp")
 *         else:
 */
  __pyx_tuple__437 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_40, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__437)) __PYX_ERR(0, 5558, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__437);
  __Pyx_GIVEREF(__pyx_tuple__437);

  /* "EMTree.pyx":5567
 *         #if not self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch and "type1_pfMet_shiftedPhi_UnclusteredEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UnclusteredEnDown_branch and "type1_pfMet_shiftedPhi_UnclusteredEnDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UnclusteredEnDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UnclusteredEnDown")
 *         else:
 */
  __pyx_tuple__438 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_41, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__438)) __PYX_ERR(0, 5567, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__438);
  __Pyx_GIVEREF(__pyx_tuple__438);

  /* "EMTree.pyx":5576
 *         #if not self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch and "type1_pfMet_shiftedPhi_UnclusteredEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPhi_UnclusteredEnUp_branch and "type1_pfMet_shiftedPhi_UnclusteredEnUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPhi_UnclusteredEnUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPhi_UnclusteredEnUp")
 *         else:
 */
  __pyx_tuple__439 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_42, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__439)) __PYX_ERR(0, 5576, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__439);
  __Pyx_GIVEREF(__pyx_tuple__439);

  /* "EMTree.pyx":5585
 *         #if not self.type1_pfMet_shiftedPt_JERDown_branch and "type1_pfMet_shiftedPt_JERDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JERDown_branch and "type1_pfMet_shiftedPt_JERDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JERDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JERDown")
 *         else:
 */
  __pyx_tuple__440 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_43, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__440)) __PYX_ERR(0, 5585, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__440);
  __Pyx_GIVEREF(__pyx_tuple__440);

  /* "EMTree.pyx":5594
 *         #if not self.type1_pfMet_shiftedPt_JERUp_branch and "type1_pfMet_shiftedPt_JERUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JERUp_branch and "type1_pfMet_shiftedPt_JERUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JERUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JERUp")
 *         else:
 */
  __pyx_tuple__441 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_44, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__441)) __PYX_ERR(0, 5594, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__441);
  __Pyx_GIVEREF(__pyx_tuple__441);

  /* "EMTree.pyx":5603
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteDown")
 *         else:
 */
  __pyx_tuple__442 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_45, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__442)) __PYX_ERR(0, 5603, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__442);
  __Pyx_GIVEREF(__pyx_tuple__442);

  /* "EMTree.pyx":5612
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteUp")
 *         else:
 */
  __pyx_tuple__443 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_46, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__443)) __PYX_ERR(0, 5612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__443);
  __Pyx_GIVEREF(__pyx_tuple__443);

  /* "EMTree.pyx":5621
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteyearDown_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteyearDown")
 *         else:
 */
  __pyx_tuple__444 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_47, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__444)) __PYX_ERR(0, 5621, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__444);
  __Pyx_GIVEREF(__pyx_tuple__444);

  /* "EMTree.pyx":5630
 *         #if not self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetAbsoluteyearUp_branch and "type1_pfMet_shiftedPt_JetAbsoluteyearUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetAbsoluteyearUp")
 *         else:
 */
  __pyx_tuple__445 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_48, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__445)) __PYX_ERR(0, 5630, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__445);
  __Pyx_GIVEREF(__pyx_tuple__445);

  /* "EMTree.pyx":5639
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1Down_branch and "type1_pfMet_shiftedPt_JetBBEC1Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1Down_branch and "type1_pfMet_shiftedPt_JetBBEC1Down":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1Down")
 *         else:
 */
  __pyx_tuple__446 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_49, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__446)) __PYX_ERR(0, 5639, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__446);
  __Pyx_GIVEREF(__pyx_tuple__446);

  /* "EMTree.pyx":5648
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1Up_branch and "type1_pfMet_shiftedPt_JetBBEC1Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1Up_branch and "type1_pfMet_shiftedPt_JetBBEC1Up":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1Up")
 *         else:
 */
  __pyx_tuple__447 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_50, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__447)) __PYX_ERR(0, 5648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__447);
  __Pyx_GIVEREF(__pyx_tuple__447);

  /* "EMTree.pyx":5657
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPt_JetBBEC1yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1yearDown_branch and "type1_pfMet_shiftedPt_JetBBEC1yearDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1yearDown")
 *         else:
 */
  __pyx_tuple__448 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_51, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__448)) __PYX_ERR(0, 5657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__448);
  __Pyx_GIVEREF(__pyx_tuple__448);

  /* "EMTree.pyx":5666
 *         #if not self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPt_JetBBEC1yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetBBEC1yearUp_branch and "type1_pfMet_shiftedPt_JetBBEC1yearUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetBBEC1yearUp")
 *         else:
 */
  __pyx_tuple__449 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_52, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__449)) __PYX_ERR(0, 5666, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__449);
  __Pyx_GIVEREF(__pyx_tuple__449);

  /* "EMTree.pyx":5675
 *         #if not self.type1_pfMet_shiftedPt_JetEC2Down_branch and "type1_pfMet_shiftedPt_JetEC2Down" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2Down_branch and "type1_pfMet_shiftedPt_JetEC2Down":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2Down")
 *         else:
 */
  __pyx_tuple__450 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_53, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__450)) __PYX_ERR(0, 5675, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__450);
  __Pyx_GIVEREF(__pyx_tuple__450);

  /* "EMTree.pyx":5684
 *         #if not self.type1_pfMet_shiftedPt_JetEC2Up_branch and "type1_pfMet_shiftedPt_JetEC2Up" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2Up_branch and "type1_pfMet_shiftedPt_JetEC2Up":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2Up")
 *         else:
 */
  __pyx_tuple__451 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_54, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__451)) __PYX_ERR(0, 5684, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__451);
  __Pyx_GIVEREF(__pyx_tuple__451);

  /* "EMTree.pyx":5693
 *         #if not self.type1_pfMet_shiftedPt_JetEC2yearDown_branch and "type1_pfMet_shiftedPt_JetEC2yearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2yearDown_branch and "type1_pfMet_shiftedPt_JetEC2yearDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2yearDown")
 *         else:
 */
  __pyx_tuple__452 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_55, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__452)) __PYX_ERR(0, 5693, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__452);
  __Pyx_GIVEREF(__pyx_tuple__452);

  /* "EMTree.pyx":5702
 *         #if not self.type1_pfMet_shiftedPt_JetEC2yearUp_branch and "type1_pfMet_shiftedPt_JetEC2yearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEC2yearUp_branch and "type1_pfMet_shiftedPt_JetEC2yearUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEC2yearUp")
 *         else:
 */
  __pyx_tuple__453 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_56, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__453)) __PYX_ERR(0, 5702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__453);
  __Pyx_GIVEREF(__pyx_tuple__453);

  /* "EMTree.pyx":5711
 *         #if not self.type1_pfMet_shiftedPt_JetEnDown_branch and "type1_pfMet_shiftedPt_JetEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEnDown_branch and "type1_pfMet_shiftedPt_JetEnDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEnDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEnDown")
 *         else:
 */
  __pyx_tuple__454 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_57, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__454)) __PYX_ERR(0, 5711, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__454);
  __Pyx_GIVEREF(__pyx_tuple__454);

  /* "EMTree.pyx":5720
 *         #if not self.type1_pfMet_shiftedPt_JetEnUp_branch and "type1_pfMet_shiftedPt_JetEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetEnUp_branch and "type1_pfMet_shiftedPt_JetEnUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetEnUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetEnUp")
 *         else:
 */
  __pyx_tuple__455 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_58, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__455)) __PYX_ERR(0, 5720, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__455);
  __Pyx_GIVEREF(__pyx_tuple__455);

  /* "EMTree.pyx":5729
 *         #if not self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPt_JetFlavorQCDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetFlavorQCDDown_branch and "type1_pfMet_shiftedPt_JetFlavorQCDDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetFlavorQCDDown")
 *         else:
 */
  __pyx_tuple__456 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_59, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__456)) __PYX_ERR(0, 5729, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__456);
  __Pyx_GIVEREF(__pyx_tuple__456);

  /* "EMTree.pyx":5738
 *         #if not self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPt_JetFlavorQCDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetFlavorQCDUp_branch and "type1_pfMet_shiftedPt_JetFlavorQCDUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetFlavorQCDUp")
 *         else:
 */
  __pyx_tuple__457 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_60, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__457)) __PYX_ERR(0, 5738, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__457);
  __Pyx_GIVEREF(__pyx_tuple__457);

  /* "EMTree.pyx":5747
 *         #if not self.type1_pfMet_shiftedPt_JetHFDown_branch and "type1_pfMet_shiftedPt_JetHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFDown_branch and "type1_pfMet_shiftedPt_JetHFDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFDown")
 *         else:
 */
  __pyx_tuple__458 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_61, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__458)) __PYX_ERR(0, 5747, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__458);
  __Pyx_GIVEREF(__pyx_tuple__458);

  /* "EMTree.pyx":5756
 *         #if not self.type1_pfMet_shiftedPt_JetHFUp_branch and "type1_pfMet_shiftedPt_JetHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFUp_branch and "type1_pfMet_shiftedPt_JetHFUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFUp")
 *         else:
 */
  __pyx_tuple__459 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_62, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__459)) __PYX_ERR(0, 5756, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__459);
  __Pyx_GIVEREF(__pyx_tuple__459);

  /* "EMTree.pyx":5765
 *         #if not self.type1_pfMet_shiftedPt_JetHFyearDown_branch and "type1_pfMet_shiftedPt_JetHFyearDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFyearDown_branch and "type1_pfMet_shiftedPt_JetHFyearDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFyearDown")
 *         else:
 */
  __pyx_tuple__460 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_63, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__460)) __PYX_ERR(0, 5765, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__460);
  __Pyx_GIVEREF(__pyx_tuple__460);

  /* "EMTree.pyx":5774
 *         #if not self.type1_pfMet_shiftedPt_JetHFyearUp_branch and "type1_pfMet_shiftedPt_JetHFyearUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetHFyearUp_branch and "type1_pfMet_shiftedPt_JetHFyearUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetHFyearUp")
 *         else:
 */
  __pyx_tuple__461 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_64, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__461)) __PYX_ERR(0, 5774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__461);
  __Pyx_GIVEREF(__pyx_tuple__461);

  /* "EMTree.pyx":5783
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch and "type1_pfMet_shiftedPt_JetRelativeBalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeBalDown_branch and "type1_pfMet_shiftedPt_JetRelativeBalDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeBalDown")
 *         else:
 */
  __pyx_tuple__462 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_65, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__462)) __PYX_ERR(0, 5783, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__462);
  __Pyx_GIVEREF(__pyx_tuple__462);

  /* "EMTree.pyx":5792
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch and "type1_pfMet_shiftedPt_JetRelativeBalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeBalUp_branch and "type1_pfMet_shiftedPt_JetRelativeBalUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeBalUp")
 *         else:
 */
  __pyx_tuple__463 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_66, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__463)) __PYX_ERR(0, 5792, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__463);
  __Pyx_GIVEREF(__pyx_tuple__463);

  /* "EMTree.pyx":5801
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPt_JetRelativeSampleDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeSampleDown_branch and "type1_pfMet_shiftedPt_JetRelativeSampleDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeSampleDown")
 *         else:
 */
  __pyx_tuple__464 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_67, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__464)) __PYX_ERR(0, 5801, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__464);
  __Pyx_GIVEREF(__pyx_tuple__464);

  /* "EMTree.pyx":5810
 *         #if not self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPt_JetRelativeSampleUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetRelativeSampleUp_branch and "type1_pfMet_shiftedPt_JetRelativeSampleUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetRelativeSampleUp")
 *         else:
 */
  __pyx_tuple__465 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_68, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__465)) __PYX_ERR(0, 5810, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__465);
  __Pyx_GIVEREF(__pyx_tuple__465);

  /* "EMTree.pyx":5819
 *         #if not self.type1_pfMet_shiftedPt_JetResDown_branch and "type1_pfMet_shiftedPt_JetResDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetResDown_branch and "type1_pfMet_shiftedPt_JetResDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetResDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetResDown")
 *         else:
 */
  __pyx_tuple__466 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_69, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__466)) __PYX_ERR(0, 5819, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__466);
  __Pyx_GIVEREF(__pyx_tuple__466);

  /* "EMTree.pyx":5828
 *         #if not self.type1_pfMet_shiftedPt_JetResUp_branch and "type1_pfMet_shiftedPt_JetResUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetResUp_branch and "type1_pfMet_shiftedPt_JetResUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetResUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetResUp")
 *         else:
 */
  __pyx_tuple__467 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_70, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__467)) __PYX_ERR(0, 5828, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__467);
  __Pyx_GIVEREF(__pyx_tuple__467);

  /* "EMTree.pyx":5837
 *         #if not self.type1_pfMet_shiftedPt_JetTotalDown_branch and "type1_pfMet_shiftedPt_JetTotalDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetTotalDown_branch and "type1_pfMet_shiftedPt_JetTotalDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetTotalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetTotalDown")
 *         else:
 */
  __pyx_tuple__468 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_71, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__468)) __PYX_ERR(0, 5837, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__468);
  __Pyx_GIVEREF(__pyx_tuple__468);

  /* "EMTree.pyx":5846
 *         #if not self.type1_pfMet_shiftedPt_JetTotalUp_branch and "type1_pfMet_shiftedPt_JetTotalUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_JetTotalUp_branch and "type1_pfMet_shiftedPt_JetTotalUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_JetTotalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_JetTotalUp")
 *         else:
 */
  __pyx_tuple__469 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_72, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__469)) __PYX_ERR(0, 5846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__469);
  __Pyx_GIVEREF(__pyx_tuple__469);

  /* "EMTree.pyx":5855
 *         #if not self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch and "type1_pfMet_shiftedPt_UesCHARGEDDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesCHARGEDDown_branch and "type1_pfMet_shiftedPt_UesCHARGEDDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesCHARGEDDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UesCHARGEDDown")
 *         else:
 */
  __pyx_tuple__470 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_73, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__470)) __PYX_ERR(0, 5855, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__470);
  __Pyx_GIVEREF(__pyx_tuple__470);

  /* "EMTree.pyx":5864
 *         #if not self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch and "type1_pfMet_shiftedPt_UesCHARGEDUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesCHARGEDUp_branch and "type1_pfMet_shiftedPt_UesCHARGEDUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesCHARGEDUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UesCHARGEDUp")
 *         else:
 */
  __pyx_tuple__471 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_74, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__471)) __PYX_ERR(0, 5864, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__471);
  __Pyx_GIVEREF(__pyx_tuple__471);

  /* "EMTree.pyx":5873
 *         #if not self.type1_pfMet_shiftedPt_UesECALDown_branch and "type1_pfMet_shiftedPt_UesECALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesECALDown_branch and "type1_pfMet_shiftedPt_UesECALDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesECALDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UesECALDown")
 *         else:
 */
  __pyx_tuple__472 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_75, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__472)) __PYX_ERR(0, 5873, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__472);
  __Pyx_GIVEREF(__pyx_tuple__472);

  /* "EMTree.pyx":5882
 *         #if not self.type1_pfMet_shiftedPt_UesECALUp_branch and "type1_pfMet_shiftedPt_UesECALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesECALUp_branch and "type1_pfMet_shiftedPt_UesECALUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesECALUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UesECALUp")
 *         else:
 */
  __pyx_tuple__473 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_76, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__473)) __PYX_ERR(0, 5882, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__473);
  __Pyx_GIVEREF(__pyx_tuple__473);

  /* "EMTree.pyx":5891
 *         #if not self.type1_pfMet_shiftedPt_UesHCALDown_branch and "type1_pfMet_shiftedPt_UesHCALDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHCALDown_branch and "type1_pfMet_shiftedPt_UesHCALDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesHCALDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHCALDown")
 *         else:
 */
  __pyx_tuple__474 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_77, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__474)) __PYX_ERR(0, 5891, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__474);
  __Pyx_GIVEREF(__pyx_tuple__474);

  /* "EMTree.pyx":5900
 *         #if not self.type1_pfMet_shiftedPt_UesHCALUp_branch and "type1_pfMet_shiftedPt_UesHCALUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHCALUp_branch and "type1_pfMet_shiftedPt_UesHCALUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesHCALUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHCALUp")
 *         else:
 */
  __pyx_tuple__475 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_78, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__475)) __PYX_ERR(0, 5900, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__475);
  __Pyx_GIVEREF(__pyx_tuple__475);

  /* "EMTree.pyx":5909
 *         #if not self.type1_pfMet_shiftedPt_UesHFDown_branch and "type1_pfMet_shiftedPt_UesHFDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHFDown_branch and "type1_pfMet_shiftedPt_UesHFDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesHFDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHFDown")
 *         else:
 */
  __pyx_tuple__476 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_79, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__476)) __PYX_ERR(0, 5909, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__476);
  __Pyx_GIVEREF(__pyx_tuple__476);

  /* "EMTree.pyx":5918
 *         #if not self.type1_pfMet_shiftedPt_UesHFUp_branch and "type1_pfMet_shiftedPt_UesHFUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UesHFUp_branch and "type1_pfMet_shiftedPt_UesHFUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UesHFUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UesHFUp")
 *         else:
 */
  __pyx_tuple__477 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_80, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__477)) __PYX_ERR(0, 5918, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__477);
  __Pyx_GIVEREF(__pyx_tuple__477);

  /* "EMTree.pyx":5927
 *         #if not self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch and "type1_pfMet_shiftedPt_UnclusteredEnDown" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UnclusteredEnDown_branch and "type1_pfMet_shiftedPt_UnclusteredEnDown":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UnclusteredEnDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UnclusteredEnDown")
 *         else:
 */
  __pyx_tuple__478 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_81, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__478)) __PYX_ERR(0, 5927, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__478);
  __Pyx_GIVEREF(__pyx_tuple__478);

  /* "EMTree.pyx":5936
 *         #if not self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch and "type1_pfMet_shiftedPt_UnclusteredEnUp" not in self.complained:
 *         if not self.type1_pfMet_shiftedPt_UnclusteredEnUp_branch and "type1_pfMet_shiftedPt_UnclusteredEnUp":
 *             warnings.warn( "EMTree: Expected branch type1_pfMet_shiftedPt_UnclusteredEnUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMet_shiftedPt_UnclusteredEnUp")
 *         else:
 */
  __pyx_tuple__479 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_type1_pfM_82, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__479)) __PYX_ERR(0, 5936, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__479);
  __Pyx_GIVEREF(__pyx_tuple__479);

  /* "EMTree.pyx":5945
 *         #if not self.vbfDeta_branch and "vbfDeta" not in self.complained:
 *         if not self.vbfDeta_branch and "vbfDeta":
 *             warnings.warn( "EMTree: Expected branch vbfDeta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfDeta")
 *         else:
 */
  __pyx_tuple__480 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfDeta_d, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__480)) __PYX_ERR(0, 5945, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__480);
  __Pyx_GIVEREF(__pyx_tuple__480);

  /* "EMTree.pyx":5954
 *         #if not self.vbfJetVeto20_branch and "vbfJetVeto20" not in self.complained:
 *         if not self.vbfJetVeto20_branch and "vbfJetVeto20":
 *             warnings.warn( "EMTree: Expected branch vbfJetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfJetVeto20")
 *         else:
 */
  __pyx_tuple__481 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfJetVet, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__481)) __PYX_ERR(0, 5954, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__481);
  __Pyx_GIVEREF(__pyx_tuple__481);

  /* "EMTree.pyx":5963
 *         #if not self.vbfJetVeto30_branch and "vbfJetVeto30" not in self.complained:
 *         if not self.vbfJetVeto30_branch and "vbfJetVeto30":
 *             warnings.warn( "EMTree: Expected branch vbfJetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfJetVeto30")
 *         else:
 */
  __pyx_tuple__482 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfJetVet_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__482)) __PYX_ERR(0, 5963, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__482);
  __Pyx_GIVEREF(__pyx_tuple__482);

  /* "EMTree.pyx":5972
 *         #if not self.vbfMass_branch and "vbfMass" not in self.complained:
 *         if not self.vbfMass_branch and "vbfMass":
 *             warnings.warn( "EMTree: Expected branch vbfMass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMass")
 *         else:
 */
  __pyx_tuple__483 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMass_d, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__483)) __PYX_ERR(0, 5972, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__483);
  __Pyx_GIVEREF(__pyx_tuple__483);

  /* "EMTree.pyx":5981
 *         #if not self.vbfMassWoNoisyJets_branch and "vbfMassWoNoisyJets" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_branch and "vbfMassWoNoisyJets":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets")
 *         else:
 */
  __pyx_tuple__484 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__484)) __PYX_ERR(0, 5981, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__484);
  __Pyx_GIVEREF(__pyx_tuple__484);

  /* "EMTree.pyx":5990
 *         #if not self.vbfMassWoNoisyJets_JERDown_branch and "vbfMassWoNoisyJets_JERDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JERDown_branch and "vbfMassWoNoisyJets_JERDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JERDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JERDown")
 *         else:
 */
  __pyx_tuple__485 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__485)) __PYX_ERR(0, 5990, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__485);
  __Pyx_GIVEREF(__pyx_tuple__485);

  /* "EMTree.pyx":5999
 *         #if not self.vbfMassWoNoisyJets_JERUp_branch and "vbfMassWoNoisyJets_JERUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JERUp_branch and "vbfMassWoNoisyJets_JERUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JERUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JERUp")
 *         else:
 */
  __pyx_tuple__486 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__486)) __PYX_ERR(0, 5999, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__486);
  __Pyx_GIVEREF(__pyx_tuple__486);

  /* "EMTree.pyx":6008
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteDown_branch and "vbfMassWoNoisyJets_JetAbsoluteDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteDown_branch and "vbfMassWoNoisyJets_JetAbsoluteDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteDown")
 *         else:
 */
  __pyx_tuple__487 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_4, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__487)) __PYX_ERR(0, 6008, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__487);
  __Pyx_GIVEREF(__pyx_tuple__487);

  /* "EMTree.pyx":6017
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteUp_branch and "vbfMassWoNoisyJets_JetAbsoluteUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteUp_branch and "vbfMassWoNoisyJets_JetAbsoluteUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteUp")
 *         else:
 */
  __pyx_tuple__488 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_5, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__488)) __PYX_ERR(0, 6017, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__488);
  __Pyx_GIVEREF(__pyx_tuple__488);

  /* "EMTree.pyx":6026
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch and "vbfMassWoNoisyJets_JetAbsoluteyearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteyearDown_branch and "vbfMassWoNoisyJets_JetAbsoluteyearDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteyearDown")
 *         else:
 */
  __pyx_tuple__489 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_6, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__489)) __PYX_ERR(0, 6026, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__489);
  __Pyx_GIVEREF(__pyx_tuple__489);

  /* "EMTree.pyx":6035
 *         #if not self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch and "vbfMassWoNoisyJets_JetAbsoluteyearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetAbsoluteyearUp_branch and "vbfMassWoNoisyJets_JetAbsoluteyearUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetAbsoluteyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetAbsoluteyearUp")
 *         else:
 */
  __pyx_tuple__490 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_7, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__490)) __PYX_ERR(0, 6035, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__490);
  __Pyx_GIVEREF(__pyx_tuple__490);

  /* "EMTree.pyx":6044
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1Down_branch and "vbfMassWoNoisyJets_JetBBEC1Down" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1Down_branch and "vbfMassWoNoisyJets_JetBBEC1Down":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1Down")
 *         else:
 */
  __pyx_tuple__491 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_8, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__491)) __PYX_ERR(0, 6044, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__491);
  __Pyx_GIVEREF(__pyx_tuple__491);

  /* "EMTree.pyx":6053
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1Up_branch and "vbfMassWoNoisyJets_JetBBEC1Up" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1Up_branch and "vbfMassWoNoisyJets_JetBBEC1Up":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1Up")
 *         else:
 */
  __pyx_tuple__492 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_9, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__492)) __PYX_ERR(0, 6053, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__492);
  __Pyx_GIVEREF(__pyx_tuple__492);

  /* "EMTree.pyx":6062
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch and "vbfMassWoNoisyJets_JetBBEC1yearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1yearDown_branch and "vbfMassWoNoisyJets_JetBBEC1yearDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1yearDown")
 *         else:
 */
  __pyx_tuple__493 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_10, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__493)) __PYX_ERR(0, 6062, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__493);
  __Pyx_GIVEREF(__pyx_tuple__493);

  /* "EMTree.pyx":6071
 *         #if not self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch and "vbfMassWoNoisyJets_JetBBEC1yearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetBBEC1yearUp_branch and "vbfMassWoNoisyJets_JetBBEC1yearUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetBBEC1yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetBBEC1yearUp")
 *         else:
 */
  __pyx_tuple__494 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_11, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__494)) __PYX_ERR(0, 6071, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__494);
  __Pyx_GIVEREF(__pyx_tuple__494);

  /* "EMTree.pyx":6080
 *         #if not self.vbfMassWoNoisyJets_JetEC2Down_branch and "vbfMassWoNoisyJets_JetEC2Down" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2Down_branch and "vbfMassWoNoisyJets_JetEC2Down":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2Down does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2Down")
 *         else:
 */
  __pyx_tuple__495 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_12, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__495)) __PYX_ERR(0, 6080, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__495);
  __Pyx_GIVEREF(__pyx_tuple__495);

  /* "EMTree.pyx":6089
 *         #if not self.vbfMassWoNoisyJets_JetEC2Up_branch and "vbfMassWoNoisyJets_JetEC2Up" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2Up_branch and "vbfMassWoNoisyJets_JetEC2Up":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2Up does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2Up")
 *         else:
 */
  __pyx_tuple__496 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_13, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__496)) __PYX_ERR(0, 6089, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__496);
  __Pyx_GIVEREF(__pyx_tuple__496);

  /* "EMTree.pyx":6098
 *         #if not self.vbfMassWoNoisyJets_JetEC2yearDown_branch and "vbfMassWoNoisyJets_JetEC2yearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2yearDown_branch and "vbfMassWoNoisyJets_JetEC2yearDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2yearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2yearDown")
 *         else:
 */
  __pyx_tuple__497 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_14, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__497)) __PYX_ERR(0, 6098, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__497);
  __Pyx_GIVEREF(__pyx_tuple__497);

  /* "EMTree.pyx":6107
 *         #if not self.vbfMassWoNoisyJets_JetEC2yearUp_branch and "vbfMassWoNoisyJets_JetEC2yearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetEC2yearUp_branch and "vbfMassWoNoisyJets_JetEC2yearUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetEC2yearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetEC2yearUp")
 *         else:
 */
  __pyx_tuple__498 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_15, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__498)) __PYX_ERR(0, 6107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__498);
  __Pyx_GIVEREF(__pyx_tuple__498);

  /* "EMTree.pyx":6116
 *         #if not self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch and "vbfMassWoNoisyJets_JetFlavorQCDDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetFlavorQCDDown_branch and "vbfMassWoNoisyJets_JetFlavorQCDDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetFlavorQCDDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetFlavorQCDDown")
 *         else:
 */
  __pyx_tuple__499 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_16, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__499)) __PYX_ERR(0, 6116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__499);
  __Pyx_GIVEREF(__pyx_tuple__499);

  /* "EMTree.pyx":6125
 *         #if not self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch and "vbfMassWoNoisyJets_JetFlavorQCDUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetFlavorQCDUp_branch and "vbfMassWoNoisyJets_JetFlavorQCDUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetFlavorQCDUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetFlavorQCDUp")
 *         else:
 */
  __pyx_tuple__500 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_17, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__500)) __PYX_ERR(0, 6125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__500);
  __Pyx_GIVEREF(__pyx_tuple__500);

  /* "EMTree.pyx":6134
 *         #if not self.vbfMassWoNoisyJets_JetHFDown_branch and "vbfMassWoNoisyJets_JetHFDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFDown_branch and "vbfMassWoNoisyJets_JetHFDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetHFDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFDown")
 *         else:
 */
  __pyx_tuple__501 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_18, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__501)) __PYX_ERR(0, 6134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__501);
  __Pyx_GIVEREF(__pyx_tuple__501);

  /* "EMTree.pyx":6143
 *         #if not self.vbfMassWoNoisyJets_JetHFUp_branch and "vbfMassWoNoisyJets_JetHFUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFUp_branch and "vbfMassWoNoisyJets_JetHFUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetHFUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFUp")
 *         else:
 */
  __pyx_tuple__502 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_19, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__502)) __PYX_ERR(0, 6143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__502);
  __Pyx_GIVEREF(__pyx_tuple__502);

  /* "EMTree.pyx":6152
 *         #if not self.vbfMassWoNoisyJets_JetHFyearDown_branch and "vbfMassWoNoisyJets_JetHFyearDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFyearDown_branch and "vbfMassWoNoisyJets_JetHFyearDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetHFyearDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFyearDown")
 *         else:
 */
  __pyx_tuple__503 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_20, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__503)) __PYX_ERR(0, 6152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__503);
  __Pyx_GIVEREF(__pyx_tuple__503);

  /* "EMTree.pyx":6161
 *         #if not self.vbfMassWoNoisyJets_JetHFyearUp_branch and "vbfMassWoNoisyJets_JetHFyearUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetHFyearUp_branch and "vbfMassWoNoisyJets_JetHFyearUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetHFyearUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetHFyearUp")
 *         else:
 */
  __pyx_tuple__504 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_21, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__504)) __PYX_ERR(0, 6161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__504);
  __Pyx_GIVEREF(__pyx_tuple__504);

  /* "EMTree.pyx":6170
 *         #if not self.vbfMassWoNoisyJets_JetRelativeBalDown_branch and "vbfMassWoNoisyJets_JetRelativeBalDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeBalDown_branch and "vbfMassWoNoisyJets_JetRelativeBalDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeBalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeBalDown")
 *         else:
 */
  __pyx_tuple__505 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_22, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__505)) __PYX_ERR(0, 6170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__505);
  __Pyx_GIVEREF(__pyx_tuple__505);

  /* "EMTree.pyx":6179
 *         #if not self.vbfMassWoNoisyJets_JetRelativeBalUp_branch and "vbfMassWoNoisyJets_JetRelativeBalUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeBalUp_branch and "vbfMassWoNoisyJets_JetRelativeBalUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeBalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeBalUp")
 *         else:
 */
  __pyx_tuple__506 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_23, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__506)) __PYX_ERR(0, 6179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__506);
  __Pyx_GIVEREF(__pyx_tuple__506);

  /* "EMTree.pyx":6188
 *         #if not self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch and "vbfMassWoNoisyJets_JetRelativeSampleDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeSampleDown_branch and "vbfMassWoNoisyJets_JetRelativeSampleDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeSampleDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeSampleDown")
 *         else:
 */
  __pyx_tuple__507 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_24, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__507)) __PYX_ERR(0, 6188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__507);
  __Pyx_GIVEREF(__pyx_tuple__507);

  /* "EMTree.pyx":6197
 *         #if not self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch and "vbfMassWoNoisyJets_JetRelativeSampleUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetRelativeSampleUp_branch and "vbfMassWoNoisyJets_JetRelativeSampleUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetRelativeSampleUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetRelativeSampleUp")
 *         else:
 */
  __pyx_tuple__508 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_25, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__508)) __PYX_ERR(0, 6197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__508);
  __Pyx_GIVEREF(__pyx_tuple__508);

  /* "EMTree.pyx":6206
 *         #if not self.vbfMassWoNoisyJets_JetTotalDown_branch and "vbfMassWoNoisyJets_JetTotalDown" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetTotalDown_branch and "vbfMassWoNoisyJets_JetTotalDown":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetTotalDown does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetTotalDown")
 *         else:
 */
  __pyx_tuple__509 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_26, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__509)) __PYX_ERR(0, 6206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__509);
  __Pyx_GIVEREF(__pyx_tuple__509);

  /* "EMTree.pyx":6215
 *         #if not self.vbfMassWoNoisyJets_JetTotalUp_branch and "vbfMassWoNoisyJets_JetTotalUp" not in self.complained:
 *         if not self.vbfMassWoNoisyJets_JetTotalUp_branch and "vbfMassWoNoisyJets_JetTotalUp":
 *             warnings.warn( "EMTree: Expected branch vbfMassWoNoisyJets_JetTotalUp does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMassWoNoisyJets_JetTotalUp")
 *         else:
 */
  __pyx_tuple__510 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfMassWo_27, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__510)) __PYX_ERR(0, 6215, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__510);
  __Pyx_GIVEREF(__pyx_tuple__510);

  /* "EMTree.pyx":6224
 *         #if not self.vbfNJets20_branch and "vbfNJets20" not in self.complained:
 *         if not self.vbfNJets20_branch and "vbfNJets20":
 *             warnings.warn( "EMTree: Expected branch vbfNJets20 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfNJets20")
 *         else:
 */
  __pyx_tuple__511 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfNJets2, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__511)) __PYX_ERR(0, 6224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__511);
  __Pyx_GIVEREF(__pyx_tuple__511);

  /* "EMTree.pyx":6233
 *         #if not self.vbfNJets30_branch and "vbfNJets30" not in self.complained:
 *         if not self.vbfNJets30_branch and "vbfNJets30":
 *             warnings.warn( "EMTree: Expected branch vbfNJets30 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfNJets30")
 *         else:
 */
  __pyx_tuple__512 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfNJets3, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__512)) __PYX_ERR(0, 6233, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__512);
  __Pyx_GIVEREF(__pyx_tuple__512);

  /* "EMTree.pyx":6242
 *         #if not self.vbfj1eta_branch and "vbfj1eta" not in self.complained:
 *         if not self.vbfj1eta_branch and "vbfj1eta":
 *             warnings.warn( "EMTree: Expected branch vbfj1eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfj1eta")
 *         else:
 */
  __pyx_tuple__513 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfj1eta, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__513)) __PYX_ERR(0, 6242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__513);
  __Pyx_GIVEREF(__pyx_tuple__513);

  /* "EMTree.pyx":6251
 *         #if not self.vbfj1pt_branch and "vbfj1pt" not in self.complained:
 *         if not self.vbfj1pt_branch and "vbfj1pt":
 *             warnings.warn( "EMTree: Expected branch vbfj1pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfj1pt")
 *         else:
 */
  __pyx_tuple__514 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfj1pt_d, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__514)) __PYX_ERR(0, 6251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__514);
  __Pyx_GIVEREF(__pyx_tuple__514);

  /* "EMTree.pyx":6260
 *         #if not self.vbfj2eta_branch and "vbfj2eta" not in self.complained:
 *         if not self.vbfj2eta_branch and "vbfj2eta":
 *             warnings.warn( "EMTree: Expected branch vbfj2eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfj2eta")
 *         else:
 */
  __pyx_tuple__515 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfj2eta, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__515)) __PYX_ERR(0, 6260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__515);
  __Pyx_GIVEREF(__pyx_tuple__515);

  /* "EMTree.pyx":6269
 *         #if not self.vbfj2pt_branch and "vbfj2pt" not in self.complained:
 *         if not self.vbfj2pt_branch and "vbfj2pt":
 *             warnings.warn( "EMTree: Expected branch vbfj2pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfj2pt")
 *         else:
 */
  __pyx_tuple__516 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vbfj2pt_d, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__516)) __PYX_ERR(0, 6269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__516);
  __Pyx_GIVEREF(__pyx_tuple__516);

  /* "EMTree.pyx":6278
 *         #if not self.vispX_branch and "vispX" not in self.complained:
 *         if not self.vispX_branch and "vispX":
 *             warnings.warn( "EMTree: Expected branch vispX does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vispX")
 *         else:
 */
  __pyx_tuple__517 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vispX_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__517)) __PYX_ERR(0, 6278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__517);
  __Pyx_GIVEREF(__pyx_tuple__517);

  /* "EMTree.pyx":6287
 *         #if not self.vispY_branch and "vispY" not in self.complained:
 *         if not self.vispY_branch and "vispY":
 *             warnings.warn( "EMTree: Expected branch vispY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vispY")
 *         else:
 */
  __pyx_tuple__518 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_vispY_doe, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__518)) __PYX_ERR(0, 6287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__518);
  __Pyx_GIVEREF(__pyx_tuple__518);

  /* "EMTree.pyx":6296
 *         #if not self.idx_branch and "idx" not in self.complained:
 *         if not self.idx_branch and "idx":
 *             warnings.warn( "EMTree: Expected branch idx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("idx")
 *         else:
 */
  __pyx_tuple__519 = PyTuple_Pack(2, __pyx_kp_s_EMTree_Expected_branch_idx_does, __pyx_builtin_Warning); if (unlikely(!__pyx_tuple__519)) __PYX_ERR(0, 6296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__519);
  __Pyx_GIVEREF(__pyx_tuple__519);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__520 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__520)) __PYX_ERR(1, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__520);
  __Pyx_GIVEREF(__pyx_tuple__520);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__521 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__521)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__521);
  __Pyx_GIVEREF(__pyx_tuple__521);

  /* "EMTree.pyx":38
 * from cpython cimport PyCObject_AsVoidPtr
 * import warnings
 * def my_warning_format(message, category, filename, lineno, line=""):             # <<<<<<<<<<<<<<
 *     return "%s:%s\n" % (category.__name__, message)
 * warnings.formatwarning = my_warning_format
 */
  __pyx_tuple__522 = PyTuple_Pack(5, __pyx_n_s_message, __pyx_n_s_category, __pyx_n_s_filename, __pyx_n_s_lineno, __pyx_n_s_line); if (unlikely(!__pyx_tuple__522)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__522);
  __Pyx_GIVEREF(__pyx_tuple__522);
  __pyx_codeobj__523 = (PyObject*)__Pyx_PyCode_New(5, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__522, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_EMTree_pyx, __pyx_n_s_my_warning_format, 38, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__523)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 3, __pyx_L1_error);
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_modinit_global_init_code(void); /*proto*/
static int __Pyx_modinit_variable_export_code(void); /*proto*/
static int __Pyx_modinit_function_export_code(void); /*proto*/
static int __Pyx_modinit_type_init_code(void); /*proto*/
static int __Pyx_modinit_type_import_code(void); /*proto*/
static int __Pyx_modinit_variable_import_code(void); /*proto*/
static int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __pyx_vtabptr_6EMTree_EMTree = &__pyx_vtable_6EMTree_EMTree;
  __pyx_vtable_6EMTree_EMTree.load_entry = (PyObject *(*)(struct __pyx_obj_6EMTree_EMTree *, long))__pyx_f_6EMTree_6EMTree_load_entry;
  __pyx_vtable_6EMTree_EMTree.setup_branches = (PyObject *(*)(struct __pyx_obj_6EMTree_EMTree *, TTree *))__pyx_f_6EMTree_6EMTree_setup_branches;
  if (PyType_Ready(&__pyx_type_6EMTree_EMTree) < 0) __PYX_ERR(0, 42, __pyx_L1_error)
  __pyx_type_6EMTree_EMTree.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6EMTree_EMTree.tp_dictoffset && __pyx_type_6EMTree_EMTree.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_6EMTree_EMTree.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_6EMTree_EMTree.tp_dict, __pyx_vtabptr_6EMTree_EMTree) < 0) __PYX_ERR(0, 42, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "EMTree", (PyObject *)&__pyx_type_6EMTree_EMTree) < 0) __PYX_ERR(0, 42, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6EMTree_EMTree) < 0) __PYX_ERR(0, 42, __pyx_L1_error)
  __pyx_ptype_6EMTree_EMTree = &__pyx_type_6EMTree_EMTree;
  if (PyType_Ready(&__pyx_type_6EMTree___pyx_scope_struct____iter__) < 0) __PYX_ERR(0, 6303, __pyx_L1_error)
  __pyx_type_6EMTree___pyx_scope_struct____iter__.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6EMTree___pyx_scope_struct____iter__.tp_dictoffset && __pyx_type_6EMTree___pyx_scope_struct____iter__.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_6EMTree___pyx_scope_struct____iter__.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_6EMTree___pyx_scope_struct____iter__ = &__pyx_type_6EMTree___pyx_scope_struct____iter__;
  if (PyType_Ready(&__pyx_type_6EMTree___pyx_scope_struct_1_where) < 0) __PYX_ERR(0, 6311, __pyx_L1_error)
  __pyx_type_6EMTree___pyx_scope_struct_1_where.tp_print = 0;
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6EMTree___pyx_scope_struct_1_where.tp_dictoffset && __pyx_type_6EMTree___pyx_scope_struct_1_where.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_6EMTree___pyx_scope_struct_1_where.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_6EMTree___pyx_scope_struct_1_where = &__pyx_type_6EMTree___pyx_scope_struct_1_where;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) __PYX_ERR(2, 9, __pyx_L1_error)
  __pyx_ptype_7cpython_4bool_bool = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "bool", sizeof(PyBoolObject), 0); if (unlikely(!__pyx_ptype_7cpython_4bool_bool)) __PYX_ERR(3, 8, __pyx_L1_error)
  __pyx_ptype_7cpython_7complex_complex = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "complex", sizeof(PyComplexObject), 0); if (unlikely(!__pyx_ptype_7cpython_7complex_complex)) __PYX_ERR(4, 15, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#if PY_MAJOR_VERSION < 3
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC void
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#else
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (!(defined(__cplusplus)) || (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ > 4)))
    #define CYTHON_SMALL_CODE __attribute__((optimize("Os")))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initEMTree(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initEMTree(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_EMTree(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_EMTree(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        result = PyDict_SetItemString(moddict, to_name, value);
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__") < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__") < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__") < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__") < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static int __pyx_pymod_exec_EMTree(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m && __pyx_m == __pyx_pyinit_module) return 0;
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_EMTree(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 3, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 3, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 3, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("EMTree", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 3, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 3, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 3, __pyx_L1_error)
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 3, __pyx_L1_error)
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 3, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_EMTree) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 3, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "EMTree")) {
      if (unlikely(PyDict_SetItemString(modules, "EMTree", __pyx_m) < 0)) __PYX_ERR(0, 3, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely(__Pyx_modinit_type_init_code() != 0)) goto __pyx_L1_error;
  if (unlikely(__Pyx_modinit_type_import_code() != 0)) goto __pyx_L1_error;
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  #endif

  /* "EMTree.pyx":37
 * 
 * from cpython cimport PyCObject_AsVoidPtr
 * import warnings             # <<<<<<<<<<<<<<
 * def my_warning_format(message, category, filename, lineno, line=""):
 *     return "%s:%s\n" % (category.__name__, message)
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_warnings, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_warnings, __pyx_t_1) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "EMTree.pyx":38
 * from cpython cimport PyCObject_AsVoidPtr
 * import warnings
 * def my_warning_format(message, category, filename, lineno, line=""):             # <<<<<<<<<<<<<<
 *     return "%s:%s\n" % (category.__name__, message)
 * warnings.formatwarning = my_warning_format
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_6EMTree_1my_warning_format, NULL, __pyx_n_s_EMTree); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_my_warning_format, __pyx_t_1) < 0) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "EMTree.pyx":40
 * def my_warning_format(message, category, filename, lineno, line=""):
 *     return "%s:%s\n" % (category.__name__, message)
 * warnings.formatwarning = my_warning_format             # <<<<<<<<<<<<<<
 * 
 * cdef class EMTree:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_my_warning_format); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_t_2, __pyx_n_s_formatwarning, __pyx_t_1) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "EMTree.pyx":3
 * 
 * 
 * # Load relevant ROOT C++ headers             # <<<<<<<<<<<<<<
 * cdef extern from "TObject.h":
 *     cdef cppclass TObject:
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init EMTree", 0, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init EMTree");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)meth)) (self, args, nargs);
    }
}
#endif

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
#include "frameobject.h"
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = f->f_localsplus;
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, int nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (PyCFunction_GET_FLAGS(func) & METH_FASTCALL) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* GetModuleGlobalName */
static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    if (likely(result)) {
        Py_INCREF(result);
    } else if (unlikely(PyErr_Occurred())) {
        result = NULL;
    } else {
#else
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

/* PyErrFetchRestore */
    #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* RaiseException */
    #if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* PyObject_GenericGetAttrNoDict */
    #if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, attr_name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(attr_name));
#endif
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PyObject_GenericGetAttr */
    #if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* SetVTable */
    static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* SetupReduce */
    static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStr(meth, __pyx_n_s_name);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    if (_PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate)) goto GOOD;
#else
    if (PyObject_HasAttr(type_obj, __pyx_n_s_getstate)) goto GOOD;
#endif
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_cython); if (unlikely(!reduce_cython)) goto BAD;
            ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto BAD;
            ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto BAD;
            setstate = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate_cython); if (unlikely(!setstate_cython)) goto BAD;
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto BAD;
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto GOOD;
BAD:
    if (!PyErr_Occurred())
        PyErr_Format(PyExc_RuntimeError, "Unable to initialize pickling for %s", ((PyTypeObject*)type_obj)->tp_name);
    ret = -1;
GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}

/* PyObjectSetAttrStr */
    #if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* CLineInTraceback */
    #ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
      use_cline = __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback);
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (PyObject_Not(use_cline) != 0) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
    static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
    #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntFromPyVerify */
    #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* Print */
    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static PyObject *__Pyx_GetStdout(void) {
    PyObject *f = PySys_GetObject((char *)"stdout");
    if (!f) {
        PyErr_SetString(PyExc_RuntimeError, "lost sys.stdout");
    }
    return f;
}
static int __Pyx_Print(PyObject* f, PyObject *arg_tuple, int newline) {
    int i;
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    for (i=0; i < PyTuple_GET_SIZE(arg_tuple); i++) {
        PyObject* v;
        if (PyFile_SoftSpace(f, 1)) {
            if (PyFile_WriteString(" ", f) < 0)
                goto error;
        }
        v = PyTuple_GET_ITEM(arg_tuple, i);
        if (PyFile_WriteObject(v, f, Py_PRINT_RAW) < 0)
            goto error;
        if (PyString_Check(v)) {
            char *s = PyString_AsString(v);
            Py_ssize_t len = PyString_Size(v);
            if (len > 0) {
                switch (s[len-1]) {
                    case ' ': break;
                    case '\f': case '\r': case '\n': case '\t': case '\v':
                        PyFile_SoftSpace(f, 0);
                        break;
                    default:  break;
                }
            }
        }
    }
    if (newline) {
        if (PyFile_WriteString("\n", f) < 0)
            goto error;
        PyFile_SoftSpace(f, 0);
    }
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
}
#else
static int __Pyx_Print(PyObject* stream, PyObject *arg_tuple, int newline) {
    PyObject* kwargs = 0;
    PyObject* result = 0;
    PyObject* end_string;
    if (unlikely(!__pyx_print)) {
        __pyx_print = PyObject_GetAttr(__pyx_b, __pyx_n_s_print);
        if (!__pyx_print)
            return -1;
    }
    if (stream) {
        kwargs = PyDict_New();
        if (unlikely(!kwargs))
            return -1;
        if (unlikely(PyDict_SetItem(kwargs, __pyx_n_s_file, stream) < 0))
            goto bad;
        if (!newline) {
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                goto bad;
            if (PyDict_SetItem(kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                goto bad;
            }
            Py_DECREF(end_string);
        }
    } else if (!newline) {
        if (unlikely(!__pyx_print_kwargs)) {
            __pyx_print_kwargs = PyDict_New();
            if (unlikely(!__pyx_print_kwargs))
                return -1;
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                return -1;
            if (PyDict_SetItem(__pyx_print_kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                return -1;
            }
            Py_DECREF(end_string);
        }
        kwargs = __pyx_print_kwargs;
    }
    result = PyObject_Call(__pyx_print, arg_tuple, kwargs);
    if (unlikely(kwargs) && (kwargs != __pyx_print_kwargs))
        Py_DECREF(kwargs);
    if (!result)
        return -1;
    Py_DECREF(result);
    return 0;
bad:
    if (kwargs != __pyx_print_kwargs)
        Py_XDECREF(kwargs);
    return -1;
}
#endif

/* CIntToPy */
    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_long(unsigned long value) {
    const unsigned long neg_one = (unsigned long) -1, const_zero = (unsigned long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(unsigned long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(unsigned long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(unsigned long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(unsigned long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(unsigned long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
    static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* PrintOne */
    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static int __Pyx_PrintOne(PyObject* f, PyObject *o) {
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    if (PyFile_SoftSpace(f, 0)) {
        if (PyFile_WriteString(" ", f) < 0)
            goto error;
    }
    if (PyFile_WriteObject(o, f, Py_PRINT_RAW) < 0)
        goto error;
    if (PyFile_WriteString("\n", f) < 0)
        goto error;
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
    /* the line below is just to avoid C compiler
     * warnings about unused functions */
    return __Pyx_Print(f, NULL, 0);
}
#else
static int __Pyx_PrintOne(PyObject* stream, PyObject *o) {
    int res;
    PyObject* arg_tuple = PyTuple_Pack(1, o);
    if (unlikely(!arg_tuple))
        return -1;
    res = __Pyx_Print(stream, arg_tuple, 1);
    Py_DECREF(arg_tuple);
    return res;
}
#endif

/* CIntFromPy */
    static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FastTypeChecks */
    #if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* FetchCommonType */
    static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

/* SaveResetException */
    #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if PY_VERSION_HEX >= 0x030700A2
    *type = tstate->exc_state.exc_type;
    *value = tstate->exc_state.exc_value;
    *tb = tstate->exc_state.exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if PY_VERSION_HEX >= 0x030700A2
    tmp_type = tstate->exc_state.exc_type;
    tmp_value = tstate->exc_state.exc_value;
    tmp_tb = tstate->exc_state.exc_traceback;
    tstate->exc_state.exc_type = type;
    tstate->exc_state.exc_value = value;
    tstate->exc_state.exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* SwapException */
    #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if PY_VERSION_HEX >= 0x030700A2
    tmp_type = tstate->exc_state.exc_type;
    tmp_value = tstate->exc_state.exc_value;
    tmp_tb = tstate->exc_state.exc_traceback;
    tstate->exc_state.exc_type = *type;
    tstate->exc_state.exc_value = *value;
    tstate->exc_state.exc_traceback = *tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
    #endif
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#endif

/* PyObjectCallMethod1 */
    static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {
    PyObject *result = NULL;
#if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(method))) {
        PyObject *self = PyMethod_GET_SELF(method);
        if (likely(self)) {
            PyObject *args;
            PyObject *function = PyMethod_GET_FUNCTION(method);
            #if CYTHON_FAST_PYCALL
            if (PyFunction_Check(function)) {
                PyObject *args[2] = {self, arg};
                result = __Pyx_PyFunction_FastCall(function, args, 2);
                goto done;
            }
            #endif
            #if CYTHON_FAST_PYCCALL
            if (__Pyx_PyFastCFunction_Check(function)) {
                PyObject *args[2] = {self, arg};
                result = __Pyx_PyCFunction_FastCall(function, args, 2);
                goto done;
            }
            #endif
            args = PyTuple_New(2);
            if (unlikely(!args)) goto done;
            Py_INCREF(self);
            PyTuple_SET_ITEM(args, 0, self);
            Py_INCREF(arg);
            PyTuple_SET_ITEM(args, 1, arg);
            Py_INCREF(function);
            result = __Pyx_PyObject_Call(function, args, NULL);
            Py_DECREF(args);
            Py_DECREF(function);
            return result;
        }
    }
#endif
    result = __Pyx_PyObject_CallOneArg(method, arg);
    goto done;
done:
    return result;
}
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method, *result;
    method = __Pyx_PyObject_GetAttrStr(obj, method_name);
    if (unlikely(!method)) return NULL;
    result = __Pyx__PyObject_CallMethod1(method, arg);
    Py_DECREF(method);
    return result;
}

/* CoroutineBase */
    #include <structmember.h>
#include <frameobject.h>
#define __Pyx_Coroutine_Undelegate(gen) Py_CLEAR((gen)->yieldfrom)
static int __Pyx_PyGen__FetchStopIterationValue(CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject **pvalue) {
    PyObject *et, *ev, *tb;
    PyObject *value = NULL;
    __Pyx_ErrFetch(&et, &ev, &tb);
    if (!et) {
        Py_XDECREF(tb);
        Py_XDECREF(ev);
        Py_INCREF(Py_None);
        *pvalue = Py_None;
        return 0;
    }
    if (likely(et == PyExc_StopIteration)) {
        if (!ev) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#if PY_VERSION_HEX >= 0x030300A0
        else if (Py_TYPE(ev) == (PyTypeObject*)PyExc_StopIteration) {
            value = ((PyStopIterationObject *)ev)->value;
            Py_INCREF(value);
            Py_DECREF(ev);
        }
#endif
        else if (unlikely(PyTuple_Check(ev))) {
            if (PyTuple_GET_SIZE(ev) >= 1) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                value = PyTuple_GET_ITEM(ev, 0);
                Py_INCREF(value);
#else
                value = PySequence_ITEM(ev, 0);
#endif
            } else {
                Py_INCREF(Py_None);
                value = Py_None;
            }
            Py_DECREF(ev);
        }
        else if (!__Pyx_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration)) {
            value = ev;
        }
        if (likely(value)) {
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = value;
            return 0;
        }
    } else if (!__Pyx_PyErr_GivenExceptionMatches(et, PyExc_StopIteration)) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    PyErr_NormalizeException(&et, &ev, &tb);
    if (unlikely(!PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    Py_XDECREF(tb);
    Py_DECREF(et);
#if PY_VERSION_HEX >= 0x030300A0
    value = ((PyStopIterationObject *)ev)->value;
    Py_INCREF(value);
    Py_DECREF(ev);
#else
    {
        PyObject* args = __Pyx_PyObject_GetAttrStr(ev, __pyx_n_s_args);
        Py_DECREF(ev);
        if (likely(args)) {
            value = PySequence_GetItem(args, 0);
            Py_DECREF(args);
        }
        if (unlikely(!value)) {
            __Pyx_ErrRestore(NULL, NULL, NULL);
            Py_INCREF(Py_None);
            value = Py_None;
        }
    }
#endif
    *pvalue = value;
    return 0;
}
static CYTHON_INLINE
void __Pyx_Coroutine_ExceptionClear(__pyx_CoroutineObject *self) {
    PyObject *exc_type = self->exc_type;
    PyObject *exc_value = self->exc_value;
    PyObject *exc_traceback = self->exc_traceback;
    self->exc_type = NULL;
    self->exc_value = NULL;
    self->exc_traceback = NULL;
    Py_XDECREF(exc_type);
    Py_XDECREF(exc_value);
    Py_XDECREF(exc_traceback);
}
#define __Pyx_Coroutine_AlreadyRunningError(gen)  (__Pyx__Coroutine_AlreadyRunningError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyRunningError(CYTHON_UNUSED __pyx_CoroutineObject *gen) {
    const char *msg;
    if (0) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check((PyObject*)gen)) {
        msg = "coroutine already executing";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact((PyObject*)gen)) {
        msg = "async generator already executing";
    #endif
    } else {
        msg = "generator already executing";
    }
    PyErr_SetString(PyExc_ValueError, msg);
}
#define __Pyx_Coroutine_NotStartedError(gen)  (__Pyx__Coroutine_NotStartedError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_NotStartedError(CYTHON_UNUSED PyObject *gen) {
    const char *msg;
    if (0) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check(gen)) {
        msg = "can't send non-None value to a just-started coroutine";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact(gen)) {
        msg = "can't send non-None value to a just-started async generator";
    #endif
    } else {
        msg = "can't send non-None value to a just-started generator";
    }
    PyErr_SetString(PyExc_TypeError, msg);
}
#define __Pyx_Coroutine_AlreadyTerminatedError(gen, value, closing)  (__Pyx__Coroutine_AlreadyTerminatedError(gen, value, closing), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyTerminatedError(CYTHON_UNUSED PyObject *gen, PyObject *value, CYTHON_UNUSED int closing) {
    #ifdef __Pyx_Coroutine_USED
    if (!closing && __Pyx_Coroutine_Check(gen)) {
        PyErr_SetString(PyExc_RuntimeError, "cannot reuse already awaited coroutine");
    } else
    #endif
    if (value) {
        #ifdef __Pyx_AsyncGen_USED
        if (__Pyx_AsyncGen_CheckExact(gen))
            PyErr_SetNone(__Pyx_PyExc_StopAsyncIteration);
        else
        #endif
        PyErr_SetNone(PyExc_StopIteration);
    }
}
static
PyObject *__Pyx_Coroutine_SendEx(__pyx_CoroutineObject *self, PyObject *value, int closing) {
    __Pyx_PyThreadState_declare
    PyThreadState *tstate;
    PyObject *retval;
    assert(!self->is_running);
    if (unlikely(self->resume_label == 0)) {
        if (unlikely(value && value != Py_None)) {
            return __Pyx_Coroutine_NotStartedError((PyObject*)self);
        }
    }
    if (unlikely(self->resume_label == -1)) {
        return __Pyx_Coroutine_AlreadyTerminatedError((PyObject*)self, value, closing);
    }
#if CYTHON_FAST_THREAD_STATE
    __Pyx_PyThreadState_assign
    tstate = __pyx_tstate;
#else
    tstate = __Pyx_PyThreadState_Current;
#endif
    if (self->exc_type) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON
#else
        if (self->exc_traceback) {
            PyTracebackObject *tb = (PyTracebackObject *) self->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_XINCREF(tstate->frame);
            assert(f->f_back == NULL);
            f->f_back = tstate->frame;
        }
#endif
        __Pyx_ExceptionSwap(&self->exc_type, &self->exc_value,
                            &self->exc_traceback);
    } else {
        __Pyx_Coroutine_ExceptionClear(self);
        __Pyx_ExceptionSave(&self->exc_type, &self->exc_value, &self->exc_traceback);
    }
    self->is_running = 1;
    retval = self->body((PyObject *) self, tstate, value);
    self->is_running = 0;
    return retval;
}
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__pyx_CoroutineObject *self) {
    if (likely(self->exc_traceback)) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON
#else
        PyTracebackObject *tb = (PyTracebackObject *) self->exc_traceback;
        PyFrameObject *f = tb->tb_frame;
        Py_CLEAR(f->f_back);
#endif
    }
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_MethodReturn(CYTHON_UNUSED PyObject* gen, PyObject *retval) {
    if (unlikely(!retval)) {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        if (!__Pyx_PyErr_Occurred()) {
            PyObject *exc = PyExc_StopIteration;
            #ifdef __Pyx_AsyncGen_USED
            if (__Pyx_AsyncGen_CheckExact(gen))
                exc = __Pyx_PyExc_StopAsyncIteration;
            #endif
            __Pyx_PyErr_SetNone(exc);
        }
    }
    return retval;
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_FinishDelegation(__pyx_CoroutineObject *gen) {
    PyObject *ret;
    PyObject *val = NULL;
    __Pyx_Coroutine_Undelegate(gen);
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, &val);
    ret = __Pyx_Coroutine_SendEx(gen, val, 0);
    Py_XDECREF(val);
    return ret;
}
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value) {
    PyObject *retval;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_AsyncGen_USED
        if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
            ret = __Pyx_async_gen_asend_send(yf, value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = _PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03050000 && defined(PyCoro_CheckExact) && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyCoro_CheckExact(yf)) {
            ret = _PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        {
            if (value == Py_None)
                ret = Py_TYPE(yf)->tp_iternext(yf);
            else
                ret = __Pyx_PyObject_CallMethod1(yf, __pyx_n_s_send, value);
        }
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        retval = __Pyx_Coroutine_FinishDelegation(gen);
    } else {
        retval = __Pyx_Coroutine_SendEx(gen, value, 0);
    }
    return __Pyx_Coroutine_MethodReturn(self, retval);
}
static int __Pyx_Coroutine_CloseIter(__pyx_CoroutineObject *gen, PyObject *yf) {
    PyObject *retval = NULL;
    int err = 0;
    #ifdef __Pyx_Generator_USED
    if (__Pyx_Generator_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_Coroutine_USED
    if (__Pyx_Coroutine_Check(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    if (__Pyx_CoroutineAwait_CheckExact(yf)) {
        retval = __Pyx_CoroutineAwait_Close((__pyx_CoroutineAwaitObject*)yf);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_AsyncGen_USED
    if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
        retval = __Pyx_async_gen_asend_close(yf, NULL);
    } else
    if (__pyx_PyAsyncGenAThrow_CheckExact(yf)) {
        retval = __Pyx_async_gen_athrow_close(yf, NULL);
    } else
    #endif
    {
        PyObject *meth;
        gen->is_running = 1;
        meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_close);
        if (unlikely(!meth)) {
            if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                PyErr_WriteUnraisable(yf);
            }
            PyErr_Clear();
        } else {
            retval = PyObject_CallFunction(meth, NULL);
            Py_DECREF(meth);
            if (!retval)
                err = -1;
        }
        gen->is_running = 0;
    }
    Py_XDECREF(retval);
    return err;
}
static PyObject *__Pyx_Generator_Next(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Generator_Next(yf);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = _PyGen_Send((PyGenObject*)yf, NULL);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, Py_None);
        } else
        #endif
            ret = Py_TYPE(yf)->tp_iternext(yf);
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Coroutine_FinishDelegation(gen);
    }
    return __Pyx_Coroutine_SendEx(gen, Py_None, 0);
}
static PyObject *__Pyx_Coroutine_Close(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *retval, *raised_exception;
    PyObject *yf = gen->yieldfrom;
    int err = 0;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        Py_INCREF(yf);
        err = __Pyx_Coroutine_CloseIter(gen, yf);
        __Pyx_Coroutine_Undelegate(gen);
        Py_DECREF(yf);
    }
    if (err == 0)
        PyErr_SetNone(PyExc_GeneratorExit);
    retval = __Pyx_Coroutine_SendEx(gen, NULL, 1);
    if (unlikely(retval)) {
        const char *msg;
        Py_DECREF(retval);
        if ((0)) {
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_Coroutine_Check(self)) {
            msg = "coroutine ignored GeneratorExit";
        #endif
        #ifdef __Pyx_AsyncGen_USED
        } else if (__Pyx_AsyncGen_CheckExact(self)) {
#if PY_VERSION_HEX < 0x03060000
            msg = "async generator ignored GeneratorExit - might require Python 3.6+ finalisation (PEP 525)";
#else
            msg = "async generator ignored GeneratorExit";
#endif
        #endif
        } else {
            msg = "generator ignored GeneratorExit";
        }
        PyErr_SetString(PyExc_RuntimeError, msg);
        return NULL;
    }
    raised_exception = PyErr_Occurred();
    if (likely(!raised_exception || __Pyx_PyErr_GivenExceptionMatches2(raised_exception, PyExc_GeneratorExit, PyExc_StopIteration))) {
        if (raised_exception) PyErr_Clear();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
}
static PyObject *__Pyx__Coroutine_Throw(PyObject *self, PyObject *typ, PyObject *val, PyObject *tb,
                                        PyObject *args, int close_on_genexit) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        Py_INCREF(yf);
        if (__Pyx_PyErr_GivenExceptionMatches(typ, PyExc_GeneratorExit) && close_on_genexit) {
            int err = __Pyx_Coroutine_CloseIter(gen, yf);
            Py_DECREF(yf);
            __Pyx_Coroutine_Undelegate(gen);
            if (err < 0)
                return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
            goto throw_here;
        }
        gen->is_running = 1;
        if (0
        #ifdef __Pyx_Generator_USED
            || __Pyx_Generator_CheckExact(yf)
        #endif
        #ifdef __Pyx_Coroutine_USED
            || __Pyx_Coroutine_Check(yf)
        #endif
            ) {
            ret = __Pyx__Coroutine_Throw(yf, typ, val, tb, args, close_on_genexit);
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_CoroutineAwait_CheckExact(yf)) {
            ret = __Pyx__Coroutine_Throw(((__pyx_CoroutineAwaitObject*)yf)->coroutine, typ, val, tb, args, close_on_genexit);
        #endif
        } else {
            PyObject *meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_throw);
            if (unlikely(!meth)) {
                Py_DECREF(yf);
                if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                    gen->is_running = 0;
                    return NULL;
                }
                PyErr_Clear();
                __Pyx_Coroutine_Undelegate(gen);
                gen->is_running = 0;
                goto throw_here;
            }
            if (likely(args)) {
                ret = PyObject_CallObject(meth, args);
            } else {
                ret = PyObject_CallFunctionObjArgs(meth, typ, val, tb, NULL);
            }
            Py_DECREF(meth);
        }
        gen->is_running = 0;
        Py_DECREF(yf);
        if (!ret) {
            ret = __Pyx_Coroutine_FinishDelegation(gen);
        }
        return __Pyx_Coroutine_MethodReturn(self, ret);
    }
throw_here:
    __Pyx_Raise(typ, val, tb, NULL);
    return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
}
static PyObject *__Pyx_Coroutine_Throw(PyObject *self, PyObject *args) {
    PyObject *typ;
    PyObject *val = NULL;
    PyObject *tb = NULL;
    if (!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb))
        return NULL;
    return __Pyx__Coroutine_Throw(self, typ, val, tb, args, 1);
}
static int __Pyx_Coroutine_traverse(__pyx_CoroutineObject *gen, visitproc visit, void *arg) {
    Py_VISIT(gen->closure);
    Py_VISIT(gen->classobj);
    Py_VISIT(gen->yieldfrom);
    Py_VISIT(gen->exc_type);
    Py_VISIT(gen->exc_value);
    Py_VISIT(gen->exc_traceback);
    return 0;
}
static int __Pyx_Coroutine_clear(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_CLEAR(gen->closure);
    Py_CLEAR(gen->classobj);
    Py_CLEAR(gen->yieldfrom);
    Py_CLEAR(gen->exc_type);
    Py_CLEAR(gen->exc_value);
    Py_CLEAR(gen->exc_traceback);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        Py_CLEAR(((__pyx_PyAsyncGenObject*)gen)->ag_finalizer);
    }
#endif
    Py_CLEAR(gen->gi_code);
    Py_CLEAR(gen->gi_name);
    Py_CLEAR(gen->gi_qualname);
    Py_CLEAR(gen->gi_modulename);
    return 0;
}
static void __Pyx_Coroutine_dealloc(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject_GC_UnTrack(gen);
    if (gen->gi_weakreflist != NULL)
        PyObject_ClearWeakRefs(self);
    if (gen->resume_label >= 0) {
        PyObject_GC_Track(self);
#if PY_VERSION_HEX >= 0x030400a1 && CYTHON_USE_TP_FINALIZE
        if (PyObject_CallFinalizerFromDealloc(self))
#else
        Py_TYPE(gen)->tp_del(self);
        if (self->ob_refcnt > 0)
#endif
        {
            return;
        }
        PyObject_GC_UnTrack(self);
    }
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        /* We have to handle this case for asynchronous generators
           right here, because this code has to be between UNTRACK
           and GC_Del. */
        Py_CLEAR(((__pyx_PyAsyncGenObject*)self)->ag_finalizer);
    }
#endif
    __Pyx_Coroutine_clear(self);
    PyObject_GC_Del(gen);
}
static void __Pyx_Coroutine_del(PyObject *self) {
    PyObject *error_type, *error_value, *error_traceback;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    __Pyx_PyThreadState_declare
    if (gen->resume_label < 0) {
        return;
    }
#if !CYTHON_USE_TP_FINALIZE
    assert(self->ob_refcnt == 0);
    self->ob_refcnt = 1;
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        __pyx_PyAsyncGenObject *agen = (__pyx_PyAsyncGenObject*)self;
        PyObject *finalizer = agen->ag_finalizer;
        if (finalizer && !agen->ag_closed) {
            PyObject *res = __Pyx_PyObject_CallOneArg(finalizer, self);
            if (unlikely(!res)) {
                PyErr_WriteUnraisable(self);
            } else {
                Py_DECREF(res);
            }
            __Pyx_ErrRestore(error_type, error_value, error_traceback);
            return;
        }
    }
#endif
    if (unlikely(gen->resume_label == 0 && !error_value)) {
#ifdef __Pyx_Coroutine_USED
#ifdef __Pyx_Generator_USED
    if (!__Pyx_Generator_CheckExact(self))
#endif
        {
        PyObject_GC_UnTrack(self);
#if PY_MAJOR_VERSION >= 3  || defined(PyErr_WarnFormat)
        if (unlikely(PyErr_WarnFormat(PyExc_RuntimeWarning, 1, "coroutine '%.50S' was never awaited", gen->gi_qualname) < 0))
            PyErr_WriteUnraisable(self);
#else
        {PyObject *msg;
        char *cmsg;
        #if CYTHON_COMPILING_IN_PYPY
        msg = NULL;
        cmsg = (char*) "coroutine was never awaited";
        #else
        char *cname;
        PyObject *qualname;
        qualname = gen->gi_qualname;
        cname = PyString_AS_STRING(qualname);
        msg = PyString_FromFormat("coroutine '%.50s' was never awaited", cname);
        if (unlikely(!msg)) {
            PyErr_Clear();
            cmsg = (char*) "coroutine was never awaited";
        } else {
            cmsg = PyString_AS_STRING(msg);
        }
        #endif
        if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, cmsg, 1) < 0))
            PyErr_WriteUnraisable(self);
        Py_XDECREF(msg);}
#endif
        PyObject_GC_Track(self);
        }
#endif
    } else {
        PyObject *res = __Pyx_Coroutine_Close(self);
        if (unlikely(!res)) {
            if (PyErr_Occurred())
                PyErr_WriteUnraisable(self);
        } else {
            Py_DECREF(res);
        }
    }
    __Pyx_ErrRestore(error_type, error_value, error_traceback);
#if !CYTHON_USE_TP_FINALIZE
    assert(self->ob_refcnt > 0);
    if (--self->ob_refcnt == 0) {
        return;
    }
    {
        Py_ssize_t refcnt = self->ob_refcnt;
        _Py_NewReference(self);
        self->ob_refcnt = refcnt;
    }
#if CYTHON_COMPILING_IN_CPYTHON
    assert(PyType_IS_GC(self->ob_type) &&
           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
    _Py_DEC_REFTOTAL;
#endif
#ifdef COUNT_ALLOCS
    --Py_TYPE(self)->tp_frees;
    --Py_TYPE(self)->tp_allocs;
#endif
#endif
}
static PyObject *
__Pyx_Coroutine_get_name(__pyx_CoroutineObject *self)
{
    PyObject *name = self->gi_name;
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_name(__pyx_CoroutineObject *self, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_name;
    Py_INCREF(value);
    self->gi_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_qualname(__pyx_CoroutineObject *self)
{
    PyObject *name = self->gi_qualname;
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_qualname(__pyx_CoroutineObject *self, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_qualname;
    Py_INCREF(value);
    self->gi_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
            PyTypeObject* type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    __pyx_CoroutineObject *gen = PyObject_GC_New(__pyx_CoroutineObject, type);
    if (unlikely(!gen))
        return NULL;
    return __Pyx__Coroutine_NewInit(gen, body, code, closure, name, qualname, module_name);
}
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    gen->body = body;
    gen->closure = closure;
    Py_XINCREF(closure);
    gen->is_running = 0;
    gen->resume_label = 0;
    gen->classobj = NULL;
    gen->yieldfrom = NULL;
    gen->exc_type = NULL;
    gen->exc_value = NULL;
    gen->exc_traceback = NULL;
    gen->gi_weakreflist = NULL;
    Py_XINCREF(qualname);
    gen->gi_qualname = qualname;
    Py_XINCREF(name);
    gen->gi_name = name;
    Py_XINCREF(module_name);
    gen->gi_modulename = module_name;
    Py_XINCREF(code);
    gen->gi_code = code;
    PyObject_GC_Track(gen);
    return gen;
}

/* PatchModuleWithCoroutine */
        static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    int result;
    PyObject *globals, *result_obj;
    globals = PyDict_New();  if (unlikely(!globals)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_coroutine_type",
    #ifdef __Pyx_Coroutine_USED
        (PyObject*)__pyx_CoroutineType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_generator_type",
    #ifdef __Pyx_Generator_USED
        (PyObject*)__pyx_GeneratorType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "_module", module) < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "__builtins__", __pyx_b) < 0)) goto ignore;
    result_obj = PyRun_String(py_code, Py_file_input, globals, globals);
    if (unlikely(!result_obj)) goto ignore;
    Py_DECREF(result_obj);
    Py_DECREF(globals);
    return module;
ignore:
    Py_XDECREF(globals);
    PyErr_WriteUnraisable(module);
    if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, "Cython module failed to patch module with custom type", 1) < 0)) {
        Py_DECREF(module);
        module = NULL;
    }
#else
    py_code++;
#endif
    return module;
}

/* PatchGeneratorABC */
        #ifndef CYTHON_REGISTER_ABCS
#define CYTHON_REGISTER_ABCS 1
#endif
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
static PyObject* __Pyx_patch_abc_module(PyObject *module);
static PyObject* __Pyx_patch_abc_module(PyObject *module) {
    module = __Pyx_Coroutine_patch_module(
        module, ""
"if _cython_generator_type is not None:\n"
"    try: Generator = _module.Generator\n"
"    except AttributeError: pass\n"
"    else: Generator.register(_cython_generator_type)\n"
"if _cython_coroutine_type is not None:\n"
"    try: Coroutine = _module.Coroutine\n"
"    except AttributeError: pass\n"
"    else: Coroutine.register(_cython_coroutine_type)\n"
    );
    return module;
}
#endif
static int __Pyx_patch_abc(void) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    static int abc_patched = 0;
    if (CYTHON_REGISTER_ABCS && !abc_patched) {
        PyObject *module;
        module = PyImport_ImportModule((PY_MAJOR_VERSION >= 3) ? "collections.abc" : "collections");
        if (!module) {
            PyErr_WriteUnraisable(NULL);
            if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning,
                    ((PY_MAJOR_VERSION >= 3) ?
                        "Cython module failed to register with collections.abc module" :
                        "Cython module failed to register with collections module"), 1) < 0)) {
                return -1;
            }
        } else {
            module = __Pyx_patch_abc_module(module);
            abc_patched = 1;
            if (unlikely(!module))
                return -1;
            Py_DECREF(module);
        }
        module = PyImport_ImportModule("backports_abc");
        if (module) {
            module = __Pyx_patch_abc_module(module);
            Py_XDECREF(module);
        }
        if (!module) {
            PyErr_Clear();
        }
    }
#else
    if ((0)) __Pyx_Coroutine_patch_module(NULL, NULL);
#endif
    return 0;
}

/* Generator */
        static PyMethodDef __pyx_Generator_methods[] = {
    {"send", (PyCFunction) __Pyx_Coroutine_Send, METH_O,
     (char*) PyDoc_STR("send(arg) -> send 'arg' into generator,\nreturn next yielded value or raise StopIteration.")},
    {"throw", (PyCFunction) __Pyx_Coroutine_Throw, METH_VARARGS,
     (char*) PyDoc_STR("throw(typ[,val[,tb]]) -> raise exception in generator,\nreturn next yielded value or raise StopIteration.")},
    {"close", (PyCFunction) __Pyx_Coroutine_Close, METH_NOARGS,
     (char*) PyDoc_STR("close() -> raise GeneratorExit inside generator.")},
    {0, 0, 0, 0}
};
static PyMemberDef __pyx_Generator_memberlist[] = {
    {(char *) "gi_running", T_BOOL, offsetof(__pyx_CoroutineObject, is_running), READONLY, NULL},
    {(char*) "gi_yieldfrom", T_OBJECT, offsetof(__pyx_CoroutineObject, yieldfrom), READONLY,
     (char*) PyDoc_STR("object being iterated by 'yield from', or None")},
    {(char*) "gi_code", T_OBJECT, offsetof(__pyx_CoroutineObject, gi_code), READONLY, NULL},
    {0, 0, 0, 0, 0}
};
static PyGetSetDef __pyx_Generator_getsets[] = {
    {(char *) "__name__", (getter)__Pyx_Coroutine_get_name, (setter)__Pyx_Coroutine_set_name,
     (char*) PyDoc_STR("name of the generator"), 0},
    {(char *) "__qualname__", (getter)__Pyx_Coroutine_get_qualname, (setter)__Pyx_Coroutine_set_qualname,
     (char*) PyDoc_STR("qualified name of the generator"), 0},
    {0, 0, 0, 0, 0}
};
static PyTypeObject __pyx_GeneratorType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "generator",
    sizeof(__pyx_CoroutineObject),
    0,
    (destructor) __Pyx_Coroutine_dealloc,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    0,
    (traverseproc) __Pyx_Coroutine_traverse,
    0,
    0,
    offsetof(__pyx_CoroutineObject, gi_weakreflist),
    0,
    (iternextfunc) __Pyx_Generator_Next,
    __pyx_Generator_methods,
    __pyx_Generator_memberlist,
    __pyx_Generator_getsets,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if CYTHON_USE_TP_FINALIZE
    0,
#else
    __Pyx_Coroutine_del,
#endif
    0,
#if CYTHON_USE_TP_FINALIZE
    __Pyx_Coroutine_del,
#elif PY_VERSION_HEX >= 0x030400a1
    0,
#endif
};
static int __pyx_Generator_init(void) {
    __pyx_GeneratorType_type.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
    __pyx_GeneratorType_type.tp_iter = PyObject_SelfIter;
    __pyx_GeneratorType = __Pyx_FetchCommonType(&__pyx_GeneratorType_type);
    if (unlikely(!__pyx_GeneratorType)) {
        return -1;
    }
    return 0;
}

/* CheckBinaryVersion */
        static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* ModuleImport */
        #ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

/* TypeImport */
        #ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. Expected %zd, got %zd",
            module_name, class_name, basicsize, size);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling. Expected %zd, got %zd",
            module_name, class_name, basicsize, size);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

/* InitStrings */
        static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(x);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
